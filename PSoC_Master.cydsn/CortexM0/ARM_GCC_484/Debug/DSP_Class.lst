ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"DSP_Class.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	tempArray,8,4
  18              		.comm	tempArrayPtr,4,4
  19              		.comm	humArray,8,4
  20              		.comm	humArrayPtr,4,4
  21              		.comm	soilHumArray,24,4
  22              		.comm	soilHumPtr,24,4
  23              		.comm	lightArray,8,4
  24              		.comm	lightArrayPtr,4,4
  25              		.comm	temp,1,1
  26              		.comm	hum,1,1
  27              		.comm	soilHum,6,4
  28              		.comm	light,1,1
  29              		.section	.text.initDSP,"ax",%progbits
  30              		.align	2
  31              		.global	initDSP
  32              		.code	16
  33              		.thumb_func
  34              		.type	initDSP, %function
  35              	initDSP:
  36              	.LFB33:
  37              		.file 1 ".\\DSP_Class.c"
   1:.\DSP_Class.c **** /* ========================================
   2:.\DSP_Class.c ****  * 
   3:.\DSP_Class.c ****  * AutoGreen - PSoC_Master
   4:.\DSP_Class.c ****  * DSP_Class.c
   5:.\DSP_Class.c ****  * Digital signal processing
   6:.\DSP_Class.c ****  * PRJ3 - GRP9
   7:.\DSP_Class.c ****  * 2015-04-15
   8:.\DSP_Class.c ****  *
   9:.\DSP_Class.c ****  * ========================================
  10:.\DSP_Class.c **** */
  11:.\DSP_Class.c **** 
  12:.\DSP_Class.c **** // Include files
  13:.\DSP_Class.c **** #include "DSP_Class.h"
  14:.\DSP_Class.c **** 
  15:.\DSP_Class.c **** //----------PrivateDataMembers0----------
  16:.\DSP_Class.c **** // Private data members
  17:.\DSP_Class.c **** int32 tempArray[ARRAYSIZE];
  18:.\DSP_Class.c **** int32* tempArrayPtr;
  19:.\DSP_Class.c **** int32 humArray[ARRAYSIZE];
  20:.\DSP_Class.c **** int32* humArrayPtr;
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 2


  21:.\DSP_Class.c **** int16 soilHumArray[NBR_OF_SOILHUM_SENSORS][ARRAYSIZE];
  22:.\DSP_Class.c **** int16* soilHumPtr[NBR_OF_SOILHUM_SENSORS];
  23:.\DSP_Class.c **** int32 lightArray[ARRAYSIZE];
  24:.\DSP_Class.c **** int32* lightArrayPtr;
  25:.\DSP_Class.c **** uint8 temp, hum, soilHum[NBR_OF_SOILHUM_SENSORS], light;
  26:.\DSP_Class.c **** //----------PrivateDataMembers1----------
  27:.\DSP_Class.c **** 
  28:.\DSP_Class.c **** // Private prototypes
  29:.\DSP_Class.c **** void avgTemp(void);
  30:.\DSP_Class.c **** void avgHum(void);
  31:.\DSP_Class.c **** void avgSoilHum(uint8 index);
  32:.\DSP_Class.c **** void avgLight(void);
  33:.\DSP_Class.c **** 
  34:.\DSP_Class.c **** // Init: All datamebers are initialized with -1, meaning they are empty
  35:.\DSP_Class.c **** void initDSP(void){
  38              		.loc 1 35 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 82B0     		sub	sp, sp, #8
  45              		.cfi_def_cfa_offset 16
  46 0004 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  48              	.LBB2:
  36:.\DSP_Class.c ****     {
  37:.\DSP_Class.c ****         uint8 i;
  38:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
  49              		.loc 1 38 0
  50 0006 FB1D     		add	r3, r7, #7
  51 0008 0022     		mov	r2, #0
  52 000a 1A70     		strb	r2, [r3]
  53 000c 31E0     		b	.L2
  54              	.L5:
  39:.\DSP_Class.c ****             tempArray[i] = EMPTY;
  55              		.loc 1 39 0
  56 000e FB1D     		add	r3, r7, #7
  57 0010 1A78     		ldrb	r2, [r3]
  58 0012 324B     		ldr	r3, .L8
  59 0014 9200     		lsl	r2, r2, #2
  60 0016 0121     		mov	r1, #1
  61 0018 4942     		neg	r1, r1
  62 001a D150     		str	r1, [r2, r3]
  40:.\DSP_Class.c ****             humArray[i] = EMPTY;
  63              		.loc 1 40 0
  64 001c FB1D     		add	r3, r7, #7
  65 001e 1A78     		ldrb	r2, [r3]
  66 0020 2F4B     		ldr	r3, .L8+4
  67 0022 9200     		lsl	r2, r2, #2
  68 0024 0121     		mov	r1, #1
  69 0026 4942     		neg	r1, r1
  70 0028 D150     		str	r1, [r2, r3]
  71              	.LBB3:
  41:.\DSP_Class.c ****             {
  42:.\DSP_Class.c ****                 uint8 j;
  43:.\DSP_Class.c ****                 for(j = 0 ; j<NBR_OF_SOILHUM_SENSORS ; j++){
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 3


  72              		.loc 1 43 0
  73 002a BB1D     		add	r3, r7, #6
  74 002c 0022     		mov	r2, #0
  75 002e 1A70     		strb	r2, [r3]
  76 0030 0FE0     		b	.L3
  77              	.L4:
  44:.\DSP_Class.c ****                     soilHumArray[j][i] = EMPTY;
  78              		.loc 1 44 0 discriminator 2
  79 0032 BB1D     		add	r3, r7, #6
  80 0034 1978     		ldrb	r1, [r3]
  81 0036 FB1D     		add	r3, r7, #7
  82 0038 1A78     		ldrb	r2, [r3]
  83 003a 2A4B     		ldr	r3, .L8+8
  84 003c 4900     		lsl	r1, r1, #1
  85 003e 8A18     		add	r2, r1, r2
  86 0040 5200     		lsl	r2, r2, #1
  87 0042 0121     		mov	r1, #1
  88 0044 4942     		neg	r1, r1
  89 0046 D152     		strh	r1, [r2, r3]
  43:.\DSP_Class.c ****                 for(j = 0 ; j<NBR_OF_SOILHUM_SENSORS ; j++){
  90              		.loc 1 43 0 discriminator 2
  91 0048 BB1D     		add	r3, r7, #6
  92 004a 1A78     		ldrb	r2, [r3]
  93 004c BB1D     		add	r3, r7, #6
  94 004e 0132     		add	r2, r2, #1
  95 0050 1A70     		strb	r2, [r3]
  96              	.L3:
  43:.\DSP_Class.c ****                 for(j = 0 ; j<NBR_OF_SOILHUM_SENSORS ; j++){
  97              		.loc 1 43 0 is_stmt 0 discriminator 1
  98 0052 BB1D     		add	r3, r7, #6
  99 0054 1B78     		ldrb	r3, [r3]
 100 0056 052B     		cmp	r3, #5
 101 0058 EBD9     		bls	.L4
 102              	.LBE3:
  45:.\DSP_Class.c ****                 }
  46:.\DSP_Class.c ****             }
  47:.\DSP_Class.c ****             lightArray[i] = EMPTY;
 103              		.loc 1 47 0 is_stmt 1
 104 005a FB1D     		add	r3, r7, #7
 105 005c 1A78     		ldrb	r2, [r3]
 106 005e 224B     		ldr	r3, .L8+12
 107 0060 9200     		lsl	r2, r2, #2
 108 0062 0121     		mov	r1, #1
 109 0064 4942     		neg	r1, r1
 110 0066 D150     		str	r1, [r2, r3]
  38:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 111              		.loc 1 38 0
 112 0068 FB1D     		add	r3, r7, #7
 113 006a 1A78     		ldrb	r2, [r3]
 114 006c FB1D     		add	r3, r7, #7
 115 006e 0132     		add	r2, r2, #1
 116 0070 1A70     		strb	r2, [r3]
 117              	.L2:
  38:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 118              		.loc 1 38 0 is_stmt 0 discriminator 1
 119 0072 FB1D     		add	r3, r7, #7
 120 0074 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 4


 121 0076 012B     		cmp	r3, #1
 122 0078 C9D9     		bls	.L5
 123              	.LBE2:
  48:.\DSP_Class.c ****             
  49:.\DSP_Class.c ****         }
  50:.\DSP_Class.c ****     }
  51:.\DSP_Class.c ****     tempArrayPtr = & tempArray[0];
 124              		.loc 1 51 0 is_stmt 1
 125 007a 1C4B     		ldr	r3, .L8+16
 126 007c 174A     		ldr	r2, .L8
 127 007e 1A60     		str	r2, [r3]
  52:.\DSP_Class.c ****     humArrayPtr = & humArray[0];
 128              		.loc 1 52 0
 129 0080 1B4B     		ldr	r3, .L8+20
 130 0082 174A     		ldr	r2, .L8+4
 131 0084 1A60     		str	r2, [r3]
 132              	.LBB4:
  53:.\DSP_Class.c ****     {
  54:.\DSP_Class.c ****         uint8 k;
  55:.\DSP_Class.c ****         for(k = 0 ; k<NBR_OF_SOILHUM_SENSORS ; k++){
 133              		.loc 1 55 0
 134 0086 7B1D     		add	r3, r7, #5
 135 0088 0022     		mov	r2, #0
 136 008a 1A70     		strb	r2, [r3]
 137 008c 13E0     		b	.L6
 138              	.L7:
  56:.\DSP_Class.c ****             soilHumPtr[k] = & soilHumArray[k][0];
 139              		.loc 1 56 0 discriminator 2
 140 008e 7B1D     		add	r3, r7, #5
 141 0090 1A78     		ldrb	r2, [r3]
 142 0092 7B1D     		add	r3, r7, #5
 143 0094 1B78     		ldrb	r3, [r3]
 144 0096 9900     		lsl	r1, r3, #2
 145 0098 124B     		ldr	r3, .L8+8
 146 009a C918     		add	r1, r1, r3
 147 009c 154B     		ldr	r3, .L8+24
 148 009e 9200     		lsl	r2, r2, #2
 149 00a0 D150     		str	r1, [r2, r3]
  57:.\DSP_Class.c ****             soilHum[k] = 0; 
 150              		.loc 1 57 0 discriminator 2
 151 00a2 7B1D     		add	r3, r7, #5
 152 00a4 1B78     		ldrb	r3, [r3]
 153 00a6 144A     		ldr	r2, .L8+28
 154 00a8 0021     		mov	r1, #0
 155 00aa D154     		strb	r1, [r2, r3]
  55:.\DSP_Class.c ****         for(k = 0 ; k<NBR_OF_SOILHUM_SENSORS ; k++){
 156              		.loc 1 55 0 discriminator 2
 157 00ac 7B1D     		add	r3, r7, #5
 158 00ae 1A78     		ldrb	r2, [r3]
 159 00b0 7B1D     		add	r3, r7, #5
 160 00b2 0132     		add	r2, r2, #1
 161 00b4 1A70     		strb	r2, [r3]
 162              	.L6:
  55:.\DSP_Class.c ****         for(k = 0 ; k<NBR_OF_SOILHUM_SENSORS ; k++){
 163              		.loc 1 55 0 is_stmt 0 discriminator 1
 164 00b6 7B1D     		add	r3, r7, #5
 165 00b8 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 5


 166 00ba 052B     		cmp	r3, #5
 167 00bc E7D9     		bls	.L7
 168              	.LBE4:
  58:.\DSP_Class.c ****             }
  59:.\DSP_Class.c ****     }
  60:.\DSP_Class.c ****     lightArrayPtr = & lightArray[0];
 169              		.loc 1 60 0 is_stmt 1
 170 00be 0F4B     		ldr	r3, .L8+32
 171 00c0 094A     		ldr	r2, .L8+12
 172 00c2 1A60     		str	r2, [r3]
  61:.\DSP_Class.c ****     temp = 0;
 173              		.loc 1 61 0
 174 00c4 0E4B     		ldr	r3, .L8+36
 175 00c6 0022     		mov	r2, #0
 176 00c8 1A70     		strb	r2, [r3]
  62:.\DSP_Class.c ****     hum = 0;
 177              		.loc 1 62 0
 178 00ca 0E4B     		ldr	r3, .L8+40
 179 00cc 0022     		mov	r2, #0
 180 00ce 1A70     		strb	r2, [r3]
  63:.\DSP_Class.c ****     light = 0;
 181              		.loc 1 63 0
 182 00d0 0D4B     		ldr	r3, .L8+44
 183 00d2 0022     		mov	r2, #0
 184 00d4 1A70     		strb	r2, [r3]
  64:.\DSP_Class.c **** }
 185              		.loc 1 64 0
 186 00d6 BD46     		mov	sp, r7
 187 00d8 02B0     		add	sp, sp, #8
 188              		@ sp needed
 189 00da 80BD     		pop	{r7, pc}
 190              	.L9:
 191              		.align	2
 192              	.L8:
 193 00dc 00000000 		.word	tempArray
 194 00e0 00000000 		.word	humArray
 195 00e4 00000000 		.word	soilHumArray
 196 00e8 00000000 		.word	lightArray
 197 00ec 00000000 		.word	tempArrayPtr
 198 00f0 00000000 		.word	humArrayPtr
 199 00f4 00000000 		.word	soilHumPtr
 200 00f8 00000000 		.word	soilHum
 201 00fc 00000000 		.word	lightArrayPtr
 202 0100 00000000 		.word	temp
 203 0104 00000000 		.word	hum
 204 0108 00000000 		.word	light
 205              		.cfi_endproc
 206              	.LFE33:
 207              		.size	initDSP, .-initDSP
 208              		.section	.text.getTemp_DSP,"ax",%progbits
 209              		.align	2
 210              		.global	getTemp_DSP
 211              		.code	16
 212              		.thumb_func
 213              		.type	getTemp_DSP, %function
 214              	getTemp_DSP:
 215              	.LFB34:
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 6


  65:.\DSP_Class.c **** 
  66:.\DSP_Class.c **** //----------getTemp_DSP0----------
  67:.\DSP_Class.c **** uint8 getTemp_DSP(void){
 216              		.loc 1 67 0
 217              		.cfi_startproc
 218 0000 80B5     		push	{r7, lr}
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 00AF     		add	r7, sp, #0
 223              		.cfi_def_cfa_register 7
  68:.\DSP_Class.c ****     return temp;
 224              		.loc 1 68 0
 225 0004 024B     		ldr	r3, .L12
 226 0006 1B78     		ldrb	r3, [r3]
  69:.\DSP_Class.c **** }
 227              		.loc 1 69 0
 228 0008 181C     		mov	r0, r3
 229 000a BD46     		mov	sp, r7
 230              		@ sp needed
 231 000c 80BD     		pop	{r7, pc}
 232              	.L13:
 233 000e C046     		.align	2
 234              	.L12:
 235 0010 00000000 		.word	temp
 236              		.cfi_endproc
 237              	.LFE34:
 238              		.size	getTemp_DSP, .-getTemp_DSP
 239              		.section	.text.getHum_DSP,"ax",%progbits
 240              		.align	2
 241              		.global	getHum_DSP
 242              		.code	16
 243              		.thumb_func
 244              		.type	getHum_DSP, %function
 245              	getHum_DSP:
 246              	.LFB35:
  70:.\DSP_Class.c **** //----------getTemp_DSP1----------
  71:.\DSP_Class.c **** 
  72:.\DSP_Class.c **** uint8 getHum_DSP(void){
 247              		.loc 1 72 0
 248              		.cfi_startproc
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 00AF     		add	r7, sp, #0
 254              		.cfi_def_cfa_register 7
  73:.\DSP_Class.c ****     return hum;
 255              		.loc 1 73 0
 256 0004 024B     		ldr	r3, .L16
 257 0006 1B78     		ldrb	r3, [r3]
  74:.\DSP_Class.c **** }
 258              		.loc 1 74 0
 259 0008 181C     		mov	r0, r3
 260 000a BD46     		mov	sp, r7
 261              		@ sp needed
 262 000c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 7


 263              	.L17:
 264 000e C046     		.align	2
 265              	.L16:
 266 0010 00000000 		.word	hum
 267              		.cfi_endproc
 268              	.LFE35:
 269              		.size	getHum_DSP, .-getHum_DSP
 270              		.section	.text.getSoilHum_DSP,"ax",%progbits
 271              		.align	2
 272              		.global	getSoilHum_DSP
 273              		.code	16
 274              		.thumb_func
 275              		.type	getSoilHum_DSP, %function
 276              	getSoilHum_DSP:
 277              	.LFB36:
  75:.\DSP_Class.c **** 
  76:.\DSP_Class.c **** uint8 getSoilHum_DSP(uint8 index){
 278              		.loc 1 76 0
 279              		.cfi_startproc
 280 0000 80B5     		push	{r7, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 82B0     		sub	sp, sp, #8
 285              		.cfi_def_cfa_offset 16
 286 0004 00AF     		add	r7, sp, #0
 287              		.cfi_def_cfa_register 7
 288 0006 021C     		mov	r2, r0
 289 0008 FB1D     		add	r3, r7, #7
 290 000a 1A70     		strb	r2, [r3]
  77:.\DSP_Class.c ****     return soilHum[index];
 291              		.loc 1 77 0
 292 000c FB1D     		add	r3, r7, #7
 293 000e 1B78     		ldrb	r3, [r3]
 294 0010 024A     		ldr	r2, .L20
 295 0012 D35C     		ldrb	r3, [r2, r3]
  78:.\DSP_Class.c **** }
 296              		.loc 1 78 0
 297 0014 181C     		mov	r0, r3
 298 0016 BD46     		mov	sp, r7
 299 0018 02B0     		add	sp, sp, #8
 300              		@ sp needed
 301 001a 80BD     		pop	{r7, pc}
 302              	.L21:
 303              		.align	2
 304              	.L20:
 305 001c 00000000 		.word	soilHum
 306              		.cfi_endproc
 307              	.LFE36:
 308              		.size	getSoilHum_DSP, .-getSoilHum_DSP
 309              		.section	.text.getLight_DSP,"ax",%progbits
 310              		.align	2
 311              		.global	getLight_DSP
 312              		.code	16
 313              		.thumb_func
 314              		.type	getLight_DSP, %function
 315              	getLight_DSP:
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 8


 316              	.LFB37:
  79:.\DSP_Class.c **** 
  80:.\DSP_Class.c **** uint8 getLight_DSP(void){
 317              		.loc 1 80 0
 318              		.cfi_startproc
 319 0000 80B5     		push	{r7, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 7, -8
 322              		.cfi_offset 14, -4
 323 0002 00AF     		add	r7, sp, #0
 324              		.cfi_def_cfa_register 7
  81:.\DSP_Class.c ****     return light;
 325              		.loc 1 81 0
 326 0004 024B     		ldr	r3, .L24
 327 0006 1B78     		ldrb	r3, [r3]
  82:.\DSP_Class.c **** }
 328              		.loc 1 82 0
 329 0008 181C     		mov	r0, r3
 330 000a BD46     		mov	sp, r7
 331              		@ sp needed
 332 000c 80BD     		pop	{r7, pc}
 333              	.L25:
 334 000e C046     		.align	2
 335              	.L24:
 336 0010 00000000 		.word	light
 337              		.cfi_endproc
 338              	.LFE37:
 339              		.size	getLight_DSP, .-getLight_DSP
 340              		.global	__aeabi_ldivmod
 341              		.section	.text.avgTemp,"ax",%progbits
 342              		.align	2
 343              		.global	avgTemp
 344              		.code	16
 345              		.thumb_func
 346              		.type	avgTemp, %function
 347              	avgTemp:
 348              	.LFB38:
  83:.\DSP_Class.c **** 
  84:.\DSP_Class.c **** //----------avgTemp0----------
  85:.\DSP_Class.c **** void avgTemp(void){
 349              		.loc 1 85 0
 350              		.cfi_startproc
 351 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 352              		.cfi_def_cfa_offset 20
 353              		.cfi_offset 4, -20
 354              		.cfi_offset 5, -16
 355              		.cfi_offset 6, -12
 356              		.cfi_offset 7, -8
 357              		.cfi_offset 14, -4
 358 0002 87B0     		sub	sp, sp, #28
 359              		.cfi_def_cfa_offset 48
 360 0004 00AF     		add	r7, sp, #0
 361              		.cfi_def_cfa_register 7
  86:.\DSP_Class.c ****     uint8 skip = 0;
 362              		.loc 1 86 0
 363 0006 381C     		mov	r0, r7
 364 0008 1730     		add	r0, r0, #23
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 9


 365 000a 0025     		mov	r5, #0
 366 000c 0570     		strb	r5, [r0]
  87:.\DSP_Class.c ****     int64 total = 0;
 367              		.loc 1 87 0
 368 000e 0025     		mov	r5, #0
 369 0010 0026     		mov	r6, #0
 370 0012 BD60     		str	r5, [r7, #8]
 371 0014 FE60     		str	r6, [r7, #12]
 372              	.LBB5:
  88:.\DSP_Class.c ****     {
  89:.\DSP_Class.c ****         uint8 i;
  90:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 373              		.loc 1 90 0
 374 0016 F81D     		add	r0, r7, #7
 375 0018 0025     		mov	r5, #0
 376 001a 0570     		strb	r5, [r0]
 377 001c 21E0     		b	.L27
 378              	.L30:
  91:.\DSP_Class.c ****             if(tempArray[i]>=0){
 379              		.loc 1 91 0
 380 001e F81D     		add	r0, r7, #7
 381 0020 0578     		ldrb	r5, [r0]
 382 0022 2B48     		ldr	r0, .L36
 383 0024 AD00     		lsl	r5, r5, #2
 384 0026 2858     		ldr	r0, [r5, r0]
 385 0028 0028     		cmp	r0, #0
 386 002a 0EDB     		blt	.L28
  92:.\DSP_Class.c ****                 total += tempArray[i];
 387              		.loc 1 92 0
 388 002c F81D     		add	r0, r7, #7
 389 002e 0578     		ldrb	r5, [r0]
 390 0030 2748     		ldr	r0, .L36
 391 0032 AD00     		lsl	r5, r5, #2
 392 0034 2858     		ldr	r0, [r5, r0]
 393 0036 011C     		mov	r1, r0
 394 0038 C017     		asr	r0, r0, #31
 395 003a 021C     		mov	r2, r0
 396 003c BD68     		ldr	r5, [r7, #8]
 397 003e FE68     		ldr	r6, [r7, #12]
 398 0040 6D18     		add	r5, r5, r1
 399 0042 5641     		adc	r6, r6, r2
 400 0044 BD60     		str	r5, [r7, #8]
 401 0046 FE60     		str	r6, [r7, #12]
 402 0048 06E0     		b	.L29
 403              	.L28:
  93:.\DSP_Class.c ****             }
  94:.\DSP_Class.c ****             else{
  95:.\DSP_Class.c ****                 skip++;
 404              		.loc 1 95 0
 405 004a 381C     		mov	r0, r7
 406 004c 1730     		add	r0, r0, #23
 407 004e 0578     		ldrb	r5, [r0]
 408 0050 381C     		mov	r0, r7
 409 0052 1730     		add	r0, r0, #23
 410 0054 0135     		add	r5, r5, #1
 411 0056 0570     		strb	r5, [r0]
 412              	.L29:
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 10


  90:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 413              		.loc 1 90 0
 414 0058 F81D     		add	r0, r7, #7
 415 005a 0578     		ldrb	r5, [r0]
 416 005c F81D     		add	r0, r7, #7
 417 005e 0135     		add	r5, r5, #1
 418 0060 0570     		strb	r5, [r0]
 419              	.L27:
  90:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 420              		.loc 1 90 0 is_stmt 0 discriminator 1
 421 0062 F81D     		add	r0, r7, #7
 422 0064 0078     		ldrb	r0, [r0]
 423 0066 0128     		cmp	r0, #1
 424 0068 D9D9     		bls	.L30
 425              	.LBE5:
  96:.\DSP_Class.c ****             }
  97:.\DSP_Class.c ****         }
  98:.\DSP_Class.c ****     }
  99:.\DSP_Class.c ****     // Makes sure that enough datapoints are pressent
 100:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 426              		.loc 1 100 0 is_stmt 1
 427 006a 3A1C     		mov	r2, r7
 428 006c 1732     		add	r2, r2, #23
 429 006e 1278     		ldrb	r2, [r2]
 430 0070 0221     		mov	r1, #2
 431 0072 8A1A     		sub	r2, r1, r2
 432 0074 012A     		cmp	r2, #1
 433 0076 24DD     		ble	.L31
 434              	.LBB6:
 101:.\DSP_Class.c ****         int32 avg = total/(ARRAYSIZE-skip);     // Calculate the average value
 435              		.loc 1 101 0
 436 0078 3A1C     		mov	r2, r7
 437 007a 1732     		add	r2, r2, #23
 438 007c 1278     		ldrb	r2, [r2]
 439 007e 0221     		mov	r1, #2
 440 0080 8A1A     		sub	r2, r1, r2
 441 0082 131C     		mov	r3, r2
 442 0084 D217     		asr	r2, r2, #31
 443 0086 141C     		mov	r4, r2
 444 0088 B868     		ldr	r0, [r7, #8]
 445 008a F968     		ldr	r1, [r7, #12]
 446 008c 1A1C     		mov	r2, r3
 447 008e 231C     		mov	r3, r4
 448 0090 FFF7FEFF 		bl	__aeabi_ldivmod
 449 0094 031C     		mov	r3, r0
 450 0096 0C1C     		mov	r4, r1
 451 0098 3B60     		str	r3, [r7]
 102:.\DSP_Class.c ****         
 103:.\DSP_Class.c ****         // temp is limited to 1 and 200
 104:.\DSP_Class.c ****         if (avg>200){
 452              		.loc 1 104 0
 453 009a 3B68     		ldr	r3, [r7]
 454 009c C82B     		cmp	r3, #200
 455 009e 03DD     		ble	.L32
 105:.\DSP_Class.c ****             temp = 200;
 456              		.loc 1 105 0
 457 00a0 0C4B     		ldr	r3, .L36+4
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 11


 458 00a2 C822     		mov	r2, #200
 459 00a4 1A70     		strb	r2, [r3]
 460 00a6 0BE0     		b	.L33
 461              	.L32:
 106:.\DSP_Class.c ****         }
 107:.\DSP_Class.c ****         else if (avg < 1){
 462              		.loc 1 107 0
 463 00a8 3B68     		ldr	r3, [r7]
 464 00aa 002B     		cmp	r3, #0
 465 00ac 03DC     		bgt	.L34
 108:.\DSP_Class.c ****             temp = 1;
 466              		.loc 1 108 0
 467 00ae 094B     		ldr	r3, .L36+4
 468 00b0 0122     		mov	r2, #1
 469 00b2 1A70     		strb	r2, [r3]
 470 00b4 04E0     		b	.L33
 471              	.L34:
 109:.\DSP_Class.c ****         }
 110:.\DSP_Class.c ****         else{
 111:.\DSP_Class.c ****             temp = (uint8)avg;
 472              		.loc 1 111 0
 473 00b6 3B68     		ldr	r3, [r7]
 474 00b8 DAB2     		uxtb	r2, r3
 475 00ba 064B     		ldr	r3, .L36+4
 476 00bc 1A70     		strb	r2, [r3]
 477              	.LBE6:
 478 00be 03E0     		b	.L26
 479              	.L33:
 480 00c0 02E0     		b	.L26
 481              	.L31:
 112:.\DSP_Class.c ****         }
 113:.\DSP_Class.c ****     }
 114:.\DSP_Class.c ****     else{
 115:.\DSP_Class.c ****         temp = 0;
 482              		.loc 1 115 0
 483 00c2 044B     		ldr	r3, .L36+4
 484 00c4 0022     		mov	r2, #0
 485 00c6 1A70     		strb	r2, [r3]
 486              	.L26:
 116:.\DSP_Class.c ****     }
 117:.\DSP_Class.c **** }
 487              		.loc 1 117 0
 488 00c8 BD46     		mov	sp, r7
 489 00ca 07B0     		add	sp, sp, #28
 490              		@ sp needed
 491 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 492              	.L37:
 493 00ce C046     		.align	2
 494              	.L36:
 495 00d0 00000000 		.word	tempArray
 496 00d4 00000000 		.word	temp
 497              		.cfi_endproc
 498              	.LFE38:
 499              		.size	avgTemp, .-avgTemp
 500              		.global	__aeabi_l2f
 501              		.global	__aeabi_fdiv
 502              		.global	__aeabi_fmul
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 12


 503              		.global	__aeabi_fcmple
 504              		.global	__aeabi_fcmpgt
 505              		.global	__aeabi_f2uiz
 506              		.section	.text.avgHum,"ax",%progbits
 507              		.align	2
 508              		.global	avgHum
 509              		.code	16
 510              		.thumb_func
 511              		.type	avgHum, %function
 512              	avgHum:
 513              	.LFB39:
 118:.\DSP_Class.c **** //----------avgTemp1----------
 119:.\DSP_Class.c **** 
 120:.\DSP_Class.c **** void avgHum(void){
 514              		.loc 1 120 0
 515              		.cfi_startproc
 516 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 517              		.cfi_def_cfa_offset 20
 518              		.cfi_offset 4, -20
 519              		.cfi_offset 5, -16
 520              		.cfi_offset 6, -12
 521              		.cfi_offset 7, -8
 522              		.cfi_offset 14, -4
 523 0002 89B0     		sub	sp, sp, #36
 524              		.cfi_def_cfa_offset 56
 525 0004 00AF     		add	r7, sp, #0
 526              		.cfi_def_cfa_register 7
 121:.\DSP_Class.c ****     uint8 skip = 0;
 527              		.loc 1 121 0
 528 0006 381C     		mov	r0, r7
 529 0008 1F30     		add	r0, r0, #31
 530 000a 0025     		mov	r5, #0
 531 000c 0570     		strb	r5, [r0]
 122:.\DSP_Class.c ****     int64 total = 0;
 532              		.loc 1 122 0
 533 000e 0025     		mov	r5, #0
 534 0010 0026     		mov	r6, #0
 535 0012 3D61     		str	r5, [r7, #16]
 536 0014 7E61     		str	r6, [r7, #20]
 537              	.LBB7:
 123:.\DSP_Class.c ****     {
 124:.\DSP_Class.c ****         uint8 i;
 125:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 538              		.loc 1 125 0
 539 0016 381C     		mov	r0, r7
 540 0018 0F30     		add	r0, r0, #15
 541 001a 0025     		mov	r5, #0
 542 001c 0570     		strb	r5, [r0]
 543 001e 25E0     		b	.L39
 544              	.L42:
 126:.\DSP_Class.c ****             if(humArray[i]>=0){
 545              		.loc 1 126 0
 546 0020 381C     		mov	r0, r7
 547 0022 0F30     		add	r0, r0, #15
 548 0024 0578     		ldrb	r5, [r0]
 549 0026 3A48     		ldr	r0, .L54
 550 0028 AD00     		lsl	r5, r5, #2
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 13


 551 002a 2858     		ldr	r0, [r5, r0]
 552 002c 0028     		cmp	r0, #0
 553 002e 0FDB     		blt	.L40
 127:.\DSP_Class.c ****                 total += humArray[i];
 554              		.loc 1 127 0
 555 0030 381C     		mov	r0, r7
 556 0032 0F30     		add	r0, r0, #15
 557 0034 0578     		ldrb	r5, [r0]
 558 0036 3648     		ldr	r0, .L54
 559 0038 AD00     		lsl	r5, r5, #2
 560 003a 2858     		ldr	r0, [r5, r0]
 561 003c 011C     		mov	r1, r0
 562 003e C017     		asr	r0, r0, #31
 563 0040 021C     		mov	r2, r0
 564 0042 3D69     		ldr	r5, [r7, #16]
 565 0044 7E69     		ldr	r6, [r7, #20]
 566 0046 6D18     		add	r5, r5, r1
 567 0048 5641     		adc	r6, r6, r2
 568 004a 3D61     		str	r5, [r7, #16]
 569 004c 7E61     		str	r6, [r7, #20]
 570 004e 06E0     		b	.L41
 571              	.L40:
 128:.\DSP_Class.c ****             }
 129:.\DSP_Class.c ****             else{
 130:.\DSP_Class.c ****                 skip++;
 572              		.loc 1 130 0
 573 0050 381C     		mov	r0, r7
 574 0052 1F30     		add	r0, r0, #31
 575 0054 0578     		ldrb	r5, [r0]
 576 0056 381C     		mov	r0, r7
 577 0058 1F30     		add	r0, r0, #31
 578 005a 0135     		add	r5, r5, #1
 579 005c 0570     		strb	r5, [r0]
 580              	.L41:
 125:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 581              		.loc 1 125 0
 582 005e 381C     		mov	r0, r7
 583 0060 0F30     		add	r0, r0, #15
 584 0062 0578     		ldrb	r5, [r0]
 585 0064 381C     		mov	r0, r7
 586 0066 0F30     		add	r0, r0, #15
 587 0068 0135     		add	r5, r5, #1
 588 006a 0570     		strb	r5, [r0]
 589              	.L39:
 125:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 590              		.loc 1 125 0 is_stmt 0 discriminator 1
 591 006c 381C     		mov	r0, r7
 592 006e 0F30     		add	r0, r0, #15
 593 0070 0078     		ldrb	r0, [r0]
 594 0072 0128     		cmp	r0, #1
 595 0074 D4D9     		bls	.L42
 596              	.LBE7:
 131:.\DSP_Class.c ****             }
 132:.\DSP_Class.c ****         }
 133:.\DSP_Class.c ****     }
 134:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 135:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 14


 597              		.loc 1 135 0 is_stmt 1
 598 0076 3A1C     		mov	r2, r7
 599 0078 1F32     		add	r2, r2, #31
 600 007a 1278     		ldrb	r2, [r2]
 601 007c 0221     		mov	r1, #2
 602 007e 8A1A     		sub	r2, r1, r2
 603 0080 012A     		cmp	r2, #1
 604 0082 3EDD     		ble	.L43
 605              	.LBB8:
 136:.\DSP_Class.c ****         float avg = total/(ARRAYSIZE-skip);                     // Calculate the average value
 606              		.loc 1 136 0
 607 0084 3A1C     		mov	r2, r7
 608 0086 1F32     		add	r2, r2, #31
 609 0088 1278     		ldrb	r2, [r2]
 610 008a 0221     		mov	r1, #2
 611 008c 8A1A     		sub	r2, r1, r2
 612 008e 131C     		mov	r3, r2
 613 0090 D217     		asr	r2, r2, #31
 614 0092 141C     		mov	r4, r2
 615 0094 3869     		ldr	r0, [r7, #16]
 616 0096 7969     		ldr	r1, [r7, #20]
 617 0098 1A1C     		mov	r2, r3
 618 009a 231C     		mov	r3, r4
 619 009c FFF7FEFF 		bl	__aeabi_ldivmod
 620 00a0 031C     		mov	r3, r0
 621 00a2 0C1C     		mov	r4, r1
 622 00a4 181C     		mov	r0, r3
 623 00a6 211C     		mov	r1, r4
 624 00a8 FFF7FEFF 		bl	__aeabi_l2f
 625 00ac 031C     		add	r3, r0, #0
 626 00ae BB60     		str	r3, [r7, #8]
 137:.\DSP_Class.c ****         float humInRH = (avg/(16380-2))*100;                // Conversion formula from datasheet
 627              		.loc 1 137 0
 628 00b0 B868     		ldr	r0, [r7, #8]
 629 00b2 1849     		ldr	r1, .L54+4
 630 00b4 FFF7FEFF 		bl	__aeabi_fdiv
 631 00b8 031C     		add	r3, r0, #0
 632 00ba 181C     		add	r0, r3, #0
 633 00bc 1649     		ldr	r1, .L54+8
 634 00be FFF7FEFF 		bl	__aeabi_fmul
 635 00c2 031C     		add	r3, r0, #0
 636 00c4 7B60     		str	r3, [r7, #4]
 138:.\DSP_Class.c ****         
 139:.\DSP_Class.c ****         // humInRH is limited to 1 and 100 RH
 140:.\DSP_Class.c ****         if(humInRH <= 0){
 637              		.loc 1 140 0
 638 00c6 7868     		ldr	r0, [r7, #4]
 639 00c8 0021     		mov	r1, #0
 640 00ca FFF7FEFF 		bl	__aeabi_fcmple
 641 00ce 031C     		mov	r3, r0
 642 00d0 002B     		cmp	r3, #0
 643 00d2 03D0     		beq	.L52
 141:.\DSP_Class.c ****             humInRH = 1;
 644              		.loc 1 141 0
 645 00d4 FE23     		mov	r3, #254
 646 00d6 9B05     		lsl	r3, r3, #22
 647 00d8 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 15


 648 00da 11E0     		b	.L46
 649              	.L52:
 142:.\DSP_Class.c ****         }
 143:.\DSP_Class.c ****         else if(humInRH > 100){
 650              		.loc 1 143 0
 651 00dc 7868     		ldr	r0, [r7, #4]
 652 00de 0E49     		ldr	r1, .L54+8
 653 00e0 FFF7FEFF 		bl	__aeabi_fcmpgt
 654 00e4 031C     		mov	r3, r0
 655 00e6 002B     		cmp	r3, #0
 656 00e8 02D0     		beq	.L53
 144:.\DSP_Class.c ****             humInRH = 100;
 657              		.loc 1 144 0
 658 00ea 0B4B     		ldr	r3, .L54+8
 659 00ec 7B60     		str	r3, [r7, #4]
 660 00ee 07E0     		b	.L46
 661              	.L53:
 145:.\DSP_Class.c ****         }
 146:.\DSP_Class.c ****         else{
 147:.\DSP_Class.c ****             hum = humInRH;
 662              		.loc 1 147 0
 663 00f0 7868     		ldr	r0, [r7, #4]
 664 00f2 FFF7FEFF 		bl	__aeabi_f2uiz
 665 00f6 031C     		mov	r3, r0
 666 00f8 DAB2     		uxtb	r2, r3
 667 00fa 084B     		ldr	r3, .L54+12
 668 00fc 1A70     		strb	r2, [r3]
 669              	.LBE8:
 670 00fe 03E0     		b	.L38
 671              	.L46:
 672 0100 02E0     		b	.L38
 673              	.L43:
 148:.\DSP_Class.c ****         }
 149:.\DSP_Class.c ****     }
 150:.\DSP_Class.c ****     else{
 151:.\DSP_Class.c ****     hum = 0;
 674              		.loc 1 151 0
 675 0102 064B     		ldr	r3, .L54+12
 676 0104 0022     		mov	r2, #0
 677 0106 1A70     		strb	r2, [r3]
 678              	.L38:
 152:.\DSP_Class.c ****     }
 153:.\DSP_Class.c **** }
 679              		.loc 1 153 0
 680 0108 BD46     		mov	sp, r7
 681 010a 09B0     		add	sp, sp, #36
 682              		@ sp needed
 683 010c F0BD     		pop	{r4, r5, r6, r7, pc}
 684              	.L55:
 685 010e C046     		.align	2
 686              	.L54:
 687 0110 00000000 		.word	humArray
 688 0114 00E87F46 		.word	1182787584
 689 0118 0000C842 		.word	1120403456
 690 011c 00000000 		.word	hum
 691              		.cfi_endproc
 692              	.LFE39:
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 16


 693              		.size	avgHum, .-avgHum
 694              		.global	__aeabi_uidiv
 695              		.section	.text.avgSoilHum,"ax",%progbits
 696              		.align	2
 697              		.global	avgSoilHum
 698              		.code	16
 699              		.thumb_func
 700              		.type	avgSoilHum, %function
 701              	avgSoilHum:
 702              	.LFB40:
 154:.\DSP_Class.c **** 
 155:.\DSP_Class.c **** void avgSoilHum(uint8 index){
 703              		.loc 1 155 0
 704              		.cfi_startproc
 705 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 706              		.cfi_def_cfa_offset 20
 707              		.cfi_offset 4, -20
 708              		.cfi_offset 5, -16
 709              		.cfi_offset 6, -12
 710              		.cfi_offset 7, -8
 711              		.cfi_offset 14, -4
 712 0002 8BB0     		sub	sp, sp, #44
 713              		.cfi_def_cfa_offset 64
 714 0004 00AF     		add	r7, sp, #0
 715              		.cfi_def_cfa_register 7
 716 0006 051C     		mov	r5, r0
 717 0008 F81D     		add	r0, r7, #7
 718 000a 0570     		strb	r5, [r0]
 156:.\DSP_Class.c ****     uint8 skip = 0;
 719              		.loc 1 156 0
 720 000c 381C     		mov	r0, r7
 721 000e 2730     		add	r0, r0, #39
 722 0010 0025     		mov	r5, #0
 723 0012 0570     		strb	r5, [r0]
 157:.\DSP_Class.c ****     int64 total = 0;
 724              		.loc 1 157 0
 725 0014 0025     		mov	r5, #0
 726 0016 0026     		mov	r6, #0
 727 0018 BD61     		str	r5, [r7, #24]
 728 001a FE61     		str	r6, [r7, #28]
 729              	.LBB9:
 158:.\DSP_Class.c ****     {
 159:.\DSP_Class.c ****         uint8 i;
 160:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 730              		.loc 1 160 0
 731 001c 381C     		mov	r0, r7
 732 001e 1730     		add	r0, r0, #23
 733 0020 0025     		mov	r5, #0
 734 0022 0570     		strb	r5, [r0]
 735 0024 2FE0     		b	.L57
 736              	.L60:
 161:.\DSP_Class.c ****             if(soilHumArray[index][i]>=0){
 737              		.loc 1 161 0
 738 0026 F81D     		add	r0, r7, #7
 739 0028 0678     		ldrb	r6, [r0]
 740 002a 381C     		mov	r0, r7
 741 002c 1730     		add	r0, r0, #23
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 17


 742 002e 0578     		ldrb	r5, [r0]
 743 0030 3D48     		ldr	r0, .L70
 744 0032 7600     		lsl	r6, r6, #1
 745 0034 7519     		add	r5, r6, r5
 746 0036 6D00     		lsl	r5, r5, #1
 747 0038 285A     		ldrh	r0, [r5, r0]
 748 003a 00B2     		sxth	r0, r0
 749 003c 0028     		cmp	r0, #0
 750 003e 14DB     		blt	.L58
 162:.\DSP_Class.c ****                 total += soilHumArray[index][i];
 751              		.loc 1 162 0
 752 0040 F81D     		add	r0, r7, #7
 753 0042 0678     		ldrb	r6, [r0]
 754 0044 381C     		mov	r0, r7
 755 0046 1730     		add	r0, r0, #23
 756 0048 0578     		ldrb	r5, [r0]
 757 004a 3748     		ldr	r0, .L70
 758 004c 7600     		lsl	r6, r6, #1
 759 004e 7519     		add	r5, r6, r5
 760 0050 6D00     		lsl	r5, r5, #1
 761 0052 285A     		ldrh	r0, [r5, r0]
 762 0054 00B2     		sxth	r0, r0
 763 0056 011C     		mov	r1, r0
 764 0058 C017     		asr	r0, r0, #31
 765 005a 021C     		mov	r2, r0
 766 005c BD69     		ldr	r5, [r7, #24]
 767 005e FE69     		ldr	r6, [r7, #28]
 768 0060 6D18     		add	r5, r5, r1
 769 0062 5641     		adc	r6, r6, r2
 770 0064 BD61     		str	r5, [r7, #24]
 771 0066 FE61     		str	r6, [r7, #28]
 772 0068 06E0     		b	.L59
 773              	.L58:
 163:.\DSP_Class.c ****             }
 164:.\DSP_Class.c ****             else{
 165:.\DSP_Class.c ****                 skip++;
 774              		.loc 1 165 0
 775 006a 381C     		mov	r0, r7
 776 006c 2730     		add	r0, r0, #39
 777 006e 0578     		ldrb	r5, [r0]
 778 0070 381C     		mov	r0, r7
 779 0072 2730     		add	r0, r0, #39
 780 0074 0135     		add	r5, r5, #1
 781 0076 0570     		strb	r5, [r0]
 782              	.L59:
 160:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 783              		.loc 1 160 0
 784 0078 381C     		mov	r0, r7
 785 007a 1730     		add	r0, r0, #23
 786 007c 0578     		ldrb	r5, [r0]
 787 007e 381C     		mov	r0, r7
 788 0080 1730     		add	r0, r0, #23
 789 0082 0135     		add	r5, r5, #1
 790 0084 0570     		strb	r5, [r0]
 791              	.L57:
 160:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 792              		.loc 1 160 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 18


 793 0086 381C     		mov	r0, r7
 794 0088 1730     		add	r0, r0, #23
 795 008a 0078     		ldrb	r0, [r0]
 796 008c 0128     		cmp	r0, #1
 797 008e CAD9     		bls	.L60
 798              	.LBE9:
 166:.\DSP_Class.c ****             }
 167:.\DSP_Class.c ****         }
 168:.\DSP_Class.c ****     }
 169:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 170:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 799              		.loc 1 170 0 is_stmt 1
 800 0090 3A1C     		mov	r2, r7
 801 0092 2732     		add	r2, r2, #39
 802 0094 1278     		ldrb	r2, [r2]
 803 0096 0221     		mov	r1, #2
 804 0098 8A1A     		sub	r2, r1, r2
 805 009a 012A     		cmp	r2, #1
 806 009c 3BDD     		ble	.L61
 807              	.LBB10:
 171:.\DSP_Class.c ****         float avg = total/(ARRAYSIZE-skip);         // Calculate the average value (assuming input 
 808              		.loc 1 171 0
 809 009e 3A1C     		mov	r2, r7
 810 00a0 2732     		add	r2, r2, #39
 811 00a2 1278     		ldrb	r2, [r2]
 812 00a4 0221     		mov	r1, #2
 813 00a6 8A1A     		sub	r2, r1, r2
 814 00a8 131C     		mov	r3, r2
 815 00aa D217     		asr	r2, r2, #31
 816 00ac 141C     		mov	r4, r2
 817 00ae B869     		ldr	r0, [r7, #24]
 818 00b0 F969     		ldr	r1, [r7, #28]
 819 00b2 1A1C     		mov	r2, r3
 820 00b4 231C     		mov	r3, r4
 821 00b6 FFF7FEFF 		bl	__aeabi_ldivmod
 822 00ba 031C     		mov	r3, r0
 823 00bc 0C1C     		mov	r4, r1
 824 00be 181C     		mov	r0, r3
 825 00c0 211C     		mov	r1, r4
 826 00c2 FFF7FEFF 		bl	__aeabi_l2f
 827 00c6 031C     		add	r3, r0, #0
 828 00c8 FB60     		str	r3, [r7, #12]
 172:.\DSP_Class.c ****         float soilHumInRH = avg;                    // Takes care of conversion ( NB no conversion 
 829              		.loc 1 172 0
 830 00ca FB68     		ldr	r3, [r7, #12]
 831 00cc 3B61     		str	r3, [r7, #16]
 173:.\DSP_Class.c ****         
 174:.\DSP_Class.c ****         // soilHumInRH is limited to 1 and 100 RH
 175:.\DSP_Class.c ****         if(soilHumInRH <= 0){
 832              		.loc 1 175 0
 833 00ce 3869     		ldr	r0, [r7, #16]
 834 00d0 0021     		mov	r1, #0
 835 00d2 FFF7FEFF 		bl	__aeabi_fcmple
 836 00d6 031C     		mov	r3, r0
 837 00d8 002B     		cmp	r3, #0
 838 00da 03D0     		beq	.L69
 176:.\DSP_Class.c ****             soilHumInRH = 1;
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 19


 839              		.loc 1 176 0
 840 00dc FE23     		mov	r3, #254
 841 00de 9B05     		lsl	r3, r3, #22
 842 00e0 3B61     		str	r3, [r7, #16]
 843 00e2 08E0     		b	.L64
 844              	.L69:
 177:.\DSP_Class.c ****         }
 178:.\DSP_Class.c ****         else if(soilHumInRH > 100){
 845              		.loc 1 178 0
 846 00e4 3869     		ldr	r0, [r7, #16]
 847 00e6 1149     		ldr	r1, .L70+4
 848 00e8 FFF7FEFF 		bl	__aeabi_fcmpgt
 849 00ec 031C     		mov	r3, r0
 850 00ee 002B     		cmp	r3, #0
 851 00f0 01D0     		beq	.L64
 179:.\DSP_Class.c ****             soilHumInRH = 100;
 852              		.loc 1 179 0
 853 00f2 0E4B     		ldr	r3, .L70+4
 854 00f4 3B61     		str	r3, [r7, #16]
 855              	.L64:
 180:.\DSP_Class.c ****         }
 181:.\DSP_Class.c ****         soilHum[index] = (uint8)soilHumInRH/10;
 856              		.loc 1 181 0 discriminator 1
 857 00f6 FB1D     		add	r3, r7, #7
 858 00f8 1C78     		ldrb	r4, [r3]
 859 00fa 3869     		ldr	r0, [r7, #16]
 860 00fc FFF7FEFF 		bl	__aeabi_f2uiz
 861 0100 031C     		mov	r3, r0
 862 0102 DBB2     		uxtb	r3, r3
 863 0104 181C     		mov	r0, r3
 864 0106 0A21     		mov	r1, #10
 865 0108 FFF7FEFF 		bl	__aeabi_uidiv
 866 010c 031C     		mov	r3, r0
 867 010e DAB2     		uxtb	r2, r3
 868 0110 074B     		ldr	r3, .L70+8
 869 0112 1A55     		strb	r2, [r3, r4]
 870              	.LBE10:
 871 0114 04E0     		b	.L56
 872              	.L61:
 182:.\DSP_Class.c ****     }
 183:.\DSP_Class.c ****     else{
 184:.\DSP_Class.c ****     soilHum[index] = 0;
 873              		.loc 1 184 0
 874 0116 FB1D     		add	r3, r7, #7
 875 0118 1B78     		ldrb	r3, [r3]
 876 011a 054A     		ldr	r2, .L70+8
 877 011c 0021     		mov	r1, #0
 878 011e D154     		strb	r1, [r2, r3]
 879              	.L56:
 185:.\DSP_Class.c ****     }
 186:.\DSP_Class.c **** }
 880              		.loc 1 186 0
 881 0120 BD46     		mov	sp, r7
 882 0122 0BB0     		add	sp, sp, #44
 883              		@ sp needed
 884 0124 F0BD     		pop	{r4, r5, r6, r7, pc}
 885              	.L71:
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 20


 886 0126 C046     		.align	2
 887              	.L70:
 888 0128 00000000 		.word	soilHumArray
 889 012c 0000C842 		.word	1120403456
 890 0130 00000000 		.word	soilHum
 891              		.cfi_endproc
 892              	.LFE40:
 893              		.size	avgSoilHum, .-avgSoilHum
 894              		.global	__aeabi_f2iz
 895              		.global	__aeabi_idiv
 896              		.section	.text.avgLight,"ax",%progbits
 897              		.align	2
 898              		.global	avgLight
 899              		.code	16
 900              		.thumb_func
 901              		.type	avgLight, %function
 902              	avgLight:
 903              	.LFB41:
 187:.\DSP_Class.c **** 
 188:.\DSP_Class.c **** void avgLight(void){
 904              		.loc 1 188 0
 905              		.cfi_startproc
 906 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 907              		.cfi_def_cfa_offset 20
 908              		.cfi_offset 4, -20
 909              		.cfi_offset 5, -16
 910              		.cfi_offset 6, -12
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 89B0     		sub	sp, sp, #36
 914              		.cfi_def_cfa_offset 56
 915 0004 00AF     		add	r7, sp, #0
 916              		.cfi_def_cfa_register 7
 189:.\DSP_Class.c ****     uint8 skip = 0;
 917              		.loc 1 189 0
 918 0006 381C     		mov	r0, r7
 919 0008 1F30     		add	r0, r0, #31
 920 000a 0025     		mov	r5, #0
 921 000c 0570     		strb	r5, [r0]
 190:.\DSP_Class.c ****     int64 total = 0;
 922              		.loc 1 190 0
 923 000e 0025     		mov	r5, #0
 924 0010 0026     		mov	r6, #0
 925 0012 3D61     		str	r5, [r7, #16]
 926 0014 7E61     		str	r6, [r7, #20]
 927              	.LBB11:
 191:.\DSP_Class.c ****     {
 192:.\DSP_Class.c ****         uint8 i;
 193:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 928              		.loc 1 193 0
 929 0016 381C     		mov	r0, r7
 930 0018 0F30     		add	r0, r0, #15
 931 001a 0025     		mov	r5, #0
 932 001c 0570     		strb	r5, [r0]
 933 001e 25E0     		b	.L73
 934              	.L76:
 194:.\DSP_Class.c ****             if(lightArray[i]>=0){
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 21


 935              		.loc 1 194 0
 936 0020 381C     		mov	r0, r7
 937 0022 0F30     		add	r0, r0, #15
 938 0024 0578     		ldrb	r5, [r0]
 939 0026 3C48     		ldr	r0, .L81
 940 0028 AD00     		lsl	r5, r5, #2
 941 002a 2858     		ldr	r0, [r5, r0]
 942 002c 0028     		cmp	r0, #0
 943 002e 0FDB     		blt	.L74
 195:.\DSP_Class.c ****                 total += lightArray[i];
 944              		.loc 1 195 0
 945 0030 381C     		mov	r0, r7
 946 0032 0F30     		add	r0, r0, #15
 947 0034 0578     		ldrb	r5, [r0]
 948 0036 3848     		ldr	r0, .L81
 949 0038 AD00     		lsl	r5, r5, #2
 950 003a 2858     		ldr	r0, [r5, r0]
 951 003c 011C     		mov	r1, r0
 952 003e C017     		asr	r0, r0, #31
 953 0040 021C     		mov	r2, r0
 954 0042 3D69     		ldr	r5, [r7, #16]
 955 0044 7E69     		ldr	r6, [r7, #20]
 956 0046 6D18     		add	r5, r5, r1
 957 0048 5641     		adc	r6, r6, r2
 958 004a 3D61     		str	r5, [r7, #16]
 959 004c 7E61     		str	r6, [r7, #20]
 960 004e 06E0     		b	.L75
 961              	.L74:
 196:.\DSP_Class.c ****             }
 197:.\DSP_Class.c ****             else{
 198:.\DSP_Class.c ****                 skip++;
 962              		.loc 1 198 0
 963 0050 381C     		mov	r0, r7
 964 0052 1F30     		add	r0, r0, #31
 965 0054 0578     		ldrb	r5, [r0]
 966 0056 381C     		mov	r0, r7
 967 0058 1F30     		add	r0, r0, #31
 968 005a 0135     		add	r5, r5, #1
 969 005c 0570     		strb	r5, [r0]
 970              	.L75:
 193:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 971              		.loc 1 193 0
 972 005e 381C     		mov	r0, r7
 973 0060 0F30     		add	r0, r0, #15
 974 0062 0578     		ldrb	r5, [r0]
 975 0064 381C     		mov	r0, r7
 976 0066 0F30     		add	r0, r0, #15
 977 0068 0135     		add	r5, r5, #1
 978 006a 0570     		strb	r5, [r0]
 979              	.L73:
 193:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 980              		.loc 1 193 0 is_stmt 0 discriminator 1
 981 006c 381C     		mov	r0, r7
 982 006e 0F30     		add	r0, r0, #15
 983 0070 0078     		ldrb	r0, [r0]
 984 0072 0128     		cmp	r0, #1
 985 0074 D4D9     		bls	.L76
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 22


 986              	.LBE11:
 199:.\DSP_Class.c ****             }
 200:.\DSP_Class.c ****         }
 201:.\DSP_Class.c ****     }
 202:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 203:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 987              		.loc 1 203 0 is_stmt 1
 988 0076 3A1C     		mov	r2, r7
 989 0078 1F32     		add	r2, r2, #31
 990 007a 1278     		ldrb	r2, [r2]
 991 007c 0221     		mov	r1, #2
 992 007e 8A1A     		sub	r2, r1, r2
 993 0080 012A     		cmp	r2, #1
 994 0082 43DD     		ble	.L77
 995              	.LBB12:
 204:.\DSP_Class.c ****         float avg = total/(ARRAYSIZE-skip);                              // Calculate the average v
 996              		.loc 1 204 0
 997 0084 3A1C     		mov	r2, r7
 998 0086 1F32     		add	r2, r2, #31
 999 0088 1278     		ldrb	r2, [r2]
 1000 008a 0221     		mov	r1, #2
 1001 008c 8A1A     		sub	r2, r1, r2
 1002 008e 131C     		mov	r3, r2
 1003 0090 D217     		asr	r2, r2, #31
 1004 0092 141C     		mov	r4, r2
 1005 0094 3869     		ldr	r0, [r7, #16]
 1006 0096 7969     		ldr	r1, [r7, #20]
 1007 0098 1A1C     		mov	r2, r3
 1008 009a 231C     		mov	r3, r4
 1009 009c FFF7FEFF 		bl	__aeabi_ldivmod
 1010 00a0 031C     		mov	r3, r0
 1011 00a2 0C1C     		mov	r4, r1
 1012 00a4 181C     		mov	r0, r3
 1013 00a6 211C     		mov	r1, r4
 1014 00a8 FFF7FEFF 		bl	__aeabi_l2f
 1015 00ac 031C     		add	r3, r0, #0
 1016 00ae BB60     		str	r3, [r7, #8]
 205:.\DSP_Class.c ****         
 206:.\DSP_Class.c ****         // Conversion to lux formula from datasheet
 207:.\DSP_Class.c ****         // Range = 128000, R_EXT = 100kOhm, n = 7 and DATA max 128
 208:.\DSP_Class.c ****         int32 lightInLux = ((128000*(100/100))/(128))*avg;
 1017              		.loc 1 208 0
 1018 00b0 B868     		ldr	r0, [r7, #8]
 1019 00b2 1A49     		ldr	r1, .L81+4
 1020 00b4 FFF7FEFF 		bl	__aeabi_fmul
 1021 00b8 031C     		add	r3, r0, #0
 1022 00ba 181C     		add	r0, r3, #0
 1023 00bc FFF7FEFF 		bl	__aeabi_f2iz
 1024 00c0 031C     		mov	r3, r0
 1025 00c2 7B60     		str	r3, [r7, #4]
 209:.\DSP_Class.c ****         
 210:.\DSP_Class.c ****         uint8 lightInUartVarSteps = lightInLux/1000;     // Conversion to UART ready value, 1 = 100
 1026              		.loc 1 210 0
 1027 00c4 7B68     		ldr	r3, [r7, #4]
 1028 00c6 181C     		mov	r0, r3
 1029 00c8 FA23     		mov	r3, #250
 1030 00ca 9900     		lsl	r1, r3, #2
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 23


 1031 00cc FFF7FEFF 		bl	__aeabi_idiv
 1032 00d0 031C     		mov	r3, r0
 1033 00d2 1A1C     		mov	r2, r3
 1034 00d4 3B1C     		mov	r3, r7
 1035 00d6 0E33     		add	r3, r3, #14
 1036 00d8 1A70     		strb	r2, [r3]
 211:.\DSP_Class.c ****         
 212:.\DSP_Class.c ****         // lightInLux is limited to 1 and 100 RH
 213:.\DSP_Class.c ****         if(lightInUartVarSteps <= 0){
 1037              		.loc 1 213 0
 1038 00da 3B1C     		mov	r3, r7
 1039 00dc 0E33     		add	r3, r3, #14
 1040 00de 1B78     		ldrb	r3, [r3]
 1041 00e0 002B     		cmp	r3, #0
 1042 00e2 04D1     		bne	.L78
 214:.\DSP_Class.c ****             lightInUartVarSteps = 1;
 1043              		.loc 1 214 0
 1044 00e4 3B1C     		mov	r3, r7
 1045 00e6 0E33     		add	r3, r3, #14
 1046 00e8 0122     		mov	r2, #1
 1047 00ea 1A70     		strb	r2, [r3]
 1048 00ec 08E0     		b	.L79
 1049              	.L78:
 215:.\DSP_Class.c ****         }
 216:.\DSP_Class.c ****         else if(lightInUartVarSteps > 100){
 1050              		.loc 1 216 0
 1051 00ee 3B1C     		mov	r3, r7
 1052 00f0 0E33     		add	r3, r3, #14
 1053 00f2 1B78     		ldrb	r3, [r3]
 1054 00f4 642B     		cmp	r3, #100
 1055 00f6 03D9     		bls	.L79
 217:.\DSP_Class.c ****             lightInUartVarSteps = 100;
 1056              		.loc 1 217 0
 1057 00f8 3B1C     		mov	r3, r7
 1058 00fa 0E33     		add	r3, r3, #14
 1059 00fc 6422     		mov	r2, #100
 1060 00fe 1A70     		strb	r2, [r3]
 1061              	.L79:
 218:.\DSP_Class.c ****         }
 219:.\DSP_Class.c ****         light = lightInUartVarSteps;
 1062              		.loc 1 219 0 discriminator 1
 1063 0100 074B     		ldr	r3, .L81+8
 1064 0102 3A1C     		mov	r2, r7
 1065 0104 0E32     		add	r2, r2, #14
 1066 0106 1278     		ldrb	r2, [r2]
 1067 0108 1A70     		strb	r2, [r3]
 1068              	.LBE12:
 1069 010a 02E0     		b	.L72
 1070              	.L77:
 220:.\DSP_Class.c ****     }
 221:.\DSP_Class.c ****     else{
 222:.\DSP_Class.c ****     light = 0;
 1071              		.loc 1 222 0
 1072 010c 044B     		ldr	r3, .L81+8
 1073 010e 0022     		mov	r2, #0
 1074 0110 1A70     		strb	r2, [r3]
 1075              	.L72:
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 24


 223:.\DSP_Class.c ****     }
 224:.\DSP_Class.c ****   }
 1076              		.loc 1 224 0
 1077 0112 BD46     		mov	sp, r7
 1078 0114 09B0     		add	sp, sp, #36
 1079              		@ sp needed
 1080 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1081              	.L82:
 1082              		.align	2
 1083              	.L81:
 1084 0118 00000000 		.word	lightArray
 1085 011c 00007A44 		.word	1148846080
 1086 0120 00000000 		.word	light
 1087              		.cfi_endproc
 1088              	.LFE41:
 1089              		.size	avgLight, .-avgLight
 1090              		.section	.text.inputTemp,"ax",%progbits
 1091              		.align	2
 1092              		.global	inputTemp
 1093              		.code	16
 1094              		.thumb_func
 1095              		.type	inputTemp, %function
 1096              	inputTemp:
 1097              	.LFB42:
 225:.\DSP_Class.c **** 
 226:.\DSP_Class.c **** //----------inputTemp0----------
 227:.\DSP_Class.c **** void inputTemp(int32* temp){
 1098              		.loc 1 227 0
 1099              		.cfi_startproc
 1100 0000 80B5     		push	{r7, lr}
 1101              		.cfi_def_cfa_offset 8
 1102              		.cfi_offset 7, -8
 1103              		.cfi_offset 14, -4
 1104 0002 82B0     		sub	sp, sp, #8
 1105              		.cfi_def_cfa_offset 16
 1106 0004 00AF     		add	r7, sp, #0
 1107              		.cfi_def_cfa_register 7
 1108 0006 7860     		str	r0, [r7, #4]
 228:.\DSP_Class.c ****     *tempArrayPtr = *temp;      // The input value is written to the array
 1109              		.loc 1 228 0
 1110 0008 0B4B     		ldr	r3, .L85
 1111 000a 1B68     		ldr	r3, [r3]
 1112 000c 7A68     		ldr	r2, [r7, #4]
 1113 000e 1268     		ldr	r2, [r2]
 1114 0010 1A60     		str	r2, [r3]
 229:.\DSP_Class.c ****     tempArrayPtr++;             // The pointer is moved to the next place in array
 1115              		.loc 1 229 0
 1116 0012 094B     		ldr	r3, .L85
 1117 0014 1B68     		ldr	r3, [r3]
 1118 0016 1A1D     		add	r2, r3, #4
 1119 0018 074B     		ldr	r3, .L85
 1120 001a 1A60     		str	r2, [r3]
 230:.\DSP_Class.c ****     if(tempArrayPtr > &tempArray[ARRAYSIZE-1]){
 1121              		.loc 1 230 0
 1122 001c 064B     		ldr	r3, .L85
 1123 001e 1A68     		ldr	r2, [r3]
 1124 0020 064B     		ldr	r3, .L85+4
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 25


 1125 0022 9A42     		cmp	r2, r3
 1126 0024 02D9     		bls	.L84
 231:.\DSP_Class.c ****         tempArrayPtr = &tempArray[0];   // If the pointer is pointing past the end of the array it'
 1127              		.loc 1 231 0
 1128 0026 044B     		ldr	r3, .L85
 1129 0028 054A     		ldr	r2, .L85+8
 1130 002a 1A60     		str	r2, [r3]
 1131              	.L84:
 232:.\DSP_Class.c ****     }
 233:.\DSP_Class.c ****     
 234:.\DSP_Class.c ****     avgTemp();      // The average value is calculated and onverted into temp(globel) 
 1132              		.loc 1 234 0
 1133 002c FFF7FEFF 		bl	avgTemp
 235:.\DSP_Class.c **** }
 1134              		.loc 1 235 0
 1135 0030 BD46     		mov	sp, r7
 1136 0032 02B0     		add	sp, sp, #8
 1137              		@ sp needed
 1138 0034 80BD     		pop	{r7, pc}
 1139              	.L86:
 1140 0036 C046     		.align	2
 1141              	.L85:
 1142 0038 00000000 		.word	tempArrayPtr
 1143 003c 04000000 		.word	tempArray+4
 1144 0040 00000000 		.word	tempArray
 1145              		.cfi_endproc
 1146              	.LFE42:
 1147              		.size	inputTemp, .-inputTemp
 1148              		.section	.text.inputHum,"ax",%progbits
 1149              		.align	2
 1150              		.global	inputHum
 1151              		.code	16
 1152              		.thumb_func
 1153              		.type	inputHum, %function
 1154              	inputHum:
 1155              	.LFB43:
 236:.\DSP_Class.c **** //----------inputTemp1----------
 237:.\DSP_Class.c **** 
 238:.\DSP_Class.c **** void inputHum(int32* hum){
 1156              		.loc 1 238 0
 1157              		.cfi_startproc
 1158 0000 80B5     		push	{r7, lr}
 1159              		.cfi_def_cfa_offset 8
 1160              		.cfi_offset 7, -8
 1161              		.cfi_offset 14, -4
 1162 0002 82B0     		sub	sp, sp, #8
 1163              		.cfi_def_cfa_offset 16
 1164 0004 00AF     		add	r7, sp, #0
 1165              		.cfi_def_cfa_register 7
 1166 0006 7860     		str	r0, [r7, #4]
 239:.\DSP_Class.c ****     *humArrayPtr = *hum;        // The input value is written to the array
 1167              		.loc 1 239 0
 1168 0008 0B4B     		ldr	r3, .L89
 1169 000a 1B68     		ldr	r3, [r3]
 1170 000c 7A68     		ldr	r2, [r7, #4]
 1171 000e 1268     		ldr	r2, [r2]
 1172 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 26


 240:.\DSP_Class.c ****     humArrayPtr++;              // The pointer is moved to the next place in array
 1173              		.loc 1 240 0
 1174 0012 094B     		ldr	r3, .L89
 1175 0014 1B68     		ldr	r3, [r3]
 1176 0016 1A1D     		add	r2, r3, #4
 1177 0018 074B     		ldr	r3, .L89
 1178 001a 1A60     		str	r2, [r3]
 241:.\DSP_Class.c ****     if(humArrayPtr > &humArray[ARRAYSIZE-1]){
 1179              		.loc 1 241 0
 1180 001c 064B     		ldr	r3, .L89
 1181 001e 1A68     		ldr	r2, [r3]
 1182 0020 064B     		ldr	r3, .L89+4
 1183 0022 9A42     		cmp	r2, r3
 1184 0024 02D9     		bls	.L88
 242:.\DSP_Class.c ****         humArrayPtr = &humArray[0];     // If the pointer is pointing past the end of the array it'
 1185              		.loc 1 242 0
 1186 0026 044B     		ldr	r3, .L89
 1187 0028 054A     		ldr	r2, .L89+8
 1188 002a 1A60     		str	r2, [r3]
 1189              	.L88:
 243:.\DSP_Class.c ****     }
 244:.\DSP_Class.c ****     
 245:.\DSP_Class.c ****     avgHum();      // The average value is calculated and onverted into hum(globel)
 1190              		.loc 1 245 0
 1191 002c FFF7FEFF 		bl	avgHum
 246:.\DSP_Class.c **** }
 1192              		.loc 1 246 0
 1193 0030 BD46     		mov	sp, r7
 1194 0032 02B0     		add	sp, sp, #8
 1195              		@ sp needed
 1196 0034 80BD     		pop	{r7, pc}
 1197              	.L90:
 1198 0036 C046     		.align	2
 1199              	.L89:
 1200 0038 00000000 		.word	humArrayPtr
 1201 003c 04000000 		.word	humArray+4
 1202 0040 00000000 		.word	humArray
 1203              		.cfi_endproc
 1204              	.LFE43:
 1205              		.size	inputHum, .-inputHum
 1206              		.section	.text.inputSoilHum,"ax",%progbits
 1207              		.align	2
 1208              		.global	inputSoilHum
 1209              		.code	16
 1210              		.thumb_func
 1211              		.type	inputSoilHum, %function
 1212              	inputSoilHum:
 1213              	.LFB44:
 247:.\DSP_Class.c **** 
 248:.\DSP_Class.c **** 
 249:.\DSP_Class.c **** void inputSoilHum(uint8 index, int16* soilHum){
 1214              		.loc 1 249 0
 1215              		.cfi_startproc
 1216 0000 80B5     		push	{r7, lr}
 1217              		.cfi_def_cfa_offset 8
 1218              		.cfi_offset 7, -8
 1219              		.cfi_offset 14, -4
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 27


 1220 0002 82B0     		sub	sp, sp, #8
 1221              		.cfi_def_cfa_offset 16
 1222 0004 00AF     		add	r7, sp, #0
 1223              		.cfi_def_cfa_register 7
 1224 0006 021C     		mov	r2, r0
 1225 0008 3960     		str	r1, [r7]
 1226 000a FB1D     		add	r3, r7, #7
 1227 000c 1A70     		strb	r2, [r3]
 250:.\DSP_Class.c ****     *soilHumPtr[index] = *soilHum;          // The input value is written to the array
 1228              		.loc 1 250 0
 1229 000e FB1D     		add	r3, r7, #7
 1230 0010 1A78     		ldrb	r2, [r3]
 1231 0012 174B     		ldr	r3, .L93
 1232 0014 9200     		lsl	r2, r2, #2
 1233 0016 D358     		ldr	r3, [r2, r3]
 1234 0018 3A68     		ldr	r2, [r7]
 1235 001a 1288     		ldrh	r2, [r2]
 1236 001c 1A80     		strh	r2, [r3]
 251:.\DSP_Class.c ****     soilHumPtr[index]++;                    // The pointer is moved to the next place in array
 1237              		.loc 1 251 0
 1238 001e FB1D     		add	r3, r7, #7
 1239 0020 1B78     		ldrb	r3, [r3]
 1240 0022 134A     		ldr	r2, .L93
 1241 0024 9900     		lsl	r1, r3, #2
 1242 0026 8A58     		ldr	r2, [r1, r2]
 1243 0028 911C     		add	r1, r2, #2
 1244 002a 114A     		ldr	r2, .L93
 1245 002c 9B00     		lsl	r3, r3, #2
 1246 002e 9950     		str	r1, [r3, r2]
 252:.\DSP_Class.c ****     if(soilHumPtr[index] > &soilHumArray[index][ARRAYSIZE-1]){
 1247              		.loc 1 252 0
 1248 0030 FB1D     		add	r3, r7, #7
 1249 0032 1A78     		ldrb	r2, [r3]
 1250 0034 0E4B     		ldr	r3, .L93
 1251 0036 9200     		lsl	r2, r2, #2
 1252 0038 D258     		ldr	r2, [r2, r3]
 1253 003a FB1D     		add	r3, r7, #7
 1254 003c 1B78     		ldrb	r3, [r3]
 1255 003e 9B00     		lsl	r3, r3, #2
 1256 0040 991C     		add	r1, r3, #2
 1257 0042 0C4B     		ldr	r3, .L93+4
 1258 0044 CB18     		add	r3, r1, r3
 1259 0046 9A42     		cmp	r2, r3
 1260 0048 09D9     		bls	.L92
 253:.\DSP_Class.c ****         soilHumPtr[index] = &soilHumArray[index][0];            // If the pointer is pointing past 
 1261              		.loc 1 253 0
 1262 004a FB1D     		add	r3, r7, #7
 1263 004c 1A78     		ldrb	r2, [r3]
 1264 004e FB1D     		add	r3, r7, #7
 1265 0050 1B78     		ldrb	r3, [r3]
 1266 0052 9900     		lsl	r1, r3, #2
 1267 0054 074B     		ldr	r3, .L93+4
 1268 0056 C918     		add	r1, r1, r3
 1269 0058 054B     		ldr	r3, .L93
 1270 005a 9200     		lsl	r2, r2, #2
 1271 005c D150     		str	r1, [r2, r3]
 1272              	.L92:
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 28


 254:.\DSP_Class.c ****     }
 255:.\DSP_Class.c ****     
 256:.\DSP_Class.c ****     avgSoilHum(index);          // The average value is calculated and onverted into soilHum(globel
 1273              		.loc 1 256 0
 1274 005e FB1D     		add	r3, r7, #7
 1275 0060 1B78     		ldrb	r3, [r3]
 1276 0062 181C     		mov	r0, r3
 1277 0064 FFF7FEFF 		bl	avgSoilHum
 257:.\DSP_Class.c **** }
 1278              		.loc 1 257 0
 1279 0068 BD46     		mov	sp, r7
 1280 006a 02B0     		add	sp, sp, #8
 1281              		@ sp needed
 1282 006c 80BD     		pop	{r7, pc}
 1283              	.L94:
 1284 006e C046     		.align	2
 1285              	.L93:
 1286 0070 00000000 		.word	soilHumPtr
 1287 0074 00000000 		.word	soilHumArray
 1288              		.cfi_endproc
 1289              	.LFE44:
 1290              		.size	inputSoilHum, .-inputSoilHum
 1291              		.section	.text.inputLight,"ax",%progbits
 1292              		.align	2
 1293              		.global	inputLight
 1294              		.code	16
 1295              		.thumb_func
 1296              		.type	inputLight, %function
 1297              	inputLight:
 1298              	.LFB45:
 258:.\DSP_Class.c **** 
 259:.\DSP_Class.c **** void inputLight(int32* light){
 1299              		.loc 1 259 0
 1300              		.cfi_startproc
 1301 0000 80B5     		push	{r7, lr}
 1302              		.cfi_def_cfa_offset 8
 1303              		.cfi_offset 7, -8
 1304              		.cfi_offset 14, -4
 1305 0002 82B0     		sub	sp, sp, #8
 1306              		.cfi_def_cfa_offset 16
 1307 0004 00AF     		add	r7, sp, #0
 1308              		.cfi_def_cfa_register 7
 1309 0006 7860     		str	r0, [r7, #4]
 260:.\DSP_Class.c ****     *lightArrayPtr = *light;        // The input value is written to the array
 1310              		.loc 1 260 0
 1311 0008 0B4B     		ldr	r3, .L97
 1312 000a 1B68     		ldr	r3, [r3]
 1313 000c 7A68     		ldr	r2, [r7, #4]
 1314 000e 1268     		ldr	r2, [r2]
 1315 0010 1A60     		str	r2, [r3]
 261:.\DSP_Class.c ****     lightArrayPtr++;                // The pointer is moved to the next place in array
 1316              		.loc 1 261 0
 1317 0012 094B     		ldr	r3, .L97
 1318 0014 1B68     		ldr	r3, [r3]
 1319 0016 1A1D     		add	r2, r3, #4
 1320 0018 074B     		ldr	r3, .L97
 1321 001a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 29


 262:.\DSP_Class.c ****     if(lightArrayPtr > &lightArray[ARRAYSIZE-1]){
 1322              		.loc 1 262 0
 1323 001c 064B     		ldr	r3, .L97
 1324 001e 1A68     		ldr	r2, [r3]
 1325 0020 064B     		ldr	r3, .L97+4
 1326 0022 9A42     		cmp	r2, r3
 1327 0024 02D9     		bls	.L96
 263:.\DSP_Class.c ****         lightArrayPtr = &lightArray[0];     // If the pointer is pointing past the end of the array
 1328              		.loc 1 263 0
 1329 0026 044B     		ldr	r3, .L97
 1330 0028 054A     		ldr	r2, .L97+8
 1331 002a 1A60     		str	r2, [r3]
 1332              	.L96:
 264:.\DSP_Class.c ****     }
 265:.\DSP_Class.c ****     
 266:.\DSP_Class.c ****     avgLight();      // The average value is calculated and onverted into hum(globel)
 1333              		.loc 1 266 0
 1334 002c FFF7FEFF 		bl	avgLight
 267:.\DSP_Class.c **** }
 1335              		.loc 1 267 0
 1336 0030 BD46     		mov	sp, r7
 1337 0032 02B0     		add	sp, sp, #8
 1338              		@ sp needed
 1339 0034 80BD     		pop	{r7, pc}
 1340              	.L98:
 1341 0036 C046     		.align	2
 1342              	.L97:
 1343 0038 00000000 		.word	lightArrayPtr
 1344 003c 04000000 		.word	lightArray+4
 1345 0040 00000000 		.word	lightArray
 1346              		.cfi_endproc
 1347              	.LFE45:
 1348              		.size	inputLight, .-inputLight
 1349              		.text
 1350              	.Letext0:
 1351              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 1352              		.section	.debug_info,"",%progbits
 1353              	.Ldebug_info0:
 1354 0000 07050000 		.4byte	0x507
 1355 0004 0400     		.2byte	0x4
 1356 0006 00000000 		.4byte	.Ldebug_abbrev0
 1357 000a 04       		.byte	0x4
 1358 000b 01       		.uleb128 0x1
 1359 000c 6A000000 		.4byte	.LASF47
 1360 0010 01       		.byte	0x1
 1361 0011 51020000 		.4byte	.LASF48
 1362 0015 13020000 		.4byte	.LASF49
 1363 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1364 001d 00000000 		.4byte	0
 1365 0021 00000000 		.4byte	.Ldebug_line0
 1366 0025 02       		.uleb128 0x2
 1367 0026 01       		.byte	0x1
 1368 0027 06       		.byte	0x6
 1369 0028 86020000 		.4byte	.LASF0
 1370 002c 02       		.uleb128 0x2
 1371 002d 01       		.byte	0x1
 1372 002e 08       		.byte	0x8
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 30


 1373 002f E6000000 		.4byte	.LASF1
 1374 0033 02       		.uleb128 0x2
 1375 0034 02       		.byte	0x2
 1376 0035 05       		.byte	0x5
 1377 0036 5F020000 		.4byte	.LASF2
 1378 003a 02       		.uleb128 0x2
 1379 003b 02       		.byte	0x2
 1380 003c 07       		.byte	0x7
 1381 003d 2E000000 		.4byte	.LASF3
 1382 0041 02       		.uleb128 0x2
 1383 0042 04       		.byte	0x4
 1384 0043 05       		.byte	0x5
 1385 0044 75020000 		.4byte	.LASF4
 1386 0048 02       		.uleb128 0x2
 1387 0049 04       		.byte	0x4
 1388 004a 07       		.byte	0x7
 1389 004b FE000000 		.4byte	.LASF5
 1390 004f 02       		.uleb128 0x2
 1391 0050 08       		.byte	0x8
 1392 0051 05       		.byte	0x5
 1393 0052 DB010000 		.4byte	.LASF6
 1394 0056 02       		.uleb128 0x2
 1395 0057 08       		.byte	0x8
 1396 0058 07       		.byte	0x7
 1397 0059 8A010000 		.4byte	.LASF7
 1398 005d 03       		.uleb128 0x3
 1399 005e 04       		.byte	0x4
 1400 005f 05       		.byte	0x5
 1401 0060 696E7400 		.ascii	"int\000"
 1402 0064 02       		.uleb128 0x2
 1403 0065 04       		.byte	0x4
 1404 0066 07       		.byte	0x7
 1405 0067 6C010000 		.4byte	.LASF8
 1406 006b 04       		.uleb128 0x4
 1407 006c 69020000 		.4byte	.LASF9
 1408 0070 02       		.byte	0x2
 1409 0071 A1       		.byte	0xa1
 1410 0072 2C000000 		.4byte	0x2c
 1411 0076 04       		.uleb128 0x4
 1412 0077 AC010000 		.4byte	.LASF10
 1413 007b 02       		.byte	0x2
 1414 007c A5       		.byte	0xa5
 1415 007d 33000000 		.4byte	0x33
 1416 0081 04       		.uleb128 0x4
 1417 0082 CC010000 		.4byte	.LASF11
 1418 0086 02       		.byte	0x2
 1419 0087 A6       		.byte	0xa6
 1420 0088 41000000 		.4byte	0x41
 1421 008c 02       		.uleb128 0x2
 1422 008d 04       		.byte	0x4
 1423 008e 04       		.byte	0x4
 1424 008f 64000000 		.4byte	.LASF12
 1425 0093 02       		.uleb128 0x2
 1426 0094 08       		.byte	0x8
 1427 0095 04       		.byte	0x4
 1428 0096 44010000 		.4byte	.LASF13
 1429 009a 04       		.uleb128 0x4
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 31


 1430 009b B6020000 		.4byte	.LASF14
 1431 009f 02       		.byte	0x2
 1432 00a0 AC       		.byte	0xac
 1433 00a1 4F000000 		.4byte	0x4f
 1434 00a5 02       		.uleb128 0x2
 1435 00a6 01       		.byte	0x1
 1436 00a7 08       		.byte	0x8
 1437 00a8 FD010000 		.4byte	.LASF15
 1438 00ac 02       		.uleb128 0x2
 1439 00ad 04       		.byte	0x4
 1440 00ae 07       		.byte	0x7
 1441 00af D2010000 		.4byte	.LASF16
 1442 00b3 05       		.uleb128 0x5
 1443 00b4 3C010000 		.4byte	.LASF20
 1444 00b8 01       		.byte	0x1
 1445 00b9 23       		.byte	0x23
 1446 00ba 00000000 		.4byte	.LFB33
 1447 00be 0C010000 		.4byte	.LFE33-.LFB33
 1448 00c2 01       		.uleb128 0x1
 1449 00c3 9C       		.byte	0x9c
 1450 00c4 0F010000 		.4byte	0x10f
 1451 00c8 06       		.uleb128 0x6
 1452 00c9 06000000 		.4byte	.LBB2
 1453 00cd 74000000 		.4byte	.LBE2-.LBB2
 1454 00d1 F8000000 		.4byte	0xf8
 1455 00d5 07       		.uleb128 0x7
 1456 00d6 6900     		.ascii	"i\000"
 1457 00d8 01       		.byte	0x1
 1458 00d9 25       		.byte	0x25
 1459 00da 6B000000 		.4byte	0x6b
 1460 00de 02       		.uleb128 0x2
 1461 00df 91       		.byte	0x91
 1462 00e0 77       		.sleb128 -9
 1463 00e1 08       		.uleb128 0x8
 1464 00e2 2A000000 		.4byte	.LBB3
 1465 00e6 30000000 		.4byte	.LBE3-.LBB3
 1466 00ea 07       		.uleb128 0x7
 1467 00eb 6A00     		.ascii	"j\000"
 1468 00ed 01       		.byte	0x1
 1469 00ee 2A       		.byte	0x2a
 1470 00ef 6B000000 		.4byte	0x6b
 1471 00f3 02       		.uleb128 0x2
 1472 00f4 91       		.byte	0x91
 1473 00f5 76       		.sleb128 -10
 1474 00f6 00       		.byte	0
 1475 00f7 00       		.byte	0
 1476 00f8 08       		.uleb128 0x8
 1477 00f9 86000000 		.4byte	.LBB4
 1478 00fd 38000000 		.4byte	.LBE4-.LBB4
 1479 0101 07       		.uleb128 0x7
 1480 0102 6B00     		.ascii	"k\000"
 1481 0104 01       		.byte	0x1
 1482 0105 36       		.byte	0x36
 1483 0106 6B000000 		.4byte	0x6b
 1484 010a 02       		.uleb128 0x2
 1485 010b 91       		.byte	0x91
 1486 010c 75       		.sleb128 -11
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 32


 1487 010d 00       		.byte	0
 1488 010e 00       		.byte	0
 1489 010f 09       		.uleb128 0x9
 1490 0110 10010000 		.4byte	.LASF17
 1491 0114 01       		.byte	0x1
 1492 0115 43       		.byte	0x43
 1493 0116 6B000000 		.4byte	0x6b
 1494 011a 00000000 		.4byte	.LFB34
 1495 011e 14000000 		.4byte	.LFE34-.LFB34
 1496 0122 01       		.uleb128 0x1
 1497 0123 9C       		.byte	0x9c
 1498 0124 09       		.uleb128 0x9
 1499 0125 5C010000 		.4byte	.LASF18
 1500 0129 01       		.byte	0x1
 1501 012a 48       		.byte	0x48
 1502 012b 6B000000 		.4byte	0x6b
 1503 012f 00000000 		.4byte	.LFB35
 1504 0133 14000000 		.4byte	.LFE35-.LFB35
 1505 0137 01       		.uleb128 0x1
 1506 0138 9C       		.byte	0x9c
 1507 0139 0A       		.uleb128 0xa
 1508 013a 24010000 		.4byte	.LASF50
 1509 013e 01       		.byte	0x1
 1510 013f 4C       		.byte	0x4c
 1511 0140 6B000000 		.4byte	0x6b
 1512 0144 00000000 		.4byte	.LFB36
 1513 0148 20000000 		.4byte	.LFE36-.LFB36
 1514 014c 01       		.uleb128 0x1
 1515 014d 9C       		.byte	0x9c
 1516 014e 61010000 		.4byte	0x161
 1517 0152 0B       		.uleb128 0xb
 1518 0153 0D020000 		.4byte	.LASF27
 1519 0157 01       		.byte	0x1
 1520 0158 4C       		.byte	0x4c
 1521 0159 6B000000 		.4byte	0x6b
 1522 015d 02       		.uleb128 0x2
 1523 015e 91       		.byte	0x91
 1524 015f 77       		.sleb128 -9
 1525 0160 00       		.byte	0
 1526 0161 09       		.uleb128 0x9
 1527 0162 BF010000 		.4byte	.LASF19
 1528 0166 01       		.byte	0x1
 1529 0167 50       		.byte	0x50
 1530 0168 6B000000 		.4byte	0x6b
 1531 016c 00000000 		.4byte	.LFB37
 1532 0170 14000000 		.4byte	.LFE37-.LFB37
 1533 0174 01       		.uleb128 0x1
 1534 0175 9C       		.byte	0x9c
 1535 0176 0C       		.uleb128 0xc
 1536 0177 7E020000 		.4byte	.LASF21
 1537 017b 01       		.byte	0x1
 1538 017c 55       		.byte	0x55
 1539 017d 00000000 		.4byte	.LFB38
 1540 0181 D8000000 		.4byte	.LFE38-.LFB38
 1541 0185 01       		.uleb128 0x1
 1542 0186 9C       		.byte	0x9c
 1543 0187 DA010000 		.4byte	0x1da
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 33


 1544 018b 0D       		.uleb128 0xd
 1545 018c 67010000 		.4byte	.LASF22
 1546 0190 01       		.byte	0x1
 1547 0191 56       		.byte	0x56
 1548 0192 6B000000 		.4byte	0x6b
 1549 0196 02       		.uleb128 0x2
 1550 0197 91       		.byte	0x91
 1551 0198 67       		.sleb128 -25
 1552 0199 0D       		.uleb128 0xd
 1553 019a 6F020000 		.4byte	.LASF23
 1554 019e 01       		.byte	0x1
 1555 019f 57       		.byte	0x57
 1556 01a0 9A000000 		.4byte	0x9a
 1557 01a4 02       		.uleb128 0x2
 1558 01a5 91       		.byte	0x91
 1559 01a6 58       		.sleb128 -40
 1560 01a7 06       		.uleb128 0x6
 1561 01a8 16000000 		.4byte	.LBB5
 1562 01ac 54000000 		.4byte	.LBE5-.LBB5
 1563 01b0 C1010000 		.4byte	0x1c1
 1564 01b4 07       		.uleb128 0x7
 1565 01b5 6900     		.ascii	"i\000"
 1566 01b7 01       		.byte	0x1
 1567 01b8 59       		.byte	0x59
 1568 01b9 6B000000 		.4byte	0x6b
 1569 01bd 02       		.uleb128 0x2
 1570 01be 91       		.byte	0x91
 1571 01bf 57       		.sleb128 -41
 1572 01c0 00       		.byte	0
 1573 01c1 08       		.uleb128 0x8
 1574 01c2 78000000 		.4byte	.LBB6
 1575 01c6 46000000 		.4byte	.LBE6-.LBB6
 1576 01ca 07       		.uleb128 0x7
 1577 01cb 61766700 		.ascii	"avg\000"
 1578 01cf 01       		.byte	0x1
 1579 01d0 65       		.byte	0x65
 1580 01d1 81000000 		.4byte	0x81
 1581 01d5 02       		.uleb128 0x2
 1582 01d6 91       		.byte	0x91
 1583 01d7 50       		.sleb128 -48
 1584 01d8 00       		.byte	0
 1585 01d9 00       		.byte	0
 1586 01da 0C       		.uleb128 0xc
 1587 01db 1B000000 		.4byte	.LASF24
 1588 01df 01       		.byte	0x1
 1589 01e0 78       		.byte	0x78
 1590 01e1 00000000 		.4byte	.LFB39
 1591 01e5 20010000 		.4byte	.LFE39-.LFB39
 1592 01e9 01       		.uleb128 0x1
 1593 01ea 9C       		.byte	0x9c
 1594 01eb 4C020000 		.4byte	0x24c
 1595 01ef 0D       		.uleb128 0xd
 1596 01f0 67010000 		.4byte	.LASF22
 1597 01f4 01       		.byte	0x1
 1598 01f5 79       		.byte	0x79
 1599 01f6 6B000000 		.4byte	0x6b
 1600 01fa 02       		.uleb128 0x2
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 34


 1601 01fb 91       		.byte	0x91
 1602 01fc 67       		.sleb128 -25
 1603 01fd 0D       		.uleb128 0xd
 1604 01fe 6F020000 		.4byte	.LASF23
 1605 0202 01       		.byte	0x1
 1606 0203 7A       		.byte	0x7a
 1607 0204 9A000000 		.4byte	0x9a
 1608 0208 02       		.uleb128 0x2
 1609 0209 91       		.byte	0x91
 1610 020a 58       		.sleb128 -40
 1611 020b 06       		.uleb128 0x6
 1612 020c 16000000 		.4byte	.LBB7
 1613 0210 60000000 		.4byte	.LBE7-.LBB7
 1614 0214 25020000 		.4byte	0x225
 1615 0218 07       		.uleb128 0x7
 1616 0219 6900     		.ascii	"i\000"
 1617 021b 01       		.byte	0x1
 1618 021c 7C       		.byte	0x7c
 1619 021d 6B000000 		.4byte	0x6b
 1620 0221 02       		.uleb128 0x2
 1621 0222 91       		.byte	0x91
 1622 0223 57       		.sleb128 -41
 1623 0224 00       		.byte	0
 1624 0225 08       		.uleb128 0x8
 1625 0226 84000000 		.4byte	.LBB8
 1626 022a 7A000000 		.4byte	.LBE8-.LBB8
 1627 022e 07       		.uleb128 0x7
 1628 022f 61766700 		.ascii	"avg\000"
 1629 0233 01       		.byte	0x1
 1630 0234 88       		.byte	0x88
 1631 0235 8C000000 		.4byte	0x8c
 1632 0239 02       		.uleb128 0x2
 1633 023a 91       		.byte	0x91
 1634 023b 50       		.sleb128 -48
 1635 023c 0D       		.uleb128 0xd
 1636 023d 1C010000 		.4byte	.LASF25
 1637 0241 01       		.byte	0x1
 1638 0242 89       		.byte	0x89
 1639 0243 8C000000 		.4byte	0x8c
 1640 0247 02       		.uleb128 0x2
 1641 0248 91       		.byte	0x91
 1642 0249 4C       		.sleb128 -52
 1643 024a 00       		.byte	0
 1644 024b 00       		.byte	0
 1645 024c 0C       		.uleb128 0xc
 1646 024d 02020000 		.4byte	.LASF26
 1647 0251 01       		.byte	0x1
 1648 0252 9B       		.byte	0x9b
 1649 0253 00000000 		.4byte	.LFB40
 1650 0257 34010000 		.4byte	.LFE40-.LFB40
 1651 025b 01       		.uleb128 0x1
 1652 025c 9C       		.byte	0x9c
 1653 025d CC020000 		.4byte	0x2cc
 1654 0261 0B       		.uleb128 0xb
 1655 0262 0D020000 		.4byte	.LASF27
 1656 0266 01       		.byte	0x1
 1657 0267 9B       		.byte	0x9b
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 35


 1658 0268 6B000000 		.4byte	0x6b
 1659 026c 02       		.uleb128 0x2
 1660 026d 91       		.byte	0x91
 1661 026e 47       		.sleb128 -57
 1662 026f 0D       		.uleb128 0xd
 1663 0270 67010000 		.4byte	.LASF22
 1664 0274 01       		.byte	0x1
 1665 0275 9C       		.byte	0x9c
 1666 0276 6B000000 		.4byte	0x6b
 1667 027a 02       		.uleb128 0x2
 1668 027b 91       		.byte	0x91
 1669 027c 67       		.sleb128 -25
 1670 027d 0D       		.uleb128 0xd
 1671 027e 6F020000 		.4byte	.LASF23
 1672 0282 01       		.byte	0x1
 1673 0283 9D       		.byte	0x9d
 1674 0284 9A000000 		.4byte	0x9a
 1675 0288 02       		.uleb128 0x2
 1676 0289 91       		.byte	0x91
 1677 028a 58       		.sleb128 -40
 1678 028b 06       		.uleb128 0x6
 1679 028c 1C000000 		.4byte	.LBB9
 1680 0290 74000000 		.4byte	.LBE9-.LBB9
 1681 0294 A5020000 		.4byte	0x2a5
 1682 0298 07       		.uleb128 0x7
 1683 0299 6900     		.ascii	"i\000"
 1684 029b 01       		.byte	0x1
 1685 029c 9F       		.byte	0x9f
 1686 029d 6B000000 		.4byte	0x6b
 1687 02a1 02       		.uleb128 0x2
 1688 02a2 91       		.byte	0x91
 1689 02a3 57       		.sleb128 -41
 1690 02a4 00       		.byte	0
 1691 02a5 08       		.uleb128 0x8
 1692 02a6 9E000000 		.4byte	.LBB10
 1693 02aa 76000000 		.4byte	.LBE10-.LBB10
 1694 02ae 07       		.uleb128 0x7
 1695 02af 61766700 		.ascii	"avg\000"
 1696 02b3 01       		.byte	0x1
 1697 02b4 AB       		.byte	0xab
 1698 02b5 8C000000 		.4byte	0x8c
 1699 02b9 02       		.uleb128 0x2
 1700 02ba 91       		.byte	0x91
 1701 02bb 4C       		.sleb128 -52
 1702 02bc 0D       		.uleb128 0xd
 1703 02bd 7E010000 		.4byte	.LASF28
 1704 02c1 01       		.byte	0x1
 1705 02c2 AC       		.byte	0xac
 1706 02c3 8C000000 		.4byte	0x8c
 1707 02c7 02       		.uleb128 0x2
 1708 02c8 91       		.byte	0x91
 1709 02c9 50       		.sleb128 -48
 1710 02ca 00       		.byte	0
 1711 02cb 00       		.byte	0
 1712 02cc 0C       		.uleb128 0xc
 1713 02cd 33010000 		.4byte	.LASF29
 1714 02d1 01       		.byte	0x1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 36


 1715 02d2 BC       		.byte	0xbc
 1716 02d3 00000000 		.4byte	.LFB41
 1717 02d7 24010000 		.4byte	.LFE41-.LFB41
 1718 02db 01       		.uleb128 0x1
 1719 02dc 9C       		.byte	0x9c
 1720 02dd 4C030000 		.4byte	0x34c
 1721 02e1 0D       		.uleb128 0xd
 1722 02e2 67010000 		.4byte	.LASF22
 1723 02e6 01       		.byte	0x1
 1724 02e7 BD       		.byte	0xbd
 1725 02e8 6B000000 		.4byte	0x6b
 1726 02ec 02       		.uleb128 0x2
 1727 02ed 91       		.byte	0x91
 1728 02ee 67       		.sleb128 -25
 1729 02ef 0D       		.uleb128 0xd
 1730 02f0 6F020000 		.4byte	.LASF23
 1731 02f4 01       		.byte	0x1
 1732 02f5 BE       		.byte	0xbe
 1733 02f6 9A000000 		.4byte	0x9a
 1734 02fa 02       		.uleb128 0x2
 1735 02fb 91       		.byte	0x91
 1736 02fc 58       		.sleb128 -40
 1737 02fd 06       		.uleb128 0x6
 1738 02fe 16000000 		.4byte	.LBB11
 1739 0302 60000000 		.4byte	.LBE11-.LBB11
 1740 0306 17030000 		.4byte	0x317
 1741 030a 07       		.uleb128 0x7
 1742 030b 6900     		.ascii	"i\000"
 1743 030d 01       		.byte	0x1
 1744 030e C0       		.byte	0xc0
 1745 030f 6B000000 		.4byte	0x6b
 1746 0313 02       		.uleb128 0x2
 1747 0314 91       		.byte	0x91
 1748 0315 57       		.sleb128 -41
 1749 0316 00       		.byte	0
 1750 0317 08       		.uleb128 0x8
 1751 0318 84000000 		.4byte	.LBB12
 1752 031c 86000000 		.4byte	.LBE12-.LBB12
 1753 0320 07       		.uleb128 0x7
 1754 0321 61766700 		.ascii	"avg\000"
 1755 0325 01       		.byte	0x1
 1756 0326 CC       		.byte	0xcc
 1757 0327 8C000000 		.4byte	0x8c
 1758 032b 02       		.uleb128 0x2
 1759 032c 91       		.byte	0x91
 1760 032d 50       		.sleb128 -48
 1761 032e 0D       		.uleb128 0xd
 1762 032f 59000000 		.4byte	.LASF30
 1763 0333 01       		.byte	0x1
 1764 0334 D0       		.byte	0xd0
 1765 0335 81000000 		.4byte	0x81
 1766 0339 02       		.uleb128 0x2
 1767 033a 91       		.byte	0x91
 1768 033b 4C       		.sleb128 -52
 1769 033c 0D       		.uleb128 0xd
 1770 033d E9010000 		.4byte	.LASF31
 1771 0341 01       		.byte	0x1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 37


 1772 0342 D2       		.byte	0xd2
 1773 0343 6B000000 		.4byte	0x6b
 1774 0347 02       		.uleb128 0x2
 1775 0348 91       		.byte	0x91
 1776 0349 56       		.sleb128 -42
 1777 034a 00       		.byte	0
 1778 034b 00       		.byte	0
 1779 034c 0C       		.uleb128 0xc
 1780 034d 06000000 		.4byte	.LASF32
 1781 0351 01       		.byte	0x1
 1782 0352 E3       		.byte	0xe3
 1783 0353 00000000 		.4byte	.LFB42
 1784 0357 44000000 		.4byte	.LFE42-.LFB42
 1785 035b 01       		.uleb128 0x1
 1786 035c 9C       		.byte	0x9c
 1787 035d 70030000 		.4byte	0x370
 1788 0361 0B       		.uleb128 0xb
 1789 0362 79010000 		.4byte	.LASF33
 1790 0366 01       		.byte	0x1
 1791 0367 E3       		.byte	0xe3
 1792 0368 70030000 		.4byte	0x370
 1793 036c 02       		.uleb128 0x2
 1794 036d 91       		.byte	0x91
 1795 036e 74       		.sleb128 -12
 1796 036f 00       		.byte	0
 1797 0370 0E       		.uleb128 0xe
 1798 0371 04       		.byte	0x4
 1799 0372 81000000 		.4byte	0x81
 1800 0376 0C       		.uleb128 0xc
 1801 0377 53010000 		.4byte	.LASF34
 1802 037b 01       		.byte	0x1
 1803 037c EE       		.byte	0xee
 1804 037d 00000000 		.4byte	.LFB43
 1805 0381 44000000 		.4byte	.LFE43-.LFB43
 1806 0385 01       		.uleb128 0x1
 1807 0386 9C       		.byte	0x9c
 1808 0387 9A030000 		.4byte	0x39a
 1809 038b 0F       		.uleb128 0xf
 1810 038c 68756D00 		.ascii	"hum\000"
 1811 0390 01       		.byte	0x1
 1812 0391 EE       		.byte	0xee
 1813 0392 70030000 		.4byte	0x370
 1814 0396 02       		.uleb128 0x2
 1815 0397 91       		.byte	0x91
 1816 0398 74       		.sleb128 -12
 1817 0399 00       		.byte	0
 1818 039a 0C       		.uleb128 0xc
 1819 039b 4C000000 		.4byte	.LASF35
 1820 039f 01       		.byte	0x1
 1821 03a0 F9       		.byte	0xf9
 1822 03a1 00000000 		.4byte	.LFB44
 1823 03a5 78000000 		.4byte	.LFE44-.LFB44
 1824 03a9 01       		.uleb128 0x1
 1825 03aa 9C       		.byte	0x9c
 1826 03ab CC030000 		.4byte	0x3cc
 1827 03af 0B       		.uleb128 0xb
 1828 03b0 0D020000 		.4byte	.LASF27
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 38


 1829 03b4 01       		.byte	0x1
 1830 03b5 F9       		.byte	0xf9
 1831 03b6 6B000000 		.4byte	0x6b
 1832 03ba 02       		.uleb128 0x2
 1833 03bb 91       		.byte	0x91
 1834 03bc 77       		.sleb128 -9
 1835 03bd 0B       		.uleb128 0xb
 1836 03be 4B010000 		.4byte	.LASF36
 1837 03c2 01       		.byte	0x1
 1838 03c3 F9       		.byte	0xf9
 1839 03c4 CC030000 		.4byte	0x3cc
 1840 03c8 02       		.uleb128 0x2
 1841 03c9 91       		.byte	0x91
 1842 03ca 70       		.sleb128 -16
 1843 03cb 00       		.byte	0
 1844 03cc 0E       		.uleb128 0xe
 1845 03cd 04       		.byte	0x4
 1846 03ce 76000000 		.4byte	0x76
 1847 03d2 10       		.uleb128 0x10
 1848 03d3 A1010000 		.4byte	.LASF37
 1849 03d7 01       		.byte	0x1
 1850 03d8 0301     		.2byte	0x103
 1851 03da 00000000 		.4byte	.LFB45
 1852 03de 44000000 		.4byte	.LFE45-.LFB45
 1853 03e2 01       		.uleb128 0x1
 1854 03e3 9C       		.byte	0x9c
 1855 03e4 F8030000 		.4byte	0x3f8
 1856 03e8 11       		.uleb128 0x11
 1857 03e9 00000000 		.4byte	.LASF38
 1858 03ed 01       		.byte	0x1
 1859 03ee 0301     		.2byte	0x103
 1860 03f0 70030000 		.4byte	0x370
 1861 03f4 02       		.uleb128 0x2
 1862 03f5 91       		.byte	0x91
 1863 03f6 74       		.sleb128 -12
 1864 03f7 00       		.byte	0
 1865 03f8 12       		.uleb128 0x12
 1866 03f9 81000000 		.4byte	0x81
 1867 03fd 08040000 		.4byte	0x408
 1868 0401 13       		.uleb128 0x13
 1869 0402 AC000000 		.4byte	0xac
 1870 0406 01       		.byte	0x1
 1871 0407 00       		.byte	0
 1872 0408 14       		.uleb128 0x14
 1873 0409 F4000000 		.4byte	.LASF39
 1874 040d 01       		.byte	0x1
 1875 040e 11       		.byte	0x11
 1876 040f F8030000 		.4byte	0x3f8
 1877 0413 05       		.uleb128 0x5
 1878 0414 03       		.byte	0x3
 1879 0415 00000000 		.4byte	tempArray
 1880 0419 14       		.uleb128 0x14
 1881 041a B2010000 		.4byte	.LASF40
 1882 041e 01       		.byte	0x1
 1883 041f 12       		.byte	0x12
 1884 0420 70030000 		.4byte	0x370
 1885 0424 05       		.uleb128 0x5
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 39


 1886 0425 03       		.byte	0x3
 1887 0426 00000000 		.4byte	tempArrayPtr
 1888 042a 14       		.uleb128 0x14
 1889 042b AD020000 		.4byte	.LASF41
 1890 042f 01       		.byte	0x1
 1891 0430 13       		.byte	0x13
 1892 0431 F8030000 		.4byte	0x3f8
 1893 0435 05       		.uleb128 0x5
 1894 0436 03       		.byte	0x3
 1895 0437 00000000 		.4byte	humArray
 1896 043b 14       		.uleb128 0x14
 1897 043c 22000000 		.4byte	.LASF42
 1898 0440 01       		.byte	0x1
 1899 0441 14       		.byte	0x14
 1900 0442 70030000 		.4byte	0x370
 1901 0446 05       		.uleb128 0x5
 1902 0447 03       		.byte	0x3
 1903 0448 00000000 		.4byte	humArrayPtr
 1904 044c 12       		.uleb128 0x12
 1905 044d 76000000 		.4byte	0x76
 1906 0451 62040000 		.4byte	0x462
 1907 0455 13       		.uleb128 0x13
 1908 0456 AC000000 		.4byte	0xac
 1909 045a 05       		.byte	0x5
 1910 045b 13       		.uleb128 0x13
 1911 045c AC000000 		.4byte	0xac
 1912 0460 01       		.byte	0x1
 1913 0461 00       		.byte	0
 1914 0462 14       		.uleb128 0x14
 1915 0463 92020000 		.4byte	.LASF43
 1916 0467 01       		.byte	0x1
 1917 0468 15       		.byte	0x15
 1918 0469 4C040000 		.4byte	0x44c
 1919 046d 05       		.uleb128 0x5
 1920 046e 03       		.byte	0x3
 1921 046f 00000000 		.4byte	soilHumArray
 1922 0473 12       		.uleb128 0x12
 1923 0474 CC030000 		.4byte	0x3cc
 1924 0478 83040000 		.4byte	0x483
 1925 047c 13       		.uleb128 0x13
 1926 047d AC000000 		.4byte	0xac
 1927 0481 05       		.byte	0x5
 1928 0482 00       		.byte	0
 1929 0483 14       		.uleb128 0x14
 1930 0484 10000000 		.4byte	.LASF44
 1931 0488 01       		.byte	0x1
 1932 0489 16       		.byte	0x16
 1933 048a 73040000 		.4byte	0x473
 1934 048e 05       		.uleb128 0x5
 1935 048f 03       		.byte	0x3
 1936 0490 00000000 		.4byte	soilHumPtr
 1937 0494 14       		.uleb128 0x14
 1938 0495 41000000 		.4byte	.LASF45
 1939 0499 01       		.byte	0x1
 1940 049a 17       		.byte	0x17
 1941 049b F8030000 		.4byte	0x3f8
 1942 049f 05       		.uleb128 0x5
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 40


 1943 04a0 03       		.byte	0x3
 1944 04a1 00000000 		.4byte	lightArray
 1945 04a5 14       		.uleb128 0x14
 1946 04a6 9F020000 		.4byte	.LASF46
 1947 04aa 01       		.byte	0x1
 1948 04ab 18       		.byte	0x18
 1949 04ac 70030000 		.4byte	0x370
 1950 04b0 05       		.uleb128 0x5
 1951 04b1 03       		.byte	0x3
 1952 04b2 00000000 		.4byte	lightArrayPtr
 1953 04b6 14       		.uleb128 0x14
 1954 04b7 79010000 		.4byte	.LASF33
 1955 04bb 01       		.byte	0x1
 1956 04bc 19       		.byte	0x19
 1957 04bd 6B000000 		.4byte	0x6b
 1958 04c1 05       		.uleb128 0x5
 1959 04c2 03       		.byte	0x3
 1960 04c3 00000000 		.4byte	temp
 1961 04c7 15       		.uleb128 0x15
 1962 04c8 68756D00 		.ascii	"hum\000"
 1963 04cc 01       		.byte	0x1
 1964 04cd 19       		.byte	0x19
 1965 04ce 6B000000 		.4byte	0x6b
 1966 04d2 05       		.uleb128 0x5
 1967 04d3 03       		.byte	0x3
 1968 04d4 00000000 		.4byte	hum
 1969 04d8 12       		.uleb128 0x12
 1970 04d9 6B000000 		.4byte	0x6b
 1971 04dd E8040000 		.4byte	0x4e8
 1972 04e1 13       		.uleb128 0x13
 1973 04e2 AC000000 		.4byte	0xac
 1974 04e6 05       		.byte	0x5
 1975 04e7 00       		.byte	0
 1976 04e8 14       		.uleb128 0x14
 1977 04e9 4B010000 		.4byte	.LASF36
 1978 04ed 01       		.byte	0x1
 1979 04ee 19       		.byte	0x19
 1980 04ef D8040000 		.4byte	0x4d8
 1981 04f3 05       		.uleb128 0x5
 1982 04f4 03       		.byte	0x3
 1983 04f5 00000000 		.4byte	soilHum
 1984 04f9 14       		.uleb128 0x14
 1985 04fa 00000000 		.4byte	.LASF38
 1986 04fe 01       		.byte	0x1
 1987 04ff 19       		.byte	0x19
 1988 0500 6B000000 		.4byte	0x6b
 1989 0504 05       		.uleb128 0x5
 1990 0505 03       		.byte	0x3
 1991 0506 00000000 		.4byte	light
 1992 050a 00       		.byte	0
 1993              		.section	.debug_abbrev,"",%progbits
 1994              	.Ldebug_abbrev0:
 1995 0000 01       		.uleb128 0x1
 1996 0001 11       		.uleb128 0x11
 1997 0002 01       		.byte	0x1
 1998 0003 25       		.uleb128 0x25
 1999 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 41


 2000 0005 13       		.uleb128 0x13
 2001 0006 0B       		.uleb128 0xb
 2002 0007 03       		.uleb128 0x3
 2003 0008 0E       		.uleb128 0xe
 2004 0009 1B       		.uleb128 0x1b
 2005 000a 0E       		.uleb128 0xe
 2006 000b 55       		.uleb128 0x55
 2007 000c 17       		.uleb128 0x17
 2008 000d 11       		.uleb128 0x11
 2009 000e 01       		.uleb128 0x1
 2010 000f 10       		.uleb128 0x10
 2011 0010 17       		.uleb128 0x17
 2012 0011 00       		.byte	0
 2013 0012 00       		.byte	0
 2014 0013 02       		.uleb128 0x2
 2015 0014 24       		.uleb128 0x24
 2016 0015 00       		.byte	0
 2017 0016 0B       		.uleb128 0xb
 2018 0017 0B       		.uleb128 0xb
 2019 0018 3E       		.uleb128 0x3e
 2020 0019 0B       		.uleb128 0xb
 2021 001a 03       		.uleb128 0x3
 2022 001b 0E       		.uleb128 0xe
 2023 001c 00       		.byte	0
 2024 001d 00       		.byte	0
 2025 001e 03       		.uleb128 0x3
 2026 001f 24       		.uleb128 0x24
 2027 0020 00       		.byte	0
 2028 0021 0B       		.uleb128 0xb
 2029 0022 0B       		.uleb128 0xb
 2030 0023 3E       		.uleb128 0x3e
 2031 0024 0B       		.uleb128 0xb
 2032 0025 03       		.uleb128 0x3
 2033 0026 08       		.uleb128 0x8
 2034 0027 00       		.byte	0
 2035 0028 00       		.byte	0
 2036 0029 04       		.uleb128 0x4
 2037 002a 16       		.uleb128 0x16
 2038 002b 00       		.byte	0
 2039 002c 03       		.uleb128 0x3
 2040 002d 0E       		.uleb128 0xe
 2041 002e 3A       		.uleb128 0x3a
 2042 002f 0B       		.uleb128 0xb
 2043 0030 3B       		.uleb128 0x3b
 2044 0031 0B       		.uleb128 0xb
 2045 0032 49       		.uleb128 0x49
 2046 0033 13       		.uleb128 0x13
 2047 0034 00       		.byte	0
 2048 0035 00       		.byte	0
 2049 0036 05       		.uleb128 0x5
 2050 0037 2E       		.uleb128 0x2e
 2051 0038 01       		.byte	0x1
 2052 0039 3F       		.uleb128 0x3f
 2053 003a 19       		.uleb128 0x19
 2054 003b 03       		.uleb128 0x3
 2055 003c 0E       		.uleb128 0xe
 2056 003d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 42


 2057 003e 0B       		.uleb128 0xb
 2058 003f 3B       		.uleb128 0x3b
 2059 0040 0B       		.uleb128 0xb
 2060 0041 27       		.uleb128 0x27
 2061 0042 19       		.uleb128 0x19
 2062 0043 11       		.uleb128 0x11
 2063 0044 01       		.uleb128 0x1
 2064 0045 12       		.uleb128 0x12
 2065 0046 06       		.uleb128 0x6
 2066 0047 40       		.uleb128 0x40
 2067 0048 18       		.uleb128 0x18
 2068 0049 9742     		.uleb128 0x2117
 2069 004b 19       		.uleb128 0x19
 2070 004c 01       		.uleb128 0x1
 2071 004d 13       		.uleb128 0x13
 2072 004e 00       		.byte	0
 2073 004f 00       		.byte	0
 2074 0050 06       		.uleb128 0x6
 2075 0051 0B       		.uleb128 0xb
 2076 0052 01       		.byte	0x1
 2077 0053 11       		.uleb128 0x11
 2078 0054 01       		.uleb128 0x1
 2079 0055 12       		.uleb128 0x12
 2080 0056 06       		.uleb128 0x6
 2081 0057 01       		.uleb128 0x1
 2082 0058 13       		.uleb128 0x13
 2083 0059 00       		.byte	0
 2084 005a 00       		.byte	0
 2085 005b 07       		.uleb128 0x7
 2086 005c 34       		.uleb128 0x34
 2087 005d 00       		.byte	0
 2088 005e 03       		.uleb128 0x3
 2089 005f 08       		.uleb128 0x8
 2090 0060 3A       		.uleb128 0x3a
 2091 0061 0B       		.uleb128 0xb
 2092 0062 3B       		.uleb128 0x3b
 2093 0063 0B       		.uleb128 0xb
 2094 0064 49       		.uleb128 0x49
 2095 0065 13       		.uleb128 0x13
 2096 0066 02       		.uleb128 0x2
 2097 0067 18       		.uleb128 0x18
 2098 0068 00       		.byte	0
 2099 0069 00       		.byte	0
 2100 006a 08       		.uleb128 0x8
 2101 006b 0B       		.uleb128 0xb
 2102 006c 01       		.byte	0x1
 2103 006d 11       		.uleb128 0x11
 2104 006e 01       		.uleb128 0x1
 2105 006f 12       		.uleb128 0x12
 2106 0070 06       		.uleb128 0x6
 2107 0071 00       		.byte	0
 2108 0072 00       		.byte	0
 2109 0073 09       		.uleb128 0x9
 2110 0074 2E       		.uleb128 0x2e
 2111 0075 00       		.byte	0
 2112 0076 3F       		.uleb128 0x3f
 2113 0077 19       		.uleb128 0x19
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 43


 2114 0078 03       		.uleb128 0x3
 2115 0079 0E       		.uleb128 0xe
 2116 007a 3A       		.uleb128 0x3a
 2117 007b 0B       		.uleb128 0xb
 2118 007c 3B       		.uleb128 0x3b
 2119 007d 0B       		.uleb128 0xb
 2120 007e 27       		.uleb128 0x27
 2121 007f 19       		.uleb128 0x19
 2122 0080 49       		.uleb128 0x49
 2123 0081 13       		.uleb128 0x13
 2124 0082 11       		.uleb128 0x11
 2125 0083 01       		.uleb128 0x1
 2126 0084 12       		.uleb128 0x12
 2127 0085 06       		.uleb128 0x6
 2128 0086 40       		.uleb128 0x40
 2129 0087 18       		.uleb128 0x18
 2130 0088 9742     		.uleb128 0x2117
 2131 008a 19       		.uleb128 0x19
 2132 008b 00       		.byte	0
 2133 008c 00       		.byte	0
 2134 008d 0A       		.uleb128 0xa
 2135 008e 2E       		.uleb128 0x2e
 2136 008f 01       		.byte	0x1
 2137 0090 3F       		.uleb128 0x3f
 2138 0091 19       		.uleb128 0x19
 2139 0092 03       		.uleb128 0x3
 2140 0093 0E       		.uleb128 0xe
 2141 0094 3A       		.uleb128 0x3a
 2142 0095 0B       		.uleb128 0xb
 2143 0096 3B       		.uleb128 0x3b
 2144 0097 0B       		.uleb128 0xb
 2145 0098 27       		.uleb128 0x27
 2146 0099 19       		.uleb128 0x19
 2147 009a 49       		.uleb128 0x49
 2148 009b 13       		.uleb128 0x13
 2149 009c 11       		.uleb128 0x11
 2150 009d 01       		.uleb128 0x1
 2151 009e 12       		.uleb128 0x12
 2152 009f 06       		.uleb128 0x6
 2153 00a0 40       		.uleb128 0x40
 2154 00a1 18       		.uleb128 0x18
 2155 00a2 9742     		.uleb128 0x2117
 2156 00a4 19       		.uleb128 0x19
 2157 00a5 01       		.uleb128 0x1
 2158 00a6 13       		.uleb128 0x13
 2159 00a7 00       		.byte	0
 2160 00a8 00       		.byte	0
 2161 00a9 0B       		.uleb128 0xb
 2162 00aa 05       		.uleb128 0x5
 2163 00ab 00       		.byte	0
 2164 00ac 03       		.uleb128 0x3
 2165 00ad 0E       		.uleb128 0xe
 2166 00ae 3A       		.uleb128 0x3a
 2167 00af 0B       		.uleb128 0xb
 2168 00b0 3B       		.uleb128 0x3b
 2169 00b1 0B       		.uleb128 0xb
 2170 00b2 49       		.uleb128 0x49
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 44


 2171 00b3 13       		.uleb128 0x13
 2172 00b4 02       		.uleb128 0x2
 2173 00b5 18       		.uleb128 0x18
 2174 00b6 00       		.byte	0
 2175 00b7 00       		.byte	0
 2176 00b8 0C       		.uleb128 0xc
 2177 00b9 2E       		.uleb128 0x2e
 2178 00ba 01       		.byte	0x1
 2179 00bb 3F       		.uleb128 0x3f
 2180 00bc 19       		.uleb128 0x19
 2181 00bd 03       		.uleb128 0x3
 2182 00be 0E       		.uleb128 0xe
 2183 00bf 3A       		.uleb128 0x3a
 2184 00c0 0B       		.uleb128 0xb
 2185 00c1 3B       		.uleb128 0x3b
 2186 00c2 0B       		.uleb128 0xb
 2187 00c3 27       		.uleb128 0x27
 2188 00c4 19       		.uleb128 0x19
 2189 00c5 11       		.uleb128 0x11
 2190 00c6 01       		.uleb128 0x1
 2191 00c7 12       		.uleb128 0x12
 2192 00c8 06       		.uleb128 0x6
 2193 00c9 40       		.uleb128 0x40
 2194 00ca 18       		.uleb128 0x18
 2195 00cb 9642     		.uleb128 0x2116
 2196 00cd 19       		.uleb128 0x19
 2197 00ce 01       		.uleb128 0x1
 2198 00cf 13       		.uleb128 0x13
 2199 00d0 00       		.byte	0
 2200 00d1 00       		.byte	0
 2201 00d2 0D       		.uleb128 0xd
 2202 00d3 34       		.uleb128 0x34
 2203 00d4 00       		.byte	0
 2204 00d5 03       		.uleb128 0x3
 2205 00d6 0E       		.uleb128 0xe
 2206 00d7 3A       		.uleb128 0x3a
 2207 00d8 0B       		.uleb128 0xb
 2208 00d9 3B       		.uleb128 0x3b
 2209 00da 0B       		.uleb128 0xb
 2210 00db 49       		.uleb128 0x49
 2211 00dc 13       		.uleb128 0x13
 2212 00dd 02       		.uleb128 0x2
 2213 00de 18       		.uleb128 0x18
 2214 00df 00       		.byte	0
 2215 00e0 00       		.byte	0
 2216 00e1 0E       		.uleb128 0xe
 2217 00e2 0F       		.uleb128 0xf
 2218 00e3 00       		.byte	0
 2219 00e4 0B       		.uleb128 0xb
 2220 00e5 0B       		.uleb128 0xb
 2221 00e6 49       		.uleb128 0x49
 2222 00e7 13       		.uleb128 0x13
 2223 00e8 00       		.byte	0
 2224 00e9 00       		.byte	0
 2225 00ea 0F       		.uleb128 0xf
 2226 00eb 05       		.uleb128 0x5
 2227 00ec 00       		.byte	0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 45


 2228 00ed 03       		.uleb128 0x3
 2229 00ee 08       		.uleb128 0x8
 2230 00ef 3A       		.uleb128 0x3a
 2231 00f0 0B       		.uleb128 0xb
 2232 00f1 3B       		.uleb128 0x3b
 2233 00f2 0B       		.uleb128 0xb
 2234 00f3 49       		.uleb128 0x49
 2235 00f4 13       		.uleb128 0x13
 2236 00f5 02       		.uleb128 0x2
 2237 00f6 18       		.uleb128 0x18
 2238 00f7 00       		.byte	0
 2239 00f8 00       		.byte	0
 2240 00f9 10       		.uleb128 0x10
 2241 00fa 2E       		.uleb128 0x2e
 2242 00fb 01       		.byte	0x1
 2243 00fc 3F       		.uleb128 0x3f
 2244 00fd 19       		.uleb128 0x19
 2245 00fe 03       		.uleb128 0x3
 2246 00ff 0E       		.uleb128 0xe
 2247 0100 3A       		.uleb128 0x3a
 2248 0101 0B       		.uleb128 0xb
 2249 0102 3B       		.uleb128 0x3b
 2250 0103 05       		.uleb128 0x5
 2251 0104 27       		.uleb128 0x27
 2252 0105 19       		.uleb128 0x19
 2253 0106 11       		.uleb128 0x11
 2254 0107 01       		.uleb128 0x1
 2255 0108 12       		.uleb128 0x12
 2256 0109 06       		.uleb128 0x6
 2257 010a 40       		.uleb128 0x40
 2258 010b 18       		.uleb128 0x18
 2259 010c 9642     		.uleb128 0x2116
 2260 010e 19       		.uleb128 0x19
 2261 010f 01       		.uleb128 0x1
 2262 0110 13       		.uleb128 0x13
 2263 0111 00       		.byte	0
 2264 0112 00       		.byte	0
 2265 0113 11       		.uleb128 0x11
 2266 0114 05       		.uleb128 0x5
 2267 0115 00       		.byte	0
 2268 0116 03       		.uleb128 0x3
 2269 0117 0E       		.uleb128 0xe
 2270 0118 3A       		.uleb128 0x3a
 2271 0119 0B       		.uleb128 0xb
 2272 011a 3B       		.uleb128 0x3b
 2273 011b 05       		.uleb128 0x5
 2274 011c 49       		.uleb128 0x49
 2275 011d 13       		.uleb128 0x13
 2276 011e 02       		.uleb128 0x2
 2277 011f 18       		.uleb128 0x18
 2278 0120 00       		.byte	0
 2279 0121 00       		.byte	0
 2280 0122 12       		.uleb128 0x12
 2281 0123 01       		.uleb128 0x1
 2282 0124 01       		.byte	0x1
 2283 0125 49       		.uleb128 0x49
 2284 0126 13       		.uleb128 0x13
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 46


 2285 0127 01       		.uleb128 0x1
 2286 0128 13       		.uleb128 0x13
 2287 0129 00       		.byte	0
 2288 012a 00       		.byte	0
 2289 012b 13       		.uleb128 0x13
 2290 012c 21       		.uleb128 0x21
 2291 012d 00       		.byte	0
 2292 012e 49       		.uleb128 0x49
 2293 012f 13       		.uleb128 0x13
 2294 0130 2F       		.uleb128 0x2f
 2295 0131 0B       		.uleb128 0xb
 2296 0132 00       		.byte	0
 2297 0133 00       		.byte	0
 2298 0134 14       		.uleb128 0x14
 2299 0135 34       		.uleb128 0x34
 2300 0136 00       		.byte	0
 2301 0137 03       		.uleb128 0x3
 2302 0138 0E       		.uleb128 0xe
 2303 0139 3A       		.uleb128 0x3a
 2304 013a 0B       		.uleb128 0xb
 2305 013b 3B       		.uleb128 0x3b
 2306 013c 0B       		.uleb128 0xb
 2307 013d 49       		.uleb128 0x49
 2308 013e 13       		.uleb128 0x13
 2309 013f 3F       		.uleb128 0x3f
 2310 0140 19       		.uleb128 0x19
 2311 0141 02       		.uleb128 0x2
 2312 0142 18       		.uleb128 0x18
 2313 0143 00       		.byte	0
 2314 0144 00       		.byte	0
 2315 0145 15       		.uleb128 0x15
 2316 0146 34       		.uleb128 0x34
 2317 0147 00       		.byte	0
 2318 0148 03       		.uleb128 0x3
 2319 0149 08       		.uleb128 0x8
 2320 014a 3A       		.uleb128 0x3a
 2321 014b 0B       		.uleb128 0xb
 2322 014c 3B       		.uleb128 0x3b
 2323 014d 0B       		.uleb128 0xb
 2324 014e 49       		.uleb128 0x49
 2325 014f 13       		.uleb128 0x13
 2326 0150 3F       		.uleb128 0x3f
 2327 0151 19       		.uleb128 0x19
 2328 0152 02       		.uleb128 0x2
 2329 0153 18       		.uleb128 0x18
 2330 0154 00       		.byte	0
 2331 0155 00       		.byte	0
 2332 0156 00       		.byte	0
 2333              		.section	.debug_aranges,"",%progbits
 2334 0000 7C000000 		.4byte	0x7c
 2335 0004 0200     		.2byte	0x2
 2336 0006 00000000 		.4byte	.Ldebug_info0
 2337 000a 04       		.byte	0x4
 2338 000b 00       		.byte	0
 2339 000c 0000     		.2byte	0
 2340 000e 0000     		.2byte	0
 2341 0010 00000000 		.4byte	.LFB33
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 47


 2342 0014 0C010000 		.4byte	.LFE33-.LFB33
 2343 0018 00000000 		.4byte	.LFB34
 2344 001c 14000000 		.4byte	.LFE34-.LFB34
 2345 0020 00000000 		.4byte	.LFB35
 2346 0024 14000000 		.4byte	.LFE35-.LFB35
 2347 0028 00000000 		.4byte	.LFB36
 2348 002c 20000000 		.4byte	.LFE36-.LFB36
 2349 0030 00000000 		.4byte	.LFB37
 2350 0034 14000000 		.4byte	.LFE37-.LFB37
 2351 0038 00000000 		.4byte	.LFB38
 2352 003c D8000000 		.4byte	.LFE38-.LFB38
 2353 0040 00000000 		.4byte	.LFB39
 2354 0044 20010000 		.4byte	.LFE39-.LFB39
 2355 0048 00000000 		.4byte	.LFB40
 2356 004c 34010000 		.4byte	.LFE40-.LFB40
 2357 0050 00000000 		.4byte	.LFB41
 2358 0054 24010000 		.4byte	.LFE41-.LFB41
 2359 0058 00000000 		.4byte	.LFB42
 2360 005c 44000000 		.4byte	.LFE42-.LFB42
 2361 0060 00000000 		.4byte	.LFB43
 2362 0064 44000000 		.4byte	.LFE43-.LFB43
 2363 0068 00000000 		.4byte	.LFB44
 2364 006c 78000000 		.4byte	.LFE44-.LFB44
 2365 0070 00000000 		.4byte	.LFB45
 2366 0074 44000000 		.4byte	.LFE45-.LFB45
 2367 0078 00000000 		.4byte	0
 2368 007c 00000000 		.4byte	0
 2369              		.section	.debug_ranges,"",%progbits
 2370              	.Ldebug_ranges0:
 2371 0000 00000000 		.4byte	.LFB33
 2372 0004 0C010000 		.4byte	.LFE33
 2373 0008 00000000 		.4byte	.LFB34
 2374 000c 14000000 		.4byte	.LFE34
 2375 0010 00000000 		.4byte	.LFB35
 2376 0014 14000000 		.4byte	.LFE35
 2377 0018 00000000 		.4byte	.LFB36
 2378 001c 20000000 		.4byte	.LFE36
 2379 0020 00000000 		.4byte	.LFB37
 2380 0024 14000000 		.4byte	.LFE37
 2381 0028 00000000 		.4byte	.LFB38
 2382 002c D8000000 		.4byte	.LFE38
 2383 0030 00000000 		.4byte	.LFB39
 2384 0034 20010000 		.4byte	.LFE39
 2385 0038 00000000 		.4byte	.LFB40
 2386 003c 34010000 		.4byte	.LFE40
 2387 0040 00000000 		.4byte	.LFB41
 2388 0044 24010000 		.4byte	.LFE41
 2389 0048 00000000 		.4byte	.LFB42
 2390 004c 44000000 		.4byte	.LFE42
 2391 0050 00000000 		.4byte	.LFB43
 2392 0054 44000000 		.4byte	.LFE43
 2393 0058 00000000 		.4byte	.LFB44
 2394 005c 78000000 		.4byte	.LFE44
 2395 0060 00000000 		.4byte	.LFB45
 2396 0064 44000000 		.4byte	.LFE45
 2397 0068 00000000 		.4byte	0
 2398 006c 00000000 		.4byte	0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 48


 2399              		.section	.debug_line,"",%progbits
 2400              	.Ldebug_line0:
 2401 0000 F4010000 		.section	.debug_str,"MS",%progbits,1
 2401      02004A00 
 2401      00000201 
 2401      FB0E0D00 
 2401      01010101 
 2402              	.LASF38:
 2403 0000 6C696768 		.ascii	"light\000"
 2403      7400
 2404              	.LASF32:
 2405 0006 696E7075 		.ascii	"inputTemp\000"
 2405      7454656D 
 2405      7000
 2406              	.LASF44:
 2407 0010 736F696C 		.ascii	"soilHumPtr\000"
 2407      48756D50 
 2407      747200
 2408              	.LASF24:
 2409 001b 61766748 		.ascii	"avgHum\000"
 2409      756D00
 2410              	.LASF42:
 2411 0022 68756D41 		.ascii	"humArrayPtr\000"
 2411      72726179 
 2411      50747200 
 2412              	.LASF3:
 2413 002e 73686F72 		.ascii	"short unsigned int\000"
 2413      7420756E 
 2413      7369676E 
 2413      65642069 
 2413      6E7400
 2414              	.LASF45:
 2415 0041 6C696768 		.ascii	"lightArray\000"
 2415      74417272 
 2415      617900
 2416              	.LASF35:
 2417 004c 696E7075 		.ascii	"inputSoilHum\000"
 2417      74536F69 
 2417      6C48756D 
 2417      00
 2418              	.LASF30:
 2419 0059 6C696768 		.ascii	"lightInLux\000"
 2419      74496E4C 
 2419      757800
 2420              	.LASF12:
 2421 0064 666C6F61 		.ascii	"float\000"
 2421      7400
 2422              	.LASF47:
 2423 006a 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2423      4320342E 
 2423      382E3420 
 2423      32303134 
 2423      30353236 
 2424 009d 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2424      20726576 
 2424      6973696F 
 2424      6E203231 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 49


 2424      31333538 
 2425 00d0 30202D66 		.ascii	"0 -ffunction-sections\000"
 2425      66756E63 
 2425      74696F6E 
 2425      2D736563 
 2425      74696F6E 
 2426              	.LASF1:
 2427 00e6 756E7369 		.ascii	"unsigned char\000"
 2427      676E6564 
 2427      20636861 
 2427      7200
 2428              	.LASF39:
 2429 00f4 74656D70 		.ascii	"tempArray\000"
 2429      41727261 
 2429      7900
 2430              	.LASF5:
 2431 00fe 6C6F6E67 		.ascii	"long unsigned int\000"
 2431      20756E73 
 2431      69676E65 
 2431      6420696E 
 2431      7400
 2432              	.LASF17:
 2433 0110 67657454 		.ascii	"getTemp_DSP\000"
 2433      656D705F 
 2433      44535000 
 2434              	.LASF25:
 2435 011c 68756D49 		.ascii	"humInRH\000"
 2435      6E524800 
 2436              	.LASF50:
 2437 0124 67657453 		.ascii	"getSoilHum_DSP\000"
 2437      6F696C48 
 2437      756D5F44 
 2437      535000
 2438              	.LASF29:
 2439 0133 6176674C 		.ascii	"avgLight\000"
 2439      69676874 
 2439      00
 2440              	.LASF20:
 2441 013c 696E6974 		.ascii	"initDSP\000"
 2441      44535000 
 2442              	.LASF13:
 2443 0144 646F7562 		.ascii	"double\000"
 2443      6C6500
 2444              	.LASF36:
 2445 014b 736F696C 		.ascii	"soilHum\000"
 2445      48756D00 
 2446              	.LASF34:
 2447 0153 696E7075 		.ascii	"inputHum\000"
 2447      7448756D 
 2447      00
 2448              	.LASF18:
 2449 015c 67657448 		.ascii	"getHum_DSP\000"
 2449      756D5F44 
 2449      535000
 2450              	.LASF22:
 2451 0167 736B6970 		.ascii	"skip\000"
 2451      00
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 50


 2452              	.LASF8:
 2453 016c 756E7369 		.ascii	"unsigned int\000"
 2453      676E6564 
 2453      20696E74 
 2453      00
 2454              	.LASF33:
 2455 0179 74656D70 		.ascii	"temp\000"
 2455      00
 2456              	.LASF28:
 2457 017e 736F696C 		.ascii	"soilHumInRH\000"
 2457      48756D49 
 2457      6E524800 
 2458              	.LASF7:
 2459 018a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2459      206C6F6E 
 2459      6720756E 
 2459      7369676E 
 2459      65642069 
 2460              	.LASF37:
 2461 01a1 696E7075 		.ascii	"inputLight\000"
 2461      744C6967 
 2461      687400
 2462              	.LASF10:
 2463 01ac 696E7431 		.ascii	"int16\000"
 2463      3600
 2464              	.LASF40:
 2465 01b2 74656D70 		.ascii	"tempArrayPtr\000"
 2465      41727261 
 2465      79507472 
 2465      00
 2466              	.LASF19:
 2467 01bf 6765744C 		.ascii	"getLight_DSP\000"
 2467      69676874 
 2467      5F445350 
 2467      00
 2468              	.LASF11:
 2469 01cc 696E7433 		.ascii	"int32\000"
 2469      3200
 2470              	.LASF16:
 2471 01d2 73697A65 		.ascii	"sizetype\000"
 2471      74797065 
 2471      00
 2472              	.LASF6:
 2473 01db 6C6F6E67 		.ascii	"long long int\000"
 2473      206C6F6E 
 2473      6720696E 
 2473      7400
 2474              	.LASF31:
 2475 01e9 6C696768 		.ascii	"lightInUartVarSteps\000"
 2475      74496E55 
 2475      61727456 
 2475      61725374 
 2475      65707300 
 2476              	.LASF15:
 2477 01fd 63686172 		.ascii	"char\000"
 2477      00
 2478              	.LASF26:
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 51


 2479 0202 61766753 		.ascii	"avgSoilHum\000"
 2479      6F696C48 
 2479      756D00
 2480              	.LASF27:
 2481 020d 696E6465 		.ascii	"index\000"
 2481      7800
 2482              	.LASF49:
 2483 0213 433A5C55 		.ascii	"C:\\Users\\Philip\\OneDrive\\GitHub\\PSoC_Master\\P"
 2483      73657273 
 2483      5C506869 
 2483      6C69705C 
 2483      4F6E6544 
 2484 0240 536F435F 		.ascii	"SoC_Master.cydsn\000"
 2484      4D617374 
 2484      65722E63 
 2484      7964736E 
 2484      00
 2485              	.LASF48:
 2486 0251 2E5C4453 		.ascii	".\\DSP_Class.c\000"
 2486      505F436C 
 2486      6173732E 
 2486      6300
 2487              	.LASF2:
 2488 025f 73686F72 		.ascii	"short int\000"
 2488      7420696E 
 2488      7400
 2489              	.LASF9:
 2490 0269 75696E74 		.ascii	"uint8\000"
 2490      3800
 2491              	.LASF23:
 2492 026f 746F7461 		.ascii	"total\000"
 2492      6C00
 2493              	.LASF4:
 2494 0275 6C6F6E67 		.ascii	"long int\000"
 2494      20696E74 
 2494      00
 2495              	.LASF21:
 2496 027e 61766754 		.ascii	"avgTemp\000"
 2496      656D7000 
 2497              	.LASF0:
 2498 0286 7369676E 		.ascii	"signed char\000"
 2498      65642063 
 2498      68617200 
 2499              	.LASF43:
 2500 0292 736F696C 		.ascii	"soilHumArray\000"
 2500      48756D41 
 2500      72726179 
 2500      00
 2501              	.LASF46:
 2502 029f 6C696768 		.ascii	"lightArrayPtr\000"
 2502      74417272 
 2502      61795074 
 2502      7200
 2503              	.LASF41:
 2504 02ad 68756D41 		.ascii	"humArray\000"
 2504      72726179 
 2504      00
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLzzQWv.s 			page 52


 2505              	.LASF14:
 2506 02b6 696E7436 		.ascii	"int64\000"
 2506      3400
 2507              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
