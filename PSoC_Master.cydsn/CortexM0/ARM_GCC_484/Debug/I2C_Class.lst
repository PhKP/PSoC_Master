ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"I2C_Class.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	irrigationStatus
  18              		.bss
  19              		.type	irrigationStatus, %object
  20              		.size	irrigationStatus, 1
  21              	irrigationStatus:
  22 0000 00       		.space	1
  23              		.data
  24              		.align	2
  25              		.type	size, %object
  26              		.size	size, 4
  27              	size:
  28 0000 01000000 		.word	1
  29              		.section	.text.initI2C,"ax",%progbits
  30              		.align	2
  31              		.global	initI2C
  32              		.code	16
  33              		.thumb_func
  34              		.type	initI2C, %function
  35              	initI2C:
  36              	.LFB33:
  37              		.file 1 ".\\I2C_Class.c"
   1:.\I2C_Class.c **** /* ========================================
   2:.\I2C_Class.c ****  * 
   3:.\I2C_Class.c ****  * AutoGreen - PSoC_Master
   4:.\I2C_Class.c ****  * I2C_Class.c
   5:.\I2C_Class.c ****  * (Description)
   6:.\I2C_Class.c ****  * PRJ3 - GRP9
   7:.\I2C_Class.c ****  * 2015-04-15
   8:.\I2C_Class.c ****  *
   9:.\I2C_Class.c ****  * ========================================
  10:.\I2C_Class.c **** */
  11:.\I2C_Class.c **** 
  12:.\I2C_Class.c **** // Include files
  13:.\I2C_Class.c **** #include "I2C_Class.h"
  14:.\I2C_Class.c **** 
  15:.\I2C_Class.c **** // Definitions
  16:.\I2C_Class.c **** #define TEMP_SENSOR_ADDRESS 0x48            // For LM75 temp sensor with A0 = 0, A1 = 0 and A3 = 0
  17:.\I2C_Class.c **** #define SOILHUM_SENSOR_ADDRESS 0x32
  18:.\I2C_Class.c **** #define ACTUATOR_ADRESS 0x42
  19:.\I2C_Class.c **** //#define debugging // Uncomment to enable debugging
  20:.\I2C_Class.c **** 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 2


  21:.\I2C_Class.c **** // Private data members
  22:.\I2C_Class.c **** uint8 irrigationStatus = 0;
  23:.\I2C_Class.c **** 
  24:.\I2C_Class.c **** // Private prototypes
  25:.\I2C_Class.c **** 
  26:.\I2C_Class.c **** // Buffers / flags
  27:.\I2C_Class.c **** static int size = 1;
  28:.\I2C_Class.c **** 
  29:.\I2C_Class.c **** void initI2C(void){
  38              		.loc 1 29 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  30:.\I2C_Class.c ****     I2C_Start();                    // Starts I2C component
  46              		.loc 1 30 0
  47 0004 FFF7FEFF 		bl	I2C_Start
  31:.\I2C_Class.c ****     I2C_I2CMasterClearStatus();     // Clear status flags
  48              		.loc 1 31 0
  49 0008 FFF7FEFF 		bl	I2C_I2CMasterClearStatus
  32:.\I2C_Class.c ****     CyGlobalIntEnable;
  50              		.loc 1 32 0
  51              	@ 32 ".\I2C_Class.c" 1
  52 000c 62B6     		CPSIE   i
  53              	@ 0 "" 2
  33:.\I2C_Class.c ****     
  34:.\I2C_Class.c **** }
  54              		.loc 1 34 0
  55              		.code	16
  56 000e BD46     		mov	sp, r7
  57              		@ sp needed
  58 0010 80BD     		pop	{r7, pc}
  59              		.cfi_endproc
  60              	.LFE33:
  61              		.size	initI2C, .-initI2C
  62 0012 C046     		.section	.text.adjustWindow,"ax",%progbits
  63              		.align	2
  64              		.global	adjustWindow
  65              		.code	16
  66              		.thumb_func
  67              		.type	adjustWindow, %function
  68              	adjustWindow:
  69              	.LFB34:
  35:.\I2C_Class.c **** 
  36:.\I2C_Class.c **** int8 adjustWindow(uint8 pos){
  70              		.loc 1 36 0
  71              		.cfi_startproc
  72 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  73              		.cfi_def_cfa_offset 20
  74              		.cfi_offset 4, -20
  75              		.cfi_offset 5, -16
  76              		.cfi_offset 6, -12
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 3


  79 0002 97B0     		sub	sp, sp, #92
  80              		.cfi_def_cfa_offset 112
  81 0004 00AF     		add	r7, sp, #0
  82              		.cfi_def_cfa_register 7
  83 0006 031C     		mov	r3, r0
  84 0008 3A1C     		mov	r2, r7
  85 000a 3F32     		add	r2, r2, #63
  86 000c 1370     		strb	r3, [r2]
  87 000e 6B46     		mov	r3, sp
  88 0010 1E1C     		mov	r6, r3
  37:.\I2C_Class.c ****     uint8 openWindow[size], closeWindow[size];
  89              		.loc 1 37 0
  90 0012 594B     		ldr	r3, .L11
  91 0014 1A68     		ldr	r2, [r3]
  92 0016 531E     		sub	r3, r2, #1
  93 0018 3B65     		str	r3, [r7, #80]
  94 001a 131C     		mov	r3, r2
  95 001c 1C1C     		mov	r4, r3
  96 001e 0023     		mov	r3, #0
  97 0020 1D1C     		mov	r5, r3
  98 0022 630F     		lsr	r3, r4, #29
  99 0024 E900     		lsl	r1, r5, #3
 100 0026 7963     		str	r1, [r7, #52]
 101 0028 796B     		ldr	r1, [r7, #52]
 102 002a 1943     		orr	r1, r3
 103 002c 7963     		str	r1, [r7, #52]
 104 002e E300     		lsl	r3, r4, #3
 105 0030 131C     		mov	r3, r2
 106 0032 BB62     		str	r3, [r7, #40]
 107 0034 0023     		mov	r3, #0
 108 0036 FB62     		str	r3, [r7, #44]
 109 0038 B96A     		ldr	r1, [r7, #40]
 110 003a 4B0F     		lsr	r3, r1, #29
 111 003c F96A     		ldr	r1, [r7, #44]
 112 003e C900     		lsl	r1, r1, #3
 113 0040 7962     		str	r1, [r7, #36]
 114 0042 796A     		ldr	r1, [r7, #36]
 115 0044 1943     		orr	r1, r3
 116 0046 7962     		str	r1, [r7, #36]
 117 0048 BB6A     		ldr	r3, [r7, #40]
 118 004a DB00     		lsl	r3, r3, #3
 119 004c 131C     		mov	r3, r2
 120 004e 0733     		add	r3, r3, #7
 121 0050 DB08     		lsr	r3, r3, #3
 122 0052 DB00     		lsl	r3, r3, #3
 123 0054 6946     		mov	r1, sp
 124 0056 C91A     		sub	r1, r1, r3
 125 0058 8D46     		mov	sp, r1
 126 005a 6B46     		mov	r3, sp
 127 005c 0033     		add	r3, r3, #0
 128 005e FB64     		str	r3, [r7, #76]
 129 0060 454B     		ldr	r3, .L11
 130 0062 1B68     		ldr	r3, [r3]
 131 0064 5A1E     		sub	r2, r3, #1
 132 0066 BA64     		str	r2, [r7, #72]
 133 0068 1A1C     		mov	r2, r3
 134 006a BA61     		str	r2, [r7, #24]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 4


 135 006c 0022     		mov	r2, #0
 136 006e FA61     		str	r2, [r7, #28]
 137 0070 B969     		ldr	r1, [r7, #24]
 138 0072 4A0F     		lsr	r2, r1, #29
 139 0074 F969     		ldr	r1, [r7, #28]
 140 0076 C900     		lsl	r1, r1, #3
 141 0078 7961     		str	r1, [r7, #20]
 142 007a 7969     		ldr	r1, [r7, #20]
 143 007c 1143     		orr	r1, r2
 144 007e 7961     		str	r1, [r7, #20]
 145 0080 BA69     		ldr	r2, [r7, #24]
 146 0082 D200     		lsl	r2, r2, #3
 147 0084 1A1C     		mov	r2, r3
 148 0086 BA60     		str	r2, [r7, #8]
 149 0088 0022     		mov	r2, #0
 150 008a FA60     		str	r2, [r7, #12]
 151 008c B968     		ldr	r1, [r7, #8]
 152 008e 4A0F     		lsr	r2, r1, #29
 153 0090 F968     		ldr	r1, [r7, #12]
 154 0092 C900     		lsl	r1, r1, #3
 155 0094 7960     		str	r1, [r7, #4]
 156 0096 7968     		ldr	r1, [r7, #4]
 157 0098 1143     		orr	r1, r2
 158 009a 7960     		str	r1, [r7, #4]
 159 009c BA68     		ldr	r2, [r7, #8]
 160 009e D200     		lsl	r2, r2, #3
 161 00a0 0733     		add	r3, r3, #7
 162 00a2 DB08     		lsr	r3, r3, #3
 163 00a4 DB00     		lsl	r3, r3, #3
 164 00a6 6946     		mov	r1, sp
 165 00a8 C91A     		sub	r1, r1, r3
 166 00aa 8D46     		mov	sp, r1
 167 00ac 6B46     		mov	r3, sp
 168 00ae 0033     		add	r3, r3, #0
 169 00b0 7B64     		str	r3, [r7, #68]
  38:.\I2C_Class.c ****     openWindow[0] = 0xF;
 170              		.loc 1 38 0
 171 00b2 FB6C     		ldr	r3, [r7, #76]
 172 00b4 0F22     		mov	r2, #15
 173 00b6 1A70     		strb	r2, [r3]
  39:.\I2C_Class.c ****     closeWindow[0] = 0x0;
 174              		.loc 1 39 0
 175 00b8 7B6C     		ldr	r3, [r7, #68]
 176 00ba 0022     		mov	r2, #0
 177 00bc 1A70     		strb	r2, [r3]
  40:.\I2C_Class.c ****     uint8 result = 0;
 178              		.loc 1 40 0
 179 00be 3B1C     		mov	r3, r7
 180 00c0 5733     		add	r3, r3, #87
 181 00c2 0022     		mov	r2, #0
 182 00c4 1A70     		strb	r2, [r3]
  41:.\I2C_Class.c ****     uint8 tempWindow = 0;
 183              		.loc 1 41 0
 184 00c6 3B1C     		mov	r3, r7
 185 00c8 4333     		add	r3, r3, #67
 186 00ca 0022     		mov	r2, #0
 187 00cc 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 5


  42:.\I2C_Class.c ****         
  43:.\I2C_Class.c ****     if(pos == 0xFF){
 188              		.loc 1 43 0
 189 00ce 3B1C     		mov	r3, r7
 190 00d0 3F33     		add	r3, r3, #63
 191 00d2 1B78     		ldrb	r3, [r3]
 192 00d4 FF2B     		cmp	r3, #255
 193 00d6 0DD1     		bne	.L3
  44:.\I2C_Class.c ****         // Open window     -                write function  (adress,      dataToSend, NumberOfBytes
  45:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,openWindow,size,I2C_I2C_MODE_COMPLETE_XFER);
 194              		.loc 1 45 0
 195 00d8 FA6C     		ldr	r2, [r7, #76]
 196 00da 274B     		ldr	r3, .L11
 197 00dc 1B68     		ldr	r3, [r3]
 198 00de 4220     		mov	r0, #66
 199 00e0 111C     		mov	r1, r2
 200 00e2 1A1C     		mov	r2, r3
 201 00e4 0023     		mov	r3, #0
 202 00e6 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 203 00ea 021C     		mov	r2, r0
 204 00ec 3B1C     		mov	r3, r7
 205 00ee 5733     		add	r3, r3, #87
 206 00f0 1A70     		strb	r2, [r3]
 207 00f2 12E0     		b	.L4
 208              	.L3:
  46:.\I2C_Class.c ****     }
  47:.\I2C_Class.c ****     else if(pos == 0x0){
 209              		.loc 1 47 0
 210 00f4 3B1C     		mov	r3, r7
 211 00f6 3F33     		add	r3, r3, #63
 212 00f8 1B78     		ldrb	r3, [r3]
 213 00fa 002B     		cmp	r3, #0
 214 00fc 0DD1     		bne	.L4
  48:.\I2C_Class.c ****         // Close window
  49:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,closeWindow,size,I2C_I2C_MODE_COMPLETE_XFER)
 215              		.loc 1 49 0
 216 00fe 7A6C     		ldr	r2, [r7, #68]
 217 0100 1D4B     		ldr	r3, .L11
 218 0102 1B68     		ldr	r3, [r3]
 219 0104 4220     		mov	r0, #66
 220 0106 111C     		mov	r1, r2
 221 0108 1A1C     		mov	r2, r3
 222 010a 0023     		mov	r3, #0
 223 010c FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 224 0110 021C     		mov	r2, r0
 225 0112 3B1C     		mov	r3, r7
 226 0114 5733     		add	r3, r3, #87
 227 0116 1A70     		strb	r2, [r3]
  50:.\I2C_Class.c ****     }
  51:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 228              		.loc 1 51 0
 229 0118 FFE7     		b	.L10
 230              	.L4:
 231              	.L10:
 232 011a C046     		mov	r8, r8
 233              	.L5:
 234              		.loc 1 51 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 6


 235 011c FFF7FEFF 		bl	I2C_I2CMasterStatus
 236 0120 021C     		mov	r2, r0
 237 0122 0223     		mov	r3, #2
 238 0124 1340     		and	r3, r2
 239 0126 F9D0     		beq	.L5
  52:.\I2C_Class.c ****     CyDelay(60);
 240              		.loc 1 52 0 is_stmt 1
 241 0128 3C20     		mov	r0, #60
 242 012a FFF7FEFF 		bl	CyDelay
  53:.\I2C_Class.c ****     
  54:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(&tempWindow, NULL, NULL, NULL))){
 243              		.loc 1 54 0
 244 012e 3B1C     		mov	r3, r7
 245 0130 5733     		add	r3, r3, #87
 246 0132 1B78     		ldrb	r3, [r3]
 247 0134 002B     		cmp	r3, #0
 248 0136 18D1     		bne	.L6
 249              		.loc 1 54 0 is_stmt 0 discriminator 1
 250 0138 3B1C     		mov	r3, r7
 251 013a 4333     		add	r3, r3, #67
 252 013c 181C     		mov	r0, r3
 253 013e 0021     		mov	r1, #0
 254 0140 0022     		mov	r2, #0
 255 0142 0023     		mov	r3, #0
 256 0144 FFF7FEFF 		bl	getActuatorStatus
 257 0148 031C     		mov	r3, r0
 258 014a 002B     		cmp	r3, #0
 259 014c 0DD1     		bne	.L6
  55:.\I2C_Class.c ****         if (tempWindow == pos >> 4 ){  //hacky solution when dealing with fully open/closed window
 260              		.loc 1 55 0 is_stmt 1
 261 014e 3B1C     		mov	r3, r7
 262 0150 3F33     		add	r3, r3, #63
 263 0152 1B78     		ldrb	r3, [r3]
 264 0154 1B09     		lsr	r3, r3, #4
 265 0156 DAB2     		uxtb	r2, r3
 266 0158 3B1C     		mov	r3, r7
 267 015a 4333     		add	r3, r3, #67
 268 015c 1B78     		ldrb	r3, [r3]
 269 015e 9A42     		cmp	r2, r3
 270 0160 01D1     		bne	.L7
  56:.\I2C_Class.c ****             return 0;	
 271              		.loc 1 56 0
 272 0162 0023     		mov	r3, #0
 273 0164 02E0     		b	.L8
 274              	.L7:
  57:.\I2C_Class.c ****         }
  58:.\I2C_Class.c ****         else {
  59:.\I2C_Class.c ****             return -1;
 275              		.loc 1 59 0
 276 0166 FF23     		mov	r3, #255
 277 0168 00E0     		b	.L8
 278              	.L6:
  60:.\I2C_Class.c ****         }
  61:.\I2C_Class.c ****     }
  62:.\I2C_Class.c ****     else {
  63:.\I2C_Class.c ****         return -1;
 279              		.loc 1 63 0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 7


 280 016a FF23     		mov	r3, #255
 281              	.L8:
 282 016c B546     		mov	sp, r6
 283 016e 5BB2     		sxtb	r3, r3
  64:.\I2C_Class.c ****     }
  65:.\I2C_Class.c **** }
 284              		.loc 1 65 0
 285 0170 181C     		mov	r0, r3
 286 0172 BD46     		mov	sp, r7
 287 0174 17B0     		add	sp, sp, #92
 288              		@ sp needed
 289 0176 F0BD     		pop	{r4, r5, r6, r7, pc}
 290              	.L12:
 291              		.align	2
 292              	.L11:
 293 0178 00000000 		.word	size
 294              		.cfi_endproc
 295              	.LFE34:
 296              		.size	adjustWindow, .-adjustWindow
 297              		.section	.text.adjustHeat,"ax",%progbits
 298              		.align	2
 299              		.global	adjustHeat
 300              		.code	16
 301              		.thumb_func
 302              		.type	adjustHeat, %function
 303              	adjustHeat:
 304              	.LFB35:
  66:.\I2C_Class.c **** 
  67:.\I2C_Class.c **** int8 adjustHeat(uint8 heat){
 305              		.loc 1 67 0
 306              		.cfi_startproc
 307 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 308              		.cfi_def_cfa_offset 20
 309              		.cfi_offset 4, -20
 310              		.cfi_offset 5, -16
 311              		.cfi_offset 6, -12
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
 314 0002 97B0     		sub	sp, sp, #92
 315              		.cfi_def_cfa_offset 112
 316 0004 00AF     		add	r7, sp, #0
 317              		.cfi_def_cfa_register 7
 318 0006 031C     		mov	r3, r0
 319 0008 3A1C     		mov	r2, r7
 320 000a 3F32     		add	r2, r2, #63
 321 000c 1370     		strb	r3, [r2]
 322 000e 6B46     		mov	r3, sp
 323 0010 1E1C     		mov	r6, r3
  68:.\I2C_Class.c ****     uint8 turnHeatOn[size], turnOffHeat[size];
 324              		.loc 1 68 0
 325 0012 594B     		ldr	r3, .L22
 326 0014 1A68     		ldr	r2, [r3]
 327 0016 531E     		sub	r3, r2, #1
 328 0018 3B65     		str	r3, [r7, #80]
 329 001a 131C     		mov	r3, r2
 330 001c 1C1C     		mov	r4, r3
 331 001e 0023     		mov	r3, #0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 8


 332 0020 1D1C     		mov	r5, r3
 333 0022 630F     		lsr	r3, r4, #29
 334 0024 E900     		lsl	r1, r5, #3
 335 0026 7963     		str	r1, [r7, #52]
 336 0028 796B     		ldr	r1, [r7, #52]
 337 002a 1943     		orr	r1, r3
 338 002c 7963     		str	r1, [r7, #52]
 339 002e E300     		lsl	r3, r4, #3
 340 0030 131C     		mov	r3, r2
 341 0032 BB62     		str	r3, [r7, #40]
 342 0034 0023     		mov	r3, #0
 343 0036 FB62     		str	r3, [r7, #44]
 344 0038 B96A     		ldr	r1, [r7, #40]
 345 003a 4B0F     		lsr	r3, r1, #29
 346 003c F96A     		ldr	r1, [r7, #44]
 347 003e C900     		lsl	r1, r1, #3
 348 0040 7962     		str	r1, [r7, #36]
 349 0042 796A     		ldr	r1, [r7, #36]
 350 0044 1943     		orr	r1, r3
 351 0046 7962     		str	r1, [r7, #36]
 352 0048 BB6A     		ldr	r3, [r7, #40]
 353 004a DB00     		lsl	r3, r3, #3
 354 004c 131C     		mov	r3, r2
 355 004e 0733     		add	r3, r3, #7
 356 0050 DB08     		lsr	r3, r3, #3
 357 0052 DB00     		lsl	r3, r3, #3
 358 0054 6946     		mov	r1, sp
 359 0056 C91A     		sub	r1, r1, r3
 360 0058 8D46     		mov	sp, r1
 361 005a 6B46     		mov	r3, sp
 362 005c 0033     		add	r3, r3, #0
 363 005e FB64     		str	r3, [r7, #76]
 364 0060 454B     		ldr	r3, .L22
 365 0062 1B68     		ldr	r3, [r3]
 366 0064 5A1E     		sub	r2, r3, #1
 367 0066 BA64     		str	r2, [r7, #72]
 368 0068 1A1C     		mov	r2, r3
 369 006a BA61     		str	r2, [r7, #24]
 370 006c 0022     		mov	r2, #0
 371 006e FA61     		str	r2, [r7, #28]
 372 0070 B969     		ldr	r1, [r7, #24]
 373 0072 4A0F     		lsr	r2, r1, #29
 374 0074 F969     		ldr	r1, [r7, #28]
 375 0076 C900     		lsl	r1, r1, #3
 376 0078 7961     		str	r1, [r7, #20]
 377 007a 7969     		ldr	r1, [r7, #20]
 378 007c 1143     		orr	r1, r2
 379 007e 7961     		str	r1, [r7, #20]
 380 0080 BA69     		ldr	r2, [r7, #24]
 381 0082 D200     		lsl	r2, r2, #3
 382 0084 1A1C     		mov	r2, r3
 383 0086 BA60     		str	r2, [r7, #8]
 384 0088 0022     		mov	r2, #0
 385 008a FA60     		str	r2, [r7, #12]
 386 008c B968     		ldr	r1, [r7, #8]
 387 008e 4A0F     		lsr	r2, r1, #29
 388 0090 F968     		ldr	r1, [r7, #12]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 9


 389 0092 C900     		lsl	r1, r1, #3
 390 0094 7960     		str	r1, [r7, #4]
 391 0096 7968     		ldr	r1, [r7, #4]
 392 0098 1143     		orr	r1, r2
 393 009a 7960     		str	r1, [r7, #4]
 394 009c BA68     		ldr	r2, [r7, #8]
 395 009e D200     		lsl	r2, r2, #3
 396 00a0 0733     		add	r3, r3, #7
 397 00a2 DB08     		lsr	r3, r3, #3
 398 00a4 DB00     		lsl	r3, r3, #3
 399 00a6 6946     		mov	r1, sp
 400 00a8 C91A     		sub	r1, r1, r3
 401 00aa 8D46     		mov	sp, r1
 402 00ac 6B46     		mov	r3, sp
 403 00ae 0033     		add	r3, r3, #0
 404 00b0 7B64     		str	r3, [r7, #68]
  69:.\I2C_Class.c ****     turnHeatOn[0] = 0b01000111;
 405              		.loc 1 69 0
 406 00b2 FB6C     		ldr	r3, [r7, #76]
 407 00b4 4722     		mov	r2, #71
 408 00b6 1A70     		strb	r2, [r3]
  70:.\I2C_Class.c ****     turnOffHeat[0] = 0b01000000;
 409              		.loc 1 70 0
 410 00b8 7B6C     		ldr	r3, [r7, #68]
 411 00ba 4022     		mov	r2, #64
 412 00bc 1A70     		strb	r2, [r3]
  71:.\I2C_Class.c ****     uint8 result = 0;
 413              		.loc 1 71 0
 414 00be 3B1C     		mov	r3, r7
 415 00c0 5733     		add	r3, r3, #87
 416 00c2 0022     		mov	r2, #0
 417 00c4 1A70     		strb	r2, [r3]
  72:.\I2C_Class.c ****     uint8 temp = 0xFF;
 418              		.loc 1 72 0
 419 00c6 3B1C     		mov	r3, r7
 420 00c8 4333     		add	r3, r3, #67
 421 00ca FF22     		mov	r2, #255
 422 00cc 1A70     		strb	r2, [r3]
  73:.\I2C_Class.c ****     
  74:.\I2C_Class.c ****     I2C_I2CMasterClearStatus();
 423              		.loc 1 74 0
 424 00ce FFF7FEFF 		bl	I2C_I2CMasterClearStatus
  75:.\I2C_Class.c ****     
  76:.\I2C_Class.c ****     if(heat == 0b111){
 425              		.loc 1 76 0
 426 00d2 3B1C     		mov	r3, r7
 427 00d4 3F33     		add	r3, r3, #63
 428 00d6 1B78     		ldrb	r3, [r3]
 429 00d8 072B     		cmp	r3, #7
 430 00da 0DD1     		bne	.L14
  77:.\I2C_Class.c ****         // Turn on heat
  78:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnHeatOn,size,I2C_I2C_MODE_COMPLETE_XFER);
 431              		.loc 1 78 0
 432 00dc FA6C     		ldr	r2, [r7, #76]
 433 00de 264B     		ldr	r3, .L22
 434 00e0 1B68     		ldr	r3, [r3]
 435 00e2 4220     		mov	r0, #66
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 10


 436 00e4 111C     		mov	r1, r2
 437 00e6 1A1C     		mov	r2, r3
 438 00e8 0023     		mov	r3, #0
 439 00ea FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 440 00ee 021C     		mov	r2, r0
 441 00f0 3B1C     		mov	r3, r7
 442 00f2 5733     		add	r3, r3, #87
 443 00f4 1A70     		strb	r2, [r3]
 444 00f6 12E0     		b	.L15
 445              	.L14:
  79:.\I2C_Class.c ****     }
  80:.\I2C_Class.c ****     else if(heat == 0b0){
 446              		.loc 1 80 0
 447 00f8 3B1C     		mov	r3, r7
 448 00fa 3F33     		add	r3, r3, #63
 449 00fc 1B78     		ldrb	r3, [r3]
 450 00fe 002B     		cmp	r3, #0
 451 0100 0DD1     		bne	.L15
  81:.\I2C_Class.c ****         // Turn off heat
  82:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOffHeat,size,I2C_I2C_MODE_COMPLETE_XFER)
 452              		.loc 1 82 0
 453 0102 7A6C     		ldr	r2, [r7, #68]
 454 0104 1C4B     		ldr	r3, .L22
 455 0106 1B68     		ldr	r3, [r3]
 456 0108 4220     		mov	r0, #66
 457 010a 111C     		mov	r1, r2
 458 010c 1A1C     		mov	r2, r3
 459 010e 0023     		mov	r3, #0
 460 0110 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 461 0114 021C     		mov	r2, r0
 462 0116 3B1C     		mov	r3, r7
 463 0118 5733     		add	r3, r3, #87
 464 011a 1A70     		strb	r2, [r3]
  83:.\I2C_Class.c ****     }
  84:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 465              		.loc 1 84 0
 466 011c FFE7     		b	.L21
 467              	.L15:
 468              	.L21:
 469 011e C046     		mov	r8, r8
 470              	.L16:
 471              		.loc 1 84 0 is_stmt 0 discriminator 1
 472 0120 FFF7FEFF 		bl	I2C_I2CMasterStatus
 473 0124 021C     		mov	r2, r0
 474 0126 0223     		mov	r3, #2
 475 0128 1340     		and	r3, r2
 476 012a F9D0     		beq	.L16
  85:.\I2C_Class.c ****     CyDelay(60);
 477              		.loc 1 85 0 is_stmt 1
 478 012c 3C20     		mov	r0, #60
 479 012e FFF7FEFF 		bl	CyDelay
  86:.\I2C_Class.c **** 
  87:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(NULL, &temp, NULL, NULL))){
 480              		.loc 1 87 0
 481 0132 3B1C     		mov	r3, r7
 482 0134 5733     		add	r3, r3, #87
 483 0136 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 11


 484 0138 002B     		cmp	r3, #0
 485 013a 16D1     		bne	.L17
 486              		.loc 1 87 0 is_stmt 0 discriminator 1
 487 013c 3B1C     		mov	r3, r7
 488 013e 4333     		add	r3, r3, #67
 489 0140 0020     		mov	r0, #0
 490 0142 191C     		mov	r1, r3
 491 0144 0022     		mov	r2, #0
 492 0146 0023     		mov	r3, #0
 493 0148 FFF7FEFF 		bl	getActuatorStatus
 494 014c 031C     		mov	r3, r0
 495 014e 002B     		cmp	r3, #0
 496 0150 0BD1     		bne	.L17
  88:.\I2C_Class.c ****         if (temp == heat){
 497              		.loc 1 88 0 is_stmt 1
 498 0152 3B1C     		mov	r3, r7
 499 0154 4333     		add	r3, r3, #67
 500 0156 1B78     		ldrb	r3, [r3]
 501 0158 3A1C     		mov	r2, r7
 502 015a 3F32     		add	r2, r2, #63
 503 015c 1278     		ldrb	r2, [r2]
 504 015e 9A42     		cmp	r2, r3
 505 0160 01D1     		bne	.L18
  89:.\I2C_Class.c ****             return 0;
 506              		.loc 1 89 0
 507 0162 0023     		mov	r3, #0
 508 0164 02E0     		b	.L19
 509              	.L18:
  90:.\I2C_Class.c ****         }
  91:.\I2C_Class.c ****         else {
  92:.\I2C_Class.c ****             return -1;   
 510              		.loc 1 92 0
 511 0166 FF23     		mov	r3, #255
 512 0168 00E0     		b	.L19
 513              	.L17:
  93:.\I2C_Class.c ****         }
  94:.\I2C_Class.c ****     }
  95:.\I2C_Class.c ****     else {
  96:.\I2C_Class.c ****         return -1;
 514              		.loc 1 96 0
 515 016a FF23     		mov	r3, #255
 516              	.L19:
 517 016c B546     		mov	sp, r6
 518 016e 5BB2     		sxtb	r3, r3
  97:.\I2C_Class.c ****     }
  98:.\I2C_Class.c **** }
 519              		.loc 1 98 0
 520 0170 181C     		mov	r0, r3
 521 0172 BD46     		mov	sp, r7
 522 0174 17B0     		add	sp, sp, #92
 523              		@ sp needed
 524 0176 F0BD     		pop	{r4, r5, r6, r7, pc}
 525              	.L23:
 526              		.align	2
 527              	.L22:
 528 0178 00000000 		.word	size
 529              		.cfi_endproc
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 12


 530              	.LFE35:
 531              		.size	adjustHeat, .-adjustHeat
 532              		.section	.text.adjustVentilation,"ax",%progbits
 533              		.align	2
 534              		.global	adjustVentilation
 535              		.code	16
 536              		.thumb_func
 537              		.type	adjustVentilation, %function
 538              	adjustVentilation:
 539              	.LFB36:
  99:.\I2C_Class.c **** 
 100:.\I2C_Class.c **** int8 adjustVentilation(uint8 speed){
 540              		.loc 1 100 0
 541              		.cfi_startproc
 542 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 543              		.cfi_def_cfa_offset 20
 544              		.cfi_offset 4, -20
 545              		.cfi_offset 5, -16
 546              		.cfi_offset 6, -12
 547              		.cfi_offset 7, -8
 548              		.cfi_offset 14, -4
 549 0002 97B0     		sub	sp, sp, #92
 550              		.cfi_def_cfa_offset 112
 551 0004 00AF     		add	r7, sp, #0
 552              		.cfi_def_cfa_register 7
 553 0006 031C     		mov	r3, r0
 554 0008 3A1C     		mov	r2, r7
 555 000a 3F32     		add	r2, r2, #63
 556 000c 1370     		strb	r3, [r2]
 557 000e 6B46     		mov	r3, sp
 558 0010 1E1C     		mov	r6, r3
 101:.\I2C_Class.c ****     uint8 turnOnVent[size], turnOffVent[size];
 559              		.loc 1 101 0
 560 0012 594B     		ldr	r3, .L33
 561 0014 1A68     		ldr	r2, [r3]
 562 0016 531E     		sub	r3, r2, #1
 563 0018 3B65     		str	r3, [r7, #80]
 564 001a 131C     		mov	r3, r2
 565 001c 1C1C     		mov	r4, r3
 566 001e 0023     		mov	r3, #0
 567 0020 1D1C     		mov	r5, r3
 568 0022 630F     		lsr	r3, r4, #29
 569 0024 E900     		lsl	r1, r5, #3
 570 0026 7963     		str	r1, [r7, #52]
 571 0028 796B     		ldr	r1, [r7, #52]
 572 002a 1943     		orr	r1, r3
 573 002c 7963     		str	r1, [r7, #52]
 574 002e E300     		lsl	r3, r4, #3
 575 0030 131C     		mov	r3, r2
 576 0032 BB62     		str	r3, [r7, #40]
 577 0034 0023     		mov	r3, #0
 578 0036 FB62     		str	r3, [r7, #44]
 579 0038 B96A     		ldr	r1, [r7, #40]
 580 003a 4B0F     		lsr	r3, r1, #29
 581 003c F96A     		ldr	r1, [r7, #44]
 582 003e C900     		lsl	r1, r1, #3
 583 0040 7962     		str	r1, [r7, #36]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 13


 584 0042 796A     		ldr	r1, [r7, #36]
 585 0044 1943     		orr	r1, r3
 586 0046 7962     		str	r1, [r7, #36]
 587 0048 BB6A     		ldr	r3, [r7, #40]
 588 004a DB00     		lsl	r3, r3, #3
 589 004c 131C     		mov	r3, r2
 590 004e 0733     		add	r3, r3, #7
 591 0050 DB08     		lsr	r3, r3, #3
 592 0052 DB00     		lsl	r3, r3, #3
 593 0054 6946     		mov	r1, sp
 594 0056 C91A     		sub	r1, r1, r3
 595 0058 8D46     		mov	sp, r1
 596 005a 6B46     		mov	r3, sp
 597 005c 0033     		add	r3, r3, #0
 598 005e FB64     		str	r3, [r7, #76]
 599 0060 454B     		ldr	r3, .L33
 600 0062 1B68     		ldr	r3, [r3]
 601 0064 5A1E     		sub	r2, r3, #1
 602 0066 BA64     		str	r2, [r7, #72]
 603 0068 1A1C     		mov	r2, r3
 604 006a BA61     		str	r2, [r7, #24]
 605 006c 0022     		mov	r2, #0
 606 006e FA61     		str	r2, [r7, #28]
 607 0070 B969     		ldr	r1, [r7, #24]
 608 0072 4A0F     		lsr	r2, r1, #29
 609 0074 F969     		ldr	r1, [r7, #28]
 610 0076 C900     		lsl	r1, r1, #3
 611 0078 7961     		str	r1, [r7, #20]
 612 007a 7969     		ldr	r1, [r7, #20]
 613 007c 1143     		orr	r1, r2
 614 007e 7961     		str	r1, [r7, #20]
 615 0080 BA69     		ldr	r2, [r7, #24]
 616 0082 D200     		lsl	r2, r2, #3
 617 0084 1A1C     		mov	r2, r3
 618 0086 BA60     		str	r2, [r7, #8]
 619 0088 0022     		mov	r2, #0
 620 008a FA60     		str	r2, [r7, #12]
 621 008c B968     		ldr	r1, [r7, #8]
 622 008e 4A0F     		lsr	r2, r1, #29
 623 0090 F968     		ldr	r1, [r7, #12]
 624 0092 C900     		lsl	r1, r1, #3
 625 0094 7960     		str	r1, [r7, #4]
 626 0096 7968     		ldr	r1, [r7, #4]
 627 0098 1143     		orr	r1, r2
 628 009a 7960     		str	r1, [r7, #4]
 629 009c BA68     		ldr	r2, [r7, #8]
 630 009e D200     		lsl	r2, r2, #3
 631 00a0 0733     		add	r3, r3, #7
 632 00a2 DB08     		lsr	r3, r3, #3
 633 00a4 DB00     		lsl	r3, r3, #3
 634 00a6 6946     		mov	r1, sp
 635 00a8 C91A     		sub	r1, r1, r3
 636 00aa 8D46     		mov	sp, r1
 637 00ac 6B46     		mov	r3, sp
 638 00ae 0033     		add	r3, r3, #0
 639 00b0 7B64     		str	r3, [r7, #68]
 102:.\I2C_Class.c ****     turnOnVent[0] = 0b10000111;
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 14


 640              		.loc 1 102 0
 641 00b2 FB6C     		ldr	r3, [r7, #76]
 642 00b4 8722     		mov	r2, #135
 643 00b6 1A70     		strb	r2, [r3]
 103:.\I2C_Class.c ****     turnOffVent[0] = 0b10000000;
 644              		.loc 1 103 0
 645 00b8 7B6C     		ldr	r3, [r7, #68]
 646 00ba 8022     		mov	r2, #128
 647 00bc 1A70     		strb	r2, [r3]
 104:.\I2C_Class.c ****     uint8 result = 0;
 648              		.loc 1 104 0
 649 00be 3B1C     		mov	r3, r7
 650 00c0 5733     		add	r3, r3, #87
 651 00c2 0022     		mov	r2, #0
 652 00c4 1A70     		strb	r2, [r3]
 105:.\I2C_Class.c ****     uint8 temp = 0xFF;
 653              		.loc 1 105 0
 654 00c6 3B1C     		mov	r3, r7
 655 00c8 4333     		add	r3, r3, #67
 656 00ca FF22     		mov	r2, #255
 657 00cc 1A70     		strb	r2, [r3]
 106:.\I2C_Class.c ****         
 107:.\I2C_Class.c ****     if(speed == 0xFF){
 658              		.loc 1 107 0
 659 00ce 3B1C     		mov	r3, r7
 660 00d0 3F33     		add	r3, r3, #63
 661 00d2 1B78     		ldrb	r3, [r3]
 662 00d4 FF2B     		cmp	r3, #255
 663 00d6 0DD1     		bne	.L25
 108:.\I2C_Class.c ****         // Turn vent on
 109:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOnVent,size,I2C_I2C_MODE_COMPLETE_XFER);
 664              		.loc 1 109 0
 665 00d8 FA6C     		ldr	r2, [r7, #76]
 666 00da 274B     		ldr	r3, .L33
 667 00dc 1B68     		ldr	r3, [r3]
 668 00de 4220     		mov	r0, #66
 669 00e0 111C     		mov	r1, r2
 670 00e2 1A1C     		mov	r2, r3
 671 00e4 0023     		mov	r3, #0
 672 00e6 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 673 00ea 021C     		mov	r2, r0
 674 00ec 3B1C     		mov	r3, r7
 675 00ee 5733     		add	r3, r3, #87
 676 00f0 1A70     		strb	r2, [r3]
 677 00f2 12E0     		b	.L26
 678              	.L25:
 110:.\I2C_Class.c ****     }
 111:.\I2C_Class.c ****     else if(speed == 0b0){
 679              		.loc 1 111 0
 680 00f4 3B1C     		mov	r3, r7
 681 00f6 3F33     		add	r3, r3, #63
 682 00f8 1B78     		ldrb	r3, [r3]
 683 00fa 002B     		cmp	r3, #0
 684 00fc 0DD1     		bne	.L26
 112:.\I2C_Class.c ****         // Turn vent off
 113:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOffVent,size,I2C_I2C_MODE_COMPLETE_XFER)
 685              		.loc 1 113 0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 15


 686 00fe 7A6C     		ldr	r2, [r7, #68]
 687 0100 1D4B     		ldr	r3, .L33
 688 0102 1B68     		ldr	r3, [r3]
 689 0104 4220     		mov	r0, #66
 690 0106 111C     		mov	r1, r2
 691 0108 1A1C     		mov	r2, r3
 692 010a 0023     		mov	r3, #0
 693 010c FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 694 0110 021C     		mov	r2, r0
 695 0112 3B1C     		mov	r3, r7
 696 0114 5733     		add	r3, r3, #87
 697 0116 1A70     		strb	r2, [r3]
 114:.\I2C_Class.c ****     }
 115:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 698              		.loc 1 115 0
 699 0118 FFE7     		b	.L32
 700              	.L26:
 701              	.L32:
 702 011a C046     		mov	r8, r8
 703              	.L27:
 704              		.loc 1 115 0 is_stmt 0 discriminator 1
 705 011c FFF7FEFF 		bl	I2C_I2CMasterStatus
 706 0120 021C     		mov	r2, r0
 707 0122 0223     		mov	r3, #2
 708 0124 1340     		and	r3, r2
 709 0126 F9D0     		beq	.L27
 116:.\I2C_Class.c ****     CyDelay(60);
 710              		.loc 1 116 0 is_stmt 1
 711 0128 3C20     		mov	r0, #60
 712 012a FFF7FEFF 		bl	CyDelay
 117:.\I2C_Class.c ****     
 118:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(NULL, NULL, &temp, NULL))){
 713              		.loc 1 118 0
 714 012e 3B1C     		mov	r3, r7
 715 0130 5733     		add	r3, r3, #87
 716 0132 1B78     		ldrb	r3, [r3]
 717 0134 002B     		cmp	r3, #0
 718 0136 18D1     		bne	.L28
 719              		.loc 1 118 0 is_stmt 0 discriminator 1
 720 0138 3B1C     		mov	r3, r7
 721 013a 4333     		add	r3, r3, #67
 722 013c 0020     		mov	r0, #0
 723 013e 0021     		mov	r1, #0
 724 0140 1A1C     		mov	r2, r3
 725 0142 0023     		mov	r3, #0
 726 0144 FFF7FEFF 		bl	getActuatorStatus
 727 0148 031C     		mov	r3, r0
 728 014a 002B     		cmp	r3, #0
 729 014c 0DD1     		bne	.L28
 119:.\I2C_Class.c ****         if (temp == speed >> 5){ //Hacky solution when not dealing with more than 2 steps
 730              		.loc 1 119 0 is_stmt 1
 731 014e 3B1C     		mov	r3, r7
 732 0150 3F33     		add	r3, r3, #63
 733 0152 1B78     		ldrb	r3, [r3]
 734 0154 5B09     		lsr	r3, r3, #5
 735 0156 DAB2     		uxtb	r2, r3
 736 0158 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 16


 737 015a 4333     		add	r3, r3, #67
 738 015c 1B78     		ldrb	r3, [r3]
 739 015e 9A42     		cmp	r2, r3
 740 0160 01D1     		bne	.L29
 120:.\I2C_Class.c ****             return 0;
 741              		.loc 1 120 0
 742 0162 0023     		mov	r3, #0
 743 0164 02E0     		b	.L30
 744              	.L29:
 121:.\I2C_Class.c ****             }
 122:.\I2C_Class.c ****         else {
 123:.\I2C_Class.c ****             return -1;       
 745              		.loc 1 123 0
 746 0166 FF23     		mov	r3, #255
 747 0168 00E0     		b	.L30
 748              	.L28:
 124:.\I2C_Class.c ****         }
 125:.\I2C_Class.c ****     }
 126:.\I2C_Class.c ****     else {
 127:.\I2C_Class.c ****         return -1;
 749              		.loc 1 127 0
 750 016a FF23     		mov	r3, #255
 751              	.L30:
 752 016c B546     		mov	sp, r6
 753 016e 5BB2     		sxtb	r3, r3
 128:.\I2C_Class.c ****     }
 129:.\I2C_Class.c **** }
 754              		.loc 1 129 0
 755 0170 181C     		mov	r0, r3
 756 0172 BD46     		mov	sp, r7
 757 0174 17B0     		add	sp, sp, #92
 758              		@ sp needed
 759 0176 F0BD     		pop	{r4, r5, r6, r7, pc}
 760              	.L34:
 761              		.align	2
 762              	.L33:
 763 0178 00000000 		.word	size
 764              		.cfi_endproc
 765              	.LFE36:
 766              		.size	adjustVentilation, .-adjustVentilation
 767              		.section	.text.adjustIrrigation,"ax",%progbits
 768              		.align	2
 769              		.global	adjustIrrigation
 770              		.code	16
 771              		.thumb_func
 772              		.type	adjustIrrigation, %function
 773              	adjustIrrigation:
 774              	.LFB37:
 130:.\I2C_Class.c **** 
 131:.\I2C_Class.c **** int8 adjustIrrigation(uint8 index, uint8 onOff){
 775              		.loc 1 131 0
 776              		.cfi_startproc
 777 0000 80B5     		push	{r7, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 17


 782              		.cfi_def_cfa_offset 24
 783 0004 00AF     		add	r7, sp, #0
 784              		.cfi_def_cfa_register 7
 785 0006 0A1C     		mov	r2, r1
 786 0008 FB1D     		add	r3, r7, #7
 787 000a 011C     		add	r1, r0, #0
 788 000c 1970     		strb	r1, [r3]
 789 000e BB1D     		add	r3, r7, #6
 790 0010 1A70     		strb	r2, [r3]
 132:.\I2C_Class.c ****     uint8 irriTransfer[1];
 133:.\I2C_Class.c ****     uint8 result;
 134:.\I2C_Class.c ****     
 135:.\I2C_Class.c ****     //getActuatorStatus(NULL, NULL, NULL, &irrigationStatus);
 136:.\I2C_Class.c **** 
 137:.\I2C_Class.c ****         /* In order for this code to function properly, the static int "irrigation" 
 138:.\I2C_Class.c ****         has to get updated each time this function is called. */
 139:.\I2C_Class.c ****     if (onOff == 0xFF){    // Irrigation turn on
 791              		.loc 1 139 0
 792 0012 BB1D     		add	r3, r7, #6
 793 0014 1B78     		ldrb	r3, [r3]
 794 0016 FF2B     		cmp	r3, #255
 795 0018 18D1     		bne	.L36
 140:.\I2C_Class.c ****         irriTransfer[0] = (irrigationStatus |= (1 << index)) | 0b11000000;
 796              		.loc 1 140 0
 797 001a FB1D     		add	r3, r7, #7
 798 001c 1B78     		ldrb	r3, [r3]
 799 001e 0122     		mov	r2, #1
 800 0020 111C     		mov	r1, r2
 801 0022 9940     		lsl	r1, r1, r3
 802 0024 0B1C     		mov	r3, r1
 803 0026 DAB2     		uxtb	r2, r3
 804 0028 314B     		ldr	r3, .L43
 805 002a 1B78     		ldrb	r3, [r3]
 806 002c DBB2     		uxtb	r3, r3
 807 002e 1343     		orr	r3, r2
 808 0030 DBB2     		uxtb	r3, r3
 809 0032 DAB2     		uxtb	r2, r3
 810 0034 2E4B     		ldr	r3, .L43
 811 0036 1A70     		strb	r2, [r3]
 812 0038 2D4B     		ldr	r3, .L43
 813 003a 1B78     		ldrb	r3, [r3]
 814 003c 4022     		mov	r2, #64
 815 003e 5242     		neg	r2, r2
 816 0040 1343     		orr	r3, r2
 817 0042 DAB2     		uxtb	r2, r3
 818 0044 3B1C     		mov	r3, r7
 819 0046 0C33     		add	r3, r3, #12
 820 0048 1A70     		strb	r2, [r3]
 821 004a 20E0     		b	.L37
 822              	.L36:
 141:.\I2C_Class.c ****     }
 142:.\I2C_Class.c ****     else if (onOff == 0x00){   // Irrigation turn off
 823              		.loc 1 142 0
 824 004c BB1D     		add	r3, r7, #6
 825 004e 1B78     		ldrb	r3, [r3]
 826 0050 002B     		cmp	r3, #0
 827 0052 1AD1     		bne	.L38
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 18


 143:.\I2C_Class.c ****         irriTransfer[0] = (irrigationStatus &= ~(1 << index)) | 0b11000000;
 828              		.loc 1 143 0
 829 0054 FB1D     		add	r3, r7, #7
 830 0056 1B78     		ldrb	r3, [r3]
 831 0058 0122     		mov	r2, #1
 832 005a 111C     		mov	r1, r2
 833 005c 9940     		lsl	r1, r1, r3
 834 005e 0B1C     		mov	r3, r1
 835 0060 DBB2     		uxtb	r3, r3
 836 0062 DB43     		mvn	r3, r3
 837 0064 DBB2     		uxtb	r3, r3
 838 0066 224A     		ldr	r2, .L43
 839 0068 1278     		ldrb	r2, [r2]
 840 006a D2B2     		uxtb	r2, r2
 841 006c 1340     		and	r3, r2
 842 006e DBB2     		uxtb	r3, r3
 843 0070 DAB2     		uxtb	r2, r3
 844 0072 1F4B     		ldr	r3, .L43
 845 0074 1A70     		strb	r2, [r3]
 846 0076 1E4B     		ldr	r3, .L43
 847 0078 1B78     		ldrb	r3, [r3]
 848 007a 4022     		mov	r2, #64
 849 007c 5242     		neg	r2, r2
 850 007e 1343     		orr	r3, r2
 851 0080 DAB2     		uxtb	r2, r3
 852 0082 3B1C     		mov	r3, r7
 853 0084 0C33     		add	r3, r3, #12
 854 0086 1A70     		strb	r2, [r3]
 855 0088 01E0     		b	.L37
 856              	.L38:
 144:.\I2C_Class.c ****     }
 145:.\I2C_Class.c ****     else{
 146:.\I2C_Class.c ****         return -1; // Bad argument.
 857              		.loc 1 146 0
 858 008a FF23     		mov	r3, #255
 859 008c 2BE0     		b	.L42
 860              	.L37:
 147:.\I2C_Class.c ****     }
 148:.\I2C_Class.c ****     
 149:.\I2C_Class.c ****     result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS, irriTransfer, 1, I2C_I2C_MODE_COMPLETE_XFER);
 861              		.loc 1 149 0
 862 008e 3B1C     		mov	r3, r7
 863 0090 0C33     		add	r3, r3, #12
 864 0092 4220     		mov	r0, #66
 865 0094 191C     		mov	r1, r3
 866 0096 0122     		mov	r2, #1
 867 0098 0023     		mov	r3, #0
 868 009a FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 869 009e 021C     		mov	r2, r0
 870 00a0 3B1C     		mov	r3, r7
 871 00a2 0F33     		add	r3, r3, #15
 872 00a4 1A70     		strb	r2, [r3]
 150:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 873              		.loc 1 150 0
 874 00a6 C046     		mov	r8, r8
 875              	.L40:
 876              		.loc 1 150 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 19


 877 00a8 FFF7FEFF 		bl	I2C_I2CMasterStatus
 878 00ac 021C     		mov	r2, r0
 879 00ae 0223     		mov	r3, #2
 880 00b0 1340     		and	r3, r2
 881 00b2 F9D0     		beq	.L40
 151:.\I2C_Class.c ****     CyDelay(60);
 882              		.loc 1 151 0 is_stmt 1
 883 00b4 3C20     		mov	r0, #60
 884 00b6 FFF7FEFF 		bl	CyDelay
 152:.\I2C_Class.c ****     
 153:.\I2C_Class.c ****     getActuatorStatus(NULL, NULL, NULL, irriTransfer);
 885              		.loc 1 153 0
 886 00ba 3B1C     		mov	r3, r7
 887 00bc 0C33     		add	r3, r3, #12
 888 00be 0020     		mov	r0, #0
 889 00c0 0021     		mov	r1, #0
 890 00c2 0022     		mov	r2, #0
 891 00c4 FFF7FEFF 		bl	getActuatorStatus
 154:.\I2C_Class.c ****     
 155:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 892              		.loc 1 155 0
 893 00c8 3B1C     		mov	r3, r7
 894 00ca 0F33     		add	r3, r3, #15
 895 00cc 1B78     		ldrb	r3, [r3]
 896 00ce 002B     		cmp	r3, #0
 897 00d0 08D1     		bne	.L41
 156:.\I2C_Class.c ****         if(irrigationStatus == irriTransfer[0]){
 898              		.loc 1 156 0
 899 00d2 3B1C     		mov	r3, r7
 900 00d4 0C33     		add	r3, r3, #12
 901 00d6 1A78     		ldrb	r2, [r3]
 902 00d8 054B     		ldr	r3, .L43
 903 00da 1B78     		ldrb	r3, [r3]
 904 00dc 9A42     		cmp	r2, r3
 905 00de 01D1     		bne	.L41
 157:.\I2C_Class.c ****             return 0;
 906              		.loc 1 157 0
 907 00e0 0023     		mov	r3, #0
 908 00e2 00E0     		b	.L42
 909              	.L41:
 158:.\I2C_Class.c ****         }
 159:.\I2C_Class.c ****     }
 160:.\I2C_Class.c ****     return -1;
 910              		.loc 1 160 0
 911 00e4 FF23     		mov	r3, #255
 912              	.L42:
 913 00e6 5BB2     		sxtb	r3, r3
 161:.\I2C_Class.c **** }
 914              		.loc 1 161 0
 915 00e8 181C     		mov	r0, r3
 916 00ea BD46     		mov	sp, r7
 917 00ec 04B0     		add	sp, sp, #16
 918              		@ sp needed
 919 00ee 80BD     		pop	{r7, pc}
 920              	.L44:
 921              		.align	2
 922              	.L43:
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 20


 923 00f0 00000000 		.word	irrigationStatus
 924              		.cfi_endproc
 925              	.LFE37:
 926              		.size	adjustIrrigation, .-adjustIrrigation
 927              		.section	.text.getActuatorStatus,"ax",%progbits
 928              		.align	2
 929              		.global	getActuatorStatus
 930              		.code	16
 931              		.thumb_func
 932              		.type	getActuatorStatus, %function
 933              	getActuatorStatus:
 934              	.LFB38:
 162:.\I2C_Class.c **** 
 163:.\I2C_Class.c **** //----------getActuatorStatus0----------
 164:.\I2C_Class.c **** int8 getActuatorStatus(uint8* window, uint8* heat, uint8* vent, uint8* irrigation){
 935              		.loc 1 164 0
 936              		.cfi_startproc
 937 0000 80B5     		push	{r7, lr}
 938              		.cfi_def_cfa_offset 8
 939              		.cfi_offset 7, -8
 940              		.cfi_offset 14, -4
 941 0002 86B0     		sub	sp, sp, #24
 942              		.cfi_def_cfa_offset 32
 943 0004 00AF     		add	r7, sp, #0
 944              		.cfi_def_cfa_register 7
 945 0006 F860     		str	r0, [r7, #12]
 946 0008 B960     		str	r1, [r7, #8]
 947 000a 7A60     		str	r2, [r7, #4]
 948 000c 3B60     		str	r3, [r7]
 165:.\I2C_Class.c ****     uint8 result = 0;
 949              		.loc 1 165 0
 950 000e 3B1C     		mov	r3, r7
 951 0010 1733     		add	r3, r3, #23
 952 0012 0022     		mov	r2, #0
 953 0014 1A70     		strb	r2, [r3]
 166:.\I2C_Class.c ****     uint8 dataget[2] = {0, 0};
 954              		.loc 1 166 0
 955 0016 3B1C     		mov	r3, r7
 956 0018 1433     		add	r3, r3, #20
 957 001a 0022     		mov	r2, #0
 958 001c 1A70     		strb	r2, [r3]
 959 001e 3B1C     		mov	r3, r7
 960 0020 1433     		add	r3, r3, #20
 961 0022 0022     		mov	r2, #0
 962 0024 5A70     		strb	r2, [r3, #1]
 167:.\I2C_Class.c ****     
 168:.\I2C_Class.c ****     CyDelay(60);
 963              		.loc 1 168 0
 964 0026 3C20     		mov	r0, #60
 965 0028 FFF7FEFF 		bl	CyDelay
 169:.\I2C_Class.c ****     I2C_I2CMasterClearReadBuf();
 966              		.loc 1 169 0
 967 002c FFF7FEFF 		bl	I2C_I2CMasterClearReadBuf
 170:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(ACTUATOR_ADRESS, dataget, 2, I2C_I2C_MODE_COMPLETE_XFER);
 968              		.loc 1 170 0
 969 0030 3B1C     		mov	r3, r7
 970 0032 1433     		add	r3, r3, #20
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 21


 971 0034 4220     		mov	r0, #66
 972 0036 191C     		mov	r1, r3
 973 0038 0222     		mov	r2, #2
 974 003a 0023     		mov	r3, #0
 975 003c FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 976 0040 021C     		mov	r2, r0
 977 0042 3B1C     		mov	r3, r7
 978 0044 1733     		add	r3, r3, #23
 979 0046 1A70     		strb	r2, [r3]
 171:.\I2C_Class.c ****     
 172:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_RD_CMPLT)); //Wait for the dataget array to
 980              		.loc 1 172 0
 981 0048 C046     		mov	r8, r8
 982              	.L46:
 983              		.loc 1 172 0 is_stmt 0 discriminator 1
 984 004a FFF7FEFF 		bl	I2C_I2CMasterStatus
 985 004e 021C     		mov	r2, r0
 986 0050 0123     		mov	r3, #1
 987 0052 1340     		and	r3, r2
 988 0054 F9D0     		beq	.L46
 173:.\I2C_Class.c ****     
 174:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (I2C_I2CMasterGetReadBufSize() != 0)){
 989              		.loc 1 174 0 is_stmt 1
 990 0056 3B1C     		mov	r3, r7
 991 0058 1733     		add	r3, r3, #23
 992 005a 1B78     		ldrb	r3, [r3]
 993 005c 002B     		cmp	r3, #0
 994 005e 44D1     		bne	.L47
 995              		.loc 1 174 0 is_stmt 0 discriminator 1
 996 0060 FFF7FEFF 		bl	I2C_I2CMasterGetReadBufSize
 997 0064 031C     		mov	r3, r0
 998 0066 002B     		cmp	r3, #0
 999 0068 3FD0     		beq	.L47
 175:.\I2C_Class.c ****         if (window){                                   // Expecting to receive MSB first 
 1000              		.loc 1 175 0 is_stmt 1
 1001 006a FB68     		ldr	r3, [r7, #12]
 1002 006c 002B     		cmp	r3, #0
 1003 006e 06D0     		beq	.L48
 176:.\I2C_Class.c ****             *window = (dataget[0] >> 4);      // Shifting out the 4 least significant bits.
 1004              		.loc 1 176 0
 1005 0070 3B1C     		mov	r3, r7
 1006 0072 1433     		add	r3, r3, #20
 1007 0074 1B78     		ldrb	r3, [r3]
 1008 0076 1B09     		lsr	r3, r3, #4
 1009 0078 DAB2     		uxtb	r2, r3
 1010 007a FB68     		ldr	r3, [r7, #12]
 1011 007c 1A70     		strb	r2, [r3]
 1012              	.L48:
 177:.\I2C_Class.c ****             #ifdef debugging
 178:.\I2C_Class.c ****                 UART_UartPutChar(*window+48);
 179:.\I2C_Class.c ****             #endif
 180:.\I2C_Class.c ****         }
 181:.\I2C_Class.c ****         if (heat){
 1013              		.loc 1 181 0
 1014 007e BB68     		ldr	r3, [r7, #8]
 1015 0080 002B     		cmp	r3, #0
 1016 0082 09D0     		beq	.L49
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 22


 182:.\I2C_Class.c ****             *heat = ((dataget[0] & 0b00001110) >> 1);       // Ignoring everything but bit 1-3 and 
 1017              		.loc 1 182 0
 1018 0084 3B1C     		mov	r3, r7
 1019 0086 1433     		add	r3, r3, #20
 1020 0088 1B78     		ldrb	r3, [r3]
 1021 008a 1A1C     		mov	r2, r3
 1022 008c 0E23     		mov	r3, #14
 1023 008e 1340     		and	r3, r2
 1024 0090 5B10     		asr	r3, r3, #1
 1025 0092 DAB2     		uxtb	r2, r3
 1026 0094 BB68     		ldr	r3, [r7, #8]
 1027 0096 1A70     		strb	r2, [r3]
 1028              	.L49:
 183:.\I2C_Class.c ****             #ifdef debugging
 184:.\I2C_Class.c ****                 UART_UartPutChar(*heat+48);
 185:.\I2C_Class.c ****             #endif
 186:.\I2C_Class.c ****         }
 187:.\I2C_Class.c ****         if (vent){
 1029              		.loc 1 187 0
 1030 0098 7B68     		ldr	r3, [r7, #4]
 1031 009a 002B     		cmp	r3, #0
 1032 009c 18D0     		beq	.L50
 188:.\I2C_Class.c ****             if ((dataget[0] & 0b00000001) == 0b00000001){        // Maybe we can find a smarter way
 1033              		.loc 1 188 0
 1034 009e 3B1C     		mov	r3, r7
 1035 00a0 1433     		add	r3, r3, #20
 1036 00a2 1B78     		ldrb	r3, [r3]
 1037 00a4 1A1C     		mov	r2, r3
 1038 00a6 0123     		mov	r3, #1
 1039 00a8 1340     		and	r3, r2
 1040 00aa 0AD0     		beq	.L51
 189:.\I2C_Class.c ****                 *vent = (dataget[1] >> 6) | 0b00000100;          // The if statements checks if bit
 1041              		.loc 1 189 0
 1042 00ac 3B1C     		mov	r3, r7
 1043 00ae 1433     		add	r3, r3, #20
 1044 00b0 5B78     		ldrb	r3, [r3, #1]
 1045 00b2 9B09     		lsr	r3, r3, #6
 1046 00b4 DBB2     		uxtb	r3, r3
 1047 00b6 0422     		mov	r2, #4
 1048 00b8 1343     		orr	r3, r2
 1049 00ba DAB2     		uxtb	r2, r3
 1050 00bc 7B68     		ldr	r3, [r7, #4]
 1051 00be 1A70     		strb	r2, [r3]
 1052 00c0 06E0     		b	.L50
 1053              	.L51:
 190:.\I2C_Class.c ****                 #ifdef debugging
 191:.\I2C_Class.c ****                     UART_UartPutChar(*vent+48);                         // Shifting 5 right so only
 192:.\I2C_Class.c ****                 #endif
 193:.\I2C_Class.c ****             }                                                    
 194:.\I2C_Class.c ****             else {
 195:.\I2C_Class.c ****                 *vent = (dataget[1] >> 6) | 0b00000000;          // shifting 5 right since only the
 1054              		.loc 1 195 0
 1055 00c2 3B1C     		mov	r3, r7
 1056 00c4 1433     		add	r3, r3, #20
 1057 00c6 5B78     		ldrb	r3, [r3, #1]
 1058 00c8 9B09     		lsr	r3, r3, #6
 1059 00ca DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 23


 1060 00cc 7B68     		ldr	r3, [r7, #4]
 1061 00ce 1A70     		strb	r2, [r3]
 1062              	.L50:
 196:.\I2C_Class.c ****                 #ifdef debugging
 197:.\I2C_Class.c ****                     UART_UartPutChar(*vent+48);
 198:.\I2C_Class.c ****                 #endif
 199:.\I2C_Class.c ****             }
 200:.\I2C_Class.c ****         }
 201:.\I2C_Class.c ****         if (irrigation){
 1063              		.loc 1 201 0
 1064 00d0 3B68     		ldr	r3, [r7]
 1065 00d2 002B     		cmp	r3, #0
 1066 00d4 07D0     		beq	.L52
 202:.\I2C_Class.c ****             *irrigation = (dataget[1] & 0b00111111);             // Ignoring two most significant b
 1067              		.loc 1 202 0
 1068 00d6 3B1C     		mov	r3, r7
 1069 00d8 1433     		add	r3, r3, #20
 1070 00da 5A78     		ldrb	r2, [r3, #1]
 1071 00dc 3F23     		mov	r3, #63
 1072 00de 1340     		and	r3, r2
 1073 00e0 DAB2     		uxtb	r2, r3
 1074 00e2 3B68     		ldr	r3, [r7]
 1075 00e4 1A70     		strb	r2, [r3]
 1076              	.L52:
 203:.\I2C_Class.c ****             #ifdef debugging
 204:.\I2C_Class.c ****                 UART_UartPutChar(*irrigation);
 205:.\I2C_Class.c ****             #endif
 206:.\I2C_Class.c ****         }   
 207:.\I2C_Class.c ****         return 0;
 1077              		.loc 1 207 0
 1078 00e6 0023     		mov	r3, #0
 1079 00e8 00E0     		b	.L54
 1080              	.L47:
 208:.\I2C_Class.c ****     }
 209:.\I2C_Class.c ****     else {
 210:.\I2C_Class.c ****         return -1;   
 1081              		.loc 1 210 0
 1082 00ea FF23     		mov	r3, #255
 1083              	.L54:
 1084 00ec 5BB2     		sxtb	r3, r3
 211:.\I2C_Class.c ****     }
 212:.\I2C_Class.c **** }
 1085              		.loc 1 212 0
 1086 00ee 181C     		mov	r0, r3
 1087 00f0 BD46     		mov	sp, r7
 1088 00f2 06B0     		add	sp, sp, #24
 1089              		@ sp needed
 1090 00f4 80BD     		pop	{r7, pc}
 1091              		.cfi_endproc
 1092              	.LFE38:
 1093              		.size	getActuatorStatus, .-getActuatorStatus
 1094 00f6 C046     		.section	.rodata
 1095              		.align	2
 1096              	.LC0:
 1097 0000 09000000 		.word	9
 1098 0004 09000000 		.word	9
 1099              		.section	.text.getTemp,"ax",%progbits
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 24


 1100              		.align	2
 1101              		.global	getTemp
 1102              		.code	16
 1103              		.thumb_func
 1104              		.type	getTemp, %function
 1105              	getTemp:
 1106              	.LFB39:
 213:.\I2C_Class.c **** //----------getActuatorStatus1----------
 214:.\I2C_Class.c **** 
 215:.\I2C_Class.c **** //----------getTemp0----------
 216:.\I2C_Class.c **** int8 getTemp(int32* temp){
 1107              		.loc 1 216 0
 1108              		.cfi_startproc
 1109 0000 80B5     		push	{r7, lr}
 1110              		.cfi_def_cfa_offset 8
 1111              		.cfi_offset 7, -8
 1112              		.cfi_offset 14, -4
 1113 0002 86B0     		sub	sp, sp, #24
 1114              		.cfi_def_cfa_offset 32
 1115 0004 00AF     		add	r7, sp, #0
 1116              		.cfi_def_cfa_register 7
 1117 0006 7860     		str	r0, [r7, #4]
 217:.\I2C_Class.c **** 
 218:.\I2C_Class.c ****     uint8 dataget[2] = {0,0};
 1118              		.loc 1 218 0
 1119 0008 3B1C     		mov	r3, r7
 1120 000a 1433     		add	r3, r3, #20
 1121 000c 0022     		mov	r2, #0
 1122 000e 1A70     		strb	r2, [r3]
 1123 0010 3B1C     		mov	r3, r7
 1124 0012 1433     		add	r3, r3, #20
 1125 0014 0022     		mov	r2, #0
 1126 0016 5A70     		strb	r2, [r3, #1]
 219:.\I2C_Class.c ****     uint32 errorStatus[2] = {9,9};      // For debugging and error handling
 1127              		.loc 1 219 0
 1128 0018 3B1C     		mov	r3, r7
 1129 001a 0C33     		add	r3, r3, #12
 1130 001c 1F4A     		ldr	r2, .L60
 1131 001e 03CA     		ldmia	r2!, {r0, r1}
 1132 0020 03C3     		stmia	r3!, {r0, r1}
 220:.\I2C_Class.c ****     
 221:.\I2C_Class.c ****     I2C_I2CMasterClearReadBuf();
 1133              		.loc 1 221 0
 1134 0022 FFF7FEFF 		bl	I2C_I2CMasterClearReadBuf
 222:.\I2C_Class.c ****     errorStatus[0] = I2C_I2CMasterSendStart(TEMP_SENSOR_ADDRESS, I2C_I2C_READ_XFER_MODE);
 1135              		.loc 1 222 0
 1136 0026 4820     		mov	r0, #72
 1137 0028 0121     		mov	r1, #1
 1138 002a FFF7FEFF 		bl	I2C_I2CMasterSendStart
 1139 002e 021C     		mov	r2, r0
 1140 0030 3B1C     		mov	r3, r7
 1141 0032 0C33     		add	r3, r3, #12
 1142 0034 1A60     		str	r2, [r3]
 223:.\I2C_Class.c ****     if (errorStatus[0] == I2C_I2C_MSTR_NO_ERROR){
 1143              		.loc 1 223 0
 1144 0036 3B1C     		mov	r3, r7
 1145 0038 0C33     		add	r3, r3, #12
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 25


 1146 003a 1B68     		ldr	r3, [r3]
 1147 003c 002B     		cmp	r3, #0
 1148 003e 25D1     		bne	.L56
 224:.\I2C_Class.c ****         dataget[0] = I2C_I2CMasterReadByte(I2C_I2C_ACK_DATA);
 1149              		.loc 1 224 0
 1150 0040 0020     		mov	r0, #0
 1151 0042 FFF7FEFF 		bl	I2C_I2CMasterReadByte
 1152 0046 031C     		mov	r3, r0
 1153 0048 DAB2     		uxtb	r2, r3
 1154 004a 3B1C     		mov	r3, r7
 1155 004c 1433     		add	r3, r3, #20
 1156 004e 1A70     		strb	r2, [r3]
 225:.\I2C_Class.c ****         dataget[1] = I2C_I2CMasterReadByte(I2C_I2C_NAK_DATA);
 1157              		.loc 1 225 0
 1158 0050 0120     		mov	r0, #1
 1159 0052 FFF7FEFF 		bl	I2C_I2CMasterReadByte
 1160 0056 031C     		mov	r3, r0
 1161 0058 DAB2     		uxtb	r2, r3
 1162 005a 3B1C     		mov	r3, r7
 1163 005c 1433     		add	r3, r3, #20
 1164 005e 5A70     		strb	r2, [r3, #1]
 226:.\I2C_Class.c ****         errorStatus[1] = I2C_I2CMasterSendStop();
 1165              		.loc 1 226 0
 1166 0060 FFF7FEFF 		bl	I2C_I2CMasterSendStop
 1167 0064 021C     		mov	r2, r0
 1168 0066 3B1C     		mov	r3, r7
 1169 0068 0C33     		add	r3, r3, #12
 1170 006a 5A60     		str	r2, [r3, #4]
 227:.\I2C_Class.c ****     }
 228:.\I2C_Class.c ****     else{
 229:.\I2C_Class.c ****         I2C_I2CMasterSendStop();
 230:.\I2C_Class.c ****         return -1;
 231:.\I2C_Class.c ****     }
 232:.\I2C_Class.c **** 
 233:.\I2C_Class.c ****     // The data is converted directly to UART protocol because of the ,5 resolution
 234:.\I2C_Class.c ****     *temp = (dataget[0]*2)+(dataget[1] >> 7)+40;
 1171              		.loc 1 234 0
 1172 006c 3B1C     		mov	r3, r7
 1173 006e 1433     		add	r3, r3, #20
 1174 0070 1B78     		ldrb	r3, [r3]
 1175 0072 5A00     		lsl	r2, r3, #1
 1176 0074 3B1C     		mov	r3, r7
 1177 0076 1433     		add	r3, r3, #20
 1178 0078 5B78     		ldrb	r3, [r3, #1]
 1179 007a DB09     		lsr	r3, r3, #7
 1180 007c DBB2     		uxtb	r3, r3
 1181 007e D318     		add	r3, r2, r3
 1182 0080 1A1C     		mov	r2, r3
 1183 0082 2832     		add	r2, r2, #40
 1184 0084 7B68     		ldr	r3, [r7, #4]
 1185 0086 1A60     		str	r2, [r3]
 235:.\I2C_Class.c **** 
 236:.\I2C_Class.c ****     return 0;
 1186              		.loc 1 236 0
 1187 0088 0023     		mov	r3, #0
 1188 008a 02E0     		b	.L59
 1189              	.L56:
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 26


 229:.\I2C_Class.c ****         I2C_I2CMasterSendStop();
 1190              		.loc 1 229 0
 1191 008c FFF7FEFF 		bl	I2C_I2CMasterSendStop
 230:.\I2C_Class.c ****         return -1;
 1192              		.loc 1 230 0
 1193 0090 FF23     		mov	r3, #255
 1194              	.L59:
 1195 0092 5BB2     		sxtb	r3, r3
 237:.\I2C_Class.c **** }
 1196              		.loc 1 237 0
 1197 0094 181C     		mov	r0, r3
 1198 0096 BD46     		mov	sp, r7
 1199 0098 06B0     		add	sp, sp, #24
 1200              		@ sp needed
 1201 009a 80BD     		pop	{r7, pc}
 1202              	.L61:
 1203              		.align	2
 1204              	.L60:
 1205 009c 00000000 		.word	.LC0
 1206              		.cfi_endproc
 1207              	.LFE39:
 1208              		.size	getTemp, .-getTemp
 1209              		.section	.text.getSoilHum,"ax",%progbits
 1210              		.align	2
 1211              		.global	getSoilHum
 1212              		.code	16
 1213              		.thumb_func
 1214              		.type	getSoilHum, %function
 1215              	getSoilHum:
 1216              	.LFB40:
 238:.\I2C_Class.c **** //----------getTemp1----------
 239:.\I2C_Class.c **** 
 240:.\I2C_Class.c **** int8 getSoilHum(uint8 index, int16* soilHum){
 1217              		.loc 1 240 0
 1218              		.cfi_startproc
 1219 0000 80B5     		push	{r7, lr}
 1220              		.cfi_def_cfa_offset 8
 1221              		.cfi_offset 7, -8
 1222              		.cfi_offset 14, -4
 1223 0002 84B0     		sub	sp, sp, #16
 1224              		.cfi_def_cfa_offset 24
 1225 0004 00AF     		add	r7, sp, #0
 1226              		.cfi_def_cfa_register 7
 1227 0006 021C     		mov	r2, r0
 1228 0008 3960     		str	r1, [r7]
 1229 000a FB1D     		add	r3, r7, #7
 1230 000c 1A70     		strb	r2, [r3]
 241:.\I2C_Class.c ****     uint32 result;
 242:.\I2C_Class.c ****     uint8 soilTransfer[1] = {index};
 1231              		.loc 1 242 0
 1232 000e 3B1C     		mov	r3, r7
 1233 0010 0833     		add	r3, r3, #8
 1234 0012 FA1D     		add	r2, r7, #7
 1235 0014 1278     		ldrb	r2, [r2]
 1236 0016 1A70     		strb	r2, [r3]
 243:.\I2C_Class.c ****     
 244:.\I2C_Class.c ****     /*pseudo kode
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 27


 245:.\I2C_Class.c ****     write, address, 0-5 (LSB)
 246:.\I2C_Class.c ****     read, address, 7 = status, 0-6 = value (1-100)*/
 247:.\I2C_Class.c ****     
 248:.\I2C_Class.c ****     result = I2C_I2CMasterWriteBuf(SOILHUM_SENSOR_ADDRESS, soilTransfer, 1, I2C_I2C_MODE_COMPLETE_X
 1237              		.loc 1 248 0
 1238 0018 3B1C     		mov	r3, r7
 1239 001a 0833     		add	r3, r3, #8
 1240 001c 3220     		mov	r0, #50
 1241 001e 191C     		mov	r1, r3
 1242 0020 0122     		mov	r2, #1
 1243 0022 0023     		mov	r3, #0
 1244 0024 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 1245 0028 031C     		mov	r3, r0
 1246 002a FB60     		str	r3, [r7, #12]
 249:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT));
 1247              		.loc 1 249 0
 1248 002c C046     		mov	r8, r8
 1249              	.L63:
 1250              		.loc 1 249 0 is_stmt 0 discriminator 1
 1251 002e FFF7FEFF 		bl	I2C_I2CMasterStatus
 1252 0032 021C     		mov	r2, r0
 1253 0034 0223     		mov	r3, #2
 1254 0036 1340     		and	r3, r2
 1255 0038 F9D0     		beq	.L63
 250:.\I2C_Class.c ****         
 251:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 1256              		.loc 1 251 0 is_stmt 1
 1257 003a FB68     		ldr	r3, [r7, #12]
 1258 003c 002B     		cmp	r3, #0
 1259 003e 25D1     		bne	.L64
 252:.\I2C_Class.c ****         CyDelay(60);
 1260              		.loc 1 252 0
 1261 0040 3C20     		mov	r0, #60
 1262 0042 FFF7FEFF 		bl	CyDelay
 253:.\I2C_Class.c ****         result = I2C_I2CMasterReadBuf(SOILHUM_SENSOR_ADDRESS, soilTransfer, 1, I2C_I2C_MODE_COMPLET
 1263              		.loc 1 253 0
 1264 0046 3B1C     		mov	r3, r7
 1265 0048 0833     		add	r3, r3, #8
 1266 004a 3220     		mov	r0, #50
 1267 004c 191C     		mov	r1, r3
 1268 004e 0122     		mov	r2, #1
 1269 0050 0023     		mov	r3, #0
 1270 0052 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1271 0056 031C     		mov	r3, r0
 1272 0058 FB60     		str	r3, [r7, #12]
 254:.\I2C_Class.c ****         while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_RD_CMPLT)); //Wait for the data to be r
 1273              		.loc 1 254 0
 1274 005a C046     		mov	r8, r8
 1275              	.L65:
 1276              		.loc 1 254 0 is_stmt 0 discriminator 1
 1277 005c FFF7FEFF 		bl	I2C_I2CMasterStatus
 1278 0060 021C     		mov	r2, r0
 1279 0062 0123     		mov	r3, #1
 1280 0064 1340     		and	r3, r2
 1281 0066 F9D0     		beq	.L65
 255:.\I2C_Class.c ****         if (result == I2C_I2C_MSTR_NO_ERROR){
 1282              		.loc 1 255 0 is_stmt 1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 28


 1283 0068 FB68     		ldr	r3, [r7, #12]
 1284 006a 002B     		cmp	r3, #0
 1285 006c 0ED1     		bne	.L64
 256:.\I2C_Class.c ****             if ((soilTransfer[0] >> 7) == 0){
 1286              		.loc 1 256 0
 1287 006e 3B1C     		mov	r3, r7
 1288 0070 0833     		add	r3, r3, #8
 1289 0072 1B78     		ldrb	r3, [r3]
 1290 0074 DBB2     		uxtb	r3, r3
 1291 0076 5BB2     		sxtb	r3, r3
 1292 0078 002B     		cmp	r3, #0
 1293 007a 07DB     		blt	.L64
 257:.\I2C_Class.c ****                 *soilHum = soilTransfer[0];
 1294              		.loc 1 257 0
 1295 007c 3B1C     		mov	r3, r7
 1296 007e 0833     		add	r3, r3, #8
 1297 0080 1B78     		ldrb	r3, [r3]
 1298 0082 1A1C     		mov	r2, r3
 1299 0084 3B68     		ldr	r3, [r7]
 1300 0086 1A80     		strh	r2, [r3]
 258:.\I2C_Class.c ****                 return 0;
 1301              		.loc 1 258 0
 1302 0088 0023     		mov	r3, #0
 1303 008a 00E0     		b	.L67
 1304              	.L64:
 259:.\I2C_Class.c ****             }
 260:.\I2C_Class.c ****         }
 261:.\I2C_Class.c ****     }
 262:.\I2C_Class.c ****     return -1;
 1305              		.loc 1 262 0
 1306 008c FF23     		mov	r3, #255
 1307              	.L67:
 1308 008e 5BB2     		sxtb	r3, r3
 263:.\I2C_Class.c **** }
 1309              		.loc 1 263 0
 1310 0090 181C     		mov	r0, r3
 1311 0092 BD46     		mov	sp, r7
 1312 0094 04B0     		add	sp, sp, #16
 1313              		@ sp needed
 1314 0096 80BD     		pop	{r7, pc}
 1315              		.cfi_endproc
 1316              	.LFE40:
 1317              		.size	getSoilHum, .-getSoilHum
 1318              		.text
 1319              	.Letext0:
 1320              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 1321              		.section	.debug_info,"",%progbits
 1322              	.Ldebug_info0:
 1323 0000 29040000 		.4byte	0x429
 1324 0004 0400     		.2byte	0x4
 1325 0006 00000000 		.4byte	.Ldebug_abbrev0
 1326 000a 04       		.byte	0x4
 1327 000b 01       		.uleb128 0x1
 1328 000c 7D000000 		.4byte	.LASF48
 1329 0010 01       		.byte	0x1
 1330 0011 38000000 		.4byte	.LASF49
 1331 0015 F9000000 		.4byte	.LASF50
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 29


 1332 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1333 001d 00000000 		.4byte	0
 1334 0021 00000000 		.4byte	.Ldebug_line0
 1335 0025 02       		.uleb128 0x2
 1336 0026 01       		.byte	0x1
 1337 0027 06       		.byte	0x6
 1338 0028 7D010000 		.4byte	.LASF0
 1339 002c 02       		.uleb128 0x2
 1340 002d 01       		.byte	0x1
 1341 002e 08       		.byte	0x8
 1342 002f 91010000 		.4byte	.LASF1
 1343 0033 02       		.uleb128 0x2
 1344 0034 02       		.byte	0x2
 1345 0035 05       		.byte	0x5
 1346 0036 66020000 		.4byte	.LASF2
 1347 003a 02       		.uleb128 0x2
 1348 003b 02       		.byte	0x2
 1349 003c 07       		.byte	0x7
 1350 003d 46000000 		.4byte	.LASF3
 1351 0041 02       		.uleb128 0x2
 1352 0042 04       		.byte	0x4
 1353 0043 05       		.byte	0x5
 1354 0044 83020000 		.4byte	.LASF4
 1355 0048 02       		.uleb128 0x2
 1356 0049 04       		.byte	0x4
 1357 004a 07       		.byte	0x7
 1358 004b 53010000 		.4byte	.LASF5
 1359 004f 02       		.uleb128 0x2
 1360 0050 08       		.byte	0x8
 1361 0051 05       		.byte	0x5
 1362 0052 2D020000 		.4byte	.LASF6
 1363 0056 02       		.uleb128 0x2
 1364 0057 08       		.byte	0x8
 1365 0058 07       		.byte	0x7
 1366 0059 E8010000 		.4byte	.LASF7
 1367 005d 03       		.uleb128 0x3
 1368 005e 04       		.byte	0x4
 1369 005f 05       		.byte	0x5
 1370 0060 696E7400 		.ascii	"int\000"
 1371 0064 02       		.uleb128 0x2
 1372 0065 04       		.byte	0x4
 1373 0066 07       		.byte	0x7
 1374 0067 D6010000 		.4byte	.LASF8
 1375 006b 04       		.uleb128 0x4
 1376 006c 71000000 		.4byte	.LASF9
 1377 0070 02       		.byte	0x2
 1378 0071 A1       		.byte	0xa1
 1379 0072 2C000000 		.4byte	0x2c
 1380 0076 04       		.uleb128 0x4
 1381 0077 C3010000 		.4byte	.LASF10
 1382 007b 02       		.byte	0x2
 1383 007c A2       		.byte	0xa2
 1384 007d 3A000000 		.4byte	0x3a
 1385 0081 04       		.uleb128 0x4
 1386 0082 CF010000 		.4byte	.LASF11
 1387 0086 02       		.byte	0x2
 1388 0087 A3       		.byte	0xa3
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 30


 1389 0088 48000000 		.4byte	0x48
 1390 008c 04       		.uleb128 0x4
 1391 008d CA010000 		.4byte	.LASF12
 1392 0091 02       		.byte	0x2
 1393 0092 A4       		.byte	0xa4
 1394 0093 25000000 		.4byte	0x25
 1395 0097 04       		.uleb128 0x4
 1396 0098 4D010000 		.4byte	.LASF13
 1397 009c 02       		.byte	0x2
 1398 009d A5       		.byte	0xa5
 1399 009e 33000000 		.4byte	0x33
 1400 00a2 04       		.uleb128 0x4
 1401 00a3 77010000 		.4byte	.LASF14
 1402 00a7 02       		.byte	0x2
 1403 00a8 A6       		.byte	0xa6
 1404 00a9 41000000 		.4byte	0x41
 1405 00ad 02       		.uleb128 0x2
 1406 00ae 04       		.byte	0x4
 1407 00af 04       		.byte	0x4
 1408 00b0 77000000 		.4byte	.LASF15
 1409 00b4 02       		.uleb128 0x2
 1410 00b5 08       		.byte	0x8
 1411 00b6 04       		.byte	0x4
 1412 00b7 9F010000 		.4byte	.LASF16
 1413 00bb 02       		.uleb128 0x2
 1414 00bc 01       		.byte	0x1
 1415 00bd 08       		.byte	0x8
 1416 00be 43020000 		.4byte	.LASF17
 1417 00c2 02       		.uleb128 0x2
 1418 00c3 04       		.byte	0x4
 1419 00c4 07       		.byte	0x7
 1420 00c5 24020000 		.4byte	.LASF18
 1421 00c9 05       		.uleb128 0x5
 1422 00ca 04       		.byte	0x4
 1423 00cb 6B000000 		.4byte	0x6b
 1424 00cf 06       		.uleb128 0x6
 1425 00d0 16020000 		.4byte	.LASF51
 1426 00d4 01       		.byte	0x1
 1427 00d5 1D       		.byte	0x1d
 1428 00d6 00000000 		.4byte	.LFB33
 1429 00da 12000000 		.4byte	.LFE33-.LFB33
 1430 00de 01       		.uleb128 0x1
 1431 00df 9C       		.byte	0x9c
 1432 00e0 07       		.uleb128 0x7
 1433 00e1 0C000000 		.4byte	.LASF23
 1434 00e5 01       		.byte	0x1
 1435 00e6 24       		.byte	0x24
 1436 00e7 8C000000 		.4byte	0x8c
 1437 00eb 00000000 		.4byte	.LFB34
 1438 00ef 7C010000 		.4byte	.LFE34-.LFB34
 1439 00f3 01       		.uleb128 0x1
 1440 00f4 9C       		.byte	0x9c
 1441 00f5 42010000 		.4byte	0x142
 1442 00f9 08       		.uleb128 0x8
 1443 00fa 706F7300 		.ascii	"pos\000"
 1444 00fe 01       		.byte	0x1
 1445 00ff 24       		.byte	0x24
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 31


 1446 0100 6B000000 		.4byte	0x6b
 1447 0104 02       		.uleb128 0x2
 1448 0105 91       		.byte	0x91
 1449 0106 4F       		.sleb128 -49
 1450 0107 09       		.uleb128 0x9
 1451 0108 0B020000 		.4byte	.LASF19
 1452 010c 01       		.byte	0x1
 1453 010d 25       		.byte	0x25
 1454 010e 42010000 		.4byte	0x142
 1455 0112 03       		.uleb128 0x3
 1456 0113 91       		.byte	0x91
 1457 0114 5C       		.sleb128 -36
 1458 0115 06       		.byte	0x6
 1459 0116 09       		.uleb128 0x9
 1460 0117 B7010000 		.4byte	.LASF20
 1461 011b 01       		.byte	0x1
 1462 011c 25       		.byte	0x25
 1463 011d 55010000 		.4byte	0x155
 1464 0121 03       		.uleb128 0x3
 1465 0122 91       		.byte	0x91
 1466 0123 54       		.sleb128 -44
 1467 0124 06       		.byte	0x6
 1468 0125 09       		.uleb128 0x9
 1469 0126 FF010000 		.4byte	.LASF21
 1470 012a 01       		.byte	0x1
 1471 012b 28       		.byte	0x28
 1472 012c 6B000000 		.4byte	0x6b
 1473 0130 02       		.uleb128 0x2
 1474 0131 91       		.byte	0x91
 1475 0132 67       		.sleb128 -25
 1476 0133 09       		.uleb128 0x9
 1477 0134 42010000 		.4byte	.LASF22
 1478 0138 01       		.byte	0x1
 1479 0139 29       		.byte	0x29
 1480 013a 6B000000 		.4byte	0x6b
 1481 013e 02       		.uleb128 0x2
 1482 013f 91       		.byte	0x91
 1483 0140 53       		.sleb128 -45
 1484 0141 00       		.byte	0
 1485 0142 0A       		.uleb128 0xa
 1486 0143 6B000000 		.4byte	0x6b
 1487 0147 55010000 		.4byte	0x155
 1488 014b 0B       		.uleb128 0xb
 1489 014c C2000000 		.4byte	0xc2
 1490 0150 03       		.uleb128 0x3
 1491 0151 91       		.byte	0x91
 1492 0152 60       		.sleb128 -32
 1493 0153 06       		.byte	0x6
 1494 0154 00       		.byte	0
 1495 0155 0A       		.uleb128 0xa
 1496 0156 6B000000 		.4byte	0x6b
 1497 015a 68010000 		.4byte	0x168
 1498 015e 0B       		.uleb128 0xb
 1499 015f C2000000 		.4byte	0xc2
 1500 0163 03       		.uleb128 0x3
 1501 0164 91       		.byte	0x91
 1502 0165 58       		.sleb128 -40
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 32


 1503 0166 06       		.byte	0x6
 1504 0167 00       		.byte	0
 1505 0168 07       		.uleb128 0x7
 1506 0169 BF020000 		.4byte	.LASF24
 1507 016d 01       		.byte	0x1
 1508 016e 43       		.byte	0x43
 1509 016f 8C000000 		.4byte	0x8c
 1510 0173 00000000 		.4byte	.LFB35
 1511 0177 7C010000 		.4byte	.LFE35-.LFB35
 1512 017b 01       		.uleb128 0x1
 1513 017c 9C       		.byte	0x9c
 1514 017d CA010000 		.4byte	0x1ca
 1515 0181 0C       		.uleb128 0xc
 1516 0182 06020000 		.4byte	.LASF25
 1517 0186 01       		.byte	0x1
 1518 0187 43       		.byte	0x43
 1519 0188 6B000000 		.4byte	0x6b
 1520 018c 02       		.uleb128 0x2
 1521 018d 91       		.byte	0x91
 1522 018e 4F       		.sleb128 -49
 1523 018f 09       		.uleb128 0x9
 1524 0190 5B020000 		.4byte	.LASF26
 1525 0194 01       		.byte	0x1
 1526 0195 44       		.byte	0x44
 1527 0196 CA010000 		.4byte	0x1ca
 1528 019a 03       		.uleb128 0x3
 1529 019b 91       		.byte	0x91
 1530 019c 5C       		.sleb128 -36
 1531 019d 06       		.byte	0x6
 1532 019e 09       		.uleb128 0x9
 1533 019f 59000000 		.4byte	.LASF27
 1534 01a3 01       		.byte	0x1
 1535 01a4 44       		.byte	0x44
 1536 01a5 DD010000 		.4byte	0x1dd
 1537 01a9 03       		.uleb128 0x3
 1538 01aa 91       		.byte	0x91
 1539 01ab 54       		.sleb128 -44
 1540 01ac 06       		.byte	0x6
 1541 01ad 09       		.uleb128 0x9
 1542 01ae FF010000 		.4byte	.LASF21
 1543 01b2 01       		.byte	0x1
 1544 01b3 47       		.byte	0x47
 1545 01b4 6B000000 		.4byte	0x6b
 1546 01b8 02       		.uleb128 0x2
 1547 01b9 91       		.byte	0x91
 1548 01ba 67       		.sleb128 -25
 1549 01bb 09       		.uleb128 0x9
 1550 01bc E3010000 		.4byte	.LASF28
 1551 01c0 01       		.byte	0x1
 1552 01c1 48       		.byte	0x48
 1553 01c2 6B000000 		.4byte	0x6b
 1554 01c6 02       		.uleb128 0x2
 1555 01c7 91       		.byte	0x91
 1556 01c8 53       		.sleb128 -45
 1557 01c9 00       		.byte	0
 1558 01ca 0A       		.uleb128 0xa
 1559 01cb 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 33


 1560 01cf DD010000 		.4byte	0x1dd
 1561 01d3 0B       		.uleb128 0xb
 1562 01d4 C2000000 		.4byte	0xc2
 1563 01d8 03       		.uleb128 0x3
 1564 01d9 91       		.byte	0x91
 1565 01da 60       		.sleb128 -32
 1566 01db 06       		.byte	0x6
 1567 01dc 00       		.byte	0
 1568 01dd 0A       		.uleb128 0xa
 1569 01de 6B000000 		.4byte	0x6b
 1570 01e2 F0010000 		.4byte	0x1f0
 1571 01e6 0B       		.uleb128 0xb
 1572 01e7 C2000000 		.4byte	0xc2
 1573 01eb 03       		.uleb128 0x3
 1574 01ec 91       		.byte	0x91
 1575 01ed 58       		.sleb128 -40
 1576 01ee 06       		.byte	0x6
 1577 01ef 00       		.byte	0
 1578 01f0 07       		.uleb128 0x7
 1579 01f1 26000000 		.4byte	.LASF29
 1580 01f5 01       		.byte	0x1
 1581 01f6 64       		.byte	0x64
 1582 01f7 8C000000 		.4byte	0x8c
 1583 01fb 00000000 		.4byte	.LFB36
 1584 01ff 7C010000 		.4byte	.LFE36-.LFB36
 1585 0203 01       		.uleb128 0x1
 1586 0204 9C       		.byte	0x9c
 1587 0205 52020000 		.4byte	0x252
 1588 0209 0C       		.uleb128 0xc
 1589 020a 1E020000 		.4byte	.LASF30
 1590 020e 01       		.byte	0x1
 1591 020f 64       		.byte	0x64
 1592 0210 6B000000 		.4byte	0x6b
 1593 0214 02       		.uleb128 0x2
 1594 0215 91       		.byte	0x91
 1595 0216 4F       		.sleb128 -49
 1596 0217 09       		.uleb128 0x9
 1597 0218 8C020000 		.4byte	.LASF31
 1598 021c 01       		.byte	0x1
 1599 021d 65       		.byte	0x65
 1600 021e 52020000 		.4byte	0x252
 1601 0222 03       		.uleb128 0x3
 1602 0223 91       		.byte	0x91
 1603 0224 5C       		.sleb128 -36
 1604 0225 06       		.byte	0x6
 1605 0226 09       		.uleb128 0x9
 1606 0227 00000000 		.4byte	.LASF32
 1607 022b 01       		.byte	0x1
 1608 022c 65       		.byte	0x65
 1609 022d 65020000 		.4byte	0x265
 1610 0231 03       		.uleb128 0x3
 1611 0232 91       		.byte	0x91
 1612 0233 54       		.sleb128 -44
 1613 0234 06       		.byte	0x6
 1614 0235 09       		.uleb128 0x9
 1615 0236 FF010000 		.4byte	.LASF21
 1616 023a 01       		.byte	0x1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 34


 1617 023b 68       		.byte	0x68
 1618 023c 6B000000 		.4byte	0x6b
 1619 0240 02       		.uleb128 0x2
 1620 0241 91       		.byte	0x91
 1621 0242 67       		.sleb128 -25
 1622 0243 09       		.uleb128 0x9
 1623 0244 E3010000 		.4byte	.LASF28
 1624 0248 01       		.byte	0x1
 1625 0249 69       		.byte	0x69
 1626 024a 6B000000 		.4byte	0x6b
 1627 024e 02       		.uleb128 0x2
 1628 024f 91       		.byte	0x91
 1629 0250 53       		.sleb128 -45
 1630 0251 00       		.byte	0
 1631 0252 0A       		.uleb128 0xa
 1632 0253 6B000000 		.4byte	0x6b
 1633 0257 65020000 		.4byte	0x265
 1634 025b 0B       		.uleb128 0xb
 1635 025c C2000000 		.4byte	0xc2
 1636 0260 03       		.uleb128 0x3
 1637 0261 91       		.byte	0x91
 1638 0262 60       		.sleb128 -32
 1639 0263 06       		.byte	0x6
 1640 0264 00       		.byte	0
 1641 0265 0A       		.uleb128 0xa
 1642 0266 6B000000 		.4byte	0x6b
 1643 026a 78020000 		.4byte	0x278
 1644 026e 0B       		.uleb128 0xb
 1645 026f C2000000 		.4byte	0xc2
 1646 0273 03       		.uleb128 0x3
 1647 0274 91       		.byte	0x91
 1648 0275 58       		.sleb128 -40
 1649 0276 06       		.byte	0x6
 1650 0277 00       		.byte	0
 1651 0278 07       		.uleb128 0x7
 1652 0279 A9020000 		.4byte	.LASF33
 1653 027d 01       		.byte	0x1
 1654 027e 83       		.byte	0x83
 1655 027f 8C000000 		.4byte	0x8c
 1656 0283 00000000 		.4byte	.LFB37
 1657 0287 F4000000 		.4byte	.LFE37-.LFB37
 1658 028b 01       		.uleb128 0x1
 1659 028c 9C       		.byte	0x9c
 1660 028d CA020000 		.4byte	0x2ca
 1661 0291 0C       		.uleb128 0xc
 1662 0292 48020000 		.4byte	.LASF34
 1663 0296 01       		.byte	0x1
 1664 0297 83       		.byte	0x83
 1665 0298 6B000000 		.4byte	0x6b
 1666 029c 02       		.uleb128 0x2
 1667 029d 91       		.byte	0x91
 1668 029e 6F       		.sleb128 -17
 1669 029f 0C       		.uleb128 0xc
 1670 02a0 3C010000 		.4byte	.LASF35
 1671 02a4 01       		.byte	0x1
 1672 02a5 83       		.byte	0x83
 1673 02a6 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 35


 1674 02aa 02       		.uleb128 0x2
 1675 02ab 91       		.byte	0x91
 1676 02ac 6E       		.sleb128 -18
 1677 02ad 09       		.uleb128 0x9
 1678 02ae 19000000 		.4byte	.LASF36
 1679 02b2 01       		.byte	0x1
 1680 02b3 84       		.byte	0x84
 1681 02b4 CA020000 		.4byte	0x2ca
 1682 02b8 02       		.uleb128 0x2
 1683 02b9 91       		.byte	0x91
 1684 02ba 74       		.sleb128 -12
 1685 02bb 09       		.uleb128 0x9
 1686 02bc FF010000 		.4byte	.LASF21
 1687 02c0 01       		.byte	0x1
 1688 02c1 85       		.byte	0x85
 1689 02c2 6B000000 		.4byte	0x6b
 1690 02c6 02       		.uleb128 0x2
 1691 02c7 91       		.byte	0x91
 1692 02c8 77       		.sleb128 -9
 1693 02c9 00       		.byte	0
 1694 02ca 0A       		.uleb128 0xa
 1695 02cb 6B000000 		.4byte	0x6b
 1696 02cf DA020000 		.4byte	0x2da
 1697 02d3 0D       		.uleb128 0xd
 1698 02d4 C2000000 		.4byte	0xc2
 1699 02d8 00       		.byte	0
 1700 02d9 00       		.byte	0
 1701 02da 07       		.uleb128 0x7
 1702 02db 65010000 		.4byte	.LASF37
 1703 02df 01       		.byte	0x1
 1704 02e0 A4       		.byte	0xa4
 1705 02e1 8C000000 		.4byte	0x8c
 1706 02e5 00000000 		.4byte	.LFB38
 1707 02e9 F6000000 		.4byte	.LFE38-.LFB38
 1708 02ed 01       		.uleb128 0x1
 1709 02ee 9C       		.byte	0x9c
 1710 02ef 48030000 		.4byte	0x348
 1711 02f3 0C       		.uleb128 0xc
 1712 02f4 97020000 		.4byte	.LASF38
 1713 02f8 01       		.byte	0x1
 1714 02f9 A4       		.byte	0xa4
 1715 02fa C9000000 		.4byte	0xc9
 1716 02fe 02       		.uleb128 0x2
 1717 02ff 91       		.byte	0x91
 1718 0300 6C       		.sleb128 -20
 1719 0301 0C       		.uleb128 0xc
 1720 0302 06020000 		.4byte	.LASF25
 1721 0306 01       		.byte	0x1
 1722 0307 A4       		.byte	0xa4
 1723 0308 C9000000 		.4byte	0xc9
 1724 030c 02       		.uleb128 0x2
 1725 030d 91       		.byte	0x91
 1726 030e 68       		.sleb128 -24
 1727 030f 0C       		.uleb128 0xc
 1728 0310 37010000 		.4byte	.LASF39
 1729 0314 01       		.byte	0x1
 1730 0315 A4       		.byte	0xa4
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 36


 1731 0316 C9000000 		.4byte	0xc9
 1732 031a 02       		.uleb128 0x2
 1733 031b 91       		.byte	0x91
 1734 031c 64       		.sleb128 -28
 1735 031d 0C       		.uleb128 0xc
 1736 031e 70020000 		.4byte	.LASF40
 1737 0322 01       		.byte	0x1
 1738 0323 A4       		.byte	0xa4
 1739 0324 C9000000 		.4byte	0xc9
 1740 0328 02       		.uleb128 0x2
 1741 0329 91       		.byte	0x91
 1742 032a 60       		.sleb128 -32
 1743 032b 09       		.uleb128 0x9
 1744 032c FF010000 		.4byte	.LASF21
 1745 0330 01       		.byte	0x1
 1746 0331 A5       		.byte	0xa5
 1747 0332 6B000000 		.4byte	0x6b
 1748 0336 02       		.uleb128 0x2
 1749 0337 91       		.byte	0x91
 1750 0338 77       		.sleb128 -9
 1751 0339 09       		.uleb128 0x9
 1752 033a 89010000 		.4byte	.LASF41
 1753 033e 01       		.byte	0x1
 1754 033f A6       		.byte	0xa6
 1755 0340 48030000 		.4byte	0x348
 1756 0344 02       		.uleb128 0x2
 1757 0345 91       		.byte	0x91
 1758 0346 74       		.sleb128 -12
 1759 0347 00       		.byte	0
 1760 0348 0A       		.uleb128 0xa
 1761 0349 6B000000 		.4byte	0x6b
 1762 034d 58030000 		.4byte	0x358
 1763 0351 0D       		.uleb128 0xd
 1764 0352 C2000000 		.4byte	0xc2
 1765 0356 01       		.byte	0x1
 1766 0357 00       		.byte	0
 1767 0358 07       		.uleb128 0x7
 1768 0359 3B020000 		.4byte	.LASF42
 1769 035d 01       		.byte	0x1
 1770 035e D8       		.byte	0xd8
 1771 035f 8C000000 		.4byte	0x8c
 1772 0363 00000000 		.4byte	.LFB39
 1773 0367 A0000000 		.4byte	.LFE39-.LFB39
 1774 036b 01       		.uleb128 0x1
 1775 036c 9C       		.byte	0x9c
 1776 036d 9C030000 		.4byte	0x39c
 1777 0371 0C       		.uleb128 0xc
 1778 0372 E3010000 		.4byte	.LASF28
 1779 0376 01       		.byte	0x1
 1780 0377 D8       		.byte	0xd8
 1781 0378 9C030000 		.4byte	0x39c
 1782 037c 02       		.uleb128 0x2
 1783 037d 91       		.byte	0x91
 1784 037e 64       		.sleb128 -28
 1785 037f 09       		.uleb128 0x9
 1786 0380 89010000 		.4byte	.LASF41
 1787 0384 01       		.byte	0x1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 37


 1788 0385 DA       		.byte	0xda
 1789 0386 48030000 		.4byte	0x348
 1790 038a 02       		.uleb128 0x2
 1791 038b 91       		.byte	0x91
 1792 038c 74       		.sleb128 -12
 1793 038d 09       		.uleb128 0x9
 1794 038e 65000000 		.4byte	.LASF43
 1795 0392 01       		.byte	0x1
 1796 0393 DB       		.byte	0xdb
 1797 0394 A2030000 		.4byte	0x3a2
 1798 0398 02       		.uleb128 0x2
 1799 0399 91       		.byte	0x91
 1800 039a 6C       		.sleb128 -20
 1801 039b 00       		.byte	0
 1802 039c 05       		.uleb128 0x5
 1803 039d 04       		.byte	0x4
 1804 039e A2000000 		.4byte	0xa2
 1805 03a2 0A       		.uleb128 0xa
 1806 03a3 81000000 		.4byte	0x81
 1807 03a7 B2030000 		.4byte	0x3b2
 1808 03ab 0D       		.uleb128 0xd
 1809 03ac C2000000 		.4byte	0xc2
 1810 03b0 01       		.byte	0x1
 1811 03b1 00       		.byte	0
 1812 03b2 07       		.uleb128 0x7
 1813 03b3 9E020000 		.4byte	.LASF44
 1814 03b7 01       		.byte	0x1
 1815 03b8 F0       		.byte	0xf0
 1816 03b9 8C000000 		.4byte	0x8c
 1817 03bd 00000000 		.4byte	.LFB40
 1818 03c1 98000000 		.4byte	.LFE40-.LFB40
 1819 03c5 01       		.uleb128 0x1
 1820 03c6 9C       		.byte	0x9c
 1821 03c7 04040000 		.4byte	0x404
 1822 03cb 0C       		.uleb128 0xc
 1823 03cc 48020000 		.4byte	.LASF34
 1824 03d0 01       		.byte	0x1
 1825 03d1 F0       		.byte	0xf0
 1826 03d2 6B000000 		.4byte	0x6b
 1827 03d6 02       		.uleb128 0x2
 1828 03d7 91       		.byte	0x91
 1829 03d8 6F       		.sleb128 -17
 1830 03d9 0C       		.uleb128 0xc
 1831 03da 7B020000 		.4byte	.LASF45
 1832 03de 01       		.byte	0x1
 1833 03df F0       		.byte	0xf0
 1834 03e0 04040000 		.4byte	0x404
 1835 03e4 02       		.uleb128 0x2
 1836 03e5 91       		.byte	0x91
 1837 03e6 68       		.sleb128 -24
 1838 03e7 09       		.uleb128 0x9
 1839 03e8 FF010000 		.4byte	.LASF21
 1840 03ec 01       		.byte	0x1
 1841 03ed F1       		.byte	0xf1
 1842 03ee 81000000 		.4byte	0x81
 1843 03f2 02       		.uleb128 0x2
 1844 03f3 91       		.byte	0x91
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 38


 1845 03f4 74       		.sleb128 -12
 1846 03f5 09       		.uleb128 0x9
 1847 03f6 4E020000 		.4byte	.LASF46
 1848 03fa 01       		.byte	0x1
 1849 03fb F2       		.byte	0xf2
 1850 03fc CA020000 		.4byte	0x2ca
 1851 0400 02       		.uleb128 0x2
 1852 0401 91       		.byte	0x91
 1853 0402 70       		.sleb128 -16
 1854 0403 00       		.byte	0
 1855 0404 05       		.uleb128 0x5
 1856 0405 04       		.byte	0x4
 1857 0406 97000000 		.4byte	0x97
 1858 040a 09       		.uleb128 0x9
 1859 040b BA020000 		.4byte	.LASF47
 1860 040f 01       		.byte	0x1
 1861 0410 1B       		.byte	0x1b
 1862 0411 5D000000 		.4byte	0x5d
 1863 0415 05       		.uleb128 0x5
 1864 0416 03       		.byte	0x3
 1865 0417 00000000 		.4byte	size
 1866 041b 0E       		.uleb128 0xe
 1867 041c A6010000 		.4byte	.LASF52
 1868 0420 01       		.byte	0x1
 1869 0421 16       		.byte	0x16
 1870 0422 6B000000 		.4byte	0x6b
 1871 0426 05       		.uleb128 0x5
 1872 0427 03       		.byte	0x3
 1873 0428 00000000 		.4byte	irrigationStatus
 1874 042c 00       		.byte	0
 1875              		.section	.debug_abbrev,"",%progbits
 1876              	.Ldebug_abbrev0:
 1877 0000 01       		.uleb128 0x1
 1878 0001 11       		.uleb128 0x11
 1879 0002 01       		.byte	0x1
 1880 0003 25       		.uleb128 0x25
 1881 0004 0E       		.uleb128 0xe
 1882 0005 13       		.uleb128 0x13
 1883 0006 0B       		.uleb128 0xb
 1884 0007 03       		.uleb128 0x3
 1885 0008 0E       		.uleb128 0xe
 1886 0009 1B       		.uleb128 0x1b
 1887 000a 0E       		.uleb128 0xe
 1888 000b 55       		.uleb128 0x55
 1889 000c 17       		.uleb128 0x17
 1890 000d 11       		.uleb128 0x11
 1891 000e 01       		.uleb128 0x1
 1892 000f 10       		.uleb128 0x10
 1893 0010 17       		.uleb128 0x17
 1894 0011 00       		.byte	0
 1895 0012 00       		.byte	0
 1896 0013 02       		.uleb128 0x2
 1897 0014 24       		.uleb128 0x24
 1898 0015 00       		.byte	0
 1899 0016 0B       		.uleb128 0xb
 1900 0017 0B       		.uleb128 0xb
 1901 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 39


 1902 0019 0B       		.uleb128 0xb
 1903 001a 03       		.uleb128 0x3
 1904 001b 0E       		.uleb128 0xe
 1905 001c 00       		.byte	0
 1906 001d 00       		.byte	0
 1907 001e 03       		.uleb128 0x3
 1908 001f 24       		.uleb128 0x24
 1909 0020 00       		.byte	0
 1910 0021 0B       		.uleb128 0xb
 1911 0022 0B       		.uleb128 0xb
 1912 0023 3E       		.uleb128 0x3e
 1913 0024 0B       		.uleb128 0xb
 1914 0025 03       		.uleb128 0x3
 1915 0026 08       		.uleb128 0x8
 1916 0027 00       		.byte	0
 1917 0028 00       		.byte	0
 1918 0029 04       		.uleb128 0x4
 1919 002a 16       		.uleb128 0x16
 1920 002b 00       		.byte	0
 1921 002c 03       		.uleb128 0x3
 1922 002d 0E       		.uleb128 0xe
 1923 002e 3A       		.uleb128 0x3a
 1924 002f 0B       		.uleb128 0xb
 1925 0030 3B       		.uleb128 0x3b
 1926 0031 0B       		.uleb128 0xb
 1927 0032 49       		.uleb128 0x49
 1928 0033 13       		.uleb128 0x13
 1929 0034 00       		.byte	0
 1930 0035 00       		.byte	0
 1931 0036 05       		.uleb128 0x5
 1932 0037 0F       		.uleb128 0xf
 1933 0038 00       		.byte	0
 1934 0039 0B       		.uleb128 0xb
 1935 003a 0B       		.uleb128 0xb
 1936 003b 49       		.uleb128 0x49
 1937 003c 13       		.uleb128 0x13
 1938 003d 00       		.byte	0
 1939 003e 00       		.byte	0
 1940 003f 06       		.uleb128 0x6
 1941 0040 2E       		.uleb128 0x2e
 1942 0041 00       		.byte	0
 1943 0042 3F       		.uleb128 0x3f
 1944 0043 19       		.uleb128 0x19
 1945 0044 03       		.uleb128 0x3
 1946 0045 0E       		.uleb128 0xe
 1947 0046 3A       		.uleb128 0x3a
 1948 0047 0B       		.uleb128 0xb
 1949 0048 3B       		.uleb128 0x3b
 1950 0049 0B       		.uleb128 0xb
 1951 004a 27       		.uleb128 0x27
 1952 004b 19       		.uleb128 0x19
 1953 004c 11       		.uleb128 0x11
 1954 004d 01       		.uleb128 0x1
 1955 004e 12       		.uleb128 0x12
 1956 004f 06       		.uleb128 0x6
 1957 0050 40       		.uleb128 0x40
 1958 0051 18       		.uleb128 0x18
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 40


 1959 0052 9642     		.uleb128 0x2116
 1960 0054 19       		.uleb128 0x19
 1961 0055 00       		.byte	0
 1962 0056 00       		.byte	0
 1963 0057 07       		.uleb128 0x7
 1964 0058 2E       		.uleb128 0x2e
 1965 0059 01       		.byte	0x1
 1966 005a 3F       		.uleb128 0x3f
 1967 005b 19       		.uleb128 0x19
 1968 005c 03       		.uleb128 0x3
 1969 005d 0E       		.uleb128 0xe
 1970 005e 3A       		.uleb128 0x3a
 1971 005f 0B       		.uleb128 0xb
 1972 0060 3B       		.uleb128 0x3b
 1973 0061 0B       		.uleb128 0xb
 1974 0062 27       		.uleb128 0x27
 1975 0063 19       		.uleb128 0x19
 1976 0064 49       		.uleb128 0x49
 1977 0065 13       		.uleb128 0x13
 1978 0066 11       		.uleb128 0x11
 1979 0067 01       		.uleb128 0x1
 1980 0068 12       		.uleb128 0x12
 1981 0069 06       		.uleb128 0x6
 1982 006a 40       		.uleb128 0x40
 1983 006b 18       		.uleb128 0x18
 1984 006c 9642     		.uleb128 0x2116
 1985 006e 19       		.uleb128 0x19
 1986 006f 01       		.uleb128 0x1
 1987 0070 13       		.uleb128 0x13
 1988 0071 00       		.byte	0
 1989 0072 00       		.byte	0
 1990 0073 08       		.uleb128 0x8
 1991 0074 05       		.uleb128 0x5
 1992 0075 00       		.byte	0
 1993 0076 03       		.uleb128 0x3
 1994 0077 08       		.uleb128 0x8
 1995 0078 3A       		.uleb128 0x3a
 1996 0079 0B       		.uleb128 0xb
 1997 007a 3B       		.uleb128 0x3b
 1998 007b 0B       		.uleb128 0xb
 1999 007c 49       		.uleb128 0x49
 2000 007d 13       		.uleb128 0x13
 2001 007e 02       		.uleb128 0x2
 2002 007f 18       		.uleb128 0x18
 2003 0080 00       		.byte	0
 2004 0081 00       		.byte	0
 2005 0082 09       		.uleb128 0x9
 2006 0083 34       		.uleb128 0x34
 2007 0084 00       		.byte	0
 2008 0085 03       		.uleb128 0x3
 2009 0086 0E       		.uleb128 0xe
 2010 0087 3A       		.uleb128 0x3a
 2011 0088 0B       		.uleb128 0xb
 2012 0089 3B       		.uleb128 0x3b
 2013 008a 0B       		.uleb128 0xb
 2014 008b 49       		.uleb128 0x49
 2015 008c 13       		.uleb128 0x13
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 41


 2016 008d 02       		.uleb128 0x2
 2017 008e 18       		.uleb128 0x18
 2018 008f 00       		.byte	0
 2019 0090 00       		.byte	0
 2020 0091 0A       		.uleb128 0xa
 2021 0092 01       		.uleb128 0x1
 2022 0093 01       		.byte	0x1
 2023 0094 49       		.uleb128 0x49
 2024 0095 13       		.uleb128 0x13
 2025 0096 01       		.uleb128 0x1
 2026 0097 13       		.uleb128 0x13
 2027 0098 00       		.byte	0
 2028 0099 00       		.byte	0
 2029 009a 0B       		.uleb128 0xb
 2030 009b 21       		.uleb128 0x21
 2031 009c 00       		.byte	0
 2032 009d 49       		.uleb128 0x49
 2033 009e 13       		.uleb128 0x13
 2034 009f 2F       		.uleb128 0x2f
 2035 00a0 18       		.uleb128 0x18
 2036 00a1 00       		.byte	0
 2037 00a2 00       		.byte	0
 2038 00a3 0C       		.uleb128 0xc
 2039 00a4 05       		.uleb128 0x5
 2040 00a5 00       		.byte	0
 2041 00a6 03       		.uleb128 0x3
 2042 00a7 0E       		.uleb128 0xe
 2043 00a8 3A       		.uleb128 0x3a
 2044 00a9 0B       		.uleb128 0xb
 2045 00aa 3B       		.uleb128 0x3b
 2046 00ab 0B       		.uleb128 0xb
 2047 00ac 49       		.uleb128 0x49
 2048 00ad 13       		.uleb128 0x13
 2049 00ae 02       		.uleb128 0x2
 2050 00af 18       		.uleb128 0x18
 2051 00b0 00       		.byte	0
 2052 00b1 00       		.byte	0
 2053 00b2 0D       		.uleb128 0xd
 2054 00b3 21       		.uleb128 0x21
 2055 00b4 00       		.byte	0
 2056 00b5 49       		.uleb128 0x49
 2057 00b6 13       		.uleb128 0x13
 2058 00b7 2F       		.uleb128 0x2f
 2059 00b8 0B       		.uleb128 0xb
 2060 00b9 00       		.byte	0
 2061 00ba 00       		.byte	0
 2062 00bb 0E       		.uleb128 0xe
 2063 00bc 34       		.uleb128 0x34
 2064 00bd 00       		.byte	0
 2065 00be 03       		.uleb128 0x3
 2066 00bf 0E       		.uleb128 0xe
 2067 00c0 3A       		.uleb128 0x3a
 2068 00c1 0B       		.uleb128 0xb
 2069 00c2 3B       		.uleb128 0x3b
 2070 00c3 0B       		.uleb128 0xb
 2071 00c4 49       		.uleb128 0x49
 2072 00c5 13       		.uleb128 0x13
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 42


 2073 00c6 3F       		.uleb128 0x3f
 2074 00c7 19       		.uleb128 0x19
 2075 00c8 02       		.uleb128 0x2
 2076 00c9 18       		.uleb128 0x18
 2077 00ca 00       		.byte	0
 2078 00cb 00       		.byte	0
 2079 00cc 00       		.byte	0
 2080              		.section	.debug_aranges,"",%progbits
 2081 0000 54000000 		.4byte	0x54
 2082 0004 0200     		.2byte	0x2
 2083 0006 00000000 		.4byte	.Ldebug_info0
 2084 000a 04       		.byte	0x4
 2085 000b 00       		.byte	0
 2086 000c 0000     		.2byte	0
 2087 000e 0000     		.2byte	0
 2088 0010 00000000 		.4byte	.LFB33
 2089 0014 12000000 		.4byte	.LFE33-.LFB33
 2090 0018 00000000 		.4byte	.LFB34
 2091 001c 7C010000 		.4byte	.LFE34-.LFB34
 2092 0020 00000000 		.4byte	.LFB35
 2093 0024 7C010000 		.4byte	.LFE35-.LFB35
 2094 0028 00000000 		.4byte	.LFB36
 2095 002c 7C010000 		.4byte	.LFE36-.LFB36
 2096 0030 00000000 		.4byte	.LFB37
 2097 0034 F4000000 		.4byte	.LFE37-.LFB37
 2098 0038 00000000 		.4byte	.LFB38
 2099 003c F6000000 		.4byte	.LFE38-.LFB38
 2100 0040 00000000 		.4byte	.LFB39
 2101 0044 A0000000 		.4byte	.LFE39-.LFB39
 2102 0048 00000000 		.4byte	.LFB40
 2103 004c 98000000 		.4byte	.LFE40-.LFB40
 2104 0050 00000000 		.4byte	0
 2105 0054 00000000 		.4byte	0
 2106              		.section	.debug_ranges,"",%progbits
 2107              	.Ldebug_ranges0:
 2108 0000 00000000 		.4byte	.LFB33
 2109 0004 12000000 		.4byte	.LFE33
 2110 0008 00000000 		.4byte	.LFB34
 2111 000c 7C010000 		.4byte	.LFE34
 2112 0010 00000000 		.4byte	.LFB35
 2113 0014 7C010000 		.4byte	.LFE35
 2114 0018 00000000 		.4byte	.LFB36
 2115 001c 7C010000 		.4byte	.LFE36
 2116 0020 00000000 		.4byte	.LFB37
 2117 0024 F4000000 		.4byte	.LFE37
 2118 0028 00000000 		.4byte	.LFB38
 2119 002c F6000000 		.4byte	.LFE38
 2120 0030 00000000 		.4byte	.LFB39
 2121 0034 A0000000 		.4byte	.LFE39
 2122 0038 00000000 		.4byte	.LFB40
 2123 003c 98000000 		.4byte	.LFE40
 2124 0040 00000000 		.4byte	0
 2125 0044 00000000 		.4byte	0
 2126              		.section	.debug_line,"",%progbits
 2127              	.Ldebug_line0:
 2128 0000 99010000 		.section	.debug_str,"MS",%progbits,1
 2128      02004A00 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 43


 2128      00000201 
 2128      FB0E0D00 
 2128      01010101 
 2129              	.LASF32:
 2130 0000 7475726E 		.ascii	"turnOffVent\000"
 2130      4F666656 
 2130      656E7400 
 2131              	.LASF23:
 2132 000c 61646A75 		.ascii	"adjustWindow\000"
 2132      73745769 
 2132      6E646F77 
 2132      00
 2133              	.LASF36:
 2134 0019 69727269 		.ascii	"irriTransfer\000"
 2134      5472616E 
 2134      73666572 
 2134      00
 2135              	.LASF29:
 2136 0026 61646A75 		.ascii	"adjustVentilation\000"
 2136      73745665 
 2136      6E74696C 
 2136      6174696F 
 2136      6E00
 2137              	.LASF49:
 2138 0038 2E5C4932 		.ascii	".\\I2C_Class.c\000"
 2138      435F436C 
 2138      6173732E 
 2138      6300
 2139              	.LASF3:
 2140 0046 73686F72 		.ascii	"short unsigned int\000"
 2140      7420756E 
 2140      7369676E 
 2140      65642069 
 2140      6E7400
 2141              	.LASF27:
 2142 0059 7475726E 		.ascii	"turnOffHeat\000"
 2142      4F666648 
 2142      65617400 
 2143              	.LASF43:
 2144 0065 6572726F 		.ascii	"errorStatus\000"
 2144      72537461 
 2144      74757300 
 2145              	.LASF9:
 2146 0071 75696E74 		.ascii	"uint8\000"
 2146      3800
 2147              	.LASF15:
 2148 0077 666C6F61 		.ascii	"float\000"
 2148      7400
 2149              	.LASF48:
 2150 007d 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2150      4320342E 
 2150      382E3420 
 2150      32303134 
 2150      30353236 
 2151 00b0 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2151      20726576 
 2151      6973696F 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 44


 2151      6E203231 
 2151      31333538 
 2152 00e3 30202D66 		.ascii	"0 -ffunction-sections\000"
 2152      66756E63 
 2152      74696F6E 
 2152      2D736563 
 2152      74696F6E 
 2153              	.LASF50:
 2154 00f9 433A5C55 		.ascii	"C:\\Users\\Philip\\OneDrive\\GitHub\\PSoC_Master\\P"
 2154      73657273 
 2154      5C506869 
 2154      6C69705C 
 2154      4F6E6544 
 2155 0126 536F435F 		.ascii	"SoC_Master.cydsn\000"
 2155      4D617374 
 2155      65722E63 
 2155      7964736E 
 2155      00
 2156              	.LASF39:
 2157 0137 76656E74 		.ascii	"vent\000"
 2157      00
 2158              	.LASF35:
 2159 013c 6F6E4F66 		.ascii	"onOff\000"
 2159      6600
 2160              	.LASF22:
 2161 0142 74656D70 		.ascii	"tempWindow\000"
 2161      57696E64 
 2161      6F7700
 2162              	.LASF13:
 2163 014d 696E7431 		.ascii	"int16\000"
 2163      3600
 2164              	.LASF5:
 2165 0153 6C6F6E67 		.ascii	"long unsigned int\000"
 2165      20756E73 
 2165      69676E65 
 2165      6420696E 
 2165      7400
 2166              	.LASF37:
 2167 0165 67657441 		.ascii	"getActuatorStatus\000"
 2167      63747561 
 2167      746F7253 
 2167      74617475 
 2167      7300
 2168              	.LASF14:
 2169 0177 696E7433 		.ascii	"int32\000"
 2169      3200
 2170              	.LASF0:
 2171 017d 7369676E 		.ascii	"signed char\000"
 2171      65642063 
 2171      68617200 
 2172              	.LASF41:
 2173 0189 64617461 		.ascii	"dataget\000"
 2173      67657400 
 2174              	.LASF1:
 2175 0191 756E7369 		.ascii	"unsigned char\000"
 2175      676E6564 
 2175      20636861 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 45


 2175      7200
 2176              	.LASF16:
 2177 019f 646F7562 		.ascii	"double\000"
 2177      6C6500
 2178              	.LASF52:
 2179 01a6 69727269 		.ascii	"irrigationStatus\000"
 2179      67617469 
 2179      6F6E5374 
 2179      61747573 
 2179      00
 2180              	.LASF20:
 2181 01b7 636C6F73 		.ascii	"closeWindow\000"
 2181      6557696E 
 2181      646F7700 
 2182              	.LASF10:
 2183 01c3 75696E74 		.ascii	"uint16\000"
 2183      313600
 2184              	.LASF12:
 2185 01ca 696E7438 		.ascii	"int8\000"
 2185      00
 2186              	.LASF11:
 2187 01cf 75696E74 		.ascii	"uint32\000"
 2187      333200
 2188              	.LASF8:
 2189 01d6 756E7369 		.ascii	"unsigned int\000"
 2189      676E6564 
 2189      20696E74 
 2189      00
 2190              	.LASF28:
 2191 01e3 74656D70 		.ascii	"temp\000"
 2191      00
 2192              	.LASF7:
 2193 01e8 6C6F6E67 		.ascii	"long long unsigned int\000"
 2193      206C6F6E 
 2193      6720756E 
 2193      7369676E 
 2193      65642069 
 2194              	.LASF21:
 2195 01ff 72657375 		.ascii	"result\000"
 2195      6C7400
 2196              	.LASF25:
 2197 0206 68656174 		.ascii	"heat\000"
 2197      00
 2198              	.LASF19:
 2199 020b 6F70656E 		.ascii	"openWindow\000"
 2199      57696E64 
 2199      6F7700
 2200              	.LASF51:
 2201 0216 696E6974 		.ascii	"initI2C\000"
 2201      49324300 
 2202              	.LASF30:
 2203 021e 73706565 		.ascii	"speed\000"
 2203      6400
 2204              	.LASF18:
 2205 0224 73697A65 		.ascii	"sizetype\000"
 2205      74797065 
 2205      00
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 46


 2206              	.LASF6:
 2207 022d 6C6F6E67 		.ascii	"long long int\000"
 2207      206C6F6E 
 2207      6720696E 
 2207      7400
 2208              	.LASF42:
 2209 023b 67657454 		.ascii	"getTemp\000"
 2209      656D7000 
 2210              	.LASF17:
 2211 0243 63686172 		.ascii	"char\000"
 2211      00
 2212              	.LASF34:
 2213 0248 696E6465 		.ascii	"index\000"
 2213      7800
 2214              	.LASF46:
 2215 024e 736F696C 		.ascii	"soilTransfer\000"
 2215      5472616E 
 2215      73666572 
 2215      00
 2216              	.LASF26:
 2217 025b 7475726E 		.ascii	"turnHeatOn\000"
 2217      48656174 
 2217      4F6E00
 2218              	.LASF2:
 2219 0266 73686F72 		.ascii	"short int\000"
 2219      7420696E 
 2219      7400
 2220              	.LASF40:
 2221 0270 69727269 		.ascii	"irrigation\000"
 2221      67617469 
 2221      6F6E00
 2222              	.LASF45:
 2223 027b 736F696C 		.ascii	"soilHum\000"
 2223      48756D00 
 2224              	.LASF4:
 2225 0283 6C6F6E67 		.ascii	"long int\000"
 2225      20696E74 
 2225      00
 2226              	.LASF31:
 2227 028c 7475726E 		.ascii	"turnOnVent\000"
 2227      4F6E5665 
 2227      6E7400
 2228              	.LASF38:
 2229 0297 77696E64 		.ascii	"window\000"
 2229      6F7700
 2230              	.LASF44:
 2231 029e 67657453 		.ascii	"getSoilHum\000"
 2231      6F696C48 
 2231      756D00
 2232              	.LASF33:
 2233 02a9 61646A75 		.ascii	"adjustIrrigation\000"
 2233      73744972 
 2233      72696761 
 2233      74696F6E 
 2233      00
 2234              	.LASF47:
 2235 02ba 73697A65 		.ascii	"size\000"
ARM GAS  C:\Users\Philip\AppData\Local\Temp\cc90N6gf.s 			page 47


 2235      00
 2236              	.LASF24:
 2237 02bf 61646A75 		.ascii	"adjustHeat\000"
 2237      73744865 
 2237      617400
 2238              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
