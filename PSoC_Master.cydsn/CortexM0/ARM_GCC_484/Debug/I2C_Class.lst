ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"I2C_Class.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.data
  18              		.align	2
  19              		.type	size, %object
  20              		.size	size, 4
  21              	size:
  22 0000 01000000 		.word	1
  23              		.global	irrigationStatus
  24              		.bss
  25              		.type	irrigationStatus, %object
  26              		.size	irrigationStatus, 1
  27              	irrigationStatus:
  28 0000 00       		.space	1
  29              		.section	.text.initI2C,"ax",%progbits
  30              		.align	2
  31              		.global	initI2C
  32              		.code	16
  33              		.thumb_func
  34              		.type	initI2C, %function
  35              	initI2C:
  36              	.LFB33:
  37              		.file 1 ".\\I2C_Class.c"
   1:.\I2C_Class.c **** /* ========================================
   2:.\I2C_Class.c ****  * 
   3:.\I2C_Class.c ****  * AutoGreen - PSoC_Master
   4:.\I2C_Class.c ****  * I2C_Class.c
   5:.\I2C_Class.c ****  * (Description)
   6:.\I2C_Class.c ****  * PRJ3 - GRP9
   7:.\I2C_Class.c ****  * 2015-04-15
   8:.\I2C_Class.c ****  *
   9:.\I2C_Class.c ****  * ========================================
  10:.\I2C_Class.c **** */
  11:.\I2C_Class.c **** 
  12:.\I2C_Class.c **** // Include files
  13:.\I2C_Class.c **** #include "I2C_Class.h"
  14:.\I2C_Class.c **** 
  15:.\I2C_Class.c **** // Definitions
  16:.\I2C_Class.c **** //#define TEMP_AND_HUM_SENSOR_ADDRESS 0x27             // TODO This is old
  17:.\I2C_Class.c **** #define TEMP_SENSOR_ADDRESS 0x48                       // For LM75 temp sensor with A0 = 0, A1 = 0 
  18:.\I2C_Class.c **** #define ACTUATOR_ADRESS 0x42
  19:.\I2C_Class.c **** #define LIGHT_SENSOR_COMMAND_ADDRESS 0x00
  20:.\I2C_Class.c **** #define LIGHT_SENSOR_CONTROL_ADDRESS 0x01
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 2


  21:.\I2C_Class.c **** #define LIGHT_SENSOR_LSB 0x04  
  22:.\I2C_Class.c **** #define LIGHT_SENSOR_MSB 0x05
  23:.\I2C_Class.c **** #define SOILHUM_SENSOR_ADDRESS 0x32
  24:.\I2C_Class.c **** 
  25:.\I2C_Class.c **** //Uncomment to enable debugging
  26:.\I2C_Class.c **** //#define debugging 
  27:.\I2C_Class.c **** 
  28:.\I2C_Class.c **** // Private data members
  29:.\I2C_Class.c **** static int size = 1;
  30:.\I2C_Class.c **** uint8 irrigationStatus = 0;
  31:.\I2C_Class.c **** 
  32:.\I2C_Class.c **** // Private prototypes
  33:.\I2C_Class.c **** 
  34:.\I2C_Class.c **** void initI2C(void){
  38              		.loc 1 34 0
  39              		.cfi_startproc
  40 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  41              		.cfi_def_cfa_offset 20
  42              		.cfi_offset 4, -20
  43              		.cfi_offset 5, -16
  44              		.cfi_offset 6, -12
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 95B0     		sub	sp, sp, #84
  48              		.cfi_def_cfa_offset 104
  49 0004 00AF     		add	r7, sp, #0
  50              		.cfi_def_cfa_register 7
  51 0006 6B46     		mov	r3, sp
  52 0008 1E1C     		mov	r6, r3
  35:.\I2C_Class.c ****     I2C_Start();                    // Starts I2C component
  53              		.loc 1 35 0
  54 000a FFF7FEFF 		bl	I2C_Start
  36:.\I2C_Class.c ****     I2C_I2CMasterClearStatus();     // Clear status flags
  55              		.loc 1 36 0
  56 000e FFF7FEFF 		bl	I2C_I2CMasterClearStatus
  37:.\I2C_Class.c ****     CyGlobalIntEnable;
  57              		.loc 1 37 0
  58              	@ 37 ".\I2C_Class.c" 1
  59 0012 62B6     		CPSIE   i
  60              	@ 0 "" 2
  38:.\I2C_Class.c ****     
  39:.\I2C_Class.c ****     // Light sensor init.
  40:.\I2C_Class.c ****     /*sensor is set up to internal integration timing, light count data in signed and 2^(8) clock c
  41:.\I2C_Class.c ****     uint8 lightCommand[size], lightControl[size];
  61              		.loc 1 41 0
  62              		.code	16
  63 0014 414B     		ldr	r3, .L4
  64 0016 1A68     		ldr	r2, [r3]
  65 0018 531E     		sub	r3, r2, #1
  66 001a FB64     		str	r3, [r7, #76]
  67 001c 131C     		mov	r3, r2
  68 001e 1C1C     		mov	r4, r3
  69 0020 0023     		mov	r3, #0
  70 0022 1D1C     		mov	r5, r3
  71 0024 630F     		lsr	r3, r4, #29
  72 0026 E900     		lsl	r1, r5, #3
  73 0028 7963     		str	r1, [r7, #52]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 3


  74 002a 796B     		ldr	r1, [r7, #52]
  75 002c 1943     		orr	r1, r3
  76 002e 7963     		str	r1, [r7, #52]
  77 0030 E300     		lsl	r3, r4, #3
  78 0032 131C     		mov	r3, r2
  79 0034 BB62     		str	r3, [r7, #40]
  80 0036 0023     		mov	r3, #0
  81 0038 FB62     		str	r3, [r7, #44]
  82 003a B96A     		ldr	r1, [r7, #40]
  83 003c 4B0F     		lsr	r3, r1, #29
  84 003e F96A     		ldr	r1, [r7, #44]
  85 0040 C900     		lsl	r1, r1, #3
  86 0042 7962     		str	r1, [r7, #36]
  87 0044 796A     		ldr	r1, [r7, #36]
  88 0046 1943     		orr	r1, r3
  89 0048 7962     		str	r1, [r7, #36]
  90 004a BB6A     		ldr	r3, [r7, #40]
  91 004c DB00     		lsl	r3, r3, #3
  92 004e 131C     		mov	r3, r2
  93 0050 0733     		add	r3, r3, #7
  94 0052 DB08     		lsr	r3, r3, #3
  95 0054 DB00     		lsl	r3, r3, #3
  96 0056 6946     		mov	r1, sp
  97 0058 C91A     		sub	r1, r1, r3
  98 005a 8D46     		mov	sp, r1
  99 005c 6B46     		mov	r3, sp
 100 005e 0033     		add	r3, r3, #0
 101 0060 BB64     		str	r3, [r7, #72]
 102 0062 2E4B     		ldr	r3, .L4
 103 0064 1B68     		ldr	r3, [r3]
 104 0066 5A1E     		sub	r2, r3, #1
 105 0068 7A64     		str	r2, [r7, #68]
 106 006a 1A1C     		mov	r2, r3
 107 006c BA61     		str	r2, [r7, #24]
 108 006e 0022     		mov	r2, #0
 109 0070 FA61     		str	r2, [r7, #28]
 110 0072 B969     		ldr	r1, [r7, #24]
 111 0074 4A0F     		lsr	r2, r1, #29
 112 0076 F969     		ldr	r1, [r7, #28]
 113 0078 C900     		lsl	r1, r1, #3
 114 007a 7961     		str	r1, [r7, #20]
 115 007c 7969     		ldr	r1, [r7, #20]
 116 007e 1143     		orr	r1, r2
 117 0080 7961     		str	r1, [r7, #20]
 118 0082 BA69     		ldr	r2, [r7, #24]
 119 0084 D200     		lsl	r2, r2, #3
 120 0086 1A1C     		mov	r2, r3
 121 0088 BA60     		str	r2, [r7, #8]
 122 008a 0022     		mov	r2, #0
 123 008c FA60     		str	r2, [r7, #12]
 124 008e B968     		ldr	r1, [r7, #8]
 125 0090 4A0F     		lsr	r2, r1, #29
 126 0092 F968     		ldr	r1, [r7, #12]
 127 0094 C900     		lsl	r1, r1, #3
 128 0096 7960     		str	r1, [r7, #4]
 129 0098 7968     		ldr	r1, [r7, #4]
 130 009a 1143     		orr	r1, r2
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 4


 131 009c 7960     		str	r1, [r7, #4]
 132 009e BA68     		ldr	r2, [r7, #8]
 133 00a0 D200     		lsl	r2, r2, #3
 134 00a2 0733     		add	r3, r3, #7
 135 00a4 DB08     		lsr	r3, r3, #3
 136 00a6 DB00     		lsl	r3, r3, #3
 137 00a8 6946     		mov	r1, sp
 138 00aa C91A     		sub	r1, r1, r3
 139 00ac 8D46     		mov	sp, r1
 140 00ae 6B46     		mov	r3, sp
 141 00b0 0033     		add	r3, r3, #0
 142 00b2 3B64     		str	r3, [r7, #64]
  42:.\I2C_Class.c ****     lightCommand[0] = 0b10001010;       //ADC-normal, Normal operation, Internal timing, signed out
 143              		.loc 1 42 0
 144 00b4 BB6C     		ldr	r3, [r7, #72]
 145 00b6 8A22     		mov	r2, #138
 146 00b8 1A70     		strb	r2, [r3]
  43:.\I2C_Class.c ****     lightControl[0] = 0b00001100;       // Lux-range = 128000. Calculation: ((range(k)?*(100k/100k)
 147              		.loc 1 43 0
 148 00ba 3B6C     		ldr	r3, [r7, #64]
 149 00bc 0C22     		mov	r2, #12
 150 00be 1A70     		strb	r2, [r3]
  44:.\I2C_Class.c **** 	uint8 result;
  45:.\I2C_Class.c ****     // lux range is set to 128.000 lux if REXT is set up to 50K resistor.
  46:.\I2C_Class.c ****     //uint8 lightControl = 0b00001100;
  47:.\I2C_Class.c ****     
  48:.\I2C_Class.c ****     result = I2C_I2CMasterWriteBuf(LIGHT_SENSOR_COMMAND_ADDRESS, lightCommand, size, I2C_I2C_MODE_C
 151              		.loc 1 48 0
 152 00c0 BA6C     		ldr	r2, [r7, #72]
 153 00c2 164B     		ldr	r3, .L4
 154 00c4 1B68     		ldr	r3, [r3]
 155 00c6 0020     		mov	r0, #0
 156 00c8 111C     		mov	r1, r2
 157 00ca 1A1C     		mov	r2, r3
 158 00cc 0023     		mov	r3, #0
 159 00ce FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 160 00d2 021C     		mov	r2, r0
 161 00d4 3B1C     		mov	r3, r7
 162 00d6 3F33     		add	r3, r3, #63
 163 00d8 1A70     		strb	r2, [r3]
  49:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 164              		.loc 1 49 0
 165 00da C046     		mov	r8, r8
 166              	.L2:
 167              		.loc 1 49 0 is_stmt 0 discriminator 1
 168 00dc FFF7FEFF 		bl	I2C_I2CMasterStatus
 169 00e0 021C     		mov	r2, r0
 170 00e2 0223     		mov	r3, #2
 171 00e4 1340     		and	r3, r2
 172 00e6 F9D0     		beq	.L2
  50:.\I2C_Class.c ****     CyDelay(60);
 173              		.loc 1 50 0 is_stmt 1
 174 00e8 3C20     		mov	r0, #60
 175 00ea FFF7FEFF 		bl	CyDelay
  51:.\I2C_Class.c ****     
  52:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 176              		.loc 1 52 0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 5


 177 00ee 3B1C     		mov	r3, r7
 178 00f0 3F33     		add	r3, r3, #63
 179 00f2 1B78     		ldrb	r3, [r3]
 180 00f4 002B     		cmp	r3, #0
 181 00f6 0CD1     		bne	.L3
  53:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(LIGHT_SENSOR_CONTROL_ADDRESS, lightControl, size, I2C_I2C_MO
 182              		.loc 1 53 0
 183 00f8 3A6C     		ldr	r2, [r7, #64]
 184 00fa 084B     		ldr	r3, .L4
 185 00fc 1B68     		ldr	r3, [r3]
 186 00fe 0120     		mov	r0, #1
 187 0100 111C     		mov	r1, r2
 188 0102 1A1C     		mov	r2, r3
 189 0104 0023     		mov	r3, #0
 190 0106 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 191 010a 021C     		mov	r2, r0
 192 010c 3B1C     		mov	r3, r7
 193 010e 3F33     		add	r3, r3, #63
 194 0110 1A70     		strb	r2, [r3]
 195              	.L3:
 196 0112 B546     		mov	sp, r6
  54:.\I2C_Class.c ****     }
  55:.\I2C_Class.c **** }
 197              		.loc 1 55 0
 198 0114 BD46     		mov	sp, r7
 199 0116 15B0     		add	sp, sp, #84
 200              		@ sp needed
 201 0118 F0BD     		pop	{r4, r5, r6, r7, pc}
 202              	.L5:
 203 011a C046     		.align	2
 204              	.L4:
 205 011c 00000000 		.word	size
 206              		.cfi_endproc
 207              	.LFE33:
 208              		.size	initI2C, .-initI2C
 209              		.section	.text.adjustWindow,"ax",%progbits
 210              		.align	2
 211              		.global	adjustWindow
 212              		.code	16
 213              		.thumb_func
 214              		.type	adjustWindow, %function
 215              	adjustWindow:
 216              	.LFB34:
  56:.\I2C_Class.c **** 
  57:.\I2C_Class.c **** int8 adjustWindow(uint8 pos){
 217              		.loc 1 57 0
 218              		.cfi_startproc
 219 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 220              		.cfi_def_cfa_offset 20
 221              		.cfi_offset 4, -20
 222              		.cfi_offset 5, -16
 223              		.cfi_offset 6, -12
 224              		.cfi_offset 7, -8
 225              		.cfi_offset 14, -4
 226 0002 97B0     		sub	sp, sp, #92
 227              		.cfi_def_cfa_offset 112
 228 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 6


 229              		.cfi_def_cfa_register 7
 230 0006 031C     		mov	r3, r0
 231 0008 3A1C     		mov	r2, r7
 232 000a 3F32     		add	r2, r2, #63
 233 000c 1370     		strb	r3, [r2]
 234 000e 6B46     		mov	r3, sp
 235 0010 1E1C     		mov	r6, r3
  58:.\I2C_Class.c ****     uint8 openWindow[size], closeWindow[size];
 236              		.loc 1 58 0
 237 0012 594B     		ldr	r3, .L15
 238 0014 1A68     		ldr	r2, [r3]
 239 0016 531E     		sub	r3, r2, #1
 240 0018 3B65     		str	r3, [r7, #80]
 241 001a 131C     		mov	r3, r2
 242 001c 1C1C     		mov	r4, r3
 243 001e 0023     		mov	r3, #0
 244 0020 1D1C     		mov	r5, r3
 245 0022 630F     		lsr	r3, r4, #29
 246 0024 E900     		lsl	r1, r5, #3
 247 0026 7963     		str	r1, [r7, #52]
 248 0028 796B     		ldr	r1, [r7, #52]
 249 002a 1943     		orr	r1, r3
 250 002c 7963     		str	r1, [r7, #52]
 251 002e E300     		lsl	r3, r4, #3
 252 0030 131C     		mov	r3, r2
 253 0032 BB62     		str	r3, [r7, #40]
 254 0034 0023     		mov	r3, #0
 255 0036 FB62     		str	r3, [r7, #44]
 256 0038 B96A     		ldr	r1, [r7, #40]
 257 003a 4B0F     		lsr	r3, r1, #29
 258 003c F96A     		ldr	r1, [r7, #44]
 259 003e C900     		lsl	r1, r1, #3
 260 0040 7962     		str	r1, [r7, #36]
 261 0042 796A     		ldr	r1, [r7, #36]
 262 0044 1943     		orr	r1, r3
 263 0046 7962     		str	r1, [r7, #36]
 264 0048 BB6A     		ldr	r3, [r7, #40]
 265 004a DB00     		lsl	r3, r3, #3
 266 004c 131C     		mov	r3, r2
 267 004e 0733     		add	r3, r3, #7
 268 0050 DB08     		lsr	r3, r3, #3
 269 0052 DB00     		lsl	r3, r3, #3
 270 0054 6946     		mov	r1, sp
 271 0056 C91A     		sub	r1, r1, r3
 272 0058 8D46     		mov	sp, r1
 273 005a 6B46     		mov	r3, sp
 274 005c 0033     		add	r3, r3, #0
 275 005e FB64     		str	r3, [r7, #76]
 276 0060 454B     		ldr	r3, .L15
 277 0062 1B68     		ldr	r3, [r3]
 278 0064 5A1E     		sub	r2, r3, #1
 279 0066 BA64     		str	r2, [r7, #72]
 280 0068 1A1C     		mov	r2, r3
 281 006a BA61     		str	r2, [r7, #24]
 282 006c 0022     		mov	r2, #0
 283 006e FA61     		str	r2, [r7, #28]
 284 0070 B969     		ldr	r1, [r7, #24]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 7


 285 0072 4A0F     		lsr	r2, r1, #29
 286 0074 F969     		ldr	r1, [r7, #28]
 287 0076 C900     		lsl	r1, r1, #3
 288 0078 7961     		str	r1, [r7, #20]
 289 007a 7969     		ldr	r1, [r7, #20]
 290 007c 1143     		orr	r1, r2
 291 007e 7961     		str	r1, [r7, #20]
 292 0080 BA69     		ldr	r2, [r7, #24]
 293 0082 D200     		lsl	r2, r2, #3
 294 0084 1A1C     		mov	r2, r3
 295 0086 BA60     		str	r2, [r7, #8]
 296 0088 0022     		mov	r2, #0
 297 008a FA60     		str	r2, [r7, #12]
 298 008c B968     		ldr	r1, [r7, #8]
 299 008e 4A0F     		lsr	r2, r1, #29
 300 0090 F968     		ldr	r1, [r7, #12]
 301 0092 C900     		lsl	r1, r1, #3
 302 0094 7960     		str	r1, [r7, #4]
 303 0096 7968     		ldr	r1, [r7, #4]
 304 0098 1143     		orr	r1, r2
 305 009a 7960     		str	r1, [r7, #4]
 306 009c BA68     		ldr	r2, [r7, #8]
 307 009e D200     		lsl	r2, r2, #3
 308 00a0 0733     		add	r3, r3, #7
 309 00a2 DB08     		lsr	r3, r3, #3
 310 00a4 DB00     		lsl	r3, r3, #3
 311 00a6 6946     		mov	r1, sp
 312 00a8 C91A     		sub	r1, r1, r3
 313 00aa 8D46     		mov	sp, r1
 314 00ac 6B46     		mov	r3, sp
 315 00ae 0033     		add	r3, r3, #0
 316 00b0 7B64     		str	r3, [r7, #68]
  59:.\I2C_Class.c ****     openWindow[0] = 0xF;
 317              		.loc 1 59 0
 318 00b2 FB6C     		ldr	r3, [r7, #76]
 319 00b4 0F22     		mov	r2, #15
 320 00b6 1A70     		strb	r2, [r3]
  60:.\I2C_Class.c ****     closeWindow[0] = 0x0;
 321              		.loc 1 60 0
 322 00b8 7B6C     		ldr	r3, [r7, #68]
 323 00ba 0022     		mov	r2, #0
 324 00bc 1A70     		strb	r2, [r3]
  61:.\I2C_Class.c ****     uint8 result = 0;
 325              		.loc 1 61 0
 326 00be 3B1C     		mov	r3, r7
 327 00c0 5733     		add	r3, r3, #87
 328 00c2 0022     		mov	r2, #0
 329 00c4 1A70     		strb	r2, [r3]
  62:.\I2C_Class.c ****     uint8 tempWindow = 0;
 330              		.loc 1 62 0
 331 00c6 3B1C     		mov	r3, r7
 332 00c8 4333     		add	r3, r3, #67
 333 00ca 0022     		mov	r2, #0
 334 00cc 1A70     		strb	r2, [r3]
  63:.\I2C_Class.c ****         
  64:.\I2C_Class.c ****     if(pos == 0xFF){
 335              		.loc 1 64 0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 8


 336 00ce 3B1C     		mov	r3, r7
 337 00d0 3F33     		add	r3, r3, #63
 338 00d2 1B78     		ldrb	r3, [r3]
 339 00d4 FF2B     		cmp	r3, #255
 340 00d6 0DD1     		bne	.L7
  65:.\I2C_Class.c ****         // Open window     -                write function  (adress,      dataToSend, NumberOfBytes
  66:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,openWindow,size,I2C_I2C_MODE_COMPLETE_XFER);
 341              		.loc 1 66 0
 342 00d8 FA6C     		ldr	r2, [r7, #76]
 343 00da 274B     		ldr	r3, .L15
 344 00dc 1B68     		ldr	r3, [r3]
 345 00de 4220     		mov	r0, #66
 346 00e0 111C     		mov	r1, r2
 347 00e2 1A1C     		mov	r2, r3
 348 00e4 0023     		mov	r3, #0
 349 00e6 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 350 00ea 021C     		mov	r2, r0
 351 00ec 3B1C     		mov	r3, r7
 352 00ee 5733     		add	r3, r3, #87
 353 00f0 1A70     		strb	r2, [r3]
 354 00f2 12E0     		b	.L8
 355              	.L7:
  67:.\I2C_Class.c ****     }
  68:.\I2C_Class.c ****     else if(pos == 0x0){
 356              		.loc 1 68 0
 357 00f4 3B1C     		mov	r3, r7
 358 00f6 3F33     		add	r3, r3, #63
 359 00f8 1B78     		ldrb	r3, [r3]
 360 00fa 002B     		cmp	r3, #0
 361 00fc 0DD1     		bne	.L8
  69:.\I2C_Class.c ****         // Close window
  70:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,closeWindow,size,I2C_I2C_MODE_COMPLETE_XFER)
 362              		.loc 1 70 0
 363 00fe 7A6C     		ldr	r2, [r7, #68]
 364 0100 1D4B     		ldr	r3, .L15
 365 0102 1B68     		ldr	r3, [r3]
 366 0104 4220     		mov	r0, #66
 367 0106 111C     		mov	r1, r2
 368 0108 1A1C     		mov	r2, r3
 369 010a 0023     		mov	r3, #0
 370 010c FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 371 0110 021C     		mov	r2, r0
 372 0112 3B1C     		mov	r3, r7
 373 0114 5733     		add	r3, r3, #87
 374 0116 1A70     		strb	r2, [r3]
  71:.\I2C_Class.c ****     }
  72:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 375              		.loc 1 72 0
 376 0118 FFE7     		b	.L14
 377              	.L8:
 378              	.L14:
 379 011a C046     		mov	r8, r8
 380              	.L9:
 381              		.loc 1 72 0 is_stmt 0 discriminator 1
 382 011c FFF7FEFF 		bl	I2C_I2CMasterStatus
 383 0120 021C     		mov	r2, r0
 384 0122 0223     		mov	r3, #2
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 9


 385 0124 1340     		and	r3, r2
 386 0126 F9D0     		beq	.L9
  73:.\I2C_Class.c ****     CyDelay(60);
 387              		.loc 1 73 0 is_stmt 1
 388 0128 3C20     		mov	r0, #60
 389 012a FFF7FEFF 		bl	CyDelay
  74:.\I2C_Class.c ****     
  75:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(&tempWindow, NULL, NULL, NULL))){
 390              		.loc 1 75 0
 391 012e 3B1C     		mov	r3, r7
 392 0130 5733     		add	r3, r3, #87
 393 0132 1B78     		ldrb	r3, [r3]
 394 0134 002B     		cmp	r3, #0
 395 0136 18D1     		bne	.L10
 396              		.loc 1 75 0 is_stmt 0 discriminator 1
 397 0138 3B1C     		mov	r3, r7
 398 013a 4333     		add	r3, r3, #67
 399 013c 181C     		mov	r0, r3
 400 013e 0021     		mov	r1, #0
 401 0140 0022     		mov	r2, #0
 402 0142 0023     		mov	r3, #0
 403 0144 FFF7FEFF 		bl	getActuatorStatus
 404 0148 031C     		mov	r3, r0
 405 014a 002B     		cmp	r3, #0
 406 014c 0DD1     		bne	.L10
  76:.\I2C_Class.c ****         if (tempWindow == pos >> 4 ){  //hacky solution when dealing with fully open/closed window
 407              		.loc 1 76 0 is_stmt 1
 408 014e 3B1C     		mov	r3, r7
 409 0150 3F33     		add	r3, r3, #63
 410 0152 1B78     		ldrb	r3, [r3]
 411 0154 1B09     		lsr	r3, r3, #4
 412 0156 DAB2     		uxtb	r2, r3
 413 0158 3B1C     		mov	r3, r7
 414 015a 4333     		add	r3, r3, #67
 415 015c 1B78     		ldrb	r3, [r3]
 416 015e 9A42     		cmp	r2, r3
 417 0160 01D1     		bne	.L11
  77:.\I2C_Class.c ****             return 0;	
 418              		.loc 1 77 0
 419 0162 0023     		mov	r3, #0
 420 0164 02E0     		b	.L12
 421              	.L11:
  78:.\I2C_Class.c ****         }
  79:.\I2C_Class.c ****         else {
  80:.\I2C_Class.c ****             return -1;
 422              		.loc 1 80 0
 423 0166 FF23     		mov	r3, #255
 424 0168 00E0     		b	.L12
 425              	.L10:
  81:.\I2C_Class.c ****         }
  82:.\I2C_Class.c ****     }
  83:.\I2C_Class.c ****     else {
  84:.\I2C_Class.c ****         return -1;
 426              		.loc 1 84 0
 427 016a FF23     		mov	r3, #255
 428              	.L12:
 429 016c B546     		mov	sp, r6
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 10


 430 016e 5BB2     		sxtb	r3, r3
  85:.\I2C_Class.c ****     }
  86:.\I2C_Class.c **** }
 431              		.loc 1 86 0
 432 0170 181C     		mov	r0, r3
 433 0172 BD46     		mov	sp, r7
 434 0174 17B0     		add	sp, sp, #92
 435              		@ sp needed
 436 0176 F0BD     		pop	{r4, r5, r6, r7, pc}
 437              	.L16:
 438              		.align	2
 439              	.L15:
 440 0178 00000000 		.word	size
 441              		.cfi_endproc
 442              	.LFE34:
 443              		.size	adjustWindow, .-adjustWindow
 444              		.section	.text.adjustHeat,"ax",%progbits
 445              		.align	2
 446              		.global	adjustHeat
 447              		.code	16
 448              		.thumb_func
 449              		.type	adjustHeat, %function
 450              	adjustHeat:
 451              	.LFB35:
  87:.\I2C_Class.c **** 
  88:.\I2C_Class.c **** int8 adjustHeat(uint8 heat){
 452              		.loc 1 88 0
 453              		.cfi_startproc
 454 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 455              		.cfi_def_cfa_offset 20
 456              		.cfi_offset 4, -20
 457              		.cfi_offset 5, -16
 458              		.cfi_offset 6, -12
 459              		.cfi_offset 7, -8
 460              		.cfi_offset 14, -4
 461 0002 97B0     		sub	sp, sp, #92
 462              		.cfi_def_cfa_offset 112
 463 0004 00AF     		add	r7, sp, #0
 464              		.cfi_def_cfa_register 7
 465 0006 031C     		mov	r3, r0
 466 0008 3A1C     		mov	r2, r7
 467 000a 3F32     		add	r2, r2, #63
 468 000c 1370     		strb	r3, [r2]
 469 000e 6B46     		mov	r3, sp
 470 0010 1E1C     		mov	r6, r3
  89:.\I2C_Class.c ****     uint8 turnHeatOn[size], turnOffHeat[size];
 471              		.loc 1 89 0
 472 0012 594B     		ldr	r3, .L26
 473 0014 1A68     		ldr	r2, [r3]
 474 0016 531E     		sub	r3, r2, #1
 475 0018 3B65     		str	r3, [r7, #80]
 476 001a 131C     		mov	r3, r2
 477 001c 1C1C     		mov	r4, r3
 478 001e 0023     		mov	r3, #0
 479 0020 1D1C     		mov	r5, r3
 480 0022 630F     		lsr	r3, r4, #29
 481 0024 E900     		lsl	r1, r5, #3
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 11


 482 0026 7963     		str	r1, [r7, #52]
 483 0028 796B     		ldr	r1, [r7, #52]
 484 002a 1943     		orr	r1, r3
 485 002c 7963     		str	r1, [r7, #52]
 486 002e E300     		lsl	r3, r4, #3
 487 0030 131C     		mov	r3, r2
 488 0032 BB62     		str	r3, [r7, #40]
 489 0034 0023     		mov	r3, #0
 490 0036 FB62     		str	r3, [r7, #44]
 491 0038 B96A     		ldr	r1, [r7, #40]
 492 003a 4B0F     		lsr	r3, r1, #29
 493 003c F96A     		ldr	r1, [r7, #44]
 494 003e C900     		lsl	r1, r1, #3
 495 0040 7962     		str	r1, [r7, #36]
 496 0042 796A     		ldr	r1, [r7, #36]
 497 0044 1943     		orr	r1, r3
 498 0046 7962     		str	r1, [r7, #36]
 499 0048 BB6A     		ldr	r3, [r7, #40]
 500 004a DB00     		lsl	r3, r3, #3
 501 004c 131C     		mov	r3, r2
 502 004e 0733     		add	r3, r3, #7
 503 0050 DB08     		lsr	r3, r3, #3
 504 0052 DB00     		lsl	r3, r3, #3
 505 0054 6946     		mov	r1, sp
 506 0056 C91A     		sub	r1, r1, r3
 507 0058 8D46     		mov	sp, r1
 508 005a 6B46     		mov	r3, sp
 509 005c 0033     		add	r3, r3, #0
 510 005e FB64     		str	r3, [r7, #76]
 511 0060 454B     		ldr	r3, .L26
 512 0062 1B68     		ldr	r3, [r3]
 513 0064 5A1E     		sub	r2, r3, #1
 514 0066 BA64     		str	r2, [r7, #72]
 515 0068 1A1C     		mov	r2, r3
 516 006a BA61     		str	r2, [r7, #24]
 517 006c 0022     		mov	r2, #0
 518 006e FA61     		str	r2, [r7, #28]
 519 0070 B969     		ldr	r1, [r7, #24]
 520 0072 4A0F     		lsr	r2, r1, #29
 521 0074 F969     		ldr	r1, [r7, #28]
 522 0076 C900     		lsl	r1, r1, #3
 523 0078 7961     		str	r1, [r7, #20]
 524 007a 7969     		ldr	r1, [r7, #20]
 525 007c 1143     		orr	r1, r2
 526 007e 7961     		str	r1, [r7, #20]
 527 0080 BA69     		ldr	r2, [r7, #24]
 528 0082 D200     		lsl	r2, r2, #3
 529 0084 1A1C     		mov	r2, r3
 530 0086 BA60     		str	r2, [r7, #8]
 531 0088 0022     		mov	r2, #0
 532 008a FA60     		str	r2, [r7, #12]
 533 008c B968     		ldr	r1, [r7, #8]
 534 008e 4A0F     		lsr	r2, r1, #29
 535 0090 F968     		ldr	r1, [r7, #12]
 536 0092 C900     		lsl	r1, r1, #3
 537 0094 7960     		str	r1, [r7, #4]
 538 0096 7968     		ldr	r1, [r7, #4]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 12


 539 0098 1143     		orr	r1, r2
 540 009a 7960     		str	r1, [r7, #4]
 541 009c BA68     		ldr	r2, [r7, #8]
 542 009e D200     		lsl	r2, r2, #3
 543 00a0 0733     		add	r3, r3, #7
 544 00a2 DB08     		lsr	r3, r3, #3
 545 00a4 DB00     		lsl	r3, r3, #3
 546 00a6 6946     		mov	r1, sp
 547 00a8 C91A     		sub	r1, r1, r3
 548 00aa 8D46     		mov	sp, r1
 549 00ac 6B46     		mov	r3, sp
 550 00ae 0033     		add	r3, r3, #0
 551 00b0 7B64     		str	r3, [r7, #68]
  90:.\I2C_Class.c ****     turnHeatOn[0] = 0b01000111;
 552              		.loc 1 90 0
 553 00b2 FB6C     		ldr	r3, [r7, #76]
 554 00b4 4722     		mov	r2, #71
 555 00b6 1A70     		strb	r2, [r3]
  91:.\I2C_Class.c ****     turnOffHeat[0] = 0b01000000;
 556              		.loc 1 91 0
 557 00b8 7B6C     		ldr	r3, [r7, #68]
 558 00ba 4022     		mov	r2, #64
 559 00bc 1A70     		strb	r2, [r3]
  92:.\I2C_Class.c ****     uint8 result = 0;
 560              		.loc 1 92 0
 561 00be 3B1C     		mov	r3, r7
 562 00c0 5733     		add	r3, r3, #87
 563 00c2 0022     		mov	r2, #0
 564 00c4 1A70     		strb	r2, [r3]
  93:.\I2C_Class.c ****     uint8 temp = 0xFF;
 565              		.loc 1 93 0
 566 00c6 3B1C     		mov	r3, r7
 567 00c8 4333     		add	r3, r3, #67
 568 00ca FF22     		mov	r2, #255
 569 00cc 1A70     		strb	r2, [r3]
  94:.\I2C_Class.c ****     
  95:.\I2C_Class.c ****     I2C_I2CMasterClearStatus();
 570              		.loc 1 95 0
 571 00ce FFF7FEFF 		bl	I2C_I2CMasterClearStatus
  96:.\I2C_Class.c ****     
  97:.\I2C_Class.c ****     if(heat == 0b111){
 572              		.loc 1 97 0
 573 00d2 3B1C     		mov	r3, r7
 574 00d4 3F33     		add	r3, r3, #63
 575 00d6 1B78     		ldrb	r3, [r3]
 576 00d8 072B     		cmp	r3, #7
 577 00da 0DD1     		bne	.L18
  98:.\I2C_Class.c ****         // Turn on heat
  99:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnHeatOn,size,I2C_I2C_MODE_COMPLETE_XFER);
 578              		.loc 1 99 0
 579 00dc FA6C     		ldr	r2, [r7, #76]
 580 00de 264B     		ldr	r3, .L26
 581 00e0 1B68     		ldr	r3, [r3]
 582 00e2 4220     		mov	r0, #66
 583 00e4 111C     		mov	r1, r2
 584 00e6 1A1C     		mov	r2, r3
 585 00e8 0023     		mov	r3, #0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 13


 586 00ea FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 587 00ee 021C     		mov	r2, r0
 588 00f0 3B1C     		mov	r3, r7
 589 00f2 5733     		add	r3, r3, #87
 590 00f4 1A70     		strb	r2, [r3]
 591 00f6 12E0     		b	.L19
 592              	.L18:
 100:.\I2C_Class.c ****     }
 101:.\I2C_Class.c ****     else if(heat == 0b0){
 593              		.loc 1 101 0
 594 00f8 3B1C     		mov	r3, r7
 595 00fa 3F33     		add	r3, r3, #63
 596 00fc 1B78     		ldrb	r3, [r3]
 597 00fe 002B     		cmp	r3, #0
 598 0100 0DD1     		bne	.L19
 102:.\I2C_Class.c ****         // Turn off heat
 103:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOffHeat,size,I2C_I2C_MODE_COMPLETE_XFER)
 599              		.loc 1 103 0
 600 0102 7A6C     		ldr	r2, [r7, #68]
 601 0104 1C4B     		ldr	r3, .L26
 602 0106 1B68     		ldr	r3, [r3]
 603 0108 4220     		mov	r0, #66
 604 010a 111C     		mov	r1, r2
 605 010c 1A1C     		mov	r2, r3
 606 010e 0023     		mov	r3, #0
 607 0110 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 608 0114 021C     		mov	r2, r0
 609 0116 3B1C     		mov	r3, r7
 610 0118 5733     		add	r3, r3, #87
 611 011a 1A70     		strb	r2, [r3]
 104:.\I2C_Class.c ****     }
 105:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 612              		.loc 1 105 0
 613 011c FFE7     		b	.L25
 614              	.L19:
 615              	.L25:
 616 011e C046     		mov	r8, r8
 617              	.L20:
 618              		.loc 1 105 0 is_stmt 0 discriminator 1
 619 0120 FFF7FEFF 		bl	I2C_I2CMasterStatus
 620 0124 021C     		mov	r2, r0
 621 0126 0223     		mov	r3, #2
 622 0128 1340     		and	r3, r2
 623 012a F9D0     		beq	.L20
 106:.\I2C_Class.c ****     CyDelay(60);
 624              		.loc 1 106 0 is_stmt 1
 625 012c 3C20     		mov	r0, #60
 626 012e FFF7FEFF 		bl	CyDelay
 107:.\I2C_Class.c **** 
 108:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(NULL, &temp, NULL, NULL))){
 627              		.loc 1 108 0
 628 0132 3B1C     		mov	r3, r7
 629 0134 5733     		add	r3, r3, #87
 630 0136 1B78     		ldrb	r3, [r3]
 631 0138 002B     		cmp	r3, #0
 632 013a 16D1     		bne	.L21
 633              		.loc 1 108 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 14


 634 013c 3B1C     		mov	r3, r7
 635 013e 4333     		add	r3, r3, #67
 636 0140 0020     		mov	r0, #0
 637 0142 191C     		mov	r1, r3
 638 0144 0022     		mov	r2, #0
 639 0146 0023     		mov	r3, #0
 640 0148 FFF7FEFF 		bl	getActuatorStatus
 641 014c 031C     		mov	r3, r0
 642 014e 002B     		cmp	r3, #0
 643 0150 0BD1     		bne	.L21
 109:.\I2C_Class.c ****         if (temp == heat){
 644              		.loc 1 109 0 is_stmt 1
 645 0152 3B1C     		mov	r3, r7
 646 0154 4333     		add	r3, r3, #67
 647 0156 1B78     		ldrb	r3, [r3]
 648 0158 3A1C     		mov	r2, r7
 649 015a 3F32     		add	r2, r2, #63
 650 015c 1278     		ldrb	r2, [r2]
 651 015e 9A42     		cmp	r2, r3
 652 0160 01D1     		bne	.L22
 110:.\I2C_Class.c ****             return 0;
 653              		.loc 1 110 0
 654 0162 0023     		mov	r3, #0
 655 0164 02E0     		b	.L23
 656              	.L22:
 111:.\I2C_Class.c ****         }
 112:.\I2C_Class.c ****         else {
 113:.\I2C_Class.c ****             return -1;   
 657              		.loc 1 113 0
 658 0166 FF23     		mov	r3, #255
 659 0168 00E0     		b	.L23
 660              	.L21:
 114:.\I2C_Class.c ****         }
 115:.\I2C_Class.c ****     }
 116:.\I2C_Class.c ****     else {
 117:.\I2C_Class.c ****         return -1;
 661              		.loc 1 117 0
 662 016a FF23     		mov	r3, #255
 663              	.L23:
 664 016c B546     		mov	sp, r6
 665 016e 5BB2     		sxtb	r3, r3
 118:.\I2C_Class.c ****     }
 119:.\I2C_Class.c **** }
 666              		.loc 1 119 0
 667 0170 181C     		mov	r0, r3
 668 0172 BD46     		mov	sp, r7
 669 0174 17B0     		add	sp, sp, #92
 670              		@ sp needed
 671 0176 F0BD     		pop	{r4, r5, r6, r7, pc}
 672              	.L27:
 673              		.align	2
 674              	.L26:
 675 0178 00000000 		.word	size
 676              		.cfi_endproc
 677              	.LFE35:
 678              		.size	adjustHeat, .-adjustHeat
 679              		.section	.text.adjustVentilation,"ax",%progbits
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 15


 680              		.align	2
 681              		.global	adjustVentilation
 682              		.code	16
 683              		.thumb_func
 684              		.type	adjustVentilation, %function
 685              	adjustVentilation:
 686              	.LFB36:
 120:.\I2C_Class.c **** 
 121:.\I2C_Class.c **** int8 adjustVentilation(uint8 speed){
 687              		.loc 1 121 0
 688              		.cfi_startproc
 689 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 690              		.cfi_def_cfa_offset 20
 691              		.cfi_offset 4, -20
 692              		.cfi_offset 5, -16
 693              		.cfi_offset 6, -12
 694              		.cfi_offset 7, -8
 695              		.cfi_offset 14, -4
 696 0002 97B0     		sub	sp, sp, #92
 697              		.cfi_def_cfa_offset 112
 698 0004 00AF     		add	r7, sp, #0
 699              		.cfi_def_cfa_register 7
 700 0006 031C     		mov	r3, r0
 701 0008 3A1C     		mov	r2, r7
 702 000a 3F32     		add	r2, r2, #63
 703 000c 1370     		strb	r3, [r2]
 704 000e 6B46     		mov	r3, sp
 705 0010 1E1C     		mov	r6, r3
 122:.\I2C_Class.c ****     uint8 turnOnVent[size], turnOffVent[size];
 706              		.loc 1 122 0
 707 0012 594B     		ldr	r3, .L37
 708 0014 1A68     		ldr	r2, [r3]
 709 0016 531E     		sub	r3, r2, #1
 710 0018 3B65     		str	r3, [r7, #80]
 711 001a 131C     		mov	r3, r2
 712 001c 1C1C     		mov	r4, r3
 713 001e 0023     		mov	r3, #0
 714 0020 1D1C     		mov	r5, r3
 715 0022 630F     		lsr	r3, r4, #29
 716 0024 E900     		lsl	r1, r5, #3
 717 0026 7963     		str	r1, [r7, #52]
 718 0028 796B     		ldr	r1, [r7, #52]
 719 002a 1943     		orr	r1, r3
 720 002c 7963     		str	r1, [r7, #52]
 721 002e E300     		lsl	r3, r4, #3
 722 0030 131C     		mov	r3, r2
 723 0032 BB62     		str	r3, [r7, #40]
 724 0034 0023     		mov	r3, #0
 725 0036 FB62     		str	r3, [r7, #44]
 726 0038 B96A     		ldr	r1, [r7, #40]
 727 003a 4B0F     		lsr	r3, r1, #29
 728 003c F96A     		ldr	r1, [r7, #44]
 729 003e C900     		lsl	r1, r1, #3
 730 0040 7962     		str	r1, [r7, #36]
 731 0042 796A     		ldr	r1, [r7, #36]
 732 0044 1943     		orr	r1, r3
 733 0046 7962     		str	r1, [r7, #36]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 16


 734 0048 BB6A     		ldr	r3, [r7, #40]
 735 004a DB00     		lsl	r3, r3, #3
 736 004c 131C     		mov	r3, r2
 737 004e 0733     		add	r3, r3, #7
 738 0050 DB08     		lsr	r3, r3, #3
 739 0052 DB00     		lsl	r3, r3, #3
 740 0054 6946     		mov	r1, sp
 741 0056 C91A     		sub	r1, r1, r3
 742 0058 8D46     		mov	sp, r1
 743 005a 6B46     		mov	r3, sp
 744 005c 0033     		add	r3, r3, #0
 745 005e FB64     		str	r3, [r7, #76]
 746 0060 454B     		ldr	r3, .L37
 747 0062 1B68     		ldr	r3, [r3]
 748 0064 5A1E     		sub	r2, r3, #1
 749 0066 BA64     		str	r2, [r7, #72]
 750 0068 1A1C     		mov	r2, r3
 751 006a BA61     		str	r2, [r7, #24]
 752 006c 0022     		mov	r2, #0
 753 006e FA61     		str	r2, [r7, #28]
 754 0070 B969     		ldr	r1, [r7, #24]
 755 0072 4A0F     		lsr	r2, r1, #29
 756 0074 F969     		ldr	r1, [r7, #28]
 757 0076 C900     		lsl	r1, r1, #3
 758 0078 7961     		str	r1, [r7, #20]
 759 007a 7969     		ldr	r1, [r7, #20]
 760 007c 1143     		orr	r1, r2
 761 007e 7961     		str	r1, [r7, #20]
 762 0080 BA69     		ldr	r2, [r7, #24]
 763 0082 D200     		lsl	r2, r2, #3
 764 0084 1A1C     		mov	r2, r3
 765 0086 BA60     		str	r2, [r7, #8]
 766 0088 0022     		mov	r2, #0
 767 008a FA60     		str	r2, [r7, #12]
 768 008c B968     		ldr	r1, [r7, #8]
 769 008e 4A0F     		lsr	r2, r1, #29
 770 0090 F968     		ldr	r1, [r7, #12]
 771 0092 C900     		lsl	r1, r1, #3
 772 0094 7960     		str	r1, [r7, #4]
 773 0096 7968     		ldr	r1, [r7, #4]
 774 0098 1143     		orr	r1, r2
 775 009a 7960     		str	r1, [r7, #4]
 776 009c BA68     		ldr	r2, [r7, #8]
 777 009e D200     		lsl	r2, r2, #3
 778 00a0 0733     		add	r3, r3, #7
 779 00a2 DB08     		lsr	r3, r3, #3
 780 00a4 DB00     		lsl	r3, r3, #3
 781 00a6 6946     		mov	r1, sp
 782 00a8 C91A     		sub	r1, r1, r3
 783 00aa 8D46     		mov	sp, r1
 784 00ac 6B46     		mov	r3, sp
 785 00ae 0033     		add	r3, r3, #0
 786 00b0 7B64     		str	r3, [r7, #68]
 123:.\I2C_Class.c ****     turnOnVent[0] = 0b10000111;
 787              		.loc 1 123 0
 788 00b2 FB6C     		ldr	r3, [r7, #76]
 789 00b4 8722     		mov	r2, #135
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 17


 790 00b6 1A70     		strb	r2, [r3]
 124:.\I2C_Class.c ****     turnOffVent[0] = 0b10000000;
 791              		.loc 1 124 0
 792 00b8 7B6C     		ldr	r3, [r7, #68]
 793 00ba 8022     		mov	r2, #128
 794 00bc 1A70     		strb	r2, [r3]
 125:.\I2C_Class.c ****     uint8 result = 0;
 795              		.loc 1 125 0
 796 00be 3B1C     		mov	r3, r7
 797 00c0 5733     		add	r3, r3, #87
 798 00c2 0022     		mov	r2, #0
 799 00c4 1A70     		strb	r2, [r3]
 126:.\I2C_Class.c ****     uint8 temp = 0xFF;
 800              		.loc 1 126 0
 801 00c6 3B1C     		mov	r3, r7
 802 00c8 4333     		add	r3, r3, #67
 803 00ca FF22     		mov	r2, #255
 804 00cc 1A70     		strb	r2, [r3]
 127:.\I2C_Class.c ****         
 128:.\I2C_Class.c ****     if(speed == 0xFF){
 805              		.loc 1 128 0
 806 00ce 3B1C     		mov	r3, r7
 807 00d0 3F33     		add	r3, r3, #63
 808 00d2 1B78     		ldrb	r3, [r3]
 809 00d4 FF2B     		cmp	r3, #255
 810 00d6 0DD1     		bne	.L29
 129:.\I2C_Class.c ****         // Turn vent on
 130:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOnVent,size,I2C_I2C_MODE_COMPLETE_XFER);
 811              		.loc 1 130 0
 812 00d8 FA6C     		ldr	r2, [r7, #76]
 813 00da 274B     		ldr	r3, .L37
 814 00dc 1B68     		ldr	r3, [r3]
 815 00de 4220     		mov	r0, #66
 816 00e0 111C     		mov	r1, r2
 817 00e2 1A1C     		mov	r2, r3
 818 00e4 0023     		mov	r3, #0
 819 00e6 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 820 00ea 021C     		mov	r2, r0
 821 00ec 3B1C     		mov	r3, r7
 822 00ee 5733     		add	r3, r3, #87
 823 00f0 1A70     		strb	r2, [r3]
 824 00f2 12E0     		b	.L30
 825              	.L29:
 131:.\I2C_Class.c ****     }
 132:.\I2C_Class.c ****     else if(speed == 0b0){
 826              		.loc 1 132 0
 827 00f4 3B1C     		mov	r3, r7
 828 00f6 3F33     		add	r3, r3, #63
 829 00f8 1B78     		ldrb	r3, [r3]
 830 00fa 002B     		cmp	r3, #0
 831 00fc 0DD1     		bne	.L30
 133:.\I2C_Class.c ****         // Turn vent off
 134:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOffVent,size,I2C_I2C_MODE_COMPLETE_XFER)
 832              		.loc 1 134 0
 833 00fe 7A6C     		ldr	r2, [r7, #68]
 834 0100 1D4B     		ldr	r3, .L37
 835 0102 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 18


 836 0104 4220     		mov	r0, #66
 837 0106 111C     		mov	r1, r2
 838 0108 1A1C     		mov	r2, r3
 839 010a 0023     		mov	r3, #0
 840 010c FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 841 0110 021C     		mov	r2, r0
 842 0112 3B1C     		mov	r3, r7
 843 0114 5733     		add	r3, r3, #87
 844 0116 1A70     		strb	r2, [r3]
 135:.\I2C_Class.c ****     }
 136:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 845              		.loc 1 136 0
 846 0118 FFE7     		b	.L36
 847              	.L30:
 848              	.L36:
 849 011a C046     		mov	r8, r8
 850              	.L31:
 851              		.loc 1 136 0 is_stmt 0 discriminator 1
 852 011c FFF7FEFF 		bl	I2C_I2CMasterStatus
 853 0120 021C     		mov	r2, r0
 854 0122 0223     		mov	r3, #2
 855 0124 1340     		and	r3, r2
 856 0126 F9D0     		beq	.L31
 137:.\I2C_Class.c ****     CyDelay(60);
 857              		.loc 1 137 0 is_stmt 1
 858 0128 3C20     		mov	r0, #60
 859 012a FFF7FEFF 		bl	CyDelay
 138:.\I2C_Class.c ****     
 139:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(NULL, NULL, &temp, NULL))){
 860              		.loc 1 139 0
 861 012e 3B1C     		mov	r3, r7
 862 0130 5733     		add	r3, r3, #87
 863 0132 1B78     		ldrb	r3, [r3]
 864 0134 002B     		cmp	r3, #0
 865 0136 18D1     		bne	.L32
 866              		.loc 1 139 0 is_stmt 0 discriminator 1
 867 0138 3B1C     		mov	r3, r7
 868 013a 4333     		add	r3, r3, #67
 869 013c 0020     		mov	r0, #0
 870 013e 0021     		mov	r1, #0
 871 0140 1A1C     		mov	r2, r3
 872 0142 0023     		mov	r3, #0
 873 0144 FFF7FEFF 		bl	getActuatorStatus
 874 0148 031C     		mov	r3, r0
 875 014a 002B     		cmp	r3, #0
 876 014c 0DD1     		bne	.L32
 140:.\I2C_Class.c ****         if (temp == speed >> 5){ //Hacky solution when not dealing with more than 2 steps
 877              		.loc 1 140 0 is_stmt 1
 878 014e 3B1C     		mov	r3, r7
 879 0150 3F33     		add	r3, r3, #63
 880 0152 1B78     		ldrb	r3, [r3]
 881 0154 5B09     		lsr	r3, r3, #5
 882 0156 DAB2     		uxtb	r2, r3
 883 0158 3B1C     		mov	r3, r7
 884 015a 4333     		add	r3, r3, #67
 885 015c 1B78     		ldrb	r3, [r3]
 886 015e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 19


 887 0160 01D1     		bne	.L33
 141:.\I2C_Class.c ****             return 0;
 888              		.loc 1 141 0
 889 0162 0023     		mov	r3, #0
 890 0164 02E0     		b	.L34
 891              	.L33:
 142:.\I2C_Class.c ****             }
 143:.\I2C_Class.c ****         else {
 144:.\I2C_Class.c ****             return -1;       
 892              		.loc 1 144 0
 893 0166 FF23     		mov	r3, #255
 894 0168 00E0     		b	.L34
 895              	.L32:
 145:.\I2C_Class.c ****         }
 146:.\I2C_Class.c ****     }
 147:.\I2C_Class.c ****     else {
 148:.\I2C_Class.c ****         return -1;
 896              		.loc 1 148 0
 897 016a FF23     		mov	r3, #255
 898              	.L34:
 899 016c B546     		mov	sp, r6
 900 016e 5BB2     		sxtb	r3, r3
 149:.\I2C_Class.c ****     }
 150:.\I2C_Class.c **** }
 901              		.loc 1 150 0
 902 0170 181C     		mov	r0, r3
 903 0172 BD46     		mov	sp, r7
 904 0174 17B0     		add	sp, sp, #92
 905              		@ sp needed
 906 0176 F0BD     		pop	{r4, r5, r6, r7, pc}
 907              	.L38:
 908              		.align	2
 909              	.L37:
 910 0178 00000000 		.word	size
 911              		.cfi_endproc
 912              	.LFE36:
 913              		.size	adjustVentilation, .-adjustVentilation
 914              		.section	.text.adjustIrrigation,"ax",%progbits
 915              		.align	2
 916              		.global	adjustIrrigation
 917              		.code	16
 918              		.thumb_func
 919              		.type	adjustIrrigation, %function
 920              	adjustIrrigation:
 921              	.LFB37:
 151:.\I2C_Class.c **** 
 152:.\I2C_Class.c **** int8 adjustIrrigation(uint8 index, uint8 onOff){
 922              		.loc 1 152 0
 923              		.cfi_startproc
 924 0000 80B5     		push	{r7, lr}
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 7, -8
 927              		.cfi_offset 14, -4
 928 0002 84B0     		sub	sp, sp, #16
 929              		.cfi_def_cfa_offset 24
 930 0004 00AF     		add	r7, sp, #0
 931              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 20


 932 0006 0A1C     		mov	r2, r1
 933 0008 FB1D     		add	r3, r7, #7
 934 000a 011C     		add	r1, r0, #0
 935 000c 1970     		strb	r1, [r3]
 936 000e BB1D     		add	r3, r7, #6
 937 0010 1A70     		strb	r2, [r3]
 153:.\I2C_Class.c ****     uint8 irriTransfer[1];
 154:.\I2C_Class.c ****     uint8 result;
 155:.\I2C_Class.c ****     
 156:.\I2C_Class.c ****     //getActuatorStatus(NULL, NULL, NULL, &irrigationStatus);
 157:.\I2C_Class.c **** 
 158:.\I2C_Class.c ****         /* In order for this code to function properly, the static int "irrigation" 
 159:.\I2C_Class.c ****         has to get updated each time this function is called. */
 160:.\I2C_Class.c ****     if (onOff == 0xFF){    // Irrigation turn on
 938              		.loc 1 160 0
 939 0012 BB1D     		add	r3, r7, #6
 940 0014 1B78     		ldrb	r3, [r3]
 941 0016 FF2B     		cmp	r3, #255
 942 0018 18D1     		bne	.L40
 161:.\I2C_Class.c ****         irriTransfer[0] = (irrigationStatus |= (1 << index)) | 0b11000000;
 943              		.loc 1 161 0
 944 001a FB1D     		add	r3, r7, #7
 945 001c 1B78     		ldrb	r3, [r3]
 946 001e 0122     		mov	r2, #1
 947 0020 111C     		mov	r1, r2
 948 0022 9940     		lsl	r1, r1, r3
 949 0024 0B1C     		mov	r3, r1
 950 0026 DAB2     		uxtb	r2, r3
 951 0028 314B     		ldr	r3, .L47
 952 002a 1B78     		ldrb	r3, [r3]
 953 002c DBB2     		uxtb	r3, r3
 954 002e 1343     		orr	r3, r2
 955 0030 DBB2     		uxtb	r3, r3
 956 0032 DAB2     		uxtb	r2, r3
 957 0034 2E4B     		ldr	r3, .L47
 958 0036 1A70     		strb	r2, [r3]
 959 0038 2D4B     		ldr	r3, .L47
 960 003a 1B78     		ldrb	r3, [r3]
 961 003c 4022     		mov	r2, #64
 962 003e 5242     		neg	r2, r2
 963 0040 1343     		orr	r3, r2
 964 0042 DAB2     		uxtb	r2, r3
 965 0044 3B1C     		mov	r3, r7
 966 0046 0C33     		add	r3, r3, #12
 967 0048 1A70     		strb	r2, [r3]
 968 004a 20E0     		b	.L41
 969              	.L40:
 162:.\I2C_Class.c ****     }
 163:.\I2C_Class.c ****     else if (onOff == 0x00){   // Irrigation turn off
 970              		.loc 1 163 0
 971 004c BB1D     		add	r3, r7, #6
 972 004e 1B78     		ldrb	r3, [r3]
 973 0050 002B     		cmp	r3, #0
 974 0052 1AD1     		bne	.L42
 164:.\I2C_Class.c ****         irriTransfer[0] = (irrigationStatus &= ~(1 << index)) | 0b11000000;
 975              		.loc 1 164 0
 976 0054 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 21


 977 0056 1B78     		ldrb	r3, [r3]
 978 0058 0122     		mov	r2, #1
 979 005a 111C     		mov	r1, r2
 980 005c 9940     		lsl	r1, r1, r3
 981 005e 0B1C     		mov	r3, r1
 982 0060 DBB2     		uxtb	r3, r3
 983 0062 DB43     		mvn	r3, r3
 984 0064 DBB2     		uxtb	r3, r3
 985 0066 224A     		ldr	r2, .L47
 986 0068 1278     		ldrb	r2, [r2]
 987 006a D2B2     		uxtb	r2, r2
 988 006c 1340     		and	r3, r2
 989 006e DBB2     		uxtb	r3, r3
 990 0070 DAB2     		uxtb	r2, r3
 991 0072 1F4B     		ldr	r3, .L47
 992 0074 1A70     		strb	r2, [r3]
 993 0076 1E4B     		ldr	r3, .L47
 994 0078 1B78     		ldrb	r3, [r3]
 995 007a 4022     		mov	r2, #64
 996 007c 5242     		neg	r2, r2
 997 007e 1343     		orr	r3, r2
 998 0080 DAB2     		uxtb	r2, r3
 999 0082 3B1C     		mov	r3, r7
 1000 0084 0C33     		add	r3, r3, #12
 1001 0086 1A70     		strb	r2, [r3]
 1002 0088 01E0     		b	.L41
 1003              	.L42:
 165:.\I2C_Class.c ****     }
 166:.\I2C_Class.c ****     else{
 167:.\I2C_Class.c ****         return -1; // Bad argument.
 1004              		.loc 1 167 0
 1005 008a FF23     		mov	r3, #255
 1006 008c 2BE0     		b	.L46
 1007              	.L41:
 168:.\I2C_Class.c ****     }
 169:.\I2C_Class.c ****     
 170:.\I2C_Class.c ****     result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS, irriTransfer, 1, I2C_I2C_MODE_COMPLETE_XFER);
 1008              		.loc 1 170 0
 1009 008e 3B1C     		mov	r3, r7
 1010 0090 0C33     		add	r3, r3, #12
 1011 0092 4220     		mov	r0, #66
 1012 0094 191C     		mov	r1, r3
 1013 0096 0122     		mov	r2, #1
 1014 0098 0023     		mov	r3, #0
 1015 009a FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 1016 009e 021C     		mov	r2, r0
 1017 00a0 3B1C     		mov	r3, r7
 1018 00a2 0F33     		add	r3, r3, #15
 1019 00a4 1A70     		strb	r2, [r3]
 171:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 1020              		.loc 1 171 0
 1021 00a6 C046     		mov	r8, r8
 1022              	.L44:
 1023              		.loc 1 171 0 is_stmt 0 discriminator 1
 1024 00a8 FFF7FEFF 		bl	I2C_I2CMasterStatus
 1025 00ac 021C     		mov	r2, r0
 1026 00ae 0223     		mov	r3, #2
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 22


 1027 00b0 1340     		and	r3, r2
 1028 00b2 F9D0     		beq	.L44
 172:.\I2C_Class.c ****     CyDelay(60);
 1029              		.loc 1 172 0 is_stmt 1
 1030 00b4 3C20     		mov	r0, #60
 1031 00b6 FFF7FEFF 		bl	CyDelay
 173:.\I2C_Class.c ****     
 174:.\I2C_Class.c ****     getActuatorStatus(NULL, NULL, NULL, irriTransfer);
 1032              		.loc 1 174 0
 1033 00ba 3B1C     		mov	r3, r7
 1034 00bc 0C33     		add	r3, r3, #12
 1035 00be 0020     		mov	r0, #0
 1036 00c0 0021     		mov	r1, #0
 1037 00c2 0022     		mov	r2, #0
 1038 00c4 FFF7FEFF 		bl	getActuatorStatus
 175:.\I2C_Class.c ****     
 176:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 1039              		.loc 1 176 0
 1040 00c8 3B1C     		mov	r3, r7
 1041 00ca 0F33     		add	r3, r3, #15
 1042 00cc 1B78     		ldrb	r3, [r3]
 1043 00ce 002B     		cmp	r3, #0
 1044 00d0 08D1     		bne	.L45
 177:.\I2C_Class.c ****         if(irrigationStatus == irriTransfer[0]){
 1045              		.loc 1 177 0
 1046 00d2 3B1C     		mov	r3, r7
 1047 00d4 0C33     		add	r3, r3, #12
 1048 00d6 1A78     		ldrb	r2, [r3]
 1049 00d8 054B     		ldr	r3, .L47
 1050 00da 1B78     		ldrb	r3, [r3]
 1051 00dc 9A42     		cmp	r2, r3
 1052 00de 01D1     		bne	.L45
 178:.\I2C_Class.c ****             return 0;
 1053              		.loc 1 178 0
 1054 00e0 0023     		mov	r3, #0
 1055 00e2 00E0     		b	.L46
 1056              	.L45:
 179:.\I2C_Class.c ****         }
 180:.\I2C_Class.c ****     }
 181:.\I2C_Class.c ****     return -1;
 1057              		.loc 1 181 0
 1058 00e4 FF23     		mov	r3, #255
 1059              	.L46:
 1060 00e6 5BB2     		sxtb	r3, r3
 182:.\I2C_Class.c **** }
 1061              		.loc 1 182 0
 1062 00e8 181C     		mov	r0, r3
 1063 00ea BD46     		mov	sp, r7
 1064 00ec 04B0     		add	sp, sp, #16
 1065              		@ sp needed
 1066 00ee 80BD     		pop	{r7, pc}
 1067              	.L48:
 1068              		.align	2
 1069              	.L47:
 1070 00f0 00000000 		.word	irrigationStatus
 1071              		.cfi_endproc
 1072              	.LFE37:
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 23


 1073              		.size	adjustIrrigation, .-adjustIrrigation
 1074              		.section	.text.getActuatorStatus,"ax",%progbits
 1075              		.align	2
 1076              		.global	getActuatorStatus
 1077              		.code	16
 1078              		.thumb_func
 1079              		.type	getActuatorStatus, %function
 1080              	getActuatorStatus:
 1081              	.LFB38:
 183:.\I2C_Class.c **** 
 184:.\I2C_Class.c **** int8 getActuatorStatus(uint8* window, uint8* heat, uint8* vent, uint8* irrigation){
 1082              		.loc 1 184 0
 1083              		.cfi_startproc
 1084 0000 80B5     		push	{r7, lr}
 1085              		.cfi_def_cfa_offset 8
 1086              		.cfi_offset 7, -8
 1087              		.cfi_offset 14, -4
 1088 0002 86B0     		sub	sp, sp, #24
 1089              		.cfi_def_cfa_offset 32
 1090 0004 00AF     		add	r7, sp, #0
 1091              		.cfi_def_cfa_register 7
 1092 0006 F860     		str	r0, [r7, #12]
 1093 0008 B960     		str	r1, [r7, #8]
 1094 000a 7A60     		str	r2, [r7, #4]
 1095 000c 3B60     		str	r3, [r7]
 185:.\I2C_Class.c ****     uint8 result = 0;
 1096              		.loc 1 185 0
 1097 000e 3B1C     		mov	r3, r7
 1098 0010 1733     		add	r3, r3, #23
 1099 0012 0022     		mov	r2, #0
 1100 0014 1A70     		strb	r2, [r3]
 186:.\I2C_Class.c ****     uint8 dataget[2] = {0, 0};
 1101              		.loc 1 186 0
 1102 0016 3B1C     		mov	r3, r7
 1103 0018 1433     		add	r3, r3, #20
 1104 001a 0022     		mov	r2, #0
 1105 001c 1A70     		strb	r2, [r3]
 1106 001e 3B1C     		mov	r3, r7
 1107 0020 1433     		add	r3, r3, #20
 1108 0022 0022     		mov	r2, #0
 1109 0024 5A70     		strb	r2, [r3, #1]
 187:.\I2C_Class.c ****     
 188:.\I2C_Class.c ****     CyDelay(60);
 1110              		.loc 1 188 0
 1111 0026 3C20     		mov	r0, #60
 1112 0028 FFF7FEFF 		bl	CyDelay
 189:.\I2C_Class.c ****     I2C_I2CMasterClearReadBuf();
 1113              		.loc 1 189 0
 1114 002c FFF7FEFF 		bl	I2C_I2CMasterClearReadBuf
 190:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(ACTUATOR_ADRESS, dataget, 2, I2C_I2C_MODE_COMPLETE_XFER);
 1115              		.loc 1 190 0
 1116 0030 3B1C     		mov	r3, r7
 1117 0032 1433     		add	r3, r3, #20
 1118 0034 4220     		mov	r0, #66
 1119 0036 191C     		mov	r1, r3
 1120 0038 0222     		mov	r2, #2
 1121 003a 0023     		mov	r3, #0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 24


 1122 003c FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1123 0040 021C     		mov	r2, r0
 1124 0042 3B1C     		mov	r3, r7
 1125 0044 1733     		add	r3, r3, #23
 1126 0046 1A70     		strb	r2, [r3]
 191:.\I2C_Class.c ****     
 192:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_RD_CMPLT)); //Wait for the dataget array to
 1127              		.loc 1 192 0
 1128 0048 C046     		mov	r8, r8
 1129              	.L50:
 1130              		.loc 1 192 0 is_stmt 0 discriminator 1
 1131 004a FFF7FEFF 		bl	I2C_I2CMasterStatus
 1132 004e 021C     		mov	r2, r0
 1133 0050 0123     		mov	r3, #1
 1134 0052 1340     		and	r3, r2
 1135 0054 F9D0     		beq	.L50
 193:.\I2C_Class.c ****     
 194:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (I2C_I2CMasterGetReadBufSize() != 0)){
 1136              		.loc 1 194 0 is_stmt 1
 1137 0056 3B1C     		mov	r3, r7
 1138 0058 1733     		add	r3, r3, #23
 1139 005a 1B78     		ldrb	r3, [r3]
 1140 005c 002B     		cmp	r3, #0
 1141 005e 44D1     		bne	.L51
 1142              		.loc 1 194 0 is_stmt 0 discriminator 1
 1143 0060 FFF7FEFF 		bl	I2C_I2CMasterGetReadBufSize
 1144 0064 031C     		mov	r3, r0
 1145 0066 002B     		cmp	r3, #0
 1146 0068 3FD0     		beq	.L51
 195:.\I2C_Class.c ****         if (window){                                   // Expecting to receive MSB first 
 1147              		.loc 1 195 0 is_stmt 1
 1148 006a FB68     		ldr	r3, [r7, #12]
 1149 006c 002B     		cmp	r3, #0
 1150 006e 06D0     		beq	.L52
 196:.\I2C_Class.c ****             *window = (dataget[0] >> 4);      // Shifting out the 4 least significant bits.
 1151              		.loc 1 196 0
 1152 0070 3B1C     		mov	r3, r7
 1153 0072 1433     		add	r3, r3, #20
 1154 0074 1B78     		ldrb	r3, [r3]
 1155 0076 1B09     		lsr	r3, r3, #4
 1156 0078 DAB2     		uxtb	r2, r3
 1157 007a FB68     		ldr	r3, [r7, #12]
 1158 007c 1A70     		strb	r2, [r3]
 1159              	.L52:
 197:.\I2C_Class.c ****             #ifdef debugging
 198:.\I2C_Class.c ****                 UART_UartPutChar(*window+48);
 199:.\I2C_Class.c ****             #endif
 200:.\I2C_Class.c ****         }
 201:.\I2C_Class.c ****         if (heat){
 1160              		.loc 1 201 0
 1161 007e BB68     		ldr	r3, [r7, #8]
 1162 0080 002B     		cmp	r3, #0
 1163 0082 09D0     		beq	.L53
 202:.\I2C_Class.c ****             *heat = ((dataget[0] & 0b00001110) >> 1);       // Ignoring everything but bit 1-3 and 
 1164              		.loc 1 202 0
 1165 0084 3B1C     		mov	r3, r7
 1166 0086 1433     		add	r3, r3, #20
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 25


 1167 0088 1B78     		ldrb	r3, [r3]
 1168 008a 1A1C     		mov	r2, r3
 1169 008c 0E23     		mov	r3, #14
 1170 008e 1340     		and	r3, r2
 1171 0090 5B10     		asr	r3, r3, #1
 1172 0092 DAB2     		uxtb	r2, r3
 1173 0094 BB68     		ldr	r3, [r7, #8]
 1174 0096 1A70     		strb	r2, [r3]
 1175              	.L53:
 203:.\I2C_Class.c ****             #ifdef debugging
 204:.\I2C_Class.c ****                 UART_UartPutChar(*heat+48);
 205:.\I2C_Class.c ****             #endif
 206:.\I2C_Class.c ****         }
 207:.\I2C_Class.c ****         if (vent){
 1176              		.loc 1 207 0
 1177 0098 7B68     		ldr	r3, [r7, #4]
 1178 009a 002B     		cmp	r3, #0
 1179 009c 18D0     		beq	.L54
 208:.\I2C_Class.c ****             if ((dataget[0] & 0b00000001) == 0b00000001){        // Maybe we can find a smarter way
 1180              		.loc 1 208 0
 1181 009e 3B1C     		mov	r3, r7
 1182 00a0 1433     		add	r3, r3, #20
 1183 00a2 1B78     		ldrb	r3, [r3]
 1184 00a4 1A1C     		mov	r2, r3
 1185 00a6 0123     		mov	r3, #1
 1186 00a8 1340     		and	r3, r2
 1187 00aa 0AD0     		beq	.L55
 209:.\I2C_Class.c ****                 *vent = (dataget[1] >> 6) | 0b00000100;          // The if statements checks if bit
 1188              		.loc 1 209 0
 1189 00ac 3B1C     		mov	r3, r7
 1190 00ae 1433     		add	r3, r3, #20
 1191 00b0 5B78     		ldrb	r3, [r3, #1]
 1192 00b2 9B09     		lsr	r3, r3, #6
 1193 00b4 DBB2     		uxtb	r3, r3
 1194 00b6 0422     		mov	r2, #4
 1195 00b8 1343     		orr	r3, r2
 1196 00ba DAB2     		uxtb	r2, r3
 1197 00bc 7B68     		ldr	r3, [r7, #4]
 1198 00be 1A70     		strb	r2, [r3]
 1199 00c0 06E0     		b	.L54
 1200              	.L55:
 210:.\I2C_Class.c ****                 #ifdef debugging
 211:.\I2C_Class.c ****                     UART_UartPutChar(*vent+48);                         // Shifting 5 right so only
 212:.\I2C_Class.c ****                 #endif
 213:.\I2C_Class.c ****             }                                                    
 214:.\I2C_Class.c ****             else {
 215:.\I2C_Class.c ****                 *vent = (dataget[1] >> 6) | 0b00000000;          // shifting 5 right since only the
 1201              		.loc 1 215 0
 1202 00c2 3B1C     		mov	r3, r7
 1203 00c4 1433     		add	r3, r3, #20
 1204 00c6 5B78     		ldrb	r3, [r3, #1]
 1205 00c8 9B09     		lsr	r3, r3, #6
 1206 00ca DAB2     		uxtb	r2, r3
 1207 00cc 7B68     		ldr	r3, [r7, #4]
 1208 00ce 1A70     		strb	r2, [r3]
 1209              	.L54:
 216:.\I2C_Class.c ****                 #ifdef debugging
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 26


 217:.\I2C_Class.c ****                     UART_UartPutChar(*vent+48);
 218:.\I2C_Class.c ****                 #endif
 219:.\I2C_Class.c ****             }
 220:.\I2C_Class.c ****         }
 221:.\I2C_Class.c ****         if (irrigation){
 1210              		.loc 1 221 0
 1211 00d0 3B68     		ldr	r3, [r7]
 1212 00d2 002B     		cmp	r3, #0
 1213 00d4 07D0     		beq	.L56
 222:.\I2C_Class.c ****             *irrigation = (dataget[1] & 0b00111111);             // Ignoring two most significant b
 1214              		.loc 1 222 0
 1215 00d6 3B1C     		mov	r3, r7
 1216 00d8 1433     		add	r3, r3, #20
 1217 00da 5A78     		ldrb	r2, [r3, #1]
 1218 00dc 3F23     		mov	r3, #63
 1219 00de 1340     		and	r3, r2
 1220 00e0 DAB2     		uxtb	r2, r3
 1221 00e2 3B68     		ldr	r3, [r7]
 1222 00e4 1A70     		strb	r2, [r3]
 1223              	.L56:
 223:.\I2C_Class.c ****             #ifdef debugging
 224:.\I2C_Class.c ****                 UART_UartPutChar(*irrigation);
 225:.\I2C_Class.c ****             #endif
 226:.\I2C_Class.c ****         }   
 227:.\I2C_Class.c ****         return 0;
 1224              		.loc 1 227 0
 1225 00e6 0023     		mov	r3, #0
 1226 00e8 00E0     		b	.L58
 1227              	.L51:
 228:.\I2C_Class.c ****     }
 229:.\I2C_Class.c ****     else {
 230:.\I2C_Class.c ****         return -1;   
 1228              		.loc 1 230 0
 1229 00ea FF23     		mov	r3, #255
 1230              	.L58:
 1231 00ec 5BB2     		sxtb	r3, r3
 231:.\I2C_Class.c ****     }
 232:.\I2C_Class.c **** }
 1232              		.loc 1 232 0
 1233 00ee 181C     		mov	r0, r3
 1234 00f0 BD46     		mov	sp, r7
 1235 00f2 06B0     		add	sp, sp, #24
 1236              		@ sp needed
 1237 00f4 80BD     		pop	{r7, pc}
 1238              		.cfi_endproc
 1239              	.LFE38:
 1240              		.size	getActuatorStatus, .-getActuatorStatus
 1241 00f6 C046     		.section	.rodata
 1242              		.align	2
 1243              	.LC0:
 1244 0000 09000000 		.word	9
 1245 0004 09000000 		.word	9
 1246              		.section	.text.getTemp,"ax",%progbits
 1247              		.align	2
 1248              		.global	getTemp
 1249              		.code	16
 1250              		.thumb_func
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 27


 1251              		.type	getTemp, %function
 1252              	getTemp:
 1253              	.LFB39:
 233:.\I2C_Class.c **** 
 234:.\I2C_Class.c **** /*
 235:.\I2C_Class.c **** int8 getTempAndHum(int32* temp, int32* hum){
 236:.\I2C_Class.c ****     int32 RDbuf = 4;
 237:.\I2C_Class.c ****     uint8 dataget[RDbuf];
 238:.\I2C_Class.c ****     uint8 result = 0;
 239:.\I2C_Class.c ****     
 240:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(TEMP_AND_HUM_SENSOR_ADDRESS, dataget, RDbuf, I2C_I2C_MODE_COMPLET
 241:.\I2C_Class.c ****     
 242:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 243:.\I2C_Class.c ****         // Expecting to receive MSB first.
 244:.\I2C_Class.c ****         *hum = ((dataget[0] << 8) | dataget[1]);   
 245:.\I2C_Class.c ****         *temp = (((dataget[2] << 8) | dataget[3]) >> 2);
 246:.\I2C_Class.c ****         return 0;   // No error 
 247:.\I2C_Class.c ****     }
 248:.\I2C_Class.c ****     else {
 249:.\I2C_Class.c ****         return -1;
 250:.\I2C_Class.c ****     }
 251:.\I2C_Class.c **** }
 252:.\I2C_Class.c **** */
 253:.\I2C_Class.c **** 
 254:.\I2C_Class.c **** int8 getTemp(int32* temp){
 1254              		.loc 1 254 0
 1255              		.cfi_startproc
 1256 0000 80B5     		push	{r7, lr}
 1257              		.cfi_def_cfa_offset 8
 1258              		.cfi_offset 7, -8
 1259              		.cfi_offset 14, -4
 1260 0002 86B0     		sub	sp, sp, #24
 1261              		.cfi_def_cfa_offset 32
 1262 0004 00AF     		add	r7, sp, #0
 1263              		.cfi_def_cfa_register 7
 1264 0006 7860     		str	r0, [r7, #4]
 255:.\I2C_Class.c **** 
 256:.\I2C_Class.c ****     uint8 dataget[2] = {0,0};
 1265              		.loc 1 256 0
 1266 0008 3B1C     		mov	r3, r7
 1267 000a 1433     		add	r3, r3, #20
 1268 000c 0022     		mov	r2, #0
 1269 000e 1A70     		strb	r2, [r3]
 1270 0010 3B1C     		mov	r3, r7
 1271 0012 1433     		add	r3, r3, #20
 1272 0014 0022     		mov	r2, #0
 1273 0016 5A70     		strb	r2, [r3, #1]
 257:.\I2C_Class.c ****     uint32 errorStatus[2] = {9,9};      // For debugging and error handling
 1274              		.loc 1 257 0
 1275 0018 3B1C     		mov	r3, r7
 1276 001a 0C33     		add	r3, r3, #12
 1277 001c 1F4A     		ldr	r2, .L64
 1278 001e 03CA     		ldmia	r2!, {r0, r1}
 1279 0020 03C3     		stmia	r3!, {r0, r1}
 258:.\I2C_Class.c ****     
 259:.\I2C_Class.c ****     I2C_I2CMasterClearReadBuf();
 1280              		.loc 1 259 0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 28


 1281 0022 FFF7FEFF 		bl	I2C_I2CMasterClearReadBuf
 260:.\I2C_Class.c ****     errorStatus[0] = I2C_I2CMasterSendStart(TEMP_SENSOR_ADDRESS, I2C_I2C_READ_XFER_MODE);
 1282              		.loc 1 260 0
 1283 0026 4820     		mov	r0, #72
 1284 0028 0121     		mov	r1, #1
 1285 002a FFF7FEFF 		bl	I2C_I2CMasterSendStart
 1286 002e 021C     		mov	r2, r0
 1287 0030 3B1C     		mov	r3, r7
 1288 0032 0C33     		add	r3, r3, #12
 1289 0034 1A60     		str	r2, [r3]
 261:.\I2C_Class.c ****     if (errorStatus[0] == I2C_I2C_MSTR_NO_ERROR){
 1290              		.loc 1 261 0
 1291 0036 3B1C     		mov	r3, r7
 1292 0038 0C33     		add	r3, r3, #12
 1293 003a 1B68     		ldr	r3, [r3]
 1294 003c 002B     		cmp	r3, #0
 1295 003e 25D1     		bne	.L60
 262:.\I2C_Class.c ****         dataget[0] = I2C_I2CMasterReadByte(I2C_I2C_ACK_DATA);
 1296              		.loc 1 262 0
 1297 0040 0020     		mov	r0, #0
 1298 0042 FFF7FEFF 		bl	I2C_I2CMasterReadByte
 1299 0046 031C     		mov	r3, r0
 1300 0048 DAB2     		uxtb	r2, r3
 1301 004a 3B1C     		mov	r3, r7
 1302 004c 1433     		add	r3, r3, #20
 1303 004e 1A70     		strb	r2, [r3]
 263:.\I2C_Class.c ****         dataget[1] = I2C_I2CMasterReadByte(I2C_I2C_NAK_DATA);
 1304              		.loc 1 263 0
 1305 0050 0120     		mov	r0, #1
 1306 0052 FFF7FEFF 		bl	I2C_I2CMasterReadByte
 1307 0056 031C     		mov	r3, r0
 1308 0058 DAB2     		uxtb	r2, r3
 1309 005a 3B1C     		mov	r3, r7
 1310 005c 1433     		add	r3, r3, #20
 1311 005e 5A70     		strb	r2, [r3, #1]
 264:.\I2C_Class.c ****         errorStatus[1] = I2C_I2CMasterSendStop();
 1312              		.loc 1 264 0
 1313 0060 FFF7FEFF 		bl	I2C_I2CMasterSendStop
 1314 0064 021C     		mov	r2, r0
 1315 0066 3B1C     		mov	r3, r7
 1316 0068 0C33     		add	r3, r3, #12
 1317 006a 5A60     		str	r2, [r3, #4]
 265:.\I2C_Class.c ****     }
 266:.\I2C_Class.c ****     else{
 267:.\I2C_Class.c ****         I2C_I2CMasterSendStop();
 268:.\I2C_Class.c ****         return -1;
 269:.\I2C_Class.c ****     }
 270:.\I2C_Class.c **** 
 271:.\I2C_Class.c ****     // The data is converted directly to UART protocol because of the ,5 resolution
 272:.\I2C_Class.c ****     *temp = (dataget[0]*2)+(dataget[1] >> 7)+40;
 1318              		.loc 1 272 0
 1319 006c 3B1C     		mov	r3, r7
 1320 006e 1433     		add	r3, r3, #20
 1321 0070 1B78     		ldrb	r3, [r3]
 1322 0072 5A00     		lsl	r2, r3, #1
 1323 0074 3B1C     		mov	r3, r7
 1324 0076 1433     		add	r3, r3, #20
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 29


 1325 0078 5B78     		ldrb	r3, [r3, #1]
 1326 007a DB09     		lsr	r3, r3, #7
 1327 007c DBB2     		uxtb	r3, r3
 1328 007e D318     		add	r3, r2, r3
 1329 0080 1A1C     		mov	r2, r3
 1330 0082 2832     		add	r2, r2, #40
 1331 0084 7B68     		ldr	r3, [r7, #4]
 1332 0086 1A60     		str	r2, [r3]
 273:.\I2C_Class.c **** 
 274:.\I2C_Class.c ****     return 0;
 1333              		.loc 1 274 0
 1334 0088 0023     		mov	r3, #0
 1335 008a 02E0     		b	.L63
 1336              	.L60:
 267:.\I2C_Class.c ****         I2C_I2CMasterSendStop();
 1337              		.loc 1 267 0
 1338 008c FFF7FEFF 		bl	I2C_I2CMasterSendStop
 268:.\I2C_Class.c ****         return -1;
 1339              		.loc 1 268 0
 1340 0090 FF23     		mov	r3, #255
 1341              	.L63:
 1342 0092 5BB2     		sxtb	r3, r3
 275:.\I2C_Class.c **** }
 1343              		.loc 1 275 0
 1344 0094 181C     		mov	r0, r3
 1345 0096 BD46     		mov	sp, r7
 1346 0098 06B0     		add	sp, sp, #24
 1347              		@ sp needed
 1348 009a 80BD     		pop	{r7, pc}
 1349              	.L65:
 1350              		.align	2
 1351              	.L64:
 1352 009c 00000000 		.word	.LC0
 1353              		.cfi_endproc
 1354              	.LFE39:
 1355              		.size	getTemp, .-getTemp
 1356              		.section	.text.getLight,"ax",%progbits
 1357              		.align	2
 1358              		.global	getLight
 1359              		.code	16
 1360              		.thumb_func
 1361              		.type	getLight, %function
 1362              	getLight:
 1363              	.LFB40:
 276:.\I2C_Class.c **** 
 277:.\I2C_Class.c **** int8 getLight(int32* light){
 1364              		.loc 1 277 0
 1365              		.cfi_startproc
 1366 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1367              		.cfi_def_cfa_offset 20
 1368              		.cfi_offset 4, -20
 1369              		.cfi_offset 5, -16
 1370              		.cfi_offset 6, -12
 1371              		.cfi_offset 7, -8
 1372              		.cfi_offset 14, -4
 1373 0002 4746     		mov	r7, r8
 1374 0004 80B4     		push	{r7}
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 30


 1375              		.cfi_def_cfa_offset 24
 1376              		.cfi_offset 8, -24
 1377 0006 88B0     		sub	sp, sp, #32
 1378              		.cfi_def_cfa_offset 56
 1379 0008 00AF     		add	r7, sp, #0
 1380              		.cfi_def_cfa_register 7
 1381 000a F860     		str	r0, [r7, #12]
 1382 000c 6846     		mov	r0, sp
 1383 000e 8046     		mov	r8, r0
 278:.\I2C_Class.c ****     
 279:.\I2C_Class.c ****     /* 
 280:.\I2C_Class.c ****     Command register: Adress 0x00.
 281:.\I2C_Class.c ****     Bit 7: resets '0' or enables '1' ADC.
 282:.\I2C_Class.c ****     Bit 6: Power down mode. Normal operation '0' or power down mode '1'.
 283:.\I2C_Class.c ****     Bit 5: Decides whether integration time (ADC is of integration type) is done internally '0' or 
 284:.\I2C_Class.c ****     Bit 4: Has to be zero.
 285:.\I2C_Class.c ****     Bit 3-2: Photodiode select 0:0 and 0:1 = disable ADC. 1:0 = Light count DATA output in signed (
 286:.\I2C_Class.c ****     Bit 1-0: Prescaler or number of clockcycles 2^(n). 0:0 = 2^(16), 0:1 = 2^(12), 1:0 = 2^(8) and 
 287:.\I2C_Class.c ****     
 288:.\I2C_Class.c ****     RW Control register: Adress 0x01.
 289:.\I2C_Class.c ****     Bit 3-2: Set lux range. watch table in page 6.
 290:.\I2C_Class.c ****     All other bits has to be zero.
 291:.\I2C_Class.c ****     
 292:.\I2C_Class.c ****     I2C Sensor data reg: Adress 0x04(LSB) and 0x05()
 293:.\I2C_Class.c ****     The sensor sends a 15 bit value that can be acceMSBssed by the adresses 0x04 and 0x05
 294:.\I2C_Class.c ****     these registers are automatically refreshed each new integration period.
 295:.\I2C_Class.c ****     */
 296:.\I2C_Class.c ****     
 297:.\I2C_Class.c ****     uint8 dataget[size];
 1384              		.loc 1 297 0
 1385 0010 3B48     		ldr	r0, .L73
 1386 0012 0068     		ldr	r0, [r0]
 1387 0014 421E     		sub	r2, r0, #1
 1388 0016 9446     		mov	ip, r2
 1389 0018 6346     		mov	r3, ip
 1390 001a FB61     		str	r3, [r7, #28]
 1391 001c 8446     		mov	ip, r0
 1392 001e 6146     		mov	r1, ip
 1393 0020 0024     		mov	r4, #0
 1394 0022 A446     		mov	ip, r4
 1395 0024 6246     		mov	r2, ip
 1396 0026 4B0F     		lsr	r3, r1, #29
 1397 0028 9C46     		mov	ip, r3
 1398 002a D400     		lsl	r4, r2, #3
 1399 002c 7C60     		str	r4, [r7, #4]
 1400 002e 6346     		mov	r3, ip
 1401 0030 7C68     		ldr	r4, [r7, #4]
 1402 0032 2343     		orr	r3, r4
 1403 0034 7B60     		str	r3, [r7, #4]
 1404 0036 CB00     		lsl	r3, r1, #3
 1405 0038 021C     		mov	r2, r0
 1406 003a 131C     		mov	r3, r2
 1407 003c 0022     		mov	r2, #0
 1408 003e 141C     		mov	r4, r2
 1409 0040 5A0F     		lsr	r2, r3, #29
 1410 0042 E600     		lsl	r6, r4, #3
 1411 0044 1643     		orr	r6, r2
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 31


 1412 0046 DD00     		lsl	r5, r3, #3
 1413 0048 031C     		mov	r3, r0
 1414 004a 0733     		add	r3, r3, #7
 1415 004c DB08     		lsr	r3, r3, #3
 1416 004e DB00     		lsl	r3, r3, #3
 1417 0050 6C46     		mov	r4, sp
 1418 0052 E41A     		sub	r4, r4, r3
 1419 0054 A546     		mov	sp, r4
 1420 0056 6B46     		mov	r3, sp
 1421 0058 0033     		add	r3, r3, #0
 1422 005a BB61     		str	r3, [r7, #24]
 298:.\I2C_Class.c ****     uint8 result = 0;
 1423              		.loc 1 298 0
 1424 005c 3B1C     		mov	r3, r7
 1425 005e 1733     		add	r3, r3, #23
 1426 0060 0022     		mov	r2, #0
 1427 0062 1A70     		strb	r2, [r3]
 299:.\I2C_Class.c ****     
 300:.\I2C_Class.c ****     I2C_I2CMasterClearReadBuf();
 1428              		.loc 1 300 0
 1429 0064 FFF7FEFF 		bl	I2C_I2CMasterClearReadBuf
 301:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(LIGHT_SENSOR_MSB, dataget, size, I2C_I2C_MODE_COMPLETE_XFER); 
 1430              		.loc 1 301 0
 1431 0068 BA69     		ldr	r2, [r7, #24]
 1432 006a 254B     		ldr	r3, .L73
 1433 006c 1B68     		ldr	r3, [r3]
 1434 006e 0520     		mov	r0, #5
 1435 0070 111C     		mov	r1, r2
 1436 0072 1A1C     		mov	r2, r3
 1437 0074 0023     		mov	r3, #0
 1438 0076 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1439 007a 021C     		mov	r2, r0
 1440 007c 3B1C     		mov	r3, r7
 1441 007e 1733     		add	r3, r3, #23
 1442 0080 1A70     		strb	r2, [r3]
 302:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_RD_CMPLT));
 1443              		.loc 1 302 0
 1444 0082 C046     		mov	r8, r8
 1445              	.L67:
 1446              		.loc 1 302 0 is_stmt 0 discriminator 1
 1447 0084 FFF7FEFF 		bl	I2C_I2CMasterStatus
 1448 0088 021C     		mov	r2, r0
 1449 008a 0123     		mov	r3, #1
 1450 008c 1340     		and	r3, r2
 1451 008e F9D0     		beq	.L67
 303:.\I2C_Class.c ****         
 304:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 1452              		.loc 1 304 0 is_stmt 1
 1453 0090 3B1C     		mov	r3, r7
 1454 0092 1733     		add	r3, r3, #23
 1455 0094 1B78     		ldrb	r3, [r3]
 1456 0096 002B     		cmp	r3, #0
 1457 0098 28D1     		bne	.L68
 305:.\I2C_Class.c ****         // Expecting to receive MSB first.
 306:.\I2C_Class.c ****         *light = (dataget[0] << 7);     // TODO: TEST THIS WITH THE PROPER SENSOR!!
 1458              		.loc 1 306 0
 1459 009a BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 32


 1460 009c 1B78     		ldrb	r3, [r3]
 1461 009e DA01     		lsl	r2, r3, #7
 1462 00a0 FB68     		ldr	r3, [r7, #12]
 1463 00a2 1A60     		str	r2, [r3]
 307:.\I2C_Class.c ****         result = I2C_I2CMasterReadBuf(LIGHT_SENSOR_LSB, dataget, size, I2C_I2C_MODE_COMPLETE_XFER);
 1464              		.loc 1 307 0
 1465 00a4 BA69     		ldr	r2, [r7, #24]
 1466 00a6 164B     		ldr	r3, .L73
 1467 00a8 1B68     		ldr	r3, [r3]
 1468 00aa 0420     		mov	r0, #4
 1469 00ac 111C     		mov	r1, r2
 1470 00ae 1A1C     		mov	r2, r3
 1471 00b0 0023     		mov	r3, #0
 1472 00b2 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1473 00b6 021C     		mov	r2, r0
 1474 00b8 3B1C     		mov	r3, r7
 1475 00ba 1733     		add	r3, r3, #23
 1476 00bc 1A70     		strb	r2, [r3]
 308:.\I2C_Class.c ****         while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_RD_CMPLT)); //Wait for the data to be r
 1477              		.loc 1 308 0
 1478 00be C046     		mov	r8, r8
 1479              	.L69:
 1480              		.loc 1 308 0 is_stmt 0 discriminator 1
 1481 00c0 FFF7FEFF 		bl	I2C_I2CMasterStatus
 1482 00c4 021C     		mov	r2, r0
 1483 00c6 0123     		mov	r3, #1
 1484 00c8 1340     		and	r3, r2
 1485 00ca F9D0     		beq	.L69
 309:.\I2C_Class.c ****         if (result == I2C_I2C_MSTR_NO_ERROR){
 1486              		.loc 1 309 0 is_stmt 1
 1487 00cc 3B1C     		mov	r3, r7
 1488 00ce 1733     		add	r3, r3, #23
 1489 00d0 1B78     		ldrb	r3, [r3]
 1490 00d2 002B     		cmp	r3, #0
 1491 00d4 08D1     		bne	.L70
 310:.\I2C_Class.c ****             *light |= dataget[0]; 
 1492              		.loc 1 310 0
 1493 00d6 FB68     		ldr	r3, [r7, #12]
 1494 00d8 1A68     		ldr	r2, [r3]
 1495 00da BB69     		ldr	r3, [r7, #24]
 1496 00dc 1B78     		ldrb	r3, [r3]
 1497 00de 1A43     		orr	r2, r3
 1498 00e0 FB68     		ldr	r3, [r7, #12]
 1499 00e2 1A60     		str	r2, [r3]
 311:.\I2C_Class.c ****             return 0;   // No error 
 1500              		.loc 1 311 0
 1501 00e4 0023     		mov	r3, #0
 1502 00e6 02E0     		b	.L71
 1503              	.L70:
 312:.\I2C_Class.c ****         }
 313:.\I2C_Class.c ****         else {
 314:.\I2C_Class.c ****             return -1;
 1504              		.loc 1 314 0
 1505 00e8 FF23     		mov	r3, #255
 1506 00ea 00E0     		b	.L71
 1507              	.L68:
 315:.\I2C_Class.c ****         }
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 33


 316:.\I2C_Class.c ****     }
 317:.\I2C_Class.c ****     else {
 318:.\I2C_Class.c ****         return -1;
 1508              		.loc 1 318 0
 1509 00ec FF23     		mov	r3, #255
 1510              	.L71:
 1511 00ee C546     		mov	sp, r8
 1512 00f0 5BB2     		sxtb	r3, r3
 319:.\I2C_Class.c ****     }
 320:.\I2C_Class.c **** }
 1513              		.loc 1 320 0
 1514 00f2 181C     		mov	r0, r3
 1515 00f4 BD46     		mov	sp, r7
 1516 00f6 08B0     		add	sp, sp, #32
 1517              		@ sp needed
 1518 00f8 04BC     		pop	{r2}
 1519 00fa 9046     		mov	r8, r2
 1520 00fc F0BD     		pop	{r4, r5, r6, r7, pc}
 1521              	.L74:
 1522 00fe C046     		.align	2
 1523              	.L73:
 1524 0100 00000000 		.word	size
 1525              		.cfi_endproc
 1526              	.LFE40:
 1527              		.size	getLight, .-getLight
 1528              		.section	.text.getSoilHum,"ax",%progbits
 1529              		.align	2
 1530              		.global	getSoilHum
 1531              		.code	16
 1532              		.thumb_func
 1533              		.type	getSoilHum, %function
 1534              	getSoilHum:
 1535              	.LFB41:
 321:.\I2C_Class.c **** 
 322:.\I2C_Class.c **** int8 getSoilHum(uint8 index, int16* soilHum){
 1536              		.loc 1 322 0
 1537              		.cfi_startproc
 1538 0000 80B5     		push	{r7, lr}
 1539              		.cfi_def_cfa_offset 8
 1540              		.cfi_offset 7, -8
 1541              		.cfi_offset 14, -4
 1542 0002 84B0     		sub	sp, sp, #16
 1543              		.cfi_def_cfa_offset 24
 1544 0004 00AF     		add	r7, sp, #0
 1545              		.cfi_def_cfa_register 7
 1546 0006 021C     		mov	r2, r0
 1547 0008 3960     		str	r1, [r7]
 1548 000a FB1D     		add	r3, r7, #7
 1549 000c 1A70     		strb	r2, [r3]
 323:.\I2C_Class.c ****     uint32 result;
 324:.\I2C_Class.c ****     uint8 soilTransfer[1] = {index};
 1550              		.loc 1 324 0
 1551 000e 3B1C     		mov	r3, r7
 1552 0010 0833     		add	r3, r3, #8
 1553 0012 FA1D     		add	r2, r7, #7
 1554 0014 1278     		ldrb	r2, [r2]
 1555 0016 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 34


 325:.\I2C_Class.c ****     
 326:.\I2C_Class.c ****     /*pseudo kode
 327:.\I2C_Class.c ****     write, address, 0-5 (LSB)
 328:.\I2C_Class.c ****     read, address, 7 = status, 0-6 = value (1-100)*/
 329:.\I2C_Class.c ****     
 330:.\I2C_Class.c ****     result = I2C_I2CMasterWriteBuf(SOILHUM_SENSOR_ADDRESS, soilTransfer, 1, I2C_I2C_MODE_COMPLETE_X
 1556              		.loc 1 330 0
 1557 0018 3B1C     		mov	r3, r7
 1558 001a 0833     		add	r3, r3, #8
 1559 001c 3220     		mov	r0, #50
 1560 001e 191C     		mov	r1, r3
 1561 0020 0122     		mov	r2, #1
 1562 0022 0023     		mov	r3, #0
 1563 0024 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 1564 0028 031C     		mov	r3, r0
 1565 002a FB60     		str	r3, [r7, #12]
 331:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT));
 1566              		.loc 1 331 0
 1567 002c C046     		mov	r8, r8
 1568              	.L76:
 1569              		.loc 1 331 0 is_stmt 0 discriminator 1
 1570 002e FFF7FEFF 		bl	I2C_I2CMasterStatus
 1571 0032 021C     		mov	r2, r0
 1572 0034 0223     		mov	r3, #2
 1573 0036 1340     		and	r3, r2
 1574 0038 F9D0     		beq	.L76
 332:.\I2C_Class.c ****         
 333:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 1575              		.loc 1 333 0 is_stmt 1
 1576 003a FB68     		ldr	r3, [r7, #12]
 1577 003c 002B     		cmp	r3, #0
 1578 003e 25D1     		bne	.L77
 334:.\I2C_Class.c ****         CyDelay(60);
 1579              		.loc 1 334 0
 1580 0040 3C20     		mov	r0, #60
 1581 0042 FFF7FEFF 		bl	CyDelay
 335:.\I2C_Class.c ****         result = I2C_I2CMasterReadBuf(SOILHUM_SENSOR_ADDRESS, soilTransfer, 1, I2C_I2C_MODE_COMPLET
 1582              		.loc 1 335 0
 1583 0046 3B1C     		mov	r3, r7
 1584 0048 0833     		add	r3, r3, #8
 1585 004a 3220     		mov	r0, #50
 1586 004c 191C     		mov	r1, r3
 1587 004e 0122     		mov	r2, #1
 1588 0050 0023     		mov	r3, #0
 1589 0052 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1590 0056 031C     		mov	r3, r0
 1591 0058 FB60     		str	r3, [r7, #12]
 336:.\I2C_Class.c ****         while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_RD_CMPLT)); //Wait for the data to be r
 1592              		.loc 1 336 0
 1593 005a C046     		mov	r8, r8
 1594              	.L78:
 1595              		.loc 1 336 0 is_stmt 0 discriminator 1
 1596 005c FFF7FEFF 		bl	I2C_I2CMasterStatus
 1597 0060 021C     		mov	r2, r0
 1598 0062 0123     		mov	r3, #1
 1599 0064 1340     		and	r3, r2
 1600 0066 F9D0     		beq	.L78
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 35


 337:.\I2C_Class.c ****         if (result == I2C_I2C_MSTR_NO_ERROR){
 1601              		.loc 1 337 0 is_stmt 1
 1602 0068 FB68     		ldr	r3, [r7, #12]
 1603 006a 002B     		cmp	r3, #0
 1604 006c 0ED1     		bne	.L77
 338:.\I2C_Class.c ****             if ((soilTransfer[0] >> 7) == 0){
 1605              		.loc 1 338 0
 1606 006e 3B1C     		mov	r3, r7
 1607 0070 0833     		add	r3, r3, #8
 1608 0072 1B78     		ldrb	r3, [r3]
 1609 0074 DBB2     		uxtb	r3, r3
 1610 0076 5BB2     		sxtb	r3, r3
 1611 0078 002B     		cmp	r3, #0
 1612 007a 07DB     		blt	.L77
 339:.\I2C_Class.c ****                 *soilHum = soilTransfer[0];
 1613              		.loc 1 339 0
 1614 007c 3B1C     		mov	r3, r7
 1615 007e 0833     		add	r3, r3, #8
 1616 0080 1B78     		ldrb	r3, [r3]
 1617 0082 1A1C     		mov	r2, r3
 1618 0084 3B68     		ldr	r3, [r7]
 1619 0086 1A80     		strh	r2, [r3]
 340:.\I2C_Class.c ****                 return 0;
 1620              		.loc 1 340 0
 1621 0088 0023     		mov	r3, #0
 1622 008a 00E0     		b	.L80
 1623              	.L77:
 341:.\I2C_Class.c ****             }
 342:.\I2C_Class.c ****         }
 343:.\I2C_Class.c ****     }
 344:.\I2C_Class.c ****     return -1;
 1624              		.loc 1 344 0
 1625 008c FF23     		mov	r3, #255
 1626              	.L80:
 1627 008e 5BB2     		sxtb	r3, r3
 345:.\I2C_Class.c **** }
 1628              		.loc 1 345 0
 1629 0090 181C     		mov	r0, r3
 1630 0092 BD46     		mov	sp, r7
 1631 0094 04B0     		add	sp, sp, #16
 1632              		@ sp needed
 1633 0096 80BD     		pop	{r7, pc}
 1634              		.cfi_endproc
 1635              	.LFE41:
 1636              		.size	getSoilHum, .-getSoilHum
 1637              		.text
 1638              	.Letext0:
 1639              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 1640              		.section	.debug_info,"",%progbits
 1641              	.Ldebug_info0:
 1642 0000 E3040000 		.4byte	0x4e3
 1643 0004 0400     		.2byte	0x4
 1644 0006 00000000 		.4byte	.Ldebug_abbrev0
 1645 000a 04       		.byte	0x4
 1646 000b 01       		.uleb128 0x1
 1647 000c 90000000 		.4byte	.LASF52
 1648 0010 01       		.byte	0x1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 36


 1649 0011 3E000000 		.4byte	.LASF53
 1650 0015 80010000 		.4byte	.LASF54
 1651 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1652 001d 00000000 		.4byte	0
 1653 0021 00000000 		.4byte	.Ldebug_line0
 1654 0025 02       		.uleb128 0x2
 1655 0026 01       		.byte	0x1
 1656 0027 06       		.byte	0x6
 1657 0028 57010000 		.4byte	.LASF0
 1658 002c 02       		.uleb128 0x2
 1659 002d 01       		.byte	0x1
 1660 002e 08       		.byte	0x8
 1661 002f 6B010000 		.4byte	.LASF1
 1662 0033 02       		.uleb128 0x2
 1663 0034 02       		.byte	0x2
 1664 0035 05       		.byte	0x5
 1665 0036 95020000 		.4byte	.LASF2
 1666 003a 02       		.uleb128 0x2
 1667 003b 02       		.byte	0x2
 1668 003c 07       		.byte	0x7
 1669 003d 4C000000 		.4byte	.LASF3
 1670 0041 02       		.uleb128 0x2
 1671 0042 04       		.byte	0x4
 1672 0043 05       		.byte	0x5
 1673 0044 B2020000 		.4byte	.LASF4
 1674 0048 02       		.uleb128 0x2
 1675 0049 04       		.byte	0x4
 1676 004a 07       		.byte	0x7
 1677 004b 2D010000 		.4byte	.LASF5
 1678 004f 02       		.uleb128 0x2
 1679 0050 08       		.byte	0x8
 1680 0051 05       		.byte	0x5
 1681 0052 4B020000 		.4byte	.LASF6
 1682 0056 02       		.uleb128 0x2
 1683 0057 08       		.byte	0x8
 1684 0058 07       		.byte	0x7
 1685 0059 FB010000 		.4byte	.LASF7
 1686 005d 03       		.uleb128 0x3
 1687 005e 04       		.byte	0x4
 1688 005f 05       		.byte	0x5
 1689 0060 696E7400 		.ascii	"int\000"
 1690 0064 02       		.uleb128 0x2
 1691 0065 04       		.byte	0x4
 1692 0066 07       		.byte	0x7
 1693 0067 E9010000 		.4byte	.LASF8
 1694 006b 04       		.uleb128 0x4
 1695 006c 84000000 		.4byte	.LASF9
 1696 0070 02       		.byte	0x2
 1697 0071 A1       		.byte	0xa1
 1698 0072 2C000000 		.4byte	0x2c
 1699 0076 04       		.uleb128 0x4
 1700 0077 D6010000 		.4byte	.LASF10
 1701 007b 02       		.byte	0x2
 1702 007c A2       		.byte	0xa2
 1703 007d 3A000000 		.4byte	0x3a
 1704 0081 04       		.uleb128 0x4
 1705 0082 E2010000 		.4byte	.LASF11
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 37


 1706 0086 02       		.byte	0x2
 1707 0087 A3       		.byte	0xa3
 1708 0088 48000000 		.4byte	0x48
 1709 008c 04       		.uleb128 0x4
 1710 008d DD010000 		.4byte	.LASF12
 1711 0091 02       		.byte	0x2
 1712 0092 A4       		.byte	0xa4
 1713 0093 25000000 		.4byte	0x25
 1714 0097 04       		.uleb128 0x4
 1715 0098 27010000 		.4byte	.LASF13
 1716 009c 02       		.byte	0x2
 1717 009d A5       		.byte	0xa5
 1718 009e 33000000 		.4byte	0x33
 1719 00a2 04       		.uleb128 0x4
 1720 00a3 51010000 		.4byte	.LASF14
 1721 00a7 02       		.byte	0x2
 1722 00a8 A6       		.byte	0xa6
 1723 00a9 41000000 		.4byte	0x41
 1724 00ad 02       		.uleb128 0x2
 1725 00ae 04       		.byte	0x4
 1726 00af 04       		.byte	0x4
 1727 00b0 8A000000 		.4byte	.LASF15
 1728 00b4 02       		.uleb128 0x2
 1729 00b5 08       		.byte	0x8
 1730 00b6 04       		.byte	0x4
 1731 00b7 79010000 		.4byte	.LASF16
 1732 00bb 02       		.uleb128 0x2
 1733 00bc 01       		.byte	0x1
 1734 00bd 08       		.byte	0x8
 1735 00be 61020000 		.4byte	.LASF17
 1736 00c2 02       		.uleb128 0x2
 1737 00c3 04       		.byte	0x4
 1738 00c4 07       		.byte	0x7
 1739 00c5 37020000 		.4byte	.LASF18
 1740 00c9 05       		.uleb128 0x5
 1741 00ca 04       		.byte	0x4
 1742 00cb 6B000000 		.4byte	0x6b
 1743 00cf 06       		.uleb128 0x6
 1744 00d0 29020000 		.4byte	.LASF55
 1745 00d4 01       		.byte	0x1
 1746 00d5 22       		.byte	0x22
 1747 00d6 00000000 		.4byte	.LFB33
 1748 00da 20010000 		.4byte	.LFE33-.LFB33
 1749 00de 01       		.uleb128 0x1
 1750 00df 9C       		.byte	0x9c
 1751 00e0 11010000 		.4byte	0x111
 1752 00e4 07       		.uleb128 0x7
 1753 00e5 E9020000 		.4byte	.LASF19
 1754 00e9 01       		.byte	0x1
 1755 00ea 29       		.byte	0x29
 1756 00eb 11010000 		.4byte	0x111
 1757 00ef 03       		.uleb128 0x3
 1758 00f0 91       		.byte	0x91
 1759 00f1 60       		.sleb128 -32
 1760 00f2 06       		.byte	0x6
 1761 00f3 07       		.uleb128 0x7
 1762 00f4 5F000000 		.4byte	.LASF20
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 38


 1763 00f8 01       		.byte	0x1
 1764 00f9 29       		.byte	0x29
 1765 00fa 24010000 		.4byte	0x124
 1766 00fe 03       		.uleb128 0x3
 1767 00ff 91       		.byte	0x91
 1768 0100 58       		.sleb128 -40
 1769 0101 06       		.byte	0x6
 1770 0102 07       		.uleb128 0x7
 1771 0103 12020000 		.4byte	.LASF21
 1772 0107 01       		.byte	0x1
 1773 0108 2C       		.byte	0x2c
 1774 0109 6B000000 		.4byte	0x6b
 1775 010d 02       		.uleb128 0x2
 1776 010e 91       		.byte	0x91
 1777 010f 57       		.sleb128 -41
 1778 0110 00       		.byte	0
 1779 0111 08       		.uleb128 0x8
 1780 0112 6B000000 		.4byte	0x6b
 1781 0116 24010000 		.4byte	0x124
 1782 011a 09       		.uleb128 0x9
 1783 011b C2000000 		.4byte	0xc2
 1784 011f 03       		.uleb128 0x3
 1785 0120 91       		.byte	0x91
 1786 0121 64       		.sleb128 -28
 1787 0122 06       		.byte	0x6
 1788 0123 00       		.byte	0
 1789 0124 08       		.uleb128 0x8
 1790 0125 6B000000 		.4byte	0x6b
 1791 0129 37010000 		.4byte	0x137
 1792 012d 09       		.uleb128 0x9
 1793 012e C2000000 		.4byte	0xc2
 1794 0132 03       		.uleb128 0x3
 1795 0133 91       		.byte	0x91
 1796 0134 5C       		.sleb128 -36
 1797 0135 06       		.byte	0x6
 1798 0136 00       		.byte	0
 1799 0137 0A       		.uleb128 0xa
 1800 0138 12000000 		.4byte	.LASF25
 1801 013c 01       		.byte	0x1
 1802 013d 39       		.byte	0x39
 1803 013e 8C000000 		.4byte	0x8c
 1804 0142 00000000 		.4byte	.LFB34
 1805 0146 7C010000 		.4byte	.LFE34-.LFB34
 1806 014a 01       		.uleb128 0x1
 1807 014b 9C       		.byte	0x9c
 1808 014c 99010000 		.4byte	0x199
 1809 0150 0B       		.uleb128 0xb
 1810 0151 706F7300 		.ascii	"pos\000"
 1811 0155 01       		.byte	0x1
 1812 0156 39       		.byte	0x39
 1813 0157 6B000000 		.4byte	0x6b
 1814 015b 02       		.uleb128 0x2
 1815 015c 91       		.byte	0x91
 1816 015d 4F       		.sleb128 -49
 1817 015e 07       		.uleb128 0x7
 1818 015f 1E020000 		.4byte	.LASF22
 1819 0163 01       		.byte	0x1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 39


 1820 0164 3A       		.byte	0x3a
 1821 0165 99010000 		.4byte	0x199
 1822 0169 03       		.uleb128 0x3
 1823 016a 91       		.byte	0x91
 1824 016b 5C       		.sleb128 -36
 1825 016c 06       		.byte	0x6
 1826 016d 07       		.uleb128 0x7
 1827 016e CA010000 		.4byte	.LASF23
 1828 0172 01       		.byte	0x1
 1829 0173 3A       		.byte	0x3a
 1830 0174 AC010000 		.4byte	0x1ac
 1831 0178 03       		.uleb128 0x3
 1832 0179 91       		.byte	0x91
 1833 017a 54       		.sleb128 -44
 1834 017b 06       		.byte	0x6
 1835 017c 07       		.uleb128 0x7
 1836 017d 12020000 		.4byte	.LASF21
 1837 0181 01       		.byte	0x1
 1838 0182 3D       		.byte	0x3d
 1839 0183 6B000000 		.4byte	0x6b
 1840 0187 02       		.uleb128 0x2
 1841 0188 91       		.byte	0x91
 1842 0189 67       		.sleb128 -25
 1843 018a 07       		.uleb128 0x7
 1844 018b 1C010000 		.4byte	.LASF24
 1845 018f 01       		.byte	0x1
 1846 0190 3E       		.byte	0x3e
 1847 0191 6B000000 		.4byte	0x6b
 1848 0195 02       		.uleb128 0x2
 1849 0196 91       		.byte	0x91
 1850 0197 53       		.sleb128 -45
 1851 0198 00       		.byte	0
 1852 0199 08       		.uleb128 0x8
 1853 019a 6B000000 		.4byte	0x6b
 1854 019e AC010000 		.4byte	0x1ac
 1855 01a2 09       		.uleb128 0x9
 1856 01a3 C2000000 		.4byte	0xc2
 1857 01a7 03       		.uleb128 0x3
 1858 01a8 91       		.byte	0x91
 1859 01a9 60       		.sleb128 -32
 1860 01aa 06       		.byte	0x6
 1861 01ab 00       		.byte	0
 1862 01ac 08       		.uleb128 0x8
 1863 01ad 6B000000 		.4byte	0x6b
 1864 01b1 BF010000 		.4byte	0x1bf
 1865 01b5 09       		.uleb128 0x9
 1866 01b6 C2000000 		.4byte	0xc2
 1867 01ba 03       		.uleb128 0x3
 1868 01bb 91       		.byte	0x91
 1869 01bc 58       		.sleb128 -40
 1870 01bd 06       		.byte	0x6
 1871 01be 00       		.byte	0
 1872 01bf 0A       		.uleb128 0xa
 1873 01c0 40020000 		.4byte	.LASF26
 1874 01c4 01       		.byte	0x1
 1875 01c5 58       		.byte	0x58
 1876 01c6 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 40


 1877 01ca 00000000 		.4byte	.LFB35
 1878 01ce 7C010000 		.4byte	.LFE35-.LFB35
 1879 01d2 01       		.uleb128 0x1
 1880 01d3 9C       		.byte	0x9c
 1881 01d4 21020000 		.4byte	0x221
 1882 01d8 0C       		.uleb128 0xc
 1883 01d9 19020000 		.4byte	.LASF27
 1884 01dd 01       		.byte	0x1
 1885 01de 58       		.byte	0x58
 1886 01df 6B000000 		.4byte	0x6b
 1887 01e3 02       		.uleb128 0x2
 1888 01e4 91       		.byte	0x91
 1889 01e5 4F       		.sleb128 -49
 1890 01e6 07       		.uleb128 0x7
 1891 01e7 8A020000 		.4byte	.LASF28
 1892 01eb 01       		.byte	0x1
 1893 01ec 59       		.byte	0x59
 1894 01ed 21020000 		.4byte	0x221
 1895 01f1 03       		.uleb128 0x3
 1896 01f2 91       		.byte	0x91
 1897 01f3 5C       		.sleb128 -36
 1898 01f4 06       		.byte	0x6
 1899 01f5 07       		.uleb128 0x7
 1900 01f6 6C000000 		.4byte	.LASF29
 1901 01fa 01       		.byte	0x1
 1902 01fb 59       		.byte	0x59
 1903 01fc 34020000 		.4byte	0x234
 1904 0200 03       		.uleb128 0x3
 1905 0201 91       		.byte	0x91
 1906 0202 54       		.sleb128 -44
 1907 0203 06       		.byte	0x6
 1908 0204 07       		.uleb128 0x7
 1909 0205 12020000 		.4byte	.LASF21
 1910 0209 01       		.byte	0x1
 1911 020a 5C       		.byte	0x5c
 1912 020b 6B000000 		.4byte	0x6b
 1913 020f 02       		.uleb128 0x2
 1914 0210 91       		.byte	0x91
 1915 0211 67       		.sleb128 -25
 1916 0212 07       		.uleb128 0x7
 1917 0213 F6010000 		.4byte	.LASF30
 1918 0217 01       		.byte	0x1
 1919 0218 5D       		.byte	0x5d
 1920 0219 6B000000 		.4byte	0x6b
 1921 021d 02       		.uleb128 0x2
 1922 021e 91       		.byte	0x91
 1923 021f 53       		.sleb128 -45
 1924 0220 00       		.byte	0
 1925 0221 08       		.uleb128 0x8
 1926 0222 6B000000 		.4byte	0x6b
 1927 0226 34020000 		.4byte	0x234
 1928 022a 09       		.uleb128 0x9
 1929 022b C2000000 		.4byte	0xc2
 1930 022f 03       		.uleb128 0x3
 1931 0230 91       		.byte	0x91
 1932 0231 60       		.sleb128 -32
 1933 0232 06       		.byte	0x6
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 41


 1934 0233 00       		.byte	0
 1935 0234 08       		.uleb128 0x8
 1936 0235 6B000000 		.4byte	0x6b
 1937 0239 47020000 		.4byte	0x247
 1938 023d 09       		.uleb128 0x9
 1939 023e C2000000 		.4byte	0xc2
 1940 0242 03       		.uleb128 0x3
 1941 0243 91       		.byte	0x91
 1942 0244 58       		.sleb128 -40
 1943 0245 06       		.byte	0x6
 1944 0246 00       		.byte	0
 1945 0247 0A       		.uleb128 0xa
 1946 0248 2C000000 		.4byte	.LASF31
 1947 024c 01       		.byte	0x1
 1948 024d 79       		.byte	0x79
 1949 024e 8C000000 		.4byte	0x8c
 1950 0252 00000000 		.4byte	.LFB36
 1951 0256 7C010000 		.4byte	.LFE36-.LFB36
 1952 025a 01       		.uleb128 0x1
 1953 025b 9C       		.byte	0x9c
 1954 025c A9020000 		.4byte	0x2a9
 1955 0260 0C       		.uleb128 0xc
 1956 0261 31020000 		.4byte	.LASF32
 1957 0265 01       		.byte	0x1
 1958 0266 79       		.byte	0x79
 1959 0267 6B000000 		.4byte	0x6b
 1960 026b 02       		.uleb128 0x2
 1961 026c 91       		.byte	0x91
 1962 026d 4F       		.sleb128 -49
 1963 026e 07       		.uleb128 0x7
 1964 026f BB020000 		.4byte	.LASF33
 1965 0273 01       		.byte	0x1
 1966 0274 7A       		.byte	0x7a
 1967 0275 A9020000 		.4byte	0x2a9
 1968 0279 03       		.uleb128 0x3
 1969 027a 91       		.byte	0x91
 1970 027b 5C       		.sleb128 -36
 1971 027c 06       		.byte	0x6
 1972 027d 07       		.uleb128 0x7
 1973 027e 00000000 		.4byte	.LASF34
 1974 0282 01       		.byte	0x1
 1975 0283 7A       		.byte	0x7a
 1976 0284 BC020000 		.4byte	0x2bc
 1977 0288 03       		.uleb128 0x3
 1978 0289 91       		.byte	0x91
 1979 028a 54       		.sleb128 -44
 1980 028b 06       		.byte	0x6
 1981 028c 07       		.uleb128 0x7
 1982 028d 12020000 		.4byte	.LASF21
 1983 0291 01       		.byte	0x1
 1984 0292 7D       		.byte	0x7d
 1985 0293 6B000000 		.4byte	0x6b
 1986 0297 02       		.uleb128 0x2
 1987 0298 91       		.byte	0x91
 1988 0299 67       		.sleb128 -25
 1989 029a 07       		.uleb128 0x7
 1990 029b F6010000 		.4byte	.LASF30
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 42


 1991 029f 01       		.byte	0x1
 1992 02a0 7E       		.byte	0x7e
 1993 02a1 6B000000 		.4byte	0x6b
 1994 02a5 02       		.uleb128 0x2
 1995 02a6 91       		.byte	0x91
 1996 02a7 53       		.sleb128 -45
 1997 02a8 00       		.byte	0
 1998 02a9 08       		.uleb128 0x8
 1999 02aa 6B000000 		.4byte	0x6b
 2000 02ae BC020000 		.4byte	0x2bc
 2001 02b2 09       		.uleb128 0x9
 2002 02b3 C2000000 		.4byte	0xc2
 2003 02b7 03       		.uleb128 0x3
 2004 02b8 91       		.byte	0x91
 2005 02b9 60       		.sleb128 -32
 2006 02ba 06       		.byte	0x6
 2007 02bb 00       		.byte	0
 2008 02bc 08       		.uleb128 0x8
 2009 02bd 6B000000 		.4byte	0x6b
 2010 02c1 CF020000 		.4byte	0x2cf
 2011 02c5 09       		.uleb128 0x9
 2012 02c6 C2000000 		.4byte	0xc2
 2013 02ca 03       		.uleb128 0x3
 2014 02cb 91       		.byte	0x91
 2015 02cc 58       		.sleb128 -40
 2016 02cd 06       		.byte	0x6
 2017 02ce 00       		.byte	0
 2018 02cf 0A       		.uleb128 0xa
 2019 02d0 D8020000 		.4byte	.LASF35
 2020 02d4 01       		.byte	0x1
 2021 02d5 98       		.byte	0x98
 2022 02d6 8C000000 		.4byte	0x8c
 2023 02da 00000000 		.4byte	.LFB37
 2024 02de F4000000 		.4byte	.LFE37-.LFB37
 2025 02e2 01       		.uleb128 0x1
 2026 02e3 9C       		.byte	0x9c
 2027 02e4 21030000 		.4byte	0x321
 2028 02e8 0C       		.uleb128 0xc
 2029 02e9 66020000 		.4byte	.LASF36
 2030 02ed 01       		.byte	0x1
 2031 02ee 98       		.byte	0x98
 2032 02ef 6B000000 		.4byte	0x6b
 2033 02f3 02       		.uleb128 0x2
 2034 02f4 91       		.byte	0x91
 2035 02f5 6F       		.sleb128 -17
 2036 02f6 0C       		.uleb128 0xc
 2037 02f7 16010000 		.4byte	.LASF37
 2038 02fb 01       		.byte	0x1
 2039 02fc 98       		.byte	0x98
 2040 02fd 6B000000 		.4byte	0x6b
 2041 0301 02       		.uleb128 0x2
 2042 0302 91       		.byte	0x91
 2043 0303 6E       		.sleb128 -18
 2044 0304 07       		.uleb128 0x7
 2045 0305 1F000000 		.4byte	.LASF38
 2046 0309 01       		.byte	0x1
 2047 030a 99       		.byte	0x99
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 43


 2048 030b 21030000 		.4byte	0x321
 2049 030f 02       		.uleb128 0x2
 2050 0310 91       		.byte	0x91
 2051 0311 74       		.sleb128 -12
 2052 0312 07       		.uleb128 0x7
 2053 0313 12020000 		.4byte	.LASF21
 2054 0317 01       		.byte	0x1
 2055 0318 9A       		.byte	0x9a
 2056 0319 6B000000 		.4byte	0x6b
 2057 031d 02       		.uleb128 0x2
 2058 031e 91       		.byte	0x91
 2059 031f 77       		.sleb128 -9
 2060 0320 00       		.byte	0
 2061 0321 08       		.uleb128 0x8
 2062 0322 6B000000 		.4byte	0x6b
 2063 0326 31030000 		.4byte	0x331
 2064 032a 0D       		.uleb128 0xd
 2065 032b C2000000 		.4byte	0xc2
 2066 032f 00       		.byte	0
 2067 0330 00       		.byte	0
 2068 0331 0A       		.uleb128 0xa
 2069 0332 3F010000 		.4byte	.LASF39
 2070 0336 01       		.byte	0x1
 2071 0337 B8       		.byte	0xb8
 2072 0338 8C000000 		.4byte	0x8c
 2073 033c 00000000 		.4byte	.LFB38
 2074 0340 F6000000 		.4byte	.LFE38-.LFB38
 2075 0344 01       		.uleb128 0x1
 2076 0345 9C       		.byte	0x9c
 2077 0346 9F030000 		.4byte	0x39f
 2078 034a 0C       		.uleb128 0xc
 2079 034b C6020000 		.4byte	.LASF40
 2080 034f 01       		.byte	0x1
 2081 0350 B8       		.byte	0xb8
 2082 0351 C9000000 		.4byte	0xc9
 2083 0355 02       		.uleb128 0x2
 2084 0356 91       		.byte	0x91
 2085 0357 6C       		.sleb128 -20
 2086 0358 0C       		.uleb128 0xc
 2087 0359 19020000 		.4byte	.LASF27
 2088 035d 01       		.byte	0x1
 2089 035e B8       		.byte	0xb8
 2090 035f C9000000 		.4byte	0xc9
 2091 0363 02       		.uleb128 0x2
 2092 0364 91       		.byte	0x91
 2093 0365 68       		.sleb128 -24
 2094 0366 0C       		.uleb128 0xc
 2095 0367 11010000 		.4byte	.LASF41
 2096 036b 01       		.byte	0x1
 2097 036c B8       		.byte	0xb8
 2098 036d C9000000 		.4byte	0xc9
 2099 0371 02       		.uleb128 0x2
 2100 0372 91       		.byte	0x91
 2101 0373 64       		.sleb128 -28
 2102 0374 0C       		.uleb128 0xc
 2103 0375 9F020000 		.4byte	.LASF42
 2104 0379 01       		.byte	0x1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 44


 2105 037a B8       		.byte	0xb8
 2106 037b C9000000 		.4byte	0xc9
 2107 037f 02       		.uleb128 0x2
 2108 0380 91       		.byte	0x91
 2109 0381 60       		.sleb128 -32
 2110 0382 07       		.uleb128 0x7
 2111 0383 12020000 		.4byte	.LASF21
 2112 0387 01       		.byte	0x1
 2113 0388 B9       		.byte	0xb9
 2114 0389 6B000000 		.4byte	0x6b
 2115 038d 02       		.uleb128 0x2
 2116 038e 91       		.byte	0x91
 2117 038f 77       		.sleb128 -9
 2118 0390 07       		.uleb128 0x7
 2119 0391 63010000 		.4byte	.LASF43
 2120 0395 01       		.byte	0x1
 2121 0396 BA       		.byte	0xba
 2122 0397 9F030000 		.4byte	0x39f
 2123 039b 02       		.uleb128 0x2
 2124 039c 91       		.byte	0x91
 2125 039d 74       		.sleb128 -12
 2126 039e 00       		.byte	0
 2127 039f 08       		.uleb128 0x8
 2128 03a0 6B000000 		.4byte	0x6b
 2129 03a4 AF030000 		.4byte	0x3af
 2130 03a8 0D       		.uleb128 0xd
 2131 03a9 C2000000 		.4byte	0xc2
 2132 03ad 01       		.byte	0x1
 2133 03ae 00       		.byte	0
 2134 03af 0A       		.uleb128 0xa
 2135 03b0 59020000 		.4byte	.LASF44
 2136 03b4 01       		.byte	0x1
 2137 03b5 FE       		.byte	0xfe
 2138 03b6 8C000000 		.4byte	0x8c
 2139 03ba 00000000 		.4byte	.LFB39
 2140 03be A0000000 		.4byte	.LFE39-.LFB39
 2141 03c2 01       		.uleb128 0x1
 2142 03c3 9C       		.byte	0x9c
 2143 03c4 F5030000 		.4byte	0x3f5
 2144 03c8 0C       		.uleb128 0xc
 2145 03c9 F6010000 		.4byte	.LASF30
 2146 03cd 01       		.byte	0x1
 2147 03ce FE       		.byte	0xfe
 2148 03cf F5030000 		.4byte	0x3f5
 2149 03d3 02       		.uleb128 0x2
 2150 03d4 91       		.byte	0x91
 2151 03d5 64       		.sleb128 -28
 2152 03d6 0E       		.uleb128 0xe
 2153 03d7 63010000 		.4byte	.LASF43
 2154 03db 01       		.byte	0x1
 2155 03dc 0001     		.2byte	0x100
 2156 03de 9F030000 		.4byte	0x39f
 2157 03e2 02       		.uleb128 0x2
 2158 03e3 91       		.byte	0x91
 2159 03e4 74       		.sleb128 -12
 2160 03e5 0E       		.uleb128 0xe
 2161 03e6 78000000 		.4byte	.LASF45
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 45


 2162 03ea 01       		.byte	0x1
 2163 03eb 0101     		.2byte	0x101
 2164 03ed FB030000 		.4byte	0x3fb
 2165 03f1 02       		.uleb128 0x2
 2166 03f2 91       		.byte	0x91
 2167 03f3 6C       		.sleb128 -20
 2168 03f4 00       		.byte	0
 2169 03f5 05       		.uleb128 0x5
 2170 03f6 04       		.byte	0x4
 2171 03f7 A2000000 		.4byte	0xa2
 2172 03fb 08       		.uleb128 0x8
 2173 03fc 81000000 		.4byte	0x81
 2174 0400 0B040000 		.4byte	0x40b
 2175 0404 0D       		.uleb128 0xd
 2176 0405 C2000000 		.4byte	0xc2
 2177 0409 01       		.byte	0x1
 2178 040a 00       		.byte	0
 2179 040b 0F       		.uleb128 0xf
 2180 040c F6020000 		.4byte	.LASF46
 2181 0410 01       		.byte	0x1
 2182 0411 1501     		.2byte	0x115
 2183 0413 8C000000 		.4byte	0x8c
 2184 0417 00000000 		.4byte	.LFB40
 2185 041b 04010000 		.4byte	.LFE40-.LFB40
 2186 041f 01       		.uleb128 0x1
 2187 0420 9C       		.byte	0x9c
 2188 0421 54040000 		.4byte	0x454
 2189 0425 10       		.uleb128 0x10
 2190 0426 0C000000 		.4byte	.LASF47
 2191 042a 01       		.byte	0x1
 2192 042b 1501     		.2byte	0x115
 2193 042d F5030000 		.4byte	0x3f5
 2194 0431 02       		.uleb128 0x2
 2195 0432 91       		.byte	0x91
 2196 0433 54       		.sleb128 -44
 2197 0434 0E       		.uleb128 0xe
 2198 0435 63010000 		.4byte	.LASF43
 2199 0439 01       		.byte	0x1
 2200 043a 2901     		.2byte	0x129
 2201 043c 54040000 		.4byte	0x454
 2202 0440 03       		.uleb128 0x3
 2203 0441 91       		.byte	0x91
 2204 0442 60       		.sleb128 -32
 2205 0443 06       		.byte	0x6
 2206 0444 0E       		.uleb128 0xe
 2207 0445 12020000 		.4byte	.LASF21
 2208 0449 01       		.byte	0x1
 2209 044a 2A01     		.2byte	0x12a
 2210 044c 6B000000 		.4byte	0x6b
 2211 0450 02       		.uleb128 0x2
 2212 0451 91       		.byte	0x91
 2213 0452 5F       		.sleb128 -33
 2214 0453 00       		.byte	0
 2215 0454 08       		.uleb128 0x8
 2216 0455 6B000000 		.4byte	0x6b
 2217 0459 67040000 		.4byte	0x467
 2218 045d 09       		.uleb128 0x9
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 46


 2219 045e C2000000 		.4byte	0xc2
 2220 0462 03       		.uleb128 0x3
 2221 0463 91       		.byte	0x91
 2222 0464 64       		.sleb128 -28
 2223 0465 06       		.byte	0x6
 2224 0466 00       		.byte	0
 2225 0467 0F       		.uleb128 0xf
 2226 0468 CD020000 		.4byte	.LASF48
 2227 046c 01       		.byte	0x1
 2228 046d 4201     		.2byte	0x142
 2229 046f 8C000000 		.4byte	0x8c
 2230 0473 00000000 		.4byte	.LFB41
 2231 0477 98000000 		.4byte	.LFE41-.LFB41
 2232 047b 01       		.uleb128 0x1
 2233 047c 9C       		.byte	0x9c
 2234 047d BE040000 		.4byte	0x4be
 2235 0481 10       		.uleb128 0x10
 2236 0482 66020000 		.4byte	.LASF36
 2237 0486 01       		.byte	0x1
 2238 0487 4201     		.2byte	0x142
 2239 0489 6B000000 		.4byte	0x6b
 2240 048d 02       		.uleb128 0x2
 2241 048e 91       		.byte	0x91
 2242 048f 6F       		.sleb128 -17
 2243 0490 10       		.uleb128 0x10
 2244 0491 AA020000 		.4byte	.LASF49
 2245 0495 01       		.byte	0x1
 2246 0496 4201     		.2byte	0x142
 2247 0498 BE040000 		.4byte	0x4be
 2248 049c 02       		.uleb128 0x2
 2249 049d 91       		.byte	0x91
 2250 049e 68       		.sleb128 -24
 2251 049f 0E       		.uleb128 0xe
 2252 04a0 12020000 		.4byte	.LASF21
 2253 04a4 01       		.byte	0x1
 2254 04a5 4301     		.2byte	0x143
 2255 04a7 81000000 		.4byte	0x81
 2256 04ab 02       		.uleb128 0x2
 2257 04ac 91       		.byte	0x91
 2258 04ad 74       		.sleb128 -12
 2259 04ae 0E       		.uleb128 0xe
 2260 04af 7D020000 		.4byte	.LASF50
 2261 04b3 01       		.byte	0x1
 2262 04b4 4401     		.2byte	0x144
 2263 04b6 21030000 		.4byte	0x321
 2264 04ba 02       		.uleb128 0x2
 2265 04bb 91       		.byte	0x91
 2266 04bc 70       		.sleb128 -16
 2267 04bd 00       		.byte	0
 2268 04be 05       		.uleb128 0x5
 2269 04bf 04       		.byte	0x4
 2270 04c0 97000000 		.4byte	0x97
 2271 04c4 07       		.uleb128 0x7
 2272 04c5 0C010000 		.4byte	.LASF51
 2273 04c9 01       		.byte	0x1
 2274 04ca 1D       		.byte	0x1d
 2275 04cb 5D000000 		.4byte	0x5d
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 47


 2276 04cf 05       		.uleb128 0x5
 2277 04d0 03       		.byte	0x3
 2278 04d1 00000000 		.4byte	size
 2279 04d5 11       		.uleb128 0x11
 2280 04d6 6C020000 		.4byte	.LASF56
 2281 04da 01       		.byte	0x1
 2282 04db 1E       		.byte	0x1e
 2283 04dc 6B000000 		.4byte	0x6b
 2284 04e0 05       		.uleb128 0x5
 2285 04e1 03       		.byte	0x3
 2286 04e2 00000000 		.4byte	irrigationStatus
 2287 04e6 00       		.byte	0
 2288              		.section	.debug_abbrev,"",%progbits
 2289              	.Ldebug_abbrev0:
 2290 0000 01       		.uleb128 0x1
 2291 0001 11       		.uleb128 0x11
 2292 0002 01       		.byte	0x1
 2293 0003 25       		.uleb128 0x25
 2294 0004 0E       		.uleb128 0xe
 2295 0005 13       		.uleb128 0x13
 2296 0006 0B       		.uleb128 0xb
 2297 0007 03       		.uleb128 0x3
 2298 0008 0E       		.uleb128 0xe
 2299 0009 1B       		.uleb128 0x1b
 2300 000a 0E       		.uleb128 0xe
 2301 000b 55       		.uleb128 0x55
 2302 000c 17       		.uleb128 0x17
 2303 000d 11       		.uleb128 0x11
 2304 000e 01       		.uleb128 0x1
 2305 000f 10       		.uleb128 0x10
 2306 0010 17       		.uleb128 0x17
 2307 0011 00       		.byte	0
 2308 0012 00       		.byte	0
 2309 0013 02       		.uleb128 0x2
 2310 0014 24       		.uleb128 0x24
 2311 0015 00       		.byte	0
 2312 0016 0B       		.uleb128 0xb
 2313 0017 0B       		.uleb128 0xb
 2314 0018 3E       		.uleb128 0x3e
 2315 0019 0B       		.uleb128 0xb
 2316 001a 03       		.uleb128 0x3
 2317 001b 0E       		.uleb128 0xe
 2318 001c 00       		.byte	0
 2319 001d 00       		.byte	0
 2320 001e 03       		.uleb128 0x3
 2321 001f 24       		.uleb128 0x24
 2322 0020 00       		.byte	0
 2323 0021 0B       		.uleb128 0xb
 2324 0022 0B       		.uleb128 0xb
 2325 0023 3E       		.uleb128 0x3e
 2326 0024 0B       		.uleb128 0xb
 2327 0025 03       		.uleb128 0x3
 2328 0026 08       		.uleb128 0x8
 2329 0027 00       		.byte	0
 2330 0028 00       		.byte	0
 2331 0029 04       		.uleb128 0x4
 2332 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 48


 2333 002b 00       		.byte	0
 2334 002c 03       		.uleb128 0x3
 2335 002d 0E       		.uleb128 0xe
 2336 002e 3A       		.uleb128 0x3a
 2337 002f 0B       		.uleb128 0xb
 2338 0030 3B       		.uleb128 0x3b
 2339 0031 0B       		.uleb128 0xb
 2340 0032 49       		.uleb128 0x49
 2341 0033 13       		.uleb128 0x13
 2342 0034 00       		.byte	0
 2343 0035 00       		.byte	0
 2344 0036 05       		.uleb128 0x5
 2345 0037 0F       		.uleb128 0xf
 2346 0038 00       		.byte	0
 2347 0039 0B       		.uleb128 0xb
 2348 003a 0B       		.uleb128 0xb
 2349 003b 49       		.uleb128 0x49
 2350 003c 13       		.uleb128 0x13
 2351 003d 00       		.byte	0
 2352 003e 00       		.byte	0
 2353 003f 06       		.uleb128 0x6
 2354 0040 2E       		.uleb128 0x2e
 2355 0041 01       		.byte	0x1
 2356 0042 3F       		.uleb128 0x3f
 2357 0043 19       		.uleb128 0x19
 2358 0044 03       		.uleb128 0x3
 2359 0045 0E       		.uleb128 0xe
 2360 0046 3A       		.uleb128 0x3a
 2361 0047 0B       		.uleb128 0xb
 2362 0048 3B       		.uleb128 0x3b
 2363 0049 0B       		.uleb128 0xb
 2364 004a 27       		.uleb128 0x27
 2365 004b 19       		.uleb128 0x19
 2366 004c 11       		.uleb128 0x11
 2367 004d 01       		.uleb128 0x1
 2368 004e 12       		.uleb128 0x12
 2369 004f 06       		.uleb128 0x6
 2370 0050 40       		.uleb128 0x40
 2371 0051 18       		.uleb128 0x18
 2372 0052 9642     		.uleb128 0x2116
 2373 0054 19       		.uleb128 0x19
 2374 0055 01       		.uleb128 0x1
 2375 0056 13       		.uleb128 0x13
 2376 0057 00       		.byte	0
 2377 0058 00       		.byte	0
 2378 0059 07       		.uleb128 0x7
 2379 005a 34       		.uleb128 0x34
 2380 005b 00       		.byte	0
 2381 005c 03       		.uleb128 0x3
 2382 005d 0E       		.uleb128 0xe
 2383 005e 3A       		.uleb128 0x3a
 2384 005f 0B       		.uleb128 0xb
 2385 0060 3B       		.uleb128 0x3b
 2386 0061 0B       		.uleb128 0xb
 2387 0062 49       		.uleb128 0x49
 2388 0063 13       		.uleb128 0x13
 2389 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 49


 2390 0065 18       		.uleb128 0x18
 2391 0066 00       		.byte	0
 2392 0067 00       		.byte	0
 2393 0068 08       		.uleb128 0x8
 2394 0069 01       		.uleb128 0x1
 2395 006a 01       		.byte	0x1
 2396 006b 49       		.uleb128 0x49
 2397 006c 13       		.uleb128 0x13
 2398 006d 01       		.uleb128 0x1
 2399 006e 13       		.uleb128 0x13
 2400 006f 00       		.byte	0
 2401 0070 00       		.byte	0
 2402 0071 09       		.uleb128 0x9
 2403 0072 21       		.uleb128 0x21
 2404 0073 00       		.byte	0
 2405 0074 49       		.uleb128 0x49
 2406 0075 13       		.uleb128 0x13
 2407 0076 2F       		.uleb128 0x2f
 2408 0077 18       		.uleb128 0x18
 2409 0078 00       		.byte	0
 2410 0079 00       		.byte	0
 2411 007a 0A       		.uleb128 0xa
 2412 007b 2E       		.uleb128 0x2e
 2413 007c 01       		.byte	0x1
 2414 007d 3F       		.uleb128 0x3f
 2415 007e 19       		.uleb128 0x19
 2416 007f 03       		.uleb128 0x3
 2417 0080 0E       		.uleb128 0xe
 2418 0081 3A       		.uleb128 0x3a
 2419 0082 0B       		.uleb128 0xb
 2420 0083 3B       		.uleb128 0x3b
 2421 0084 0B       		.uleb128 0xb
 2422 0085 27       		.uleb128 0x27
 2423 0086 19       		.uleb128 0x19
 2424 0087 49       		.uleb128 0x49
 2425 0088 13       		.uleb128 0x13
 2426 0089 11       		.uleb128 0x11
 2427 008a 01       		.uleb128 0x1
 2428 008b 12       		.uleb128 0x12
 2429 008c 06       		.uleb128 0x6
 2430 008d 40       		.uleb128 0x40
 2431 008e 18       		.uleb128 0x18
 2432 008f 9642     		.uleb128 0x2116
 2433 0091 19       		.uleb128 0x19
 2434 0092 01       		.uleb128 0x1
 2435 0093 13       		.uleb128 0x13
 2436 0094 00       		.byte	0
 2437 0095 00       		.byte	0
 2438 0096 0B       		.uleb128 0xb
 2439 0097 05       		.uleb128 0x5
 2440 0098 00       		.byte	0
 2441 0099 03       		.uleb128 0x3
 2442 009a 08       		.uleb128 0x8
 2443 009b 3A       		.uleb128 0x3a
 2444 009c 0B       		.uleb128 0xb
 2445 009d 3B       		.uleb128 0x3b
 2446 009e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 50


 2447 009f 49       		.uleb128 0x49
 2448 00a0 13       		.uleb128 0x13
 2449 00a1 02       		.uleb128 0x2
 2450 00a2 18       		.uleb128 0x18
 2451 00a3 00       		.byte	0
 2452 00a4 00       		.byte	0
 2453 00a5 0C       		.uleb128 0xc
 2454 00a6 05       		.uleb128 0x5
 2455 00a7 00       		.byte	0
 2456 00a8 03       		.uleb128 0x3
 2457 00a9 0E       		.uleb128 0xe
 2458 00aa 3A       		.uleb128 0x3a
 2459 00ab 0B       		.uleb128 0xb
 2460 00ac 3B       		.uleb128 0x3b
 2461 00ad 0B       		.uleb128 0xb
 2462 00ae 49       		.uleb128 0x49
 2463 00af 13       		.uleb128 0x13
 2464 00b0 02       		.uleb128 0x2
 2465 00b1 18       		.uleb128 0x18
 2466 00b2 00       		.byte	0
 2467 00b3 00       		.byte	0
 2468 00b4 0D       		.uleb128 0xd
 2469 00b5 21       		.uleb128 0x21
 2470 00b6 00       		.byte	0
 2471 00b7 49       		.uleb128 0x49
 2472 00b8 13       		.uleb128 0x13
 2473 00b9 2F       		.uleb128 0x2f
 2474 00ba 0B       		.uleb128 0xb
 2475 00bb 00       		.byte	0
 2476 00bc 00       		.byte	0
 2477 00bd 0E       		.uleb128 0xe
 2478 00be 34       		.uleb128 0x34
 2479 00bf 00       		.byte	0
 2480 00c0 03       		.uleb128 0x3
 2481 00c1 0E       		.uleb128 0xe
 2482 00c2 3A       		.uleb128 0x3a
 2483 00c3 0B       		.uleb128 0xb
 2484 00c4 3B       		.uleb128 0x3b
 2485 00c5 05       		.uleb128 0x5
 2486 00c6 49       		.uleb128 0x49
 2487 00c7 13       		.uleb128 0x13
 2488 00c8 02       		.uleb128 0x2
 2489 00c9 18       		.uleb128 0x18
 2490 00ca 00       		.byte	0
 2491 00cb 00       		.byte	0
 2492 00cc 0F       		.uleb128 0xf
 2493 00cd 2E       		.uleb128 0x2e
 2494 00ce 01       		.byte	0x1
 2495 00cf 3F       		.uleb128 0x3f
 2496 00d0 19       		.uleb128 0x19
 2497 00d1 03       		.uleb128 0x3
 2498 00d2 0E       		.uleb128 0xe
 2499 00d3 3A       		.uleb128 0x3a
 2500 00d4 0B       		.uleb128 0xb
 2501 00d5 3B       		.uleb128 0x3b
 2502 00d6 05       		.uleb128 0x5
 2503 00d7 27       		.uleb128 0x27
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 51


 2504 00d8 19       		.uleb128 0x19
 2505 00d9 49       		.uleb128 0x49
 2506 00da 13       		.uleb128 0x13
 2507 00db 11       		.uleb128 0x11
 2508 00dc 01       		.uleb128 0x1
 2509 00dd 12       		.uleb128 0x12
 2510 00de 06       		.uleb128 0x6
 2511 00df 40       		.uleb128 0x40
 2512 00e0 18       		.uleb128 0x18
 2513 00e1 9642     		.uleb128 0x2116
 2514 00e3 19       		.uleb128 0x19
 2515 00e4 01       		.uleb128 0x1
 2516 00e5 13       		.uleb128 0x13
 2517 00e6 00       		.byte	0
 2518 00e7 00       		.byte	0
 2519 00e8 10       		.uleb128 0x10
 2520 00e9 05       		.uleb128 0x5
 2521 00ea 00       		.byte	0
 2522 00eb 03       		.uleb128 0x3
 2523 00ec 0E       		.uleb128 0xe
 2524 00ed 3A       		.uleb128 0x3a
 2525 00ee 0B       		.uleb128 0xb
 2526 00ef 3B       		.uleb128 0x3b
 2527 00f0 05       		.uleb128 0x5
 2528 00f1 49       		.uleb128 0x49
 2529 00f2 13       		.uleb128 0x13
 2530 00f3 02       		.uleb128 0x2
 2531 00f4 18       		.uleb128 0x18
 2532 00f5 00       		.byte	0
 2533 00f6 00       		.byte	0
 2534 00f7 11       		.uleb128 0x11
 2535 00f8 34       		.uleb128 0x34
 2536 00f9 00       		.byte	0
 2537 00fa 03       		.uleb128 0x3
 2538 00fb 0E       		.uleb128 0xe
 2539 00fc 3A       		.uleb128 0x3a
 2540 00fd 0B       		.uleb128 0xb
 2541 00fe 3B       		.uleb128 0x3b
 2542 00ff 0B       		.uleb128 0xb
 2543 0100 49       		.uleb128 0x49
 2544 0101 13       		.uleb128 0x13
 2545 0102 3F       		.uleb128 0x3f
 2546 0103 19       		.uleb128 0x19
 2547 0104 02       		.uleb128 0x2
 2548 0105 18       		.uleb128 0x18
 2549 0106 00       		.byte	0
 2550 0107 00       		.byte	0
 2551 0108 00       		.byte	0
 2552              		.section	.debug_aranges,"",%progbits
 2553 0000 5C000000 		.4byte	0x5c
 2554 0004 0200     		.2byte	0x2
 2555 0006 00000000 		.4byte	.Ldebug_info0
 2556 000a 04       		.byte	0x4
 2557 000b 00       		.byte	0
 2558 000c 0000     		.2byte	0
 2559 000e 0000     		.2byte	0
 2560 0010 00000000 		.4byte	.LFB33
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 52


 2561 0014 20010000 		.4byte	.LFE33-.LFB33
 2562 0018 00000000 		.4byte	.LFB34
 2563 001c 7C010000 		.4byte	.LFE34-.LFB34
 2564 0020 00000000 		.4byte	.LFB35
 2565 0024 7C010000 		.4byte	.LFE35-.LFB35
 2566 0028 00000000 		.4byte	.LFB36
 2567 002c 7C010000 		.4byte	.LFE36-.LFB36
 2568 0030 00000000 		.4byte	.LFB37
 2569 0034 F4000000 		.4byte	.LFE37-.LFB37
 2570 0038 00000000 		.4byte	.LFB38
 2571 003c F6000000 		.4byte	.LFE38-.LFB38
 2572 0040 00000000 		.4byte	.LFB39
 2573 0044 A0000000 		.4byte	.LFE39-.LFB39
 2574 0048 00000000 		.4byte	.LFB40
 2575 004c 04010000 		.4byte	.LFE40-.LFB40
 2576 0050 00000000 		.4byte	.LFB41
 2577 0054 98000000 		.4byte	.LFE41-.LFB41
 2578 0058 00000000 		.4byte	0
 2579 005c 00000000 		.4byte	0
 2580              		.section	.debug_ranges,"",%progbits
 2581              	.Ldebug_ranges0:
 2582 0000 00000000 		.4byte	.LFB33
 2583 0004 20010000 		.4byte	.LFE33
 2584 0008 00000000 		.4byte	.LFB34
 2585 000c 7C010000 		.4byte	.LFE34
 2586 0010 00000000 		.4byte	.LFB35
 2587 0014 7C010000 		.4byte	.LFE35
 2588 0018 00000000 		.4byte	.LFB36
 2589 001c 7C010000 		.4byte	.LFE36
 2590 0020 00000000 		.4byte	.LFB37
 2591 0024 F4000000 		.4byte	.LFE37
 2592 0028 00000000 		.4byte	.LFB38
 2593 002c F6000000 		.4byte	.LFE38
 2594 0030 00000000 		.4byte	.LFB39
 2595 0034 A0000000 		.4byte	.LFE39
 2596 0038 00000000 		.4byte	.LFB40
 2597 003c 04010000 		.4byte	.LFE40
 2598 0040 00000000 		.4byte	.LFB41
 2599 0044 98000000 		.4byte	.LFE41
 2600 0048 00000000 		.4byte	0
 2601 004c 00000000 		.4byte	0
 2602              		.section	.debug_line,"",%progbits
 2603              	.Ldebug_line0:
 2604 0000 DB010000 		.section	.debug_str,"MS",%progbits,1
 2604      02004A00 
 2604      00000201 
 2604      FB0E0D00 
 2604      01010101 
 2605              	.LASF34:
 2606 0000 7475726E 		.ascii	"turnOffVent\000"
 2606      4F666656 
 2606      656E7400 
 2607              	.LASF47:
 2608 000c 6C696768 		.ascii	"light\000"
 2608      7400
 2609              	.LASF25:
 2610 0012 61646A75 		.ascii	"adjustWindow\000"
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 53


 2610      73745769 
 2610      6E646F77 
 2610      00
 2611              	.LASF38:
 2612 001f 69727269 		.ascii	"irriTransfer\000"
 2612      5472616E 
 2612      73666572 
 2612      00
 2613              	.LASF31:
 2614 002c 61646A75 		.ascii	"adjustVentilation\000"
 2614      73745665 
 2614      6E74696C 
 2614      6174696F 
 2614      6E00
 2615              	.LASF53:
 2616 003e 2E5C4932 		.ascii	".\\I2C_Class.c\000"
 2616      435F436C 
 2616      6173732E 
 2616      6300
 2617              	.LASF3:
 2618 004c 73686F72 		.ascii	"short unsigned int\000"
 2618      7420756E 
 2618      7369676E 
 2618      65642069 
 2618      6E7400
 2619              	.LASF20:
 2620 005f 6C696768 		.ascii	"lightControl\000"
 2620      74436F6E 
 2620      74726F6C 
 2620      00
 2621              	.LASF29:
 2622 006c 7475726E 		.ascii	"turnOffHeat\000"
 2622      4F666648 
 2622      65617400 
 2623              	.LASF45:
 2624 0078 6572726F 		.ascii	"errorStatus\000"
 2624      72537461 
 2624      74757300 
 2625              	.LASF9:
 2626 0084 75696E74 		.ascii	"uint8\000"
 2626      3800
 2627              	.LASF15:
 2628 008a 666C6F61 		.ascii	"float\000"
 2628      7400
 2629              	.LASF52:
 2630 0090 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2630      4320342E 
 2630      382E3420 
 2630      32303134 
 2630      30353236 
 2631 00c3 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2631      20726576 
 2631      6973696F 
 2631      6E203231 
 2631      31333538 
 2632 00f6 30202D66 		.ascii	"0 -ffunction-sections\000"
 2632      66756E63 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 54


 2632      74696F6E 
 2632      2D736563 
 2632      74696F6E 
 2633              	.LASF51:
 2634 010c 73697A65 		.ascii	"size\000"
 2634      00
 2635              	.LASF41:
 2636 0111 76656E74 		.ascii	"vent\000"
 2636      00
 2637              	.LASF37:
 2638 0116 6F6E4F66 		.ascii	"onOff\000"
 2638      6600
 2639              	.LASF24:
 2640 011c 74656D70 		.ascii	"tempWindow\000"
 2640      57696E64 
 2640      6F7700
 2641              	.LASF13:
 2642 0127 696E7431 		.ascii	"int16\000"
 2642      3600
 2643              	.LASF5:
 2644 012d 6C6F6E67 		.ascii	"long unsigned int\000"
 2644      20756E73 
 2644      69676E65 
 2644      6420696E 
 2644      7400
 2645              	.LASF39:
 2646 013f 67657441 		.ascii	"getActuatorStatus\000"
 2646      63747561 
 2646      746F7253 
 2646      74617475 
 2646      7300
 2647              	.LASF14:
 2648 0151 696E7433 		.ascii	"int32\000"
 2648      3200
 2649              	.LASF0:
 2650 0157 7369676E 		.ascii	"signed char\000"
 2650      65642063 
 2650      68617200 
 2651              	.LASF43:
 2652 0163 64617461 		.ascii	"dataget\000"
 2652      67657400 
 2653              	.LASF1:
 2654 016b 756E7369 		.ascii	"unsigned char\000"
 2654      676E6564 
 2654      20636861 
 2654      7200
 2655              	.LASF16:
 2656 0179 646F7562 		.ascii	"double\000"
 2656      6C6500
 2657              	.LASF54:
 2658 0180 433A5C55 		.ascii	"C:\\Users\\Philip\\OneDrive\\GitHub\\PSoC_Master\\P"
 2658      73657273 
 2658      5C506869 
 2658      6C69705C 
 2658      4F6E6544 
 2659 01ad 536F435F 		.ascii	"SoC_Master\\PSoC_Master.cydsn\000"
 2659      4D617374 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 55


 2659      65725C50 
 2659      536F435F 
 2659      4D617374 
 2660              	.LASF23:
 2661 01ca 636C6F73 		.ascii	"closeWindow\000"
 2661      6557696E 
 2661      646F7700 
 2662              	.LASF10:
 2663 01d6 75696E74 		.ascii	"uint16\000"
 2663      313600
 2664              	.LASF12:
 2665 01dd 696E7438 		.ascii	"int8\000"
 2665      00
 2666              	.LASF11:
 2667 01e2 75696E74 		.ascii	"uint32\000"
 2667      333200
 2668              	.LASF8:
 2669 01e9 756E7369 		.ascii	"unsigned int\000"
 2669      676E6564 
 2669      20696E74 
 2669      00
 2670              	.LASF30:
 2671 01f6 74656D70 		.ascii	"temp\000"
 2671      00
 2672              	.LASF7:
 2673 01fb 6C6F6E67 		.ascii	"long long unsigned int\000"
 2673      206C6F6E 
 2673      6720756E 
 2673      7369676E 
 2673      65642069 
 2674              	.LASF21:
 2675 0212 72657375 		.ascii	"result\000"
 2675      6C7400
 2676              	.LASF27:
 2677 0219 68656174 		.ascii	"heat\000"
 2677      00
 2678              	.LASF22:
 2679 021e 6F70656E 		.ascii	"openWindow\000"
 2679      57696E64 
 2679      6F7700
 2680              	.LASF55:
 2681 0229 696E6974 		.ascii	"initI2C\000"
 2681      49324300 
 2682              	.LASF32:
 2683 0231 73706565 		.ascii	"speed\000"
 2683      6400
 2684              	.LASF18:
 2685 0237 73697A65 		.ascii	"sizetype\000"
 2685      74797065 
 2685      00
 2686              	.LASF26:
 2687 0240 61646A75 		.ascii	"adjustHeat\000"
 2687      73744865 
 2687      617400
 2688              	.LASF6:
 2689 024b 6C6F6E67 		.ascii	"long long int\000"
 2689      206C6F6E 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 56


 2689      6720696E 
 2689      7400
 2690              	.LASF44:
 2691 0259 67657454 		.ascii	"getTemp\000"
 2691      656D7000 
 2692              	.LASF17:
 2693 0261 63686172 		.ascii	"char\000"
 2693      00
 2694              	.LASF36:
 2695 0266 696E6465 		.ascii	"index\000"
 2695      7800
 2696              	.LASF56:
 2697 026c 69727269 		.ascii	"irrigationStatus\000"
 2697      67617469 
 2697      6F6E5374 
 2697      61747573 
 2697      00
 2698              	.LASF50:
 2699 027d 736F696C 		.ascii	"soilTransfer\000"
 2699      5472616E 
 2699      73666572 
 2699      00
 2700              	.LASF28:
 2701 028a 7475726E 		.ascii	"turnHeatOn\000"
 2701      48656174 
 2701      4F6E00
 2702              	.LASF2:
 2703 0295 73686F72 		.ascii	"short int\000"
 2703      7420696E 
 2703      7400
 2704              	.LASF42:
 2705 029f 69727269 		.ascii	"irrigation\000"
 2705      67617469 
 2705      6F6E00
 2706              	.LASF49:
 2707 02aa 736F696C 		.ascii	"soilHum\000"
 2707      48756D00 
 2708              	.LASF4:
 2709 02b2 6C6F6E67 		.ascii	"long int\000"
 2709      20696E74 
 2709      00
 2710              	.LASF33:
 2711 02bb 7475726E 		.ascii	"turnOnVent\000"
 2711      4F6E5665 
 2711      6E7400
 2712              	.LASF40:
 2713 02c6 77696E64 		.ascii	"window\000"
 2713      6F7700
 2714              	.LASF48:
 2715 02cd 67657453 		.ascii	"getSoilHum\000"
 2715      6F696C48 
 2715      756D00
 2716              	.LASF35:
 2717 02d8 61646A75 		.ascii	"adjustIrrigation\000"
 2717      73744972 
 2717      72696761 
 2717      74696F6E 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccyKN0Td.s 			page 57


 2717      00
 2718              	.LASF19:
 2719 02e9 6C696768 		.ascii	"lightCommand\000"
 2719      74436F6D 
 2719      6D616E64 
 2719      00
 2720              	.LASF46:
 2721 02f6 6765744C 		.ascii	"getLight\000"
 2721      69676874 
 2721      00
 2722              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
