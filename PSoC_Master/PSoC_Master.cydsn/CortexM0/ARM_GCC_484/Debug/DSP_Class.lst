ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"DSP_Class.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	tempArray,40,4
  18              		.comm	tempArrayPtr,4,4
  19              		.comm	humArray,40,4
  20              		.comm	humArrayPtr,4,4
  21              		.comm	soilHumArray,120,4
  22              		.comm	soilHumPtr,24,4
  23              		.comm	lightArray,40,4
  24              		.comm	lightArrayPtr,4,4
  25              		.comm	temp,1,1
  26              		.comm	hum,1,1
  27              		.comm	soilHum,6,4
  28              		.comm	light,1,1
  29              		.section	.text.initDSP,"ax",%progbits
  30              		.align	2
  31              		.global	initDSP
  32              		.code	16
  33              		.thumb_func
  34              		.type	initDSP, %function
  35              	initDSP:
  36              	.LFB33:
  37              		.file 1 ".\\DSP_Class.c"
   1:.\DSP_Class.c **** /* ========================================
   2:.\DSP_Class.c ****  * 
   3:.\DSP_Class.c ****  * AutoGreen - PSoC_Master
   4:.\DSP_Class.c ****  * DSP_Class.c
   5:.\DSP_Class.c ****  * Digital signal processing
   6:.\DSP_Class.c ****  * PRJ3 - GRP9
   7:.\DSP_Class.c ****  * 2015-04-15
   8:.\DSP_Class.c ****  *
   9:.\DSP_Class.c ****  * ========================================
  10:.\DSP_Class.c **** */
  11:.\DSP_Class.c **** 
  12:.\DSP_Class.c **** // Include files
  13:.\DSP_Class.c **** #include "DSP_Class.h"
  14:.\DSP_Class.c **** 
  15:.\DSP_Class.c **** // Private data members
  16:.\DSP_Class.c **** int32 tempArray[ARRAYSIZE];
  17:.\DSP_Class.c **** int32* tempArrayPtr;
  18:.\DSP_Class.c **** int32 humArray[ARRAYSIZE];
  19:.\DSP_Class.c **** int32* humArrayPtr;
  20:.\DSP_Class.c **** int16 soilHumArray[NBR_OF_SOILHUM_SENSORS][ARRAYSIZE];
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 2


  21:.\DSP_Class.c **** int16* soilHumPtr[NBR_OF_SOILHUM_SENSORS];
  22:.\DSP_Class.c **** int32 lightArray[ARRAYSIZE];
  23:.\DSP_Class.c **** int32* lightArrayPtr;
  24:.\DSP_Class.c **** uint8 temp, hum, soilHum[NBR_OF_SOILHUM_SENSORS], light;
  25:.\DSP_Class.c **** 
  26:.\DSP_Class.c **** // Private prototypes
  27:.\DSP_Class.c **** void avgTemp(void);
  28:.\DSP_Class.c **** void avgHum(void);
  29:.\DSP_Class.c **** void avgSoilHum(uint8 index);
  30:.\DSP_Class.c **** void avgLight(void);
  31:.\DSP_Class.c **** 
  32:.\DSP_Class.c **** // Init: All datamebers are initialized with -1, meaning they are empty
  33:.\DSP_Class.c **** void initDSP(void){
  38              		.loc 1 33 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 82B0     		sub	sp, sp, #8
  45              		.cfi_def_cfa_offset 16
  46 0004 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  48              	.LBB2:
  34:.\DSP_Class.c ****     {
  35:.\DSP_Class.c ****         uint8 i;
  36:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
  49              		.loc 1 36 0
  50 0006 FB1D     		add	r3, r7, #7
  51 0008 0022     		mov	r2, #0
  52 000a 1A70     		strb	r2, [r3]
  53 000c 34E0     		b	.L2
  54              	.L5:
  37:.\DSP_Class.c ****             tempArray[i] = EMPTY;
  55              		.loc 1 37 0
  56 000e FB1D     		add	r3, r7, #7
  57 0010 1A78     		ldrb	r2, [r3]
  58 0012 354B     		ldr	r3, .L8
  59 0014 9200     		lsl	r2, r2, #2
  60 0016 0121     		mov	r1, #1
  61 0018 4942     		neg	r1, r1
  62 001a D150     		str	r1, [r2, r3]
  38:.\DSP_Class.c ****             humArray[i] = EMPTY;
  63              		.loc 1 38 0
  64 001c FB1D     		add	r3, r7, #7
  65 001e 1A78     		ldrb	r2, [r3]
  66 0020 324B     		ldr	r3, .L8+4
  67 0022 9200     		lsl	r2, r2, #2
  68 0024 0121     		mov	r1, #1
  69 0026 4942     		neg	r1, r1
  70 0028 D150     		str	r1, [r2, r3]
  71              	.LBB3:
  39:.\DSP_Class.c ****             {
  40:.\DSP_Class.c ****                 uint8 j;
  41:.\DSP_Class.c ****                 for(j = 0 ; j<NBR_OF_SOILHUM_SENSORS ; j++){
  72              		.loc 1 41 0
  73 002a BB1D     		add	r3, r7, #6
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 3


  74 002c 0022     		mov	r2, #0
  75 002e 1A70     		strb	r2, [r3]
  76 0030 12E0     		b	.L3
  77              	.L4:
  42:.\DSP_Class.c ****                     soilHumArray[j][i] = EMPTY;
  78              		.loc 1 42 0 discriminator 2
  79 0032 BB1D     		add	r3, r7, #6
  80 0034 1A78     		ldrb	r2, [r3]
  81 0036 FB1D     		add	r3, r7, #7
  82 0038 1878     		ldrb	r0, [r3]
  83 003a 2D49     		ldr	r1, .L8+8
  84 003c 131C     		mov	r3, r2
  85 003e 9B00     		lsl	r3, r3, #2
  86 0040 9B18     		add	r3, r3, r2
  87 0042 5B00     		lsl	r3, r3, #1
  88 0044 1B18     		add	r3, r3, r0
  89 0046 5B00     		lsl	r3, r3, #1
  90 0048 0122     		mov	r2, #1
  91 004a 5242     		neg	r2, r2
  92 004c 5A52     		strh	r2, [r3, r1]
  41:.\DSP_Class.c ****                 for(j = 0 ; j<NBR_OF_SOILHUM_SENSORS ; j++){
  93              		.loc 1 41 0 discriminator 2
  94 004e BB1D     		add	r3, r7, #6
  95 0050 1A78     		ldrb	r2, [r3]
  96 0052 BB1D     		add	r3, r7, #6
  97 0054 0132     		add	r2, r2, #1
  98 0056 1A70     		strb	r2, [r3]
  99              	.L3:
  41:.\DSP_Class.c ****                 for(j = 0 ; j<NBR_OF_SOILHUM_SENSORS ; j++){
 100              		.loc 1 41 0 is_stmt 0 discriminator 1
 101 0058 BB1D     		add	r3, r7, #6
 102 005a 1B78     		ldrb	r3, [r3]
 103 005c 052B     		cmp	r3, #5
 104 005e E8D9     		bls	.L4
 105              	.LBE3:
  43:.\DSP_Class.c ****                 }
  44:.\DSP_Class.c ****             }
  45:.\DSP_Class.c ****             lightArray[i] = EMPTY;
 106              		.loc 1 45 0 is_stmt 1
 107 0060 FB1D     		add	r3, r7, #7
 108 0062 1A78     		ldrb	r2, [r3]
 109 0064 234B     		ldr	r3, .L8+12
 110 0066 9200     		lsl	r2, r2, #2
 111 0068 0121     		mov	r1, #1
 112 006a 4942     		neg	r1, r1
 113 006c D150     		str	r1, [r2, r3]
  36:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 114              		.loc 1 36 0
 115 006e FB1D     		add	r3, r7, #7
 116 0070 1A78     		ldrb	r2, [r3]
 117 0072 FB1D     		add	r3, r7, #7
 118 0074 0132     		add	r2, r2, #1
 119 0076 1A70     		strb	r2, [r3]
 120              	.L2:
  36:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 121              		.loc 1 36 0 is_stmt 0 discriminator 1
 122 0078 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 4


 123 007a 1B78     		ldrb	r3, [r3]
 124 007c 092B     		cmp	r3, #9
 125 007e C6D9     		bls	.L5
 126              	.LBE2:
  46:.\DSP_Class.c ****             
  47:.\DSP_Class.c ****         }
  48:.\DSP_Class.c ****     }
  49:.\DSP_Class.c ****     tempArrayPtr = & tempArray[0];
 127              		.loc 1 49 0 is_stmt 1
 128 0080 1D4B     		ldr	r3, .L8+16
 129 0082 194A     		ldr	r2, .L8
 130 0084 1A60     		str	r2, [r3]
  50:.\DSP_Class.c ****     humArrayPtr = & humArray[0];
 131              		.loc 1 50 0
 132 0086 1D4B     		ldr	r3, .L8+20
 133 0088 184A     		ldr	r2, .L8+4
 134 008a 1A60     		str	r2, [r3]
 135              	.LBB4:
  51:.\DSP_Class.c ****     {
  52:.\DSP_Class.c ****         uint8 k;
  53:.\DSP_Class.c ****         for(k = 0 ; k<NBR_OF_SOILHUM_SENSORS ; k++){
 136              		.loc 1 53 0
 137 008c 7B1D     		add	r3, r7, #5
 138 008e 0022     		mov	r2, #0
 139 0090 1A70     		strb	r2, [r3]
 140 0092 16E0     		b	.L6
 141              	.L7:
  54:.\DSP_Class.c ****             soilHumPtr[k] = & soilHumArray[k][0];
 142              		.loc 1 54 0 discriminator 2
 143 0094 7B1D     		add	r3, r7, #5
 144 0096 1878     		ldrb	r0, [r3]
 145 0098 7B1D     		add	r3, r7, #5
 146 009a 1A78     		ldrb	r2, [r3]
 147 009c 131C     		mov	r3, r2
 148 009e 9B00     		lsl	r3, r3, #2
 149 00a0 9B18     		add	r3, r3, r2
 150 00a2 9B00     		lsl	r3, r3, #2
 151 00a4 124A     		ldr	r2, .L8+8
 152 00a6 9918     		add	r1, r3, r2
 153 00a8 154B     		ldr	r3, .L8+24
 154 00aa 8200     		lsl	r2, r0, #2
 155 00ac D150     		str	r1, [r2, r3]
  55:.\DSP_Class.c ****             soilHum[k] = 0; 
 156              		.loc 1 55 0 discriminator 2
 157 00ae 7B1D     		add	r3, r7, #5
 158 00b0 1B78     		ldrb	r3, [r3]
 159 00b2 144A     		ldr	r2, .L8+28
 160 00b4 0021     		mov	r1, #0
 161 00b6 D154     		strb	r1, [r2, r3]
  53:.\DSP_Class.c ****         for(k = 0 ; k<NBR_OF_SOILHUM_SENSORS ; k++){
 162              		.loc 1 53 0 discriminator 2
 163 00b8 7B1D     		add	r3, r7, #5
 164 00ba 1A78     		ldrb	r2, [r3]
 165 00bc 7B1D     		add	r3, r7, #5
 166 00be 0132     		add	r2, r2, #1
 167 00c0 1A70     		strb	r2, [r3]
 168              	.L6:
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 5


  53:.\DSP_Class.c ****         for(k = 0 ; k<NBR_OF_SOILHUM_SENSORS ; k++){
 169              		.loc 1 53 0 is_stmt 0 discriminator 1
 170 00c2 7B1D     		add	r3, r7, #5
 171 00c4 1B78     		ldrb	r3, [r3]
 172 00c6 052B     		cmp	r3, #5
 173 00c8 E4D9     		bls	.L7
 174              	.LBE4:
  56:.\DSP_Class.c ****             }
  57:.\DSP_Class.c ****     }
  58:.\DSP_Class.c ****     lightArrayPtr = & lightArray[0];
 175              		.loc 1 58 0 is_stmt 1
 176 00ca 0F4B     		ldr	r3, .L8+32
 177 00cc 094A     		ldr	r2, .L8+12
 178 00ce 1A60     		str	r2, [r3]
  59:.\DSP_Class.c ****     temp = 0;
 179              		.loc 1 59 0
 180 00d0 0E4B     		ldr	r3, .L8+36
 181 00d2 0022     		mov	r2, #0
 182 00d4 1A70     		strb	r2, [r3]
  60:.\DSP_Class.c ****     hum = 0;
 183              		.loc 1 60 0
 184 00d6 0E4B     		ldr	r3, .L8+40
 185 00d8 0022     		mov	r2, #0
 186 00da 1A70     		strb	r2, [r3]
  61:.\DSP_Class.c ****     light = 0;
 187              		.loc 1 61 0
 188 00dc 0D4B     		ldr	r3, .L8+44
 189 00de 0022     		mov	r2, #0
 190 00e0 1A70     		strb	r2, [r3]
  62:.\DSP_Class.c **** }
 191              		.loc 1 62 0
 192 00e2 BD46     		mov	sp, r7
 193 00e4 02B0     		add	sp, sp, #8
 194              		@ sp needed
 195 00e6 80BD     		pop	{r7, pc}
 196              	.L9:
 197              		.align	2
 198              	.L8:
 199 00e8 00000000 		.word	tempArray
 200 00ec 00000000 		.word	humArray
 201 00f0 00000000 		.word	soilHumArray
 202 00f4 00000000 		.word	lightArray
 203 00f8 00000000 		.word	tempArrayPtr
 204 00fc 00000000 		.word	humArrayPtr
 205 0100 00000000 		.word	soilHumPtr
 206 0104 00000000 		.word	soilHum
 207 0108 00000000 		.word	lightArrayPtr
 208 010c 00000000 		.word	temp
 209 0110 00000000 		.word	hum
 210 0114 00000000 		.word	light
 211              		.cfi_endproc
 212              	.LFE33:
 213              		.size	initDSP, .-initDSP
 214              		.section	.text.getTemp_DSP,"ax",%progbits
 215              		.align	2
 216              		.global	getTemp_DSP
 217              		.code	16
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 6


 218              		.thumb_func
 219              		.type	getTemp_DSP, %function
 220              	getTemp_DSP:
 221              	.LFB34:
  63:.\DSP_Class.c **** 
  64:.\DSP_Class.c **** uint8 getTemp_DSP(void){
 222              		.loc 1 64 0
 223              		.cfi_startproc
 224 0000 80B5     		push	{r7, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 7, -8
 227              		.cfi_offset 14, -4
 228 0002 00AF     		add	r7, sp, #0
 229              		.cfi_def_cfa_register 7
  65:.\DSP_Class.c ****     return temp;
 230              		.loc 1 65 0
 231 0004 024B     		ldr	r3, .L12
 232 0006 1B78     		ldrb	r3, [r3]
  66:.\DSP_Class.c **** }
 233              		.loc 1 66 0
 234 0008 181C     		mov	r0, r3
 235 000a BD46     		mov	sp, r7
 236              		@ sp needed
 237 000c 80BD     		pop	{r7, pc}
 238              	.L13:
 239 000e C046     		.align	2
 240              	.L12:
 241 0010 00000000 		.word	temp
 242              		.cfi_endproc
 243              	.LFE34:
 244              		.size	getTemp_DSP, .-getTemp_DSP
 245              		.section	.text.getHum_DSP,"ax",%progbits
 246              		.align	2
 247              		.global	getHum_DSP
 248              		.code	16
 249              		.thumb_func
 250              		.type	getHum_DSP, %function
 251              	getHum_DSP:
 252              	.LFB35:
  67:.\DSP_Class.c **** 
  68:.\DSP_Class.c **** uint8 getHum_DSP(void){
 253              		.loc 1 68 0
 254              		.cfi_startproc
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 00AF     		add	r7, sp, #0
 260              		.cfi_def_cfa_register 7
  69:.\DSP_Class.c ****     return hum;
 261              		.loc 1 69 0
 262 0004 024B     		ldr	r3, .L16
 263 0006 1B78     		ldrb	r3, [r3]
  70:.\DSP_Class.c **** }
 264              		.loc 1 70 0
 265 0008 181C     		mov	r0, r3
 266 000a BD46     		mov	sp, r7
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 7


 267              		@ sp needed
 268 000c 80BD     		pop	{r7, pc}
 269              	.L17:
 270 000e C046     		.align	2
 271              	.L16:
 272 0010 00000000 		.word	hum
 273              		.cfi_endproc
 274              	.LFE35:
 275              		.size	getHum_DSP, .-getHum_DSP
 276              		.section	.text.getSoilHum_DSP,"ax",%progbits
 277              		.align	2
 278              		.global	getSoilHum_DSP
 279              		.code	16
 280              		.thumb_func
 281              		.type	getSoilHum_DSP, %function
 282              	getSoilHum_DSP:
 283              	.LFB36:
  71:.\DSP_Class.c **** 
  72:.\DSP_Class.c **** uint8 getSoilHum_DSP(uint8 index){
 284              		.loc 1 72 0
 285              		.cfi_startproc
 286 0000 80B5     		push	{r7, lr}
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 7, -8
 289              		.cfi_offset 14, -4
 290 0002 82B0     		sub	sp, sp, #8
 291              		.cfi_def_cfa_offset 16
 292 0004 00AF     		add	r7, sp, #0
 293              		.cfi_def_cfa_register 7
 294 0006 021C     		mov	r2, r0
 295 0008 FB1D     		add	r3, r7, #7
 296 000a 1A70     		strb	r2, [r3]
  73:.\DSP_Class.c ****     return soilHum[index];
 297              		.loc 1 73 0
 298 000c FB1D     		add	r3, r7, #7
 299 000e 1B78     		ldrb	r3, [r3]
 300 0010 024A     		ldr	r2, .L20
 301 0012 D35C     		ldrb	r3, [r2, r3]
  74:.\DSP_Class.c **** }
 302              		.loc 1 74 0
 303 0014 181C     		mov	r0, r3
 304 0016 BD46     		mov	sp, r7
 305 0018 02B0     		add	sp, sp, #8
 306              		@ sp needed
 307 001a 80BD     		pop	{r7, pc}
 308              	.L21:
 309              		.align	2
 310              	.L20:
 311 001c 00000000 		.word	soilHum
 312              		.cfi_endproc
 313              	.LFE36:
 314              		.size	getSoilHum_DSP, .-getSoilHum_DSP
 315              		.section	.text.getLight_DSP,"ax",%progbits
 316              		.align	2
 317              		.global	getLight_DSP
 318              		.code	16
 319              		.thumb_func
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 8


 320              		.type	getLight_DSP, %function
 321              	getLight_DSP:
 322              	.LFB37:
  75:.\DSP_Class.c **** 
  76:.\DSP_Class.c **** uint8 getLight_DSP(void){
 323              		.loc 1 76 0
 324              		.cfi_startproc
 325 0000 80B5     		push	{r7, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 7, -8
 328              		.cfi_offset 14, -4
 329 0002 00AF     		add	r7, sp, #0
 330              		.cfi_def_cfa_register 7
  77:.\DSP_Class.c ****     return light;
 331              		.loc 1 77 0
 332 0004 024B     		ldr	r3, .L24
 333 0006 1B78     		ldrb	r3, [r3]
  78:.\DSP_Class.c **** }
 334              		.loc 1 78 0
 335 0008 181C     		mov	r0, r3
 336 000a BD46     		mov	sp, r7
 337              		@ sp needed
 338 000c 80BD     		pop	{r7, pc}
 339              	.L25:
 340 000e C046     		.align	2
 341              	.L24:
 342 0010 00000000 		.word	light
 343              		.cfi_endproc
 344              	.LFE37:
 345              		.size	getLight_DSP, .-getLight_DSP
 346              		.global	__aeabi_ldivmod
 347              		.section	.text.avgTemp,"ax",%progbits
 348              		.align	2
 349              		.global	avgTemp
 350              		.code	16
 351              		.thumb_func
 352              		.type	avgTemp, %function
 353              	avgTemp:
 354              	.LFB38:
  79:.\DSP_Class.c **** 
  80:.\DSP_Class.c **** void avgTemp(void){
 355              		.loc 1 80 0
 356              		.cfi_startproc
 357 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 358              		.cfi_def_cfa_offset 20
 359              		.cfi_offset 4, -20
 360              		.cfi_offset 5, -16
 361              		.cfi_offset 6, -12
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 87B0     		sub	sp, sp, #28
 365              		.cfi_def_cfa_offset 48
 366 0004 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
  81:.\DSP_Class.c ****     uint8 skip = 0;
 368              		.loc 1 81 0
 369 0006 381C     		mov	r0, r7
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 9


 370 0008 1730     		add	r0, r0, #23
 371 000a 0025     		mov	r5, #0
 372 000c 0570     		strb	r5, [r0]
  82:.\DSP_Class.c ****     int64 total = 0;
 373              		.loc 1 82 0
 374 000e 0025     		mov	r5, #0
 375 0010 0026     		mov	r6, #0
 376 0012 BD60     		str	r5, [r7, #8]
 377 0014 FE60     		str	r6, [r7, #12]
 378              	.LBB5:
  83:.\DSP_Class.c ****     {
  84:.\DSP_Class.c ****         uint8 i;
  85:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 379              		.loc 1 85 0
 380 0016 F81D     		add	r0, r7, #7
 381 0018 0025     		mov	r5, #0
 382 001a 0570     		strb	r5, [r0]
 383 001c 21E0     		b	.L27
 384              	.L30:
  86:.\DSP_Class.c ****             if(tempArray[i]>=0){
 385              		.loc 1 86 0
 386 001e F81D     		add	r0, r7, #7
 387 0020 0578     		ldrb	r5, [r0]
 388 0022 2348     		ldr	r0, .L33
 389 0024 AD00     		lsl	r5, r5, #2
 390 0026 2858     		ldr	r0, [r5, r0]
 391 0028 0028     		cmp	r0, #0
 392 002a 0EDB     		blt	.L28
  87:.\DSP_Class.c ****                 total += tempArray[i];
 393              		.loc 1 87 0
 394 002c F81D     		add	r0, r7, #7
 395 002e 0578     		ldrb	r5, [r0]
 396 0030 1F48     		ldr	r0, .L33
 397 0032 AD00     		lsl	r5, r5, #2
 398 0034 2858     		ldr	r0, [r5, r0]
 399 0036 011C     		mov	r1, r0
 400 0038 C017     		asr	r0, r0, #31
 401 003a 021C     		mov	r2, r0
 402 003c BD68     		ldr	r5, [r7, #8]
 403 003e FE68     		ldr	r6, [r7, #12]
 404 0040 6D18     		add	r5, r5, r1
 405 0042 5641     		adc	r6, r6, r2
 406 0044 BD60     		str	r5, [r7, #8]
 407 0046 FE60     		str	r6, [r7, #12]
 408 0048 06E0     		b	.L29
 409              	.L28:
  88:.\DSP_Class.c ****             }
  89:.\DSP_Class.c ****             else{
  90:.\DSP_Class.c ****                 skip++;
 410              		.loc 1 90 0
 411 004a 381C     		mov	r0, r7
 412 004c 1730     		add	r0, r0, #23
 413 004e 0578     		ldrb	r5, [r0]
 414 0050 381C     		mov	r0, r7
 415 0052 1730     		add	r0, r0, #23
 416 0054 0135     		add	r5, r5, #1
 417 0056 0570     		strb	r5, [r0]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 10


 418              	.L29:
  85:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 419              		.loc 1 85 0
 420 0058 F81D     		add	r0, r7, #7
 421 005a 0578     		ldrb	r5, [r0]
 422 005c F81D     		add	r0, r7, #7
 423 005e 0135     		add	r5, r5, #1
 424 0060 0570     		strb	r5, [r0]
 425              	.L27:
  85:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 426              		.loc 1 85 0 is_stmt 0 discriminator 1
 427 0062 F81D     		add	r0, r7, #7
 428 0064 0078     		ldrb	r0, [r0]
 429 0066 0928     		cmp	r0, #9
 430 0068 D9D9     		bls	.L30
 431              	.LBE5:
  91:.\DSP_Class.c ****             }
  92:.\DSP_Class.c ****         }
  93:.\DSP_Class.c ****     }
  94:.\DSP_Class.c ****     // Makes sure that enough datapoints are pressent
  95:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 432              		.loc 1 95 0 is_stmt 1
 433 006a 3A1C     		mov	r2, r7
 434 006c 1732     		add	r2, r2, #23
 435 006e 1278     		ldrb	r2, [r2]
 436 0070 0A21     		mov	r1, #10
 437 0072 8A1A     		sub	r2, r1, r2
 438 0074 092A     		cmp	r2, #9
 439 0076 15DD     		ble	.L31
 440              	.LBB6:
  96:.\DSP_Class.c ****         int32 avg = total/(ARRAYSIZE-skip);                         // Calculate the average value
 441              		.loc 1 96 0
 442 0078 3A1C     		mov	r2, r7
 443 007a 1732     		add	r2, r2, #23
 444 007c 1278     		ldrb	r2, [r2]
 445 007e 0A21     		mov	r1, #10
 446 0080 8A1A     		sub	r2, r1, r2
 447 0082 131C     		mov	r3, r2
 448 0084 D217     		asr	r2, r2, #31
 449 0086 141C     		mov	r4, r2
 450 0088 B868     		ldr	r0, [r7, #8]
 451 008a F968     		ldr	r1, [r7, #12]
 452 008c 1A1C     		mov	r2, r3
 453 008e 231C     		mov	r3, r4
 454 0090 FFF7FEFF 		bl	__aeabi_ldivmod
 455 0094 031C     		mov	r3, r0
 456 0096 0C1C     		mov	r4, r1
 457 0098 3B60     		str	r3, [r7]
  97:.\DSP_Class.c ****         
  98:.\DSP_Class.c ****         // TODO limit temp output to 1 and 200
  99:.\DSP_Class.c ****         
 100:.\DSP_Class.c ****         temp = (uint8)avg;
 458              		.loc 1 100 0
 459 009a 3B68     		ldr	r3, [r7]
 460 009c DAB2     		uxtb	r2, r3
 461 009e 054B     		ldr	r3, .L33+4
 462 00a0 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 11


 463              	.LBE6:
 464 00a2 02E0     		b	.L26
 465              	.L31:
 101:.\DSP_Class.c ****     }
 102:.\DSP_Class.c ****     else{
 103:.\DSP_Class.c ****         temp = 0;
 466              		.loc 1 103 0
 467 00a4 034B     		ldr	r3, .L33+4
 468 00a6 0022     		mov	r2, #0
 469 00a8 1A70     		strb	r2, [r3]
 470              	.L26:
 104:.\DSP_Class.c ****     }
 105:.\DSP_Class.c **** }
 471              		.loc 1 105 0
 472 00aa BD46     		mov	sp, r7
 473 00ac 07B0     		add	sp, sp, #28
 474              		@ sp needed
 475 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 476              	.L34:
 477              		.align	2
 478              	.L33:
 479 00b0 00000000 		.word	tempArray
 480 00b4 00000000 		.word	temp
 481              		.cfi_endproc
 482              	.LFE38:
 483              		.size	avgTemp, .-avgTemp
 484              		.global	__aeabi_l2f
 485              		.global	__aeabi_fdiv
 486              		.global	__aeabi_fmul
 487              		.global	__aeabi_fcmple
 488              		.global	__aeabi_fcmpgt
 489              		.global	__aeabi_f2uiz
 490              		.section	.text.avgHum,"ax",%progbits
 491              		.align	2
 492              		.global	avgHum
 493              		.code	16
 494              		.thumb_func
 495              		.type	avgHum, %function
 496              	avgHum:
 497              	.LFB39:
 106:.\DSP_Class.c **** 
 107:.\DSP_Class.c **** void avgHum(void){
 498              		.loc 1 107 0
 499              		.cfi_startproc
 500 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 501              		.cfi_def_cfa_offset 20
 502              		.cfi_offset 4, -20
 503              		.cfi_offset 5, -16
 504              		.cfi_offset 6, -12
 505              		.cfi_offset 7, -8
 506              		.cfi_offset 14, -4
 507 0002 89B0     		sub	sp, sp, #36
 508              		.cfi_def_cfa_offset 56
 509 0004 00AF     		add	r7, sp, #0
 510              		.cfi_def_cfa_register 7
 108:.\DSP_Class.c ****     uint8 skip = 0;
 511              		.loc 1 108 0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 12


 512 0006 381C     		mov	r0, r7
 513 0008 1F30     		add	r0, r0, #31
 514 000a 0025     		mov	r5, #0
 515 000c 0570     		strb	r5, [r0]
 109:.\DSP_Class.c ****     int64 total = 0;
 516              		.loc 1 109 0
 517 000e 0025     		mov	r5, #0
 518 0010 0026     		mov	r6, #0
 519 0012 3D61     		str	r5, [r7, #16]
 520 0014 7E61     		str	r6, [r7, #20]
 521              	.LBB7:
 110:.\DSP_Class.c ****     {
 111:.\DSP_Class.c ****         uint8 i;
 112:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 522              		.loc 1 112 0
 523 0016 381C     		mov	r0, r7
 524 0018 0F30     		add	r0, r0, #15
 525 001a 0025     		mov	r5, #0
 526 001c 0570     		strb	r5, [r0]
 527 001e 25E0     		b	.L36
 528              	.L39:
 113:.\DSP_Class.c ****             if(humArray[i]>=0){
 529              		.loc 1 113 0
 530 0020 381C     		mov	r0, r7
 531 0022 0F30     		add	r0, r0, #15
 532 0024 0578     		ldrb	r5, [r0]
 533 0026 3948     		ldr	r0, .L49
 534 0028 AD00     		lsl	r5, r5, #2
 535 002a 2858     		ldr	r0, [r5, r0]
 536 002c 0028     		cmp	r0, #0
 537 002e 0FDB     		blt	.L37
 114:.\DSP_Class.c ****                 total += humArray[i];
 538              		.loc 1 114 0
 539 0030 381C     		mov	r0, r7
 540 0032 0F30     		add	r0, r0, #15
 541 0034 0578     		ldrb	r5, [r0]
 542 0036 3548     		ldr	r0, .L49
 543 0038 AD00     		lsl	r5, r5, #2
 544 003a 2858     		ldr	r0, [r5, r0]
 545 003c 011C     		mov	r1, r0
 546 003e C017     		asr	r0, r0, #31
 547 0040 021C     		mov	r2, r0
 548 0042 3D69     		ldr	r5, [r7, #16]
 549 0044 7E69     		ldr	r6, [r7, #20]
 550 0046 6D18     		add	r5, r5, r1
 551 0048 5641     		adc	r6, r6, r2
 552 004a 3D61     		str	r5, [r7, #16]
 553 004c 7E61     		str	r6, [r7, #20]
 554 004e 06E0     		b	.L38
 555              	.L37:
 115:.\DSP_Class.c ****             }
 116:.\DSP_Class.c ****             else{
 117:.\DSP_Class.c ****                 skip++;
 556              		.loc 1 117 0
 557 0050 381C     		mov	r0, r7
 558 0052 1F30     		add	r0, r0, #31
 559 0054 0578     		ldrb	r5, [r0]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 13


 560 0056 381C     		mov	r0, r7
 561 0058 1F30     		add	r0, r0, #31
 562 005a 0135     		add	r5, r5, #1
 563 005c 0570     		strb	r5, [r0]
 564              	.L38:
 112:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 565              		.loc 1 112 0
 566 005e 381C     		mov	r0, r7
 567 0060 0F30     		add	r0, r0, #15
 568 0062 0578     		ldrb	r5, [r0]
 569 0064 381C     		mov	r0, r7
 570 0066 0F30     		add	r0, r0, #15
 571 0068 0135     		add	r5, r5, #1
 572 006a 0570     		strb	r5, [r0]
 573              	.L36:
 112:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 574              		.loc 1 112 0 is_stmt 0 discriminator 1
 575 006c 381C     		mov	r0, r7
 576 006e 0F30     		add	r0, r0, #15
 577 0070 0078     		ldrb	r0, [r0]
 578 0072 0928     		cmp	r0, #9
 579 0074 D4D9     		bls	.L39
 580              	.LBE7:
 118:.\DSP_Class.c ****             }
 119:.\DSP_Class.c ****         }
 120:.\DSP_Class.c ****     }
 121:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 122:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 581              		.loc 1 122 0 is_stmt 1
 582 0076 3A1C     		mov	r2, r7
 583 0078 1F32     		add	r2, r2, #31
 584 007a 1278     		ldrb	r2, [r2]
 585 007c 0A21     		mov	r1, #10
 586 007e 8A1A     		sub	r2, r1, r2
 587 0080 092A     		cmp	r2, #9
 588 0082 3CDD     		ble	.L40
 589              	.LBB8:
 123:.\DSP_Class.c ****         float avg = total/(ARRAYSIZE-skip);                     // Calculate the average value
 590              		.loc 1 123 0
 591 0084 3A1C     		mov	r2, r7
 592 0086 1F32     		add	r2, r2, #31
 593 0088 1278     		ldrb	r2, [r2]
 594 008a 0A21     		mov	r1, #10
 595 008c 8A1A     		sub	r2, r1, r2
 596 008e 131C     		mov	r3, r2
 597 0090 D217     		asr	r2, r2, #31
 598 0092 141C     		mov	r4, r2
 599 0094 3869     		ldr	r0, [r7, #16]
 600 0096 7969     		ldr	r1, [r7, #20]
 601 0098 1A1C     		mov	r2, r3
 602 009a 231C     		mov	r3, r4
 603 009c FFF7FEFF 		bl	__aeabi_ldivmod
 604 00a0 031C     		mov	r3, r0
 605 00a2 0C1C     		mov	r4, r1
 606 00a4 181C     		mov	r0, r3
 607 00a6 211C     		mov	r1, r4
 608 00a8 FFF7FEFF 		bl	__aeabi_l2f
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 14


 609 00ac 031C     		add	r3, r0, #0
 610 00ae 7B60     		str	r3, [r7, #4]
 124:.\DSP_Class.c ****         float humInRH = (avg/(16380-2))*100;                // Conversion formula from datasheet
 611              		.loc 1 124 0
 612 00b0 7868     		ldr	r0, [r7, #4]
 613 00b2 1749     		ldr	r1, .L49+4
 614 00b4 FFF7FEFF 		bl	__aeabi_fdiv
 615 00b8 031C     		add	r3, r0, #0
 616 00ba 181C     		add	r0, r3, #0
 617 00bc 1549     		ldr	r1, .L49+8
 618 00be FFF7FEFF 		bl	__aeabi_fmul
 619 00c2 031C     		add	r3, r0, #0
 620 00c4 BB60     		str	r3, [r7, #8]
 125:.\DSP_Class.c ****         
 126:.\DSP_Class.c ****         // humInRH is limited to 1 and 100 RH
 127:.\DSP_Class.c ****         if(humInRH <= 0){
 621              		.loc 1 127 0
 622 00c6 B868     		ldr	r0, [r7, #8]
 623 00c8 0021     		mov	r1, #0
 624 00ca FFF7FEFF 		bl	__aeabi_fcmple
 625 00ce 031C     		mov	r3, r0
 626 00d0 002B     		cmp	r3, #0
 627 00d2 03D0     		beq	.L48
 128:.\DSP_Class.c ****             humInRH = 1;
 628              		.loc 1 128 0
 629 00d4 FE23     		mov	r3, #254
 630 00d6 9B05     		lsl	r3, r3, #22
 631 00d8 BB60     		str	r3, [r7, #8]
 632 00da 08E0     		b	.L43
 633              	.L48:
 129:.\DSP_Class.c ****         }
 130:.\DSP_Class.c ****         else if(humInRH > 100){
 634              		.loc 1 130 0
 635 00dc B868     		ldr	r0, [r7, #8]
 636 00de 0D49     		ldr	r1, .L49+8
 637 00e0 FFF7FEFF 		bl	__aeabi_fcmpgt
 638 00e4 031C     		mov	r3, r0
 639 00e6 002B     		cmp	r3, #0
 640 00e8 01D0     		beq	.L43
 131:.\DSP_Class.c ****             humInRH = 100;
 641              		.loc 1 131 0
 642 00ea 0A4B     		ldr	r3, .L49+8
 643 00ec BB60     		str	r3, [r7, #8]
 644              	.L43:
 132:.\DSP_Class.c ****         }
 133:.\DSP_Class.c ****         hum = humInRH;
 645              		.loc 1 133 0 discriminator 1
 646 00ee B868     		ldr	r0, [r7, #8]
 647 00f0 FFF7FEFF 		bl	__aeabi_f2uiz
 648 00f4 031C     		mov	r3, r0
 649 00f6 DAB2     		uxtb	r2, r3
 650 00f8 074B     		ldr	r3, .L49+12
 651 00fa 1A70     		strb	r2, [r3]
 652              	.LBE8:
 653 00fc 02E0     		b	.L35
 654              	.L40:
 134:.\DSP_Class.c ****     }
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 15


 135:.\DSP_Class.c ****     else{
 136:.\DSP_Class.c ****     hum = 0;
 655              		.loc 1 136 0
 656 00fe 064B     		ldr	r3, .L49+12
 657 0100 0022     		mov	r2, #0
 658 0102 1A70     		strb	r2, [r3]
 659              	.L35:
 137:.\DSP_Class.c ****     }
 138:.\DSP_Class.c **** }
 660              		.loc 1 138 0
 661 0104 BD46     		mov	sp, r7
 662 0106 09B0     		add	sp, sp, #36
 663              		@ sp needed
 664 0108 F0BD     		pop	{r4, r5, r6, r7, pc}
 665              	.L50:
 666 010a C046     		.align	2
 667              	.L49:
 668 010c 00000000 		.word	humArray
 669 0110 00E87F46 		.word	1182787584
 670 0114 0000C842 		.word	1120403456
 671 0118 00000000 		.word	hum
 672              		.cfi_endproc
 673              	.LFE39:
 674              		.size	avgHum, .-avgHum
 675              		.section	.text.avgSoilHum,"ax",%progbits
 676              		.align	2
 677              		.global	avgSoilHum
 678              		.code	16
 679              		.thumb_func
 680              		.type	avgSoilHum, %function
 681              	avgSoilHum:
 682              	.LFB40:
 139:.\DSP_Class.c **** 
 140:.\DSP_Class.c **** void avgSoilHum(uint8 index){
 683              		.loc 1 140 0
 684              		.cfi_startproc
 685 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 686              		.cfi_def_cfa_offset 20
 687              		.cfi_offset 4, -20
 688              		.cfi_offset 5, -16
 689              		.cfi_offset 6, -12
 690              		.cfi_offset 7, -8
 691              		.cfi_offset 14, -4
 692 0002 93B0     		sub	sp, sp, #76
 693              		.cfi_def_cfa_offset 96
 694 0004 00AF     		add	r7, sp, #0
 695              		.cfi_def_cfa_register 7
 696 0006 3B1C     		mov	r3, r7
 697 0008 2733     		add	r3, r3, #39
 698 000a 1870     		strb	r0, [r3]
 141:.\DSP_Class.c ****     uint8 skip = 0;
 699              		.loc 1 141 0
 700 000c 3B1C     		mov	r3, r7
 701 000e 4733     		add	r3, r3, #71
 702 0010 0020     		mov	r0, #0
 703 0012 1870     		strb	r0, [r3]
 142:.\DSP_Class.c ****     int64 total = 0;
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 16


 704              		.loc 1 142 0
 705 0014 0023     		mov	r3, #0
 706 0016 0024     		mov	r4, #0
 707 0018 BB61     		str	r3, [r7, #24]
 708 001a FC61     		str	r4, [r7, #28]
 709 001c BB69     		ldr	r3, [r7, #24]
 710 001e FC69     		ldr	r4, [r7, #28]
 711 0020 BB63     		str	r3, [r7, #56]
 712 0022 FC63     		str	r4, [r7, #60]
 713              	.LBB9:
 143:.\DSP_Class.c ****     {
 144:.\DSP_Class.c ****         uint8 i;
 145:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 714              		.loc 1 145 0
 715 0024 3B1C     		mov	r3, r7
 716 0026 3733     		add	r3, r3, #55
 717 0028 0020     		mov	r0, #0
 718 002a 1870     		strb	r0, [r3]
 719 002c 41E0     		b	.L52
 720              	.L55:
 146:.\DSP_Class.c ****             if(soilHumArray[index][i]>=0){
 721              		.loc 1 146 0
 722 002e 3B1C     		mov	r3, r7
 723 0030 2733     		add	r3, r3, #39
 724 0032 1878     		ldrb	r0, [r3]
 725 0034 3B1C     		mov	r3, r7
 726 0036 3733     		add	r3, r3, #55
 727 0038 1B78     		ldrb	r3, [r3]
 728 003a 9C46     		mov	ip, r3
 729 003c 434E     		ldr	r6, .L65
 730 003e 031C     		mov	r3, r0
 731 0040 9B00     		lsl	r3, r3, #2
 732 0042 1B18     		add	r3, r3, r0
 733 0044 5B00     		lsl	r3, r3, #1
 734 0046 6344     		add	r3, r3, ip
 735 0048 5B00     		lsl	r3, r3, #1
 736 004a 9B5B     		ldrh	r3, [r3, r6]
 737 004c 1BB2     		sxth	r3, r3
 738 004e 002B     		cmp	r3, #0
 739 0050 21DB     		blt	.L53
 147:.\DSP_Class.c ****                 total += soilHumArray[index][i];
 740              		.loc 1 147 0
 741 0052 3B1C     		mov	r3, r7
 742 0054 2733     		add	r3, r3, #39
 743 0056 1878     		ldrb	r0, [r3]
 744 0058 3B1C     		mov	r3, r7
 745 005a 3733     		add	r3, r3, #55
 746 005c 1B78     		ldrb	r3, [r3]
 747 005e 9C46     		mov	ip, r3
 748 0060 3A4E     		ldr	r6, .L65
 749 0062 031C     		mov	r3, r0
 750 0064 9B00     		lsl	r3, r3, #2
 751 0066 1B18     		add	r3, r3, r0
 752 0068 5B00     		lsl	r3, r3, #1
 753 006a 6344     		add	r3, r3, ip
 754 006c 5B00     		lsl	r3, r3, #1
 755 006e 9B5B     		ldrh	r3, [r3, r6]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 17


 756 0070 1BB2     		sxth	r3, r3
 757 0072 191C     		mov	r1, r3
 758 0074 DB17     		asr	r3, r3, #31
 759 0076 1A1C     		mov	r2, r3
 760 0078 BB6B     		ldr	r3, [r7, #56]
 761 007a FC6B     		ldr	r4, [r7, #60]
 762 007c BB60     		str	r3, [r7, #8]
 763 007e FC60     		str	r4, [r7, #12]
 764 0080 BB68     		ldr	r3, [r7, #8]
 765 0082 FC68     		ldr	r4, [r7, #12]
 766 0084 5B18     		add	r3, r3, r1
 767 0086 5441     		adc	r4, r4, r2
 768 0088 3B61     		str	r3, [r7, #16]
 769 008a 7C61     		str	r4, [r7, #20]
 770 008c 3B69     		ldr	r3, [r7, #16]
 771 008e 7C69     		ldr	r4, [r7, #20]
 772 0090 BB63     		str	r3, [r7, #56]
 773 0092 FC63     		str	r4, [r7, #60]
 774 0094 06E0     		b	.L54
 775              	.L53:
 148:.\DSP_Class.c ****             }
 149:.\DSP_Class.c ****             else{
 150:.\DSP_Class.c ****                 skip++;
 776              		.loc 1 150 0
 777 0096 3B1C     		mov	r3, r7
 778 0098 4733     		add	r3, r3, #71
 779 009a 1878     		ldrb	r0, [r3]
 780 009c 3B1C     		mov	r3, r7
 781 009e 4733     		add	r3, r3, #71
 782 00a0 0130     		add	r0, r0, #1
 783 00a2 1870     		strb	r0, [r3]
 784              	.L54:
 145:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 785              		.loc 1 145 0
 786 00a4 3B1C     		mov	r3, r7
 787 00a6 3733     		add	r3, r3, #55
 788 00a8 1878     		ldrb	r0, [r3]
 789 00aa 3B1C     		mov	r3, r7
 790 00ac 3733     		add	r3, r3, #55
 791 00ae 0130     		add	r0, r0, #1
 792 00b0 1870     		strb	r0, [r3]
 793              	.L52:
 145:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 794              		.loc 1 145 0 is_stmt 0 discriminator 1
 795 00b2 3B1C     		mov	r3, r7
 796 00b4 3733     		add	r3, r3, #55
 797 00b6 1B78     		ldrb	r3, [r3]
 798 00b8 092B     		cmp	r3, #9
 799 00ba B8D9     		bls	.L55
 800              	.LBE9:
 151:.\DSP_Class.c ****             }
 152:.\DSP_Class.c ****         }
 153:.\DSP_Class.c ****     }
 154:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 155:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 801              		.loc 1 155 0 is_stmt 1
 802 00bc 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 18


 803 00be 4733     		add	r3, r3, #71
 804 00c0 1B78     		ldrb	r3, [r3]
 805 00c2 0A22     		mov	r2, #10
 806 00c4 D31A     		sub	r3, r2, r3
 807 00c6 092B     		cmp	r3, #9
 808 00c8 36DD     		ble	.L56
 809              	.LBB10:
 156:.\DSP_Class.c ****         float avg = total/(ARRAYSIZE-skip);         // Calculate the average value (assuming input 
 810              		.loc 1 156 0
 811 00ca 3B1C     		mov	r3, r7
 812 00cc 4733     		add	r3, r3, #71
 813 00ce 1B78     		ldrb	r3, [r3]
 814 00d0 0A22     		mov	r2, #10
 815 00d2 D31A     		sub	r3, r2, r3
 816 00d4 3B60     		str	r3, [r7]
 817 00d6 DB17     		asr	r3, r3, #31
 818 00d8 7B60     		str	r3, [r7, #4]
 819 00da B86B     		ldr	r0, [r7, #56]
 820 00dc F96B     		ldr	r1, [r7, #60]
 821 00de 3A68     		ldr	r2, [r7]
 822 00e0 7B68     		ldr	r3, [r7, #4]
 823 00e2 FFF7FEFF 		bl	__aeabi_ldivmod
 824 00e6 031C     		mov	r3, r0
 825 00e8 0C1C     		mov	r4, r1
 826 00ea 181C     		mov	r0, r3
 827 00ec 211C     		mov	r1, r4
 828 00ee FFF7FEFF 		bl	__aeabi_l2f
 829 00f2 031C     		add	r3, r0, #0
 830 00f4 FB62     		str	r3, [r7, #44]
 157:.\DSP_Class.c ****         float soilHumInRH = avg;                    // Takes care of conversion ( NB no conversion 
 831              		.loc 1 157 0
 832 00f6 FB6A     		ldr	r3, [r7, #44]
 833 00f8 3B63     		str	r3, [r7, #48]
 158:.\DSP_Class.c ****         
 159:.\DSP_Class.c ****         // soilHumInRH is limited to 1 and 100 RH
 160:.\DSP_Class.c ****         if(soilHumInRH <= 0){
 834              		.loc 1 160 0
 835 00fa 386B     		ldr	r0, [r7, #48]
 836 00fc 0021     		mov	r1, #0
 837 00fe FFF7FEFF 		bl	__aeabi_fcmple
 838 0102 031C     		mov	r3, r0
 839 0104 002B     		cmp	r3, #0
 840 0106 03D0     		beq	.L64
 161:.\DSP_Class.c ****             soilHumInRH = 1;
 841              		.loc 1 161 0
 842 0108 FE23     		mov	r3, #254
 843 010a 9B05     		lsl	r3, r3, #22
 844 010c 3B63     		str	r3, [r7, #48]
 845 010e 08E0     		b	.L59
 846              	.L64:
 162:.\DSP_Class.c ****         }
 163:.\DSP_Class.c ****         else if(soilHumInRH > 100){
 847              		.loc 1 163 0
 848 0110 386B     		ldr	r0, [r7, #48]
 849 0112 0F49     		ldr	r1, .L65+4
 850 0114 FFF7FEFF 		bl	__aeabi_fcmpgt
 851 0118 031C     		mov	r3, r0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 19


 852 011a 002B     		cmp	r3, #0
 853 011c 01D0     		beq	.L59
 164:.\DSP_Class.c ****             soilHumInRH = 100;
 854              		.loc 1 164 0
 855 011e 0C4B     		ldr	r3, .L65+4
 856 0120 3B63     		str	r3, [r7, #48]
 857              	.L59:
 165:.\DSP_Class.c ****         }
 166:.\DSP_Class.c ****         soilHum[index] = (uint8)soilHumInRH;
 858              		.loc 1 166 0 discriminator 1
 859 0122 3B1C     		mov	r3, r7
 860 0124 2733     		add	r3, r3, #39
 861 0126 1C78     		ldrb	r4, [r3]
 862 0128 386B     		ldr	r0, [r7, #48]
 863 012a FFF7FEFF 		bl	__aeabi_f2uiz
 864 012e 031C     		mov	r3, r0
 865 0130 DAB2     		uxtb	r2, r3
 866 0132 084B     		ldr	r3, .L65+8
 867 0134 1A55     		strb	r2, [r3, r4]
 868              	.LBE10:
 869 0136 05E0     		b	.L51
 870              	.L56:
 167:.\DSP_Class.c ****     }
 168:.\DSP_Class.c ****     else{
 169:.\DSP_Class.c ****     soilHum[index] = 0;
 871              		.loc 1 169 0
 872 0138 3B1C     		mov	r3, r7
 873 013a 2733     		add	r3, r3, #39
 874 013c 1B78     		ldrb	r3, [r3]
 875 013e 054A     		ldr	r2, .L65+8
 876 0140 0021     		mov	r1, #0
 877 0142 D154     		strb	r1, [r2, r3]
 878              	.L51:
 170:.\DSP_Class.c ****     }
 171:.\DSP_Class.c **** }
 879              		.loc 1 171 0
 880 0144 BD46     		mov	sp, r7
 881 0146 13B0     		add	sp, sp, #76
 882              		@ sp needed
 883 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 884              	.L66:
 885 014a C046     		.align	2
 886              	.L65:
 887 014c 00000000 		.word	soilHumArray
 888 0150 0000C842 		.word	1120403456
 889 0154 00000000 		.word	soilHum
 890              		.cfi_endproc
 891              	.LFE40:
 892              		.size	avgSoilHum, .-avgSoilHum
 893              		.global	__aeabi_f2iz
 894              		.global	__aeabi_idiv
 895              		.section	.text.avgLight,"ax",%progbits
 896              		.align	2
 897              		.global	avgLight
 898              		.code	16
 899              		.thumb_func
 900              		.type	avgLight, %function
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 20


 901              	avgLight:
 902              	.LFB41:
 172:.\DSP_Class.c **** 
 173:.\DSP_Class.c **** void avgLight(void){
 903              		.loc 1 173 0
 904              		.cfi_startproc
 905 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 906              		.cfi_def_cfa_offset 20
 907              		.cfi_offset 4, -20
 908              		.cfi_offset 5, -16
 909              		.cfi_offset 6, -12
 910              		.cfi_offset 7, -8
 911              		.cfi_offset 14, -4
 912 0002 89B0     		sub	sp, sp, #36
 913              		.cfi_def_cfa_offset 56
 914 0004 00AF     		add	r7, sp, #0
 915              		.cfi_def_cfa_register 7
 174:.\DSP_Class.c ****     uint8 skip = 0;
 916              		.loc 1 174 0
 917 0006 381C     		mov	r0, r7
 918 0008 1F30     		add	r0, r0, #31
 919 000a 0025     		mov	r5, #0
 920 000c 0570     		strb	r5, [r0]
 175:.\DSP_Class.c ****     int64 total = 0;
 921              		.loc 1 175 0
 922 000e 0025     		mov	r5, #0
 923 0010 0026     		mov	r6, #0
 924 0012 3D61     		str	r5, [r7, #16]
 925 0014 7E61     		str	r6, [r7, #20]
 926              	.LBB11:
 176:.\DSP_Class.c ****     {
 177:.\DSP_Class.c ****         uint8 i;
 178:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 927              		.loc 1 178 0
 928 0016 381C     		mov	r0, r7
 929 0018 0F30     		add	r0, r0, #15
 930 001a 0025     		mov	r5, #0
 931 001c 0570     		strb	r5, [r0]
 932 001e 25E0     		b	.L68
 933              	.L71:
 179:.\DSP_Class.c ****             if(lightArray[i]>=0){
 934              		.loc 1 179 0
 935 0020 381C     		mov	r0, r7
 936 0022 0F30     		add	r0, r0, #15
 937 0024 0578     		ldrb	r5, [r0]
 938 0026 3C48     		ldr	r0, .L76
 939 0028 AD00     		lsl	r5, r5, #2
 940 002a 2858     		ldr	r0, [r5, r0]
 941 002c 0028     		cmp	r0, #0
 942 002e 0FDB     		blt	.L69
 180:.\DSP_Class.c ****                 total += lightArray[i];
 943              		.loc 1 180 0
 944 0030 381C     		mov	r0, r7
 945 0032 0F30     		add	r0, r0, #15
 946 0034 0578     		ldrb	r5, [r0]
 947 0036 3848     		ldr	r0, .L76
 948 0038 AD00     		lsl	r5, r5, #2
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 21


 949 003a 2858     		ldr	r0, [r5, r0]
 950 003c 011C     		mov	r1, r0
 951 003e C017     		asr	r0, r0, #31
 952 0040 021C     		mov	r2, r0
 953 0042 3D69     		ldr	r5, [r7, #16]
 954 0044 7E69     		ldr	r6, [r7, #20]
 955 0046 6D18     		add	r5, r5, r1
 956 0048 5641     		adc	r6, r6, r2
 957 004a 3D61     		str	r5, [r7, #16]
 958 004c 7E61     		str	r6, [r7, #20]
 959 004e 06E0     		b	.L70
 960              	.L69:
 181:.\DSP_Class.c ****             }
 182:.\DSP_Class.c ****             else{
 183:.\DSP_Class.c ****                 skip++;
 961              		.loc 1 183 0
 962 0050 381C     		mov	r0, r7
 963 0052 1F30     		add	r0, r0, #31
 964 0054 0578     		ldrb	r5, [r0]
 965 0056 381C     		mov	r0, r7
 966 0058 1F30     		add	r0, r0, #31
 967 005a 0135     		add	r5, r5, #1
 968 005c 0570     		strb	r5, [r0]
 969              	.L70:
 178:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 970              		.loc 1 178 0
 971 005e 381C     		mov	r0, r7
 972 0060 0F30     		add	r0, r0, #15
 973 0062 0578     		ldrb	r5, [r0]
 974 0064 381C     		mov	r0, r7
 975 0066 0F30     		add	r0, r0, #15
 976 0068 0135     		add	r5, r5, #1
 977 006a 0570     		strb	r5, [r0]
 978              	.L68:
 178:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 979              		.loc 1 178 0 is_stmt 0 discriminator 1
 980 006c 381C     		mov	r0, r7
 981 006e 0F30     		add	r0, r0, #15
 982 0070 0078     		ldrb	r0, [r0]
 983 0072 0928     		cmp	r0, #9
 984 0074 D4D9     		bls	.L71
 985              	.LBE11:
 184:.\DSP_Class.c ****             }
 185:.\DSP_Class.c ****         }
 186:.\DSP_Class.c ****     }
 187:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 188:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 986              		.loc 1 188 0 is_stmt 1
 987 0076 3A1C     		mov	r2, r7
 988 0078 1F32     		add	r2, r2, #31
 989 007a 1278     		ldrb	r2, [r2]
 990 007c 0A21     		mov	r1, #10
 991 007e 8A1A     		sub	r2, r1, r2
 992 0080 092A     		cmp	r2, #9
 993 0082 43DD     		ble	.L72
 994              	.LBB12:
 189:.\DSP_Class.c ****         float avg = total/(ARRAYSIZE-skip);                              // Calculate the average v
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 22


 995              		.loc 1 189 0
 996 0084 3A1C     		mov	r2, r7
 997 0086 1F32     		add	r2, r2, #31
 998 0088 1278     		ldrb	r2, [r2]
 999 008a 0A21     		mov	r1, #10
 1000 008c 8A1A     		sub	r2, r1, r2
 1001 008e 131C     		mov	r3, r2
 1002 0090 D217     		asr	r2, r2, #31
 1003 0092 141C     		mov	r4, r2
 1004 0094 3869     		ldr	r0, [r7, #16]
 1005 0096 7969     		ldr	r1, [r7, #20]
 1006 0098 1A1C     		mov	r2, r3
 1007 009a 231C     		mov	r3, r4
 1008 009c FFF7FEFF 		bl	__aeabi_ldivmod
 1009 00a0 031C     		mov	r3, r0
 1010 00a2 0C1C     		mov	r4, r1
 1011 00a4 181C     		mov	r0, r3
 1012 00a6 211C     		mov	r1, r4
 1013 00a8 FFF7FEFF 		bl	__aeabi_l2f
 1014 00ac 031C     		add	r3, r0, #0
 1015 00ae BB60     		str	r3, [r7, #8]
 190:.\DSP_Class.c ****         
 191:.\DSP_Class.c ****         // Conversion to lux formula from datasheet
 192:.\DSP_Class.c ****         // Range = 128000, R_EXT = 100kOhm, n = 7 and DATA max 128
 193:.\DSP_Class.c ****         int32 lightInLux = ((128000*(100/100))/(128))*avg;
 1016              		.loc 1 193 0
 1017 00b0 B868     		ldr	r0, [r7, #8]
 1018 00b2 1A49     		ldr	r1, .L76+4
 1019 00b4 FFF7FEFF 		bl	__aeabi_fmul
 1020 00b8 031C     		add	r3, r0, #0
 1021 00ba 181C     		add	r0, r3, #0
 1022 00bc FFF7FEFF 		bl	__aeabi_f2iz
 1023 00c0 031C     		mov	r3, r0
 1024 00c2 7B60     		str	r3, [r7, #4]
 194:.\DSP_Class.c ****         
 195:.\DSP_Class.c ****         uint8 lightInUartVarSteps = lightInLux/1000;     // Conversion to UART ready value, 1 = 100
 1025              		.loc 1 195 0
 1026 00c4 7B68     		ldr	r3, [r7, #4]
 1027 00c6 181C     		mov	r0, r3
 1028 00c8 FA23     		mov	r3, #250
 1029 00ca 9900     		lsl	r1, r3, #2
 1030 00cc FFF7FEFF 		bl	__aeabi_idiv
 1031 00d0 031C     		mov	r3, r0
 1032 00d2 1A1C     		mov	r2, r3
 1033 00d4 3B1C     		mov	r3, r7
 1034 00d6 0E33     		add	r3, r3, #14
 1035 00d8 1A70     		strb	r2, [r3]
 196:.\DSP_Class.c ****         
 197:.\DSP_Class.c ****         // lightInLux is limited to 1 and 100 RH
 198:.\DSP_Class.c ****         if(lightInUartVarSteps <= 0){
 1036              		.loc 1 198 0
 1037 00da 3B1C     		mov	r3, r7
 1038 00dc 0E33     		add	r3, r3, #14
 1039 00de 1B78     		ldrb	r3, [r3]
 1040 00e0 002B     		cmp	r3, #0
 1041 00e2 04D1     		bne	.L73
 199:.\DSP_Class.c ****             lightInUartVarSteps = 1;
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 23


 1042              		.loc 1 199 0
 1043 00e4 3B1C     		mov	r3, r7
 1044 00e6 0E33     		add	r3, r3, #14
 1045 00e8 0122     		mov	r2, #1
 1046 00ea 1A70     		strb	r2, [r3]
 1047 00ec 08E0     		b	.L74
 1048              	.L73:
 200:.\DSP_Class.c ****         }
 201:.\DSP_Class.c ****         else if(lightInUartVarSteps > 100){
 1049              		.loc 1 201 0
 1050 00ee 3B1C     		mov	r3, r7
 1051 00f0 0E33     		add	r3, r3, #14
 1052 00f2 1B78     		ldrb	r3, [r3]
 1053 00f4 642B     		cmp	r3, #100
 1054 00f6 03D9     		bls	.L74
 202:.\DSP_Class.c ****             lightInUartVarSteps = 100;
 1055              		.loc 1 202 0
 1056 00f8 3B1C     		mov	r3, r7
 1057 00fa 0E33     		add	r3, r3, #14
 1058 00fc 6422     		mov	r2, #100
 1059 00fe 1A70     		strb	r2, [r3]
 1060              	.L74:
 203:.\DSP_Class.c ****         }
 204:.\DSP_Class.c ****         light = lightInUartVarSteps;
 1061              		.loc 1 204 0 discriminator 1
 1062 0100 074B     		ldr	r3, .L76+8
 1063 0102 3A1C     		mov	r2, r7
 1064 0104 0E32     		add	r2, r2, #14
 1065 0106 1278     		ldrb	r2, [r2]
 1066 0108 1A70     		strb	r2, [r3]
 1067              	.LBE12:
 1068 010a 02E0     		b	.L67
 1069              	.L72:
 205:.\DSP_Class.c ****     }
 206:.\DSP_Class.c ****     else{
 207:.\DSP_Class.c ****     light = 0;
 1070              		.loc 1 207 0
 1071 010c 044B     		ldr	r3, .L76+8
 1072 010e 0022     		mov	r2, #0
 1073 0110 1A70     		strb	r2, [r3]
 1074              	.L67:
 208:.\DSP_Class.c ****     }
 209:.\DSP_Class.c ****   }
 1075              		.loc 1 209 0
 1076 0112 BD46     		mov	sp, r7
 1077 0114 09B0     		add	sp, sp, #36
 1078              		@ sp needed
 1079 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1080              	.L77:
 1081              		.align	2
 1082              	.L76:
 1083 0118 00000000 		.word	lightArray
 1084 011c 00007A44 		.word	1148846080
 1085 0120 00000000 		.word	light
 1086              		.cfi_endproc
 1087              	.LFE41:
 1088              		.size	avgLight, .-avgLight
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 24


 1089              		.section	.text.inputTemp,"ax",%progbits
 1090              		.align	2
 1091              		.global	inputTemp
 1092              		.code	16
 1093              		.thumb_func
 1094              		.type	inputTemp, %function
 1095              	inputTemp:
 1096              	.LFB42:
 210:.\DSP_Class.c **** 
 211:.\DSP_Class.c **** void inputTemp(int32* temp){
 1097              		.loc 1 211 0
 1098              		.cfi_startproc
 1099 0000 80B5     		push	{r7, lr}
 1100              		.cfi_def_cfa_offset 8
 1101              		.cfi_offset 7, -8
 1102              		.cfi_offset 14, -4
 1103 0002 82B0     		sub	sp, sp, #8
 1104              		.cfi_def_cfa_offset 16
 1105 0004 00AF     		add	r7, sp, #0
 1106              		.cfi_def_cfa_register 7
 1107 0006 7860     		str	r0, [r7, #4]
 212:.\DSP_Class.c ****     *tempArrayPtr = *temp;      // The input value is written to the array
 1108              		.loc 1 212 0
 1109 0008 0B4B     		ldr	r3, .L80
 1110 000a 1B68     		ldr	r3, [r3]
 1111 000c 7A68     		ldr	r2, [r7, #4]
 1112 000e 1268     		ldr	r2, [r2]
 1113 0010 1A60     		str	r2, [r3]
 213:.\DSP_Class.c ****     tempArrayPtr++;             // The pointer is moved to the next place in array
 1114              		.loc 1 213 0
 1115 0012 094B     		ldr	r3, .L80
 1116 0014 1B68     		ldr	r3, [r3]
 1117 0016 1A1D     		add	r2, r3, #4
 1118 0018 074B     		ldr	r3, .L80
 1119 001a 1A60     		str	r2, [r3]
 214:.\DSP_Class.c ****     if(tempArrayPtr > &tempArray[ARRAYSIZE-1]){
 1120              		.loc 1 214 0
 1121 001c 064B     		ldr	r3, .L80
 1122 001e 1A68     		ldr	r2, [r3]
 1123 0020 064B     		ldr	r3, .L80+4
 1124 0022 9A42     		cmp	r2, r3
 1125 0024 02D9     		bls	.L79
 215:.\DSP_Class.c ****         tempArrayPtr = &tempArray[0];   // If the pointer is pointing past the end of the array it'
 1126              		.loc 1 215 0
 1127 0026 044B     		ldr	r3, .L80
 1128 0028 054A     		ldr	r2, .L80+8
 1129 002a 1A60     		str	r2, [r3]
 1130              	.L79:
 216:.\DSP_Class.c ****     }
 217:.\DSP_Class.c ****     
 218:.\DSP_Class.c ****     avgTemp();      // The average value is calculated and onverted into temp(globel) 
 1131              		.loc 1 218 0
 1132 002c FFF7FEFF 		bl	avgTemp
 219:.\DSP_Class.c **** }
 1133              		.loc 1 219 0
 1134 0030 BD46     		mov	sp, r7
 1135 0032 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 25


 1136              		@ sp needed
 1137 0034 80BD     		pop	{r7, pc}
 1138              	.L81:
 1139 0036 C046     		.align	2
 1140              	.L80:
 1141 0038 00000000 		.word	tempArrayPtr
 1142 003c 24000000 		.word	tempArray+36
 1143 0040 00000000 		.word	tempArray
 1144              		.cfi_endproc
 1145              	.LFE42:
 1146              		.size	inputTemp, .-inputTemp
 1147              		.section	.text.inputHum,"ax",%progbits
 1148              		.align	2
 1149              		.global	inputHum
 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	inputHum, %function
 1153              	inputHum:
 1154              	.LFB43:
 220:.\DSP_Class.c **** 
 221:.\DSP_Class.c **** void inputHum(int32* hum){
 1155              		.loc 1 221 0
 1156              		.cfi_startproc
 1157 0000 80B5     		push	{r7, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 7, -8
 1160              		.cfi_offset 14, -4
 1161 0002 82B0     		sub	sp, sp, #8
 1162              		.cfi_def_cfa_offset 16
 1163 0004 00AF     		add	r7, sp, #0
 1164              		.cfi_def_cfa_register 7
 1165 0006 7860     		str	r0, [r7, #4]
 222:.\DSP_Class.c ****     *humArrayPtr = *hum;        // The input value is written to the array
 1166              		.loc 1 222 0
 1167 0008 0B4B     		ldr	r3, .L84
 1168 000a 1B68     		ldr	r3, [r3]
 1169 000c 7A68     		ldr	r2, [r7, #4]
 1170 000e 1268     		ldr	r2, [r2]
 1171 0010 1A60     		str	r2, [r3]
 223:.\DSP_Class.c ****     humArrayPtr++;              // The pointer is moved to the next place in array
 1172              		.loc 1 223 0
 1173 0012 094B     		ldr	r3, .L84
 1174 0014 1B68     		ldr	r3, [r3]
 1175 0016 1A1D     		add	r2, r3, #4
 1176 0018 074B     		ldr	r3, .L84
 1177 001a 1A60     		str	r2, [r3]
 224:.\DSP_Class.c ****     if(humArrayPtr > &humArray[ARRAYSIZE-1]){
 1178              		.loc 1 224 0
 1179 001c 064B     		ldr	r3, .L84
 1180 001e 1A68     		ldr	r2, [r3]
 1181 0020 064B     		ldr	r3, .L84+4
 1182 0022 9A42     		cmp	r2, r3
 1183 0024 02D9     		bls	.L83
 225:.\DSP_Class.c ****         humArrayPtr = &humArray[0];     // If the pointer is pointing past the end of the array it'
 1184              		.loc 1 225 0
 1185 0026 044B     		ldr	r3, .L84
 1186 0028 054A     		ldr	r2, .L84+8
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 26


 1187 002a 1A60     		str	r2, [r3]
 1188              	.L83:
 226:.\DSP_Class.c ****     }
 227:.\DSP_Class.c ****     
 228:.\DSP_Class.c ****     avgHum();      // The average value is calculated and onverted into hum(globel)
 1189              		.loc 1 228 0
 1190 002c FFF7FEFF 		bl	avgHum
 229:.\DSP_Class.c **** }
 1191              		.loc 1 229 0
 1192 0030 BD46     		mov	sp, r7
 1193 0032 02B0     		add	sp, sp, #8
 1194              		@ sp needed
 1195 0034 80BD     		pop	{r7, pc}
 1196              	.L85:
 1197 0036 C046     		.align	2
 1198              	.L84:
 1199 0038 00000000 		.word	humArrayPtr
 1200 003c 24000000 		.word	humArray+36
 1201 0040 00000000 		.word	humArray
 1202              		.cfi_endproc
 1203              	.LFE43:
 1204              		.size	inputHum, .-inputHum
 1205              		.section	.text.inputSoilHum,"ax",%progbits
 1206              		.align	2
 1207              		.global	inputSoilHum
 1208              		.code	16
 1209              		.thumb_func
 1210              		.type	inputSoilHum, %function
 1211              	inputSoilHum:
 1212              	.LFB44:
 230:.\DSP_Class.c **** 
 231:.\DSP_Class.c **** void inputSoilHum(uint8 index, int16* soilHum){
 1213              		.loc 1 231 0
 1214              		.cfi_startproc
 1215 0000 80B5     		push	{r7, lr}
 1216              		.cfi_def_cfa_offset 8
 1217              		.cfi_offset 7, -8
 1218              		.cfi_offset 14, -4
 1219 0002 82B0     		sub	sp, sp, #8
 1220              		.cfi_def_cfa_offset 16
 1221 0004 00AF     		add	r7, sp, #0
 1222              		.cfi_def_cfa_register 7
 1223 0006 021C     		mov	r2, r0
 1224 0008 3960     		str	r1, [r7]
 1225 000a FB1D     		add	r3, r7, #7
 1226 000c 1A70     		strb	r2, [r3]
 232:.\DSP_Class.c ****     *soilHumPtr[index] = *soilHum;          // The input value is written to the array
 1227              		.loc 1 232 0
 1228 000e FB1D     		add	r3, r7, #7
 1229 0010 1A78     		ldrb	r2, [r3]
 1230 0012 1A4B     		ldr	r3, .L88
 1231 0014 9200     		lsl	r2, r2, #2
 1232 0016 D358     		ldr	r3, [r2, r3]
 1233 0018 3A68     		ldr	r2, [r7]
 1234 001a 1288     		ldrh	r2, [r2]
 1235 001c 1A80     		strh	r2, [r3]
 233:.\DSP_Class.c ****     soilHumPtr[index]++;                    // The pointer is moved to the next place in array
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 27


 1236              		.loc 1 233 0
 1237 001e FB1D     		add	r3, r7, #7
 1238 0020 1B78     		ldrb	r3, [r3]
 1239 0022 164A     		ldr	r2, .L88
 1240 0024 9900     		lsl	r1, r3, #2
 1241 0026 8A58     		ldr	r2, [r1, r2]
 1242 0028 911C     		add	r1, r2, #2
 1243 002a 144A     		ldr	r2, .L88
 1244 002c 9B00     		lsl	r3, r3, #2
 1245 002e 9950     		str	r1, [r3, r2]
 234:.\DSP_Class.c ****     if(soilHumPtr[index] > &soilHumArray[index][ARRAYSIZE-1]){
 1246              		.loc 1 234 0
 1247 0030 FB1D     		add	r3, r7, #7
 1248 0032 1A78     		ldrb	r2, [r3]
 1249 0034 114B     		ldr	r3, .L88
 1250 0036 9200     		lsl	r2, r2, #2
 1251 0038 D158     		ldr	r1, [r2, r3]
 1252 003a FB1D     		add	r3, r7, #7
 1253 003c 1A78     		ldrb	r2, [r3]
 1254 003e 131C     		mov	r3, r2
 1255 0040 9B00     		lsl	r3, r3, #2
 1256 0042 9B18     		add	r3, r3, r2
 1257 0044 9B00     		lsl	r3, r3, #2
 1258 0046 1A1C     		mov	r2, r3
 1259 0048 1232     		add	r2, r2, #18
 1260 004a 0D4B     		ldr	r3, .L88+4
 1261 004c D318     		add	r3, r2, r3
 1262 004e 9942     		cmp	r1, r3
 1263 0050 0CD9     		bls	.L87
 235:.\DSP_Class.c ****         soilHumPtr[index] = &soilHumArray[index][0];            // If the pointer is pointing past 
 1264              		.loc 1 235 0
 1265 0052 FB1D     		add	r3, r7, #7
 1266 0054 1878     		ldrb	r0, [r3]
 1267 0056 FB1D     		add	r3, r7, #7
 1268 0058 1A78     		ldrb	r2, [r3]
 1269 005a 131C     		mov	r3, r2
 1270 005c 9B00     		lsl	r3, r3, #2
 1271 005e 9B18     		add	r3, r3, r2
 1272 0060 9B00     		lsl	r3, r3, #2
 1273 0062 074A     		ldr	r2, .L88+4
 1274 0064 9918     		add	r1, r3, r2
 1275 0066 054B     		ldr	r3, .L88
 1276 0068 8200     		lsl	r2, r0, #2
 1277 006a D150     		str	r1, [r2, r3]
 1278              	.L87:
 236:.\DSP_Class.c ****     }
 237:.\DSP_Class.c ****     
 238:.\DSP_Class.c ****     avgSoilHum(index);          // The average value is calculated and onverted into soilHum(globel
 1279              		.loc 1 238 0
 1280 006c FB1D     		add	r3, r7, #7
 1281 006e 1B78     		ldrb	r3, [r3]
 1282 0070 181C     		mov	r0, r3
 1283 0072 FFF7FEFF 		bl	avgSoilHum
 239:.\DSP_Class.c **** }
 1284              		.loc 1 239 0
 1285 0076 BD46     		mov	sp, r7
 1286 0078 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 28


 1287              		@ sp needed
 1288 007a 80BD     		pop	{r7, pc}
 1289              	.L89:
 1290              		.align	2
 1291              	.L88:
 1292 007c 00000000 		.word	soilHumPtr
 1293 0080 00000000 		.word	soilHumArray
 1294              		.cfi_endproc
 1295              	.LFE44:
 1296              		.size	inputSoilHum, .-inputSoilHum
 1297              		.section	.text.inputLight,"ax",%progbits
 1298              		.align	2
 1299              		.global	inputLight
 1300              		.code	16
 1301              		.thumb_func
 1302              		.type	inputLight, %function
 1303              	inputLight:
 1304              	.LFB45:
 240:.\DSP_Class.c **** 
 241:.\DSP_Class.c **** void inputLight(int32* light){
 1305              		.loc 1 241 0
 1306              		.cfi_startproc
 1307 0000 80B5     		push	{r7, lr}
 1308              		.cfi_def_cfa_offset 8
 1309              		.cfi_offset 7, -8
 1310              		.cfi_offset 14, -4
 1311 0002 82B0     		sub	sp, sp, #8
 1312              		.cfi_def_cfa_offset 16
 1313 0004 00AF     		add	r7, sp, #0
 1314              		.cfi_def_cfa_register 7
 1315 0006 7860     		str	r0, [r7, #4]
 242:.\DSP_Class.c ****     *lightArrayPtr = *light;        // The input value is written to the array
 1316              		.loc 1 242 0
 1317 0008 0B4B     		ldr	r3, .L92
 1318 000a 1B68     		ldr	r3, [r3]
 1319 000c 7A68     		ldr	r2, [r7, #4]
 1320 000e 1268     		ldr	r2, [r2]
 1321 0010 1A60     		str	r2, [r3]
 243:.\DSP_Class.c ****     lightArrayPtr++;                // The pointer is moved to the next place in array
 1322              		.loc 1 243 0
 1323 0012 094B     		ldr	r3, .L92
 1324 0014 1B68     		ldr	r3, [r3]
 1325 0016 1A1D     		add	r2, r3, #4
 1326 0018 074B     		ldr	r3, .L92
 1327 001a 1A60     		str	r2, [r3]
 244:.\DSP_Class.c ****     if(lightArrayPtr > &lightArray[ARRAYSIZE-1]){
 1328              		.loc 1 244 0
 1329 001c 064B     		ldr	r3, .L92
 1330 001e 1A68     		ldr	r2, [r3]
 1331 0020 064B     		ldr	r3, .L92+4
 1332 0022 9A42     		cmp	r2, r3
 1333 0024 02D9     		bls	.L91
 245:.\DSP_Class.c ****         lightArrayPtr = &lightArray[0];     // If the pointer is pointing past the end of the array
 1334              		.loc 1 245 0
 1335 0026 044B     		ldr	r3, .L92
 1336 0028 054A     		ldr	r2, .L92+8
 1337 002a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 29


 1338              	.L91:
 246:.\DSP_Class.c ****     }
 247:.\DSP_Class.c ****     
 248:.\DSP_Class.c ****     avgLight();      // The average value is calculated and onverted into hum(globel)
 1339              		.loc 1 248 0
 1340 002c FFF7FEFF 		bl	avgLight
 249:.\DSP_Class.c **** }
 1341              		.loc 1 249 0
 1342 0030 BD46     		mov	sp, r7
 1343 0032 02B0     		add	sp, sp, #8
 1344              		@ sp needed
 1345 0034 80BD     		pop	{r7, pc}
 1346              	.L93:
 1347 0036 C046     		.align	2
 1348              	.L92:
 1349 0038 00000000 		.word	lightArrayPtr
 1350 003c 24000000 		.word	lightArray+36
 1351 0040 00000000 		.word	lightArray
 1352              		.cfi_endproc
 1353              	.LFE45:
 1354              		.size	inputLight, .-inputLight
 1355              		.text
 1356              	.Letext0:
 1357              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 1358              		.section	.debug_info,"",%progbits
 1359              	.Ldebug_info0:
 1360 0000 05050000 		.4byte	0x505
 1361 0004 0400     		.2byte	0x4
 1362 0006 00000000 		.4byte	.Ldebug_abbrev0
 1363 000a 04       		.byte	0x4
 1364 000b 01       		.uleb128 0x1
 1365 000c 6A000000 		.4byte	.LASF47
 1366 0010 01       		.byte	0x1
 1367 0011 53020000 		.4byte	.LASF48
 1368 0015 F4000000 		.4byte	.LASF49
 1369 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1370 001d 00000000 		.4byte	0
 1371 0021 00000000 		.4byte	.Ldebug_line0
 1372 0025 02       		.uleb128 0x2
 1373 0026 01       		.byte	0x1
 1374 0027 06       		.byte	0x6
 1375 0028 92020000 		.4byte	.LASF0
 1376 002c 02       		.uleb128 0x2
 1377 002d 01       		.byte	0x1
 1378 002e 08       		.byte	0x8
 1379 002f E6000000 		.4byte	.LASF1
 1380 0033 02       		.uleb128 0x2
 1381 0034 02       		.byte	0x2
 1382 0035 05       		.byte	0x5
 1383 0036 61020000 		.4byte	.LASF2
 1384 003a 02       		.uleb128 0x2
 1385 003b 02       		.byte	0x2
 1386 003c 07       		.byte	0x7
 1387 003d 2E000000 		.4byte	.LASF3
 1388 0041 02       		.uleb128 0x2
 1389 0042 04       		.byte	0x4
 1390 0043 05       		.byte	0x5
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 30


 1391 0044 81020000 		.4byte	.LASF4
 1392 0048 02       		.uleb128 0x2
 1393 0049 04       		.byte	0x4
 1394 004a 07       		.byte	0x7
 1395 004b 3E010000 		.4byte	.LASF5
 1396 004f 02       		.uleb128 0x2
 1397 0050 08       		.byte	0x8
 1398 0051 05       		.byte	0x5
 1399 0052 1B020000 		.4byte	.LASF6
 1400 0056 02       		.uleb128 0x2
 1401 0057 08       		.byte	0x8
 1402 0058 07       		.byte	0x7
 1403 0059 CA010000 		.4byte	.LASF7
 1404 005d 03       		.uleb128 0x3
 1405 005e 04       		.byte	0x4
 1406 005f 05       		.byte	0x5
 1407 0060 696E7400 		.ascii	"int\000"
 1408 0064 02       		.uleb128 0x2
 1409 0065 04       		.byte	0x4
 1410 0066 07       		.byte	0x7
 1411 0067 AC010000 		.4byte	.LASF8
 1412 006b 04       		.uleb128 0x4
 1413 006c 75020000 		.4byte	.LASF9
 1414 0070 02       		.byte	0x2
 1415 0071 A1       		.byte	0xa1
 1416 0072 2C000000 		.4byte	0x2c
 1417 0076 04       		.uleb128 0x4
 1418 0077 EC010000 		.4byte	.LASF10
 1419 007b 02       		.byte	0x2
 1420 007c A5       		.byte	0xa5
 1421 007d 33000000 		.4byte	0x33
 1422 0081 04       		.uleb128 0x4
 1423 0082 0C020000 		.4byte	.LASF11
 1424 0086 02       		.byte	0x2
 1425 0087 A6       		.byte	0xa6
 1426 0088 41000000 		.4byte	0x41
 1427 008c 02       		.uleb128 0x2
 1428 008d 04       		.byte	0x4
 1429 008e 04       		.byte	0x4
 1430 008f 64000000 		.4byte	.LASF12
 1431 0093 02       		.uleb128 0x2
 1432 0094 08       		.byte	0x8
 1433 0095 04       		.byte	0x4
 1434 0096 84010000 		.4byte	.LASF13
 1435 009a 04       		.uleb128 0x4
 1436 009b C2020000 		.4byte	.LASF14
 1437 009f 02       		.byte	0x2
 1438 00a0 AC       		.byte	0xac
 1439 00a1 4F000000 		.4byte	0x4f
 1440 00a5 02       		.uleb128 0x2
 1441 00a6 01       		.byte	0x1
 1442 00a7 08       		.byte	0x8
 1443 00a8 3D020000 		.4byte	.LASF15
 1444 00ac 02       		.uleb128 0x2
 1445 00ad 04       		.byte	0x4
 1446 00ae 07       		.byte	0x7
 1447 00af 12020000 		.4byte	.LASF16
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 31


 1448 00b3 05       		.uleb128 0x5
 1449 00b4 7C010000 		.4byte	.LASF20
 1450 00b8 01       		.byte	0x1
 1451 00b9 21       		.byte	0x21
 1452 00ba 00000000 		.4byte	.LFB33
 1453 00be 18010000 		.4byte	.LFE33-.LFB33
 1454 00c2 01       		.uleb128 0x1
 1455 00c3 9C       		.byte	0x9c
 1456 00c4 0F010000 		.4byte	0x10f
 1457 00c8 06       		.uleb128 0x6
 1458 00c9 06000000 		.4byte	.LBB2
 1459 00cd 7A000000 		.4byte	.LBE2-.LBB2
 1460 00d1 F8000000 		.4byte	0xf8
 1461 00d5 07       		.uleb128 0x7
 1462 00d6 6900     		.ascii	"i\000"
 1463 00d8 01       		.byte	0x1
 1464 00d9 23       		.byte	0x23
 1465 00da 6B000000 		.4byte	0x6b
 1466 00de 02       		.uleb128 0x2
 1467 00df 91       		.byte	0x91
 1468 00e0 77       		.sleb128 -9
 1469 00e1 08       		.uleb128 0x8
 1470 00e2 2A000000 		.4byte	.LBB3
 1471 00e6 36000000 		.4byte	.LBE3-.LBB3
 1472 00ea 07       		.uleb128 0x7
 1473 00eb 6A00     		.ascii	"j\000"
 1474 00ed 01       		.byte	0x1
 1475 00ee 28       		.byte	0x28
 1476 00ef 6B000000 		.4byte	0x6b
 1477 00f3 02       		.uleb128 0x2
 1478 00f4 91       		.byte	0x91
 1479 00f5 76       		.sleb128 -10
 1480 00f6 00       		.byte	0
 1481 00f7 00       		.byte	0
 1482 00f8 08       		.uleb128 0x8
 1483 00f9 8C000000 		.4byte	.LBB4
 1484 00fd 3E000000 		.4byte	.LBE4-.LBB4
 1485 0101 07       		.uleb128 0x7
 1486 0102 6B00     		.ascii	"k\000"
 1487 0104 01       		.byte	0x1
 1488 0105 34       		.byte	0x34
 1489 0106 6B000000 		.4byte	0x6b
 1490 010a 02       		.uleb128 0x2
 1491 010b 91       		.byte	0x91
 1492 010c 75       		.sleb128 -11
 1493 010d 00       		.byte	0
 1494 010e 00       		.byte	0
 1495 010f 09       		.uleb128 0x9
 1496 0110 50010000 		.4byte	.LASF17
 1497 0114 01       		.byte	0x1
 1498 0115 40       		.byte	0x40
 1499 0116 6B000000 		.4byte	0x6b
 1500 011a 00000000 		.4byte	.LFB34
 1501 011e 14000000 		.4byte	.LFE34-.LFB34
 1502 0122 01       		.uleb128 0x1
 1503 0123 9C       		.byte	0x9c
 1504 0124 09       		.uleb128 0x9
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 32


 1505 0125 9C010000 		.4byte	.LASF18
 1506 0129 01       		.byte	0x1
 1507 012a 44       		.byte	0x44
 1508 012b 6B000000 		.4byte	0x6b
 1509 012f 00000000 		.4byte	.LFB35
 1510 0133 14000000 		.4byte	.LFE35-.LFB35
 1511 0137 01       		.uleb128 0x1
 1512 0138 9C       		.byte	0x9c
 1513 0139 0A       		.uleb128 0xa
 1514 013a 64010000 		.4byte	.LASF50
 1515 013e 01       		.byte	0x1
 1516 013f 48       		.byte	0x48
 1517 0140 6B000000 		.4byte	0x6b
 1518 0144 00000000 		.4byte	.LFB36
 1519 0148 20000000 		.4byte	.LFE36-.LFB36
 1520 014c 01       		.uleb128 0x1
 1521 014d 9C       		.byte	0x9c
 1522 014e 61010000 		.4byte	0x161
 1523 0152 0B       		.uleb128 0xb
 1524 0153 4D020000 		.4byte	.LASF27
 1525 0157 01       		.byte	0x1
 1526 0158 48       		.byte	0x48
 1527 0159 6B000000 		.4byte	0x6b
 1528 015d 02       		.uleb128 0x2
 1529 015e 91       		.byte	0x91
 1530 015f 77       		.sleb128 -9
 1531 0160 00       		.byte	0
 1532 0161 09       		.uleb128 0x9
 1533 0162 FF010000 		.4byte	.LASF19
 1534 0166 01       		.byte	0x1
 1535 0167 4C       		.byte	0x4c
 1536 0168 6B000000 		.4byte	0x6b
 1537 016c 00000000 		.4byte	.LFB37
 1538 0170 14000000 		.4byte	.LFE37-.LFB37
 1539 0174 01       		.uleb128 0x1
 1540 0175 9C       		.byte	0x9c
 1541 0176 0C       		.uleb128 0xc
 1542 0177 8A020000 		.4byte	.LASF21
 1543 017b 01       		.byte	0x1
 1544 017c 50       		.byte	0x50
 1545 017d 00000000 		.4byte	.LFB38
 1546 0181 B8000000 		.4byte	.LFE38-.LFB38
 1547 0185 01       		.uleb128 0x1
 1548 0186 9C       		.byte	0x9c
 1549 0187 DA010000 		.4byte	0x1da
 1550 018b 0D       		.uleb128 0xd
 1551 018c A7010000 		.4byte	.LASF22
 1552 0190 01       		.byte	0x1
 1553 0191 51       		.byte	0x51
 1554 0192 6B000000 		.4byte	0x6b
 1555 0196 02       		.uleb128 0x2
 1556 0197 91       		.byte	0x91
 1557 0198 67       		.sleb128 -25
 1558 0199 0D       		.uleb128 0xd
 1559 019a 7B020000 		.4byte	.LASF23
 1560 019e 01       		.byte	0x1
 1561 019f 52       		.byte	0x52
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 33


 1562 01a0 9A000000 		.4byte	0x9a
 1563 01a4 02       		.uleb128 0x2
 1564 01a5 91       		.byte	0x91
 1565 01a6 58       		.sleb128 -40
 1566 01a7 06       		.uleb128 0x6
 1567 01a8 16000000 		.4byte	.LBB5
 1568 01ac 54000000 		.4byte	.LBE5-.LBB5
 1569 01b0 C1010000 		.4byte	0x1c1
 1570 01b4 07       		.uleb128 0x7
 1571 01b5 6900     		.ascii	"i\000"
 1572 01b7 01       		.byte	0x1
 1573 01b8 54       		.byte	0x54
 1574 01b9 6B000000 		.4byte	0x6b
 1575 01bd 02       		.uleb128 0x2
 1576 01be 91       		.byte	0x91
 1577 01bf 57       		.sleb128 -41
 1578 01c0 00       		.byte	0
 1579 01c1 08       		.uleb128 0x8
 1580 01c2 78000000 		.4byte	.LBB6
 1581 01c6 2A000000 		.4byte	.LBE6-.LBB6
 1582 01ca 07       		.uleb128 0x7
 1583 01cb 61766700 		.ascii	"avg\000"
 1584 01cf 01       		.byte	0x1
 1585 01d0 60       		.byte	0x60
 1586 01d1 81000000 		.4byte	0x81
 1587 01d5 02       		.uleb128 0x2
 1588 01d6 91       		.byte	0x91
 1589 01d7 50       		.sleb128 -48
 1590 01d8 00       		.byte	0
 1591 01d9 00       		.byte	0
 1592 01da 0C       		.uleb128 0xc
 1593 01db 1B000000 		.4byte	.LASF24
 1594 01df 01       		.byte	0x1
 1595 01e0 6B       		.byte	0x6b
 1596 01e1 00000000 		.4byte	.LFB39
 1597 01e5 1C010000 		.4byte	.LFE39-.LFB39
 1598 01e9 01       		.uleb128 0x1
 1599 01ea 9C       		.byte	0x9c
 1600 01eb 4C020000 		.4byte	0x24c
 1601 01ef 0D       		.uleb128 0xd
 1602 01f0 A7010000 		.4byte	.LASF22
 1603 01f4 01       		.byte	0x1
 1604 01f5 6C       		.byte	0x6c
 1605 01f6 6B000000 		.4byte	0x6b
 1606 01fa 02       		.uleb128 0x2
 1607 01fb 91       		.byte	0x91
 1608 01fc 67       		.sleb128 -25
 1609 01fd 0D       		.uleb128 0xd
 1610 01fe 7B020000 		.4byte	.LASF23
 1611 0202 01       		.byte	0x1
 1612 0203 6D       		.byte	0x6d
 1613 0204 9A000000 		.4byte	0x9a
 1614 0208 02       		.uleb128 0x2
 1615 0209 91       		.byte	0x91
 1616 020a 58       		.sleb128 -40
 1617 020b 06       		.uleb128 0x6
 1618 020c 16000000 		.4byte	.LBB7
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 34


 1619 0210 60000000 		.4byte	.LBE7-.LBB7
 1620 0214 25020000 		.4byte	0x225
 1621 0218 07       		.uleb128 0x7
 1622 0219 6900     		.ascii	"i\000"
 1623 021b 01       		.byte	0x1
 1624 021c 6F       		.byte	0x6f
 1625 021d 6B000000 		.4byte	0x6b
 1626 0221 02       		.uleb128 0x2
 1627 0222 91       		.byte	0x91
 1628 0223 57       		.sleb128 -41
 1629 0224 00       		.byte	0
 1630 0225 08       		.uleb128 0x8
 1631 0226 84000000 		.4byte	.LBB8
 1632 022a 78000000 		.4byte	.LBE8-.LBB8
 1633 022e 07       		.uleb128 0x7
 1634 022f 61766700 		.ascii	"avg\000"
 1635 0233 01       		.byte	0x1
 1636 0234 7B       		.byte	0x7b
 1637 0235 8C000000 		.4byte	0x8c
 1638 0239 02       		.uleb128 0x2
 1639 023a 91       		.byte	0x91
 1640 023b 4C       		.sleb128 -52
 1641 023c 0D       		.uleb128 0xd
 1642 023d 5C010000 		.4byte	.LASF25
 1643 0241 01       		.byte	0x1
 1644 0242 7C       		.byte	0x7c
 1645 0243 8C000000 		.4byte	0x8c
 1646 0247 02       		.uleb128 0x2
 1647 0248 91       		.byte	0x91
 1648 0249 50       		.sleb128 -48
 1649 024a 00       		.byte	0
 1650 024b 00       		.byte	0
 1651 024c 0C       		.uleb128 0xc
 1652 024d 42020000 		.4byte	.LASF26
 1653 0251 01       		.byte	0x1
 1654 0252 8C       		.byte	0x8c
 1655 0253 00000000 		.4byte	.LFB40
 1656 0257 58010000 		.4byte	.LFE40-.LFB40
 1657 025b 01       		.uleb128 0x1
 1658 025c 9C       		.byte	0x9c
 1659 025d CC020000 		.4byte	0x2cc
 1660 0261 0B       		.uleb128 0xb
 1661 0262 4D020000 		.4byte	.LASF27
 1662 0266 01       		.byte	0x1
 1663 0267 8C       		.byte	0x8c
 1664 0268 6B000000 		.4byte	0x6b
 1665 026c 02       		.uleb128 0x2
 1666 026d 91       		.byte	0x91
 1667 026e 47       		.sleb128 -57
 1668 026f 0D       		.uleb128 0xd
 1669 0270 A7010000 		.4byte	.LASF22
 1670 0274 01       		.byte	0x1
 1671 0275 8D       		.byte	0x8d
 1672 0276 6B000000 		.4byte	0x6b
 1673 027a 02       		.uleb128 0x2
 1674 027b 91       		.byte	0x91
 1675 027c 67       		.sleb128 -25
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 35


 1676 027d 0D       		.uleb128 0xd
 1677 027e 7B020000 		.4byte	.LASF23
 1678 0282 01       		.byte	0x1
 1679 0283 8E       		.byte	0x8e
 1680 0284 9A000000 		.4byte	0x9a
 1681 0288 02       		.uleb128 0x2
 1682 0289 91       		.byte	0x91
 1683 028a 58       		.sleb128 -40
 1684 028b 06       		.uleb128 0x6
 1685 028c 24000000 		.4byte	.LBB9
 1686 0290 98000000 		.4byte	.LBE9-.LBB9
 1687 0294 A5020000 		.4byte	0x2a5
 1688 0298 07       		.uleb128 0x7
 1689 0299 6900     		.ascii	"i\000"
 1690 029b 01       		.byte	0x1
 1691 029c 90       		.byte	0x90
 1692 029d 6B000000 		.4byte	0x6b
 1693 02a1 02       		.uleb128 0x2
 1694 02a2 91       		.byte	0x91
 1695 02a3 57       		.sleb128 -41
 1696 02a4 00       		.byte	0
 1697 02a5 08       		.uleb128 0x8
 1698 02a6 CA000000 		.4byte	.LBB10
 1699 02aa 6C000000 		.4byte	.LBE10-.LBB10
 1700 02ae 07       		.uleb128 0x7
 1701 02af 61766700 		.ascii	"avg\000"
 1702 02b3 01       		.byte	0x1
 1703 02b4 9C       		.byte	0x9c
 1704 02b5 8C000000 		.4byte	0x8c
 1705 02b9 02       		.uleb128 0x2
 1706 02ba 91       		.byte	0x91
 1707 02bb 4C       		.sleb128 -52
 1708 02bc 0D       		.uleb128 0xd
 1709 02bd BE010000 		.4byte	.LASF28
 1710 02c1 01       		.byte	0x1
 1711 02c2 9D       		.byte	0x9d
 1712 02c3 8C000000 		.4byte	0x8c
 1713 02c7 02       		.uleb128 0x2
 1714 02c8 91       		.byte	0x91
 1715 02c9 50       		.sleb128 -48
 1716 02ca 00       		.byte	0
 1717 02cb 00       		.byte	0
 1718 02cc 0C       		.uleb128 0xc
 1719 02cd 73010000 		.4byte	.LASF29
 1720 02d1 01       		.byte	0x1
 1721 02d2 AD       		.byte	0xad
 1722 02d3 00000000 		.4byte	.LFB41
 1723 02d7 24010000 		.4byte	.LFE41-.LFB41
 1724 02db 01       		.uleb128 0x1
 1725 02dc 9C       		.byte	0x9c
 1726 02dd 4C030000 		.4byte	0x34c
 1727 02e1 0D       		.uleb128 0xd
 1728 02e2 A7010000 		.4byte	.LASF22
 1729 02e6 01       		.byte	0x1
 1730 02e7 AE       		.byte	0xae
 1731 02e8 6B000000 		.4byte	0x6b
 1732 02ec 02       		.uleb128 0x2
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 36


 1733 02ed 91       		.byte	0x91
 1734 02ee 67       		.sleb128 -25
 1735 02ef 0D       		.uleb128 0xd
 1736 02f0 7B020000 		.4byte	.LASF23
 1737 02f4 01       		.byte	0x1
 1738 02f5 AF       		.byte	0xaf
 1739 02f6 9A000000 		.4byte	0x9a
 1740 02fa 02       		.uleb128 0x2
 1741 02fb 91       		.byte	0x91
 1742 02fc 58       		.sleb128 -40
 1743 02fd 06       		.uleb128 0x6
 1744 02fe 16000000 		.4byte	.LBB11
 1745 0302 60000000 		.4byte	.LBE11-.LBB11
 1746 0306 17030000 		.4byte	0x317
 1747 030a 07       		.uleb128 0x7
 1748 030b 6900     		.ascii	"i\000"
 1749 030d 01       		.byte	0x1
 1750 030e B1       		.byte	0xb1
 1751 030f 6B000000 		.4byte	0x6b
 1752 0313 02       		.uleb128 0x2
 1753 0314 91       		.byte	0x91
 1754 0315 57       		.sleb128 -41
 1755 0316 00       		.byte	0
 1756 0317 08       		.uleb128 0x8
 1757 0318 84000000 		.4byte	.LBB12
 1758 031c 86000000 		.4byte	.LBE12-.LBB12
 1759 0320 07       		.uleb128 0x7
 1760 0321 61766700 		.ascii	"avg\000"
 1761 0325 01       		.byte	0x1
 1762 0326 BD       		.byte	0xbd
 1763 0327 8C000000 		.4byte	0x8c
 1764 032b 02       		.uleb128 0x2
 1765 032c 91       		.byte	0x91
 1766 032d 50       		.sleb128 -48
 1767 032e 0D       		.uleb128 0xd
 1768 032f 59000000 		.4byte	.LASF30
 1769 0333 01       		.byte	0x1
 1770 0334 C1       		.byte	0xc1
 1771 0335 81000000 		.4byte	0x81
 1772 0339 02       		.uleb128 0x2
 1773 033a 91       		.byte	0x91
 1774 033b 4C       		.sleb128 -52
 1775 033c 0D       		.uleb128 0xd
 1776 033d 29020000 		.4byte	.LASF31
 1777 0341 01       		.byte	0x1
 1778 0342 C3       		.byte	0xc3
 1779 0343 6B000000 		.4byte	0x6b
 1780 0347 02       		.uleb128 0x2
 1781 0348 91       		.byte	0x91
 1782 0349 56       		.sleb128 -42
 1783 034a 00       		.byte	0
 1784 034b 00       		.byte	0
 1785 034c 0C       		.uleb128 0xc
 1786 034d 06000000 		.4byte	.LASF32
 1787 0351 01       		.byte	0x1
 1788 0352 D3       		.byte	0xd3
 1789 0353 00000000 		.4byte	.LFB42
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 37


 1790 0357 44000000 		.4byte	.LFE42-.LFB42
 1791 035b 01       		.uleb128 0x1
 1792 035c 9C       		.byte	0x9c
 1793 035d 70030000 		.4byte	0x370
 1794 0361 0B       		.uleb128 0xb
 1795 0362 B9010000 		.4byte	.LASF33
 1796 0366 01       		.byte	0x1
 1797 0367 D3       		.byte	0xd3
 1798 0368 70030000 		.4byte	0x370
 1799 036c 02       		.uleb128 0x2
 1800 036d 91       		.byte	0x91
 1801 036e 74       		.sleb128 -12
 1802 036f 00       		.byte	0
 1803 0370 0E       		.uleb128 0xe
 1804 0371 04       		.byte	0x4
 1805 0372 81000000 		.4byte	0x81
 1806 0376 0C       		.uleb128 0xc
 1807 0377 93010000 		.4byte	.LASF34
 1808 037b 01       		.byte	0x1
 1809 037c DD       		.byte	0xdd
 1810 037d 00000000 		.4byte	.LFB43
 1811 0381 44000000 		.4byte	.LFE43-.LFB43
 1812 0385 01       		.uleb128 0x1
 1813 0386 9C       		.byte	0x9c
 1814 0387 9A030000 		.4byte	0x39a
 1815 038b 0F       		.uleb128 0xf
 1816 038c 68756D00 		.ascii	"hum\000"
 1817 0390 01       		.byte	0x1
 1818 0391 DD       		.byte	0xdd
 1819 0392 70030000 		.4byte	0x370
 1820 0396 02       		.uleb128 0x2
 1821 0397 91       		.byte	0x91
 1822 0398 74       		.sleb128 -12
 1823 0399 00       		.byte	0
 1824 039a 0C       		.uleb128 0xc
 1825 039b 4C000000 		.4byte	.LASF35
 1826 039f 01       		.byte	0x1
 1827 03a0 E7       		.byte	0xe7
 1828 03a1 00000000 		.4byte	.LFB44
 1829 03a5 84000000 		.4byte	.LFE44-.LFB44
 1830 03a9 01       		.uleb128 0x1
 1831 03aa 9C       		.byte	0x9c
 1832 03ab CC030000 		.4byte	0x3cc
 1833 03af 0B       		.uleb128 0xb
 1834 03b0 4D020000 		.4byte	.LASF27
 1835 03b4 01       		.byte	0x1
 1836 03b5 E7       		.byte	0xe7
 1837 03b6 6B000000 		.4byte	0x6b
 1838 03ba 02       		.uleb128 0x2
 1839 03bb 91       		.byte	0x91
 1840 03bc 77       		.sleb128 -9
 1841 03bd 0B       		.uleb128 0xb
 1842 03be 8B010000 		.4byte	.LASF36
 1843 03c2 01       		.byte	0x1
 1844 03c3 E7       		.byte	0xe7
 1845 03c4 CC030000 		.4byte	0x3cc
 1846 03c8 02       		.uleb128 0x2
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 38


 1847 03c9 91       		.byte	0x91
 1848 03ca 70       		.sleb128 -16
 1849 03cb 00       		.byte	0
 1850 03cc 0E       		.uleb128 0xe
 1851 03cd 04       		.byte	0x4
 1852 03ce 76000000 		.4byte	0x76
 1853 03d2 0C       		.uleb128 0xc
 1854 03d3 E1010000 		.4byte	.LASF37
 1855 03d7 01       		.byte	0x1
 1856 03d8 F1       		.byte	0xf1
 1857 03d9 00000000 		.4byte	.LFB45
 1858 03dd 44000000 		.4byte	.LFE45-.LFB45
 1859 03e1 01       		.uleb128 0x1
 1860 03e2 9C       		.byte	0x9c
 1861 03e3 F6030000 		.4byte	0x3f6
 1862 03e7 0B       		.uleb128 0xb
 1863 03e8 00000000 		.4byte	.LASF38
 1864 03ec 01       		.byte	0x1
 1865 03ed F1       		.byte	0xf1
 1866 03ee 70030000 		.4byte	0x370
 1867 03f2 02       		.uleb128 0x2
 1868 03f3 91       		.byte	0x91
 1869 03f4 74       		.sleb128 -12
 1870 03f5 00       		.byte	0
 1871 03f6 10       		.uleb128 0x10
 1872 03f7 81000000 		.4byte	0x81
 1873 03fb 06040000 		.4byte	0x406
 1874 03ff 11       		.uleb128 0x11
 1875 0400 AC000000 		.4byte	0xac
 1876 0404 09       		.byte	0x9
 1877 0405 00       		.byte	0
 1878 0406 12       		.uleb128 0x12
 1879 0407 6B020000 		.4byte	.LASF39
 1880 040b 01       		.byte	0x1
 1881 040c 10       		.byte	0x10
 1882 040d F6030000 		.4byte	0x3f6
 1883 0411 05       		.uleb128 0x5
 1884 0412 03       		.byte	0x3
 1885 0413 00000000 		.4byte	tempArray
 1886 0417 12       		.uleb128 0x12
 1887 0418 F2010000 		.4byte	.LASF40
 1888 041c 01       		.byte	0x1
 1889 041d 11       		.byte	0x11
 1890 041e 70030000 		.4byte	0x370
 1891 0422 05       		.uleb128 0x5
 1892 0423 03       		.byte	0x3
 1893 0424 00000000 		.4byte	tempArrayPtr
 1894 0428 12       		.uleb128 0x12
 1895 0429 B9020000 		.4byte	.LASF41
 1896 042d 01       		.byte	0x1
 1897 042e 12       		.byte	0x12
 1898 042f F6030000 		.4byte	0x3f6
 1899 0433 05       		.uleb128 0x5
 1900 0434 03       		.byte	0x3
 1901 0435 00000000 		.4byte	humArray
 1902 0439 12       		.uleb128 0x12
 1903 043a 22000000 		.4byte	.LASF42
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 39


 1904 043e 01       		.byte	0x1
 1905 043f 13       		.byte	0x13
 1906 0440 70030000 		.4byte	0x370
 1907 0444 05       		.uleb128 0x5
 1908 0445 03       		.byte	0x3
 1909 0446 00000000 		.4byte	humArrayPtr
 1910 044a 10       		.uleb128 0x10
 1911 044b 76000000 		.4byte	0x76
 1912 044f 60040000 		.4byte	0x460
 1913 0453 11       		.uleb128 0x11
 1914 0454 AC000000 		.4byte	0xac
 1915 0458 05       		.byte	0x5
 1916 0459 11       		.uleb128 0x11
 1917 045a AC000000 		.4byte	0xac
 1918 045e 09       		.byte	0x9
 1919 045f 00       		.byte	0
 1920 0460 12       		.uleb128 0x12
 1921 0461 9E020000 		.4byte	.LASF43
 1922 0465 01       		.byte	0x1
 1923 0466 14       		.byte	0x14
 1924 0467 4A040000 		.4byte	0x44a
 1925 046b 05       		.uleb128 0x5
 1926 046c 03       		.byte	0x3
 1927 046d 00000000 		.4byte	soilHumArray
 1928 0471 10       		.uleb128 0x10
 1929 0472 CC030000 		.4byte	0x3cc
 1930 0476 81040000 		.4byte	0x481
 1931 047a 11       		.uleb128 0x11
 1932 047b AC000000 		.4byte	0xac
 1933 047f 05       		.byte	0x5
 1934 0480 00       		.byte	0
 1935 0481 12       		.uleb128 0x12
 1936 0482 10000000 		.4byte	.LASF44
 1937 0486 01       		.byte	0x1
 1938 0487 15       		.byte	0x15
 1939 0488 71040000 		.4byte	0x471
 1940 048c 05       		.uleb128 0x5
 1941 048d 03       		.byte	0x3
 1942 048e 00000000 		.4byte	soilHumPtr
 1943 0492 12       		.uleb128 0x12
 1944 0493 41000000 		.4byte	.LASF45
 1945 0497 01       		.byte	0x1
 1946 0498 16       		.byte	0x16
 1947 0499 F6030000 		.4byte	0x3f6
 1948 049d 05       		.uleb128 0x5
 1949 049e 03       		.byte	0x3
 1950 049f 00000000 		.4byte	lightArray
 1951 04a3 12       		.uleb128 0x12
 1952 04a4 AB020000 		.4byte	.LASF46
 1953 04a8 01       		.byte	0x1
 1954 04a9 17       		.byte	0x17
 1955 04aa 70030000 		.4byte	0x370
 1956 04ae 05       		.uleb128 0x5
 1957 04af 03       		.byte	0x3
 1958 04b0 00000000 		.4byte	lightArrayPtr
 1959 04b4 12       		.uleb128 0x12
 1960 04b5 B9010000 		.4byte	.LASF33
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 40


 1961 04b9 01       		.byte	0x1
 1962 04ba 18       		.byte	0x18
 1963 04bb 6B000000 		.4byte	0x6b
 1964 04bf 05       		.uleb128 0x5
 1965 04c0 03       		.byte	0x3
 1966 04c1 00000000 		.4byte	temp
 1967 04c5 13       		.uleb128 0x13
 1968 04c6 68756D00 		.ascii	"hum\000"
 1969 04ca 01       		.byte	0x1
 1970 04cb 18       		.byte	0x18
 1971 04cc 6B000000 		.4byte	0x6b
 1972 04d0 05       		.uleb128 0x5
 1973 04d1 03       		.byte	0x3
 1974 04d2 00000000 		.4byte	hum
 1975 04d6 10       		.uleb128 0x10
 1976 04d7 6B000000 		.4byte	0x6b
 1977 04db E6040000 		.4byte	0x4e6
 1978 04df 11       		.uleb128 0x11
 1979 04e0 AC000000 		.4byte	0xac
 1980 04e4 05       		.byte	0x5
 1981 04e5 00       		.byte	0
 1982 04e6 12       		.uleb128 0x12
 1983 04e7 8B010000 		.4byte	.LASF36
 1984 04eb 01       		.byte	0x1
 1985 04ec 18       		.byte	0x18
 1986 04ed D6040000 		.4byte	0x4d6
 1987 04f1 05       		.uleb128 0x5
 1988 04f2 03       		.byte	0x3
 1989 04f3 00000000 		.4byte	soilHum
 1990 04f7 12       		.uleb128 0x12
 1991 04f8 00000000 		.4byte	.LASF38
 1992 04fc 01       		.byte	0x1
 1993 04fd 18       		.byte	0x18
 1994 04fe 6B000000 		.4byte	0x6b
 1995 0502 05       		.uleb128 0x5
 1996 0503 03       		.byte	0x3
 1997 0504 00000000 		.4byte	light
 1998 0508 00       		.byte	0
 1999              		.section	.debug_abbrev,"",%progbits
 2000              	.Ldebug_abbrev0:
 2001 0000 01       		.uleb128 0x1
 2002 0001 11       		.uleb128 0x11
 2003 0002 01       		.byte	0x1
 2004 0003 25       		.uleb128 0x25
 2005 0004 0E       		.uleb128 0xe
 2006 0005 13       		.uleb128 0x13
 2007 0006 0B       		.uleb128 0xb
 2008 0007 03       		.uleb128 0x3
 2009 0008 0E       		.uleb128 0xe
 2010 0009 1B       		.uleb128 0x1b
 2011 000a 0E       		.uleb128 0xe
 2012 000b 55       		.uleb128 0x55
 2013 000c 17       		.uleb128 0x17
 2014 000d 11       		.uleb128 0x11
 2015 000e 01       		.uleb128 0x1
 2016 000f 10       		.uleb128 0x10
 2017 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 41


 2018 0011 00       		.byte	0
 2019 0012 00       		.byte	0
 2020 0013 02       		.uleb128 0x2
 2021 0014 24       		.uleb128 0x24
 2022 0015 00       		.byte	0
 2023 0016 0B       		.uleb128 0xb
 2024 0017 0B       		.uleb128 0xb
 2025 0018 3E       		.uleb128 0x3e
 2026 0019 0B       		.uleb128 0xb
 2027 001a 03       		.uleb128 0x3
 2028 001b 0E       		.uleb128 0xe
 2029 001c 00       		.byte	0
 2030 001d 00       		.byte	0
 2031 001e 03       		.uleb128 0x3
 2032 001f 24       		.uleb128 0x24
 2033 0020 00       		.byte	0
 2034 0021 0B       		.uleb128 0xb
 2035 0022 0B       		.uleb128 0xb
 2036 0023 3E       		.uleb128 0x3e
 2037 0024 0B       		.uleb128 0xb
 2038 0025 03       		.uleb128 0x3
 2039 0026 08       		.uleb128 0x8
 2040 0027 00       		.byte	0
 2041 0028 00       		.byte	0
 2042 0029 04       		.uleb128 0x4
 2043 002a 16       		.uleb128 0x16
 2044 002b 00       		.byte	0
 2045 002c 03       		.uleb128 0x3
 2046 002d 0E       		.uleb128 0xe
 2047 002e 3A       		.uleb128 0x3a
 2048 002f 0B       		.uleb128 0xb
 2049 0030 3B       		.uleb128 0x3b
 2050 0031 0B       		.uleb128 0xb
 2051 0032 49       		.uleb128 0x49
 2052 0033 13       		.uleb128 0x13
 2053 0034 00       		.byte	0
 2054 0035 00       		.byte	0
 2055 0036 05       		.uleb128 0x5
 2056 0037 2E       		.uleb128 0x2e
 2057 0038 01       		.byte	0x1
 2058 0039 3F       		.uleb128 0x3f
 2059 003a 19       		.uleb128 0x19
 2060 003b 03       		.uleb128 0x3
 2061 003c 0E       		.uleb128 0xe
 2062 003d 3A       		.uleb128 0x3a
 2063 003e 0B       		.uleb128 0xb
 2064 003f 3B       		.uleb128 0x3b
 2065 0040 0B       		.uleb128 0xb
 2066 0041 27       		.uleb128 0x27
 2067 0042 19       		.uleb128 0x19
 2068 0043 11       		.uleb128 0x11
 2069 0044 01       		.uleb128 0x1
 2070 0045 12       		.uleb128 0x12
 2071 0046 06       		.uleb128 0x6
 2072 0047 40       		.uleb128 0x40
 2073 0048 18       		.uleb128 0x18
 2074 0049 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 42


 2075 004b 19       		.uleb128 0x19
 2076 004c 01       		.uleb128 0x1
 2077 004d 13       		.uleb128 0x13
 2078 004e 00       		.byte	0
 2079 004f 00       		.byte	0
 2080 0050 06       		.uleb128 0x6
 2081 0051 0B       		.uleb128 0xb
 2082 0052 01       		.byte	0x1
 2083 0053 11       		.uleb128 0x11
 2084 0054 01       		.uleb128 0x1
 2085 0055 12       		.uleb128 0x12
 2086 0056 06       		.uleb128 0x6
 2087 0057 01       		.uleb128 0x1
 2088 0058 13       		.uleb128 0x13
 2089 0059 00       		.byte	0
 2090 005a 00       		.byte	0
 2091 005b 07       		.uleb128 0x7
 2092 005c 34       		.uleb128 0x34
 2093 005d 00       		.byte	0
 2094 005e 03       		.uleb128 0x3
 2095 005f 08       		.uleb128 0x8
 2096 0060 3A       		.uleb128 0x3a
 2097 0061 0B       		.uleb128 0xb
 2098 0062 3B       		.uleb128 0x3b
 2099 0063 0B       		.uleb128 0xb
 2100 0064 49       		.uleb128 0x49
 2101 0065 13       		.uleb128 0x13
 2102 0066 02       		.uleb128 0x2
 2103 0067 18       		.uleb128 0x18
 2104 0068 00       		.byte	0
 2105 0069 00       		.byte	0
 2106 006a 08       		.uleb128 0x8
 2107 006b 0B       		.uleb128 0xb
 2108 006c 01       		.byte	0x1
 2109 006d 11       		.uleb128 0x11
 2110 006e 01       		.uleb128 0x1
 2111 006f 12       		.uleb128 0x12
 2112 0070 06       		.uleb128 0x6
 2113 0071 00       		.byte	0
 2114 0072 00       		.byte	0
 2115 0073 09       		.uleb128 0x9
 2116 0074 2E       		.uleb128 0x2e
 2117 0075 00       		.byte	0
 2118 0076 3F       		.uleb128 0x3f
 2119 0077 19       		.uleb128 0x19
 2120 0078 03       		.uleb128 0x3
 2121 0079 0E       		.uleb128 0xe
 2122 007a 3A       		.uleb128 0x3a
 2123 007b 0B       		.uleb128 0xb
 2124 007c 3B       		.uleb128 0x3b
 2125 007d 0B       		.uleb128 0xb
 2126 007e 27       		.uleb128 0x27
 2127 007f 19       		.uleb128 0x19
 2128 0080 49       		.uleb128 0x49
 2129 0081 13       		.uleb128 0x13
 2130 0082 11       		.uleb128 0x11
 2131 0083 01       		.uleb128 0x1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 43


 2132 0084 12       		.uleb128 0x12
 2133 0085 06       		.uleb128 0x6
 2134 0086 40       		.uleb128 0x40
 2135 0087 18       		.uleb128 0x18
 2136 0088 9742     		.uleb128 0x2117
 2137 008a 19       		.uleb128 0x19
 2138 008b 00       		.byte	0
 2139 008c 00       		.byte	0
 2140 008d 0A       		.uleb128 0xa
 2141 008e 2E       		.uleb128 0x2e
 2142 008f 01       		.byte	0x1
 2143 0090 3F       		.uleb128 0x3f
 2144 0091 19       		.uleb128 0x19
 2145 0092 03       		.uleb128 0x3
 2146 0093 0E       		.uleb128 0xe
 2147 0094 3A       		.uleb128 0x3a
 2148 0095 0B       		.uleb128 0xb
 2149 0096 3B       		.uleb128 0x3b
 2150 0097 0B       		.uleb128 0xb
 2151 0098 27       		.uleb128 0x27
 2152 0099 19       		.uleb128 0x19
 2153 009a 49       		.uleb128 0x49
 2154 009b 13       		.uleb128 0x13
 2155 009c 11       		.uleb128 0x11
 2156 009d 01       		.uleb128 0x1
 2157 009e 12       		.uleb128 0x12
 2158 009f 06       		.uleb128 0x6
 2159 00a0 40       		.uleb128 0x40
 2160 00a1 18       		.uleb128 0x18
 2161 00a2 9742     		.uleb128 0x2117
 2162 00a4 19       		.uleb128 0x19
 2163 00a5 01       		.uleb128 0x1
 2164 00a6 13       		.uleb128 0x13
 2165 00a7 00       		.byte	0
 2166 00a8 00       		.byte	0
 2167 00a9 0B       		.uleb128 0xb
 2168 00aa 05       		.uleb128 0x5
 2169 00ab 00       		.byte	0
 2170 00ac 03       		.uleb128 0x3
 2171 00ad 0E       		.uleb128 0xe
 2172 00ae 3A       		.uleb128 0x3a
 2173 00af 0B       		.uleb128 0xb
 2174 00b0 3B       		.uleb128 0x3b
 2175 00b1 0B       		.uleb128 0xb
 2176 00b2 49       		.uleb128 0x49
 2177 00b3 13       		.uleb128 0x13
 2178 00b4 02       		.uleb128 0x2
 2179 00b5 18       		.uleb128 0x18
 2180 00b6 00       		.byte	0
 2181 00b7 00       		.byte	0
 2182 00b8 0C       		.uleb128 0xc
 2183 00b9 2E       		.uleb128 0x2e
 2184 00ba 01       		.byte	0x1
 2185 00bb 3F       		.uleb128 0x3f
 2186 00bc 19       		.uleb128 0x19
 2187 00bd 03       		.uleb128 0x3
 2188 00be 0E       		.uleb128 0xe
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 44


 2189 00bf 3A       		.uleb128 0x3a
 2190 00c0 0B       		.uleb128 0xb
 2191 00c1 3B       		.uleb128 0x3b
 2192 00c2 0B       		.uleb128 0xb
 2193 00c3 27       		.uleb128 0x27
 2194 00c4 19       		.uleb128 0x19
 2195 00c5 11       		.uleb128 0x11
 2196 00c6 01       		.uleb128 0x1
 2197 00c7 12       		.uleb128 0x12
 2198 00c8 06       		.uleb128 0x6
 2199 00c9 40       		.uleb128 0x40
 2200 00ca 18       		.uleb128 0x18
 2201 00cb 9642     		.uleb128 0x2116
 2202 00cd 19       		.uleb128 0x19
 2203 00ce 01       		.uleb128 0x1
 2204 00cf 13       		.uleb128 0x13
 2205 00d0 00       		.byte	0
 2206 00d1 00       		.byte	0
 2207 00d2 0D       		.uleb128 0xd
 2208 00d3 34       		.uleb128 0x34
 2209 00d4 00       		.byte	0
 2210 00d5 03       		.uleb128 0x3
 2211 00d6 0E       		.uleb128 0xe
 2212 00d7 3A       		.uleb128 0x3a
 2213 00d8 0B       		.uleb128 0xb
 2214 00d9 3B       		.uleb128 0x3b
 2215 00da 0B       		.uleb128 0xb
 2216 00db 49       		.uleb128 0x49
 2217 00dc 13       		.uleb128 0x13
 2218 00dd 02       		.uleb128 0x2
 2219 00de 18       		.uleb128 0x18
 2220 00df 00       		.byte	0
 2221 00e0 00       		.byte	0
 2222 00e1 0E       		.uleb128 0xe
 2223 00e2 0F       		.uleb128 0xf
 2224 00e3 00       		.byte	0
 2225 00e4 0B       		.uleb128 0xb
 2226 00e5 0B       		.uleb128 0xb
 2227 00e6 49       		.uleb128 0x49
 2228 00e7 13       		.uleb128 0x13
 2229 00e8 00       		.byte	0
 2230 00e9 00       		.byte	0
 2231 00ea 0F       		.uleb128 0xf
 2232 00eb 05       		.uleb128 0x5
 2233 00ec 00       		.byte	0
 2234 00ed 03       		.uleb128 0x3
 2235 00ee 08       		.uleb128 0x8
 2236 00ef 3A       		.uleb128 0x3a
 2237 00f0 0B       		.uleb128 0xb
 2238 00f1 3B       		.uleb128 0x3b
 2239 00f2 0B       		.uleb128 0xb
 2240 00f3 49       		.uleb128 0x49
 2241 00f4 13       		.uleb128 0x13
 2242 00f5 02       		.uleb128 0x2
 2243 00f6 18       		.uleb128 0x18
 2244 00f7 00       		.byte	0
 2245 00f8 00       		.byte	0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 45


 2246 00f9 10       		.uleb128 0x10
 2247 00fa 01       		.uleb128 0x1
 2248 00fb 01       		.byte	0x1
 2249 00fc 49       		.uleb128 0x49
 2250 00fd 13       		.uleb128 0x13
 2251 00fe 01       		.uleb128 0x1
 2252 00ff 13       		.uleb128 0x13
 2253 0100 00       		.byte	0
 2254 0101 00       		.byte	0
 2255 0102 11       		.uleb128 0x11
 2256 0103 21       		.uleb128 0x21
 2257 0104 00       		.byte	0
 2258 0105 49       		.uleb128 0x49
 2259 0106 13       		.uleb128 0x13
 2260 0107 2F       		.uleb128 0x2f
 2261 0108 0B       		.uleb128 0xb
 2262 0109 00       		.byte	0
 2263 010a 00       		.byte	0
 2264 010b 12       		.uleb128 0x12
 2265 010c 34       		.uleb128 0x34
 2266 010d 00       		.byte	0
 2267 010e 03       		.uleb128 0x3
 2268 010f 0E       		.uleb128 0xe
 2269 0110 3A       		.uleb128 0x3a
 2270 0111 0B       		.uleb128 0xb
 2271 0112 3B       		.uleb128 0x3b
 2272 0113 0B       		.uleb128 0xb
 2273 0114 49       		.uleb128 0x49
 2274 0115 13       		.uleb128 0x13
 2275 0116 3F       		.uleb128 0x3f
 2276 0117 19       		.uleb128 0x19
 2277 0118 02       		.uleb128 0x2
 2278 0119 18       		.uleb128 0x18
 2279 011a 00       		.byte	0
 2280 011b 00       		.byte	0
 2281 011c 13       		.uleb128 0x13
 2282 011d 34       		.uleb128 0x34
 2283 011e 00       		.byte	0
 2284 011f 03       		.uleb128 0x3
 2285 0120 08       		.uleb128 0x8
 2286 0121 3A       		.uleb128 0x3a
 2287 0122 0B       		.uleb128 0xb
 2288 0123 3B       		.uleb128 0x3b
 2289 0124 0B       		.uleb128 0xb
 2290 0125 49       		.uleb128 0x49
 2291 0126 13       		.uleb128 0x13
 2292 0127 3F       		.uleb128 0x3f
 2293 0128 19       		.uleb128 0x19
 2294 0129 02       		.uleb128 0x2
 2295 012a 18       		.uleb128 0x18
 2296 012b 00       		.byte	0
 2297 012c 00       		.byte	0
 2298 012d 00       		.byte	0
 2299              		.section	.debug_aranges,"",%progbits
 2300 0000 7C000000 		.4byte	0x7c
 2301 0004 0200     		.2byte	0x2
 2302 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 46


 2303 000a 04       		.byte	0x4
 2304 000b 00       		.byte	0
 2305 000c 0000     		.2byte	0
 2306 000e 0000     		.2byte	0
 2307 0010 00000000 		.4byte	.LFB33
 2308 0014 18010000 		.4byte	.LFE33-.LFB33
 2309 0018 00000000 		.4byte	.LFB34
 2310 001c 14000000 		.4byte	.LFE34-.LFB34
 2311 0020 00000000 		.4byte	.LFB35
 2312 0024 14000000 		.4byte	.LFE35-.LFB35
 2313 0028 00000000 		.4byte	.LFB36
 2314 002c 20000000 		.4byte	.LFE36-.LFB36
 2315 0030 00000000 		.4byte	.LFB37
 2316 0034 14000000 		.4byte	.LFE37-.LFB37
 2317 0038 00000000 		.4byte	.LFB38
 2318 003c B8000000 		.4byte	.LFE38-.LFB38
 2319 0040 00000000 		.4byte	.LFB39
 2320 0044 1C010000 		.4byte	.LFE39-.LFB39
 2321 0048 00000000 		.4byte	.LFB40
 2322 004c 58010000 		.4byte	.LFE40-.LFB40
 2323 0050 00000000 		.4byte	.LFB41
 2324 0054 24010000 		.4byte	.LFE41-.LFB41
 2325 0058 00000000 		.4byte	.LFB42
 2326 005c 44000000 		.4byte	.LFE42-.LFB42
 2327 0060 00000000 		.4byte	.LFB43
 2328 0064 44000000 		.4byte	.LFE43-.LFB43
 2329 0068 00000000 		.4byte	.LFB44
 2330 006c 84000000 		.4byte	.LFE44-.LFB44
 2331 0070 00000000 		.4byte	.LFB45
 2332 0074 44000000 		.4byte	.LFE45-.LFB45
 2333 0078 00000000 		.4byte	0
 2334 007c 00000000 		.4byte	0
 2335              		.section	.debug_ranges,"",%progbits
 2336              	.Ldebug_ranges0:
 2337 0000 00000000 		.4byte	.LFB33
 2338 0004 18010000 		.4byte	.LFE33
 2339 0008 00000000 		.4byte	.LFB34
 2340 000c 14000000 		.4byte	.LFE34
 2341 0010 00000000 		.4byte	.LFB35
 2342 0014 14000000 		.4byte	.LFE35
 2343 0018 00000000 		.4byte	.LFB36
 2344 001c 20000000 		.4byte	.LFE36
 2345 0020 00000000 		.4byte	.LFB37
 2346 0024 14000000 		.4byte	.LFE37
 2347 0028 00000000 		.4byte	.LFB38
 2348 002c B8000000 		.4byte	.LFE38
 2349 0030 00000000 		.4byte	.LFB39
 2350 0034 1C010000 		.4byte	.LFE39
 2351 0038 00000000 		.4byte	.LFB40
 2352 003c 58010000 		.4byte	.LFE40
 2353 0040 00000000 		.4byte	.LFB41
 2354 0044 24010000 		.4byte	.LFE41
 2355 0048 00000000 		.4byte	.LFB42
 2356 004c 44000000 		.4byte	.LFE42
 2357 0050 00000000 		.4byte	.LFB43
 2358 0054 44000000 		.4byte	.LFE43
 2359 0058 00000000 		.4byte	.LFB44
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 47


 2360 005c 84000000 		.4byte	.LFE44
 2361 0060 00000000 		.4byte	.LFB45
 2362 0064 44000000 		.4byte	.LFE45
 2363 0068 00000000 		.4byte	0
 2364 006c 00000000 		.4byte	0
 2365              		.section	.debug_line,"",%progbits
 2366              	.Ldebug_line0:
 2367 0000 F6010000 		.section	.debug_str,"MS",%progbits,1
 2367      02004A00 
 2367      00000201 
 2367      FB0E0D00 
 2367      01010101 
 2368              	.LASF38:
 2369 0000 6C696768 		.ascii	"light\000"
 2369      7400
 2370              	.LASF32:
 2371 0006 696E7075 		.ascii	"inputTemp\000"
 2371      7454656D 
 2371      7000
 2372              	.LASF44:
 2373 0010 736F696C 		.ascii	"soilHumPtr\000"
 2373      48756D50 
 2373      747200
 2374              	.LASF24:
 2375 001b 61766748 		.ascii	"avgHum\000"
 2375      756D00
 2376              	.LASF42:
 2377 0022 68756D41 		.ascii	"humArrayPtr\000"
 2377      72726179 
 2377      50747200 
 2378              	.LASF3:
 2379 002e 73686F72 		.ascii	"short unsigned int\000"
 2379      7420756E 
 2379      7369676E 
 2379      65642069 
 2379      6E7400
 2380              	.LASF45:
 2381 0041 6C696768 		.ascii	"lightArray\000"
 2381      74417272 
 2381      617900
 2382              	.LASF35:
 2383 004c 696E7075 		.ascii	"inputSoilHum\000"
 2383      74536F69 
 2383      6C48756D 
 2383      00
 2384              	.LASF30:
 2385 0059 6C696768 		.ascii	"lightInLux\000"
 2385      74496E4C 
 2385      757800
 2386              	.LASF12:
 2387 0064 666C6F61 		.ascii	"float\000"
 2387      7400
 2388              	.LASF47:
 2389 006a 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2389      4320342E 
 2389      382E3420 
 2389      32303134 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 48


 2389      30353236 
 2390 009d 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2390      20726576 
 2390      6973696F 
 2390      6E203231 
 2390      31333538 
 2391 00d0 30202D66 		.ascii	"0 -ffunction-sections\000"
 2391      66756E63 
 2391      74696F6E 
 2391      2D736563 
 2391      74696F6E 
 2392              	.LASF1:
 2393 00e6 756E7369 		.ascii	"unsigned char\000"
 2393      676E6564 
 2393      20636861 
 2393      7200
 2394              	.LASF49:
 2395 00f4 433A5C55 		.ascii	"C:\\Users\\Philip\\OneDrive\\GitHub\\PSoC_Master\\P"
 2395      73657273 
 2395      5C506869 
 2395      6C69705C 
 2395      4F6E6544 
 2396 0121 536F435F 		.ascii	"SoC_Master\\PSoC_Master.cydsn\000"
 2396      4D617374 
 2396      65725C50 
 2396      536F435F 
 2396      4D617374 
 2397              	.LASF5:
 2398 013e 6C6F6E67 		.ascii	"long unsigned int\000"
 2398      20756E73 
 2398      69676E65 
 2398      6420696E 
 2398      7400
 2399              	.LASF17:
 2400 0150 67657454 		.ascii	"getTemp_DSP\000"
 2400      656D705F 
 2400      44535000 
 2401              	.LASF25:
 2402 015c 68756D49 		.ascii	"humInRH\000"
 2402      6E524800 
 2403              	.LASF50:
 2404 0164 67657453 		.ascii	"getSoilHum_DSP\000"
 2404      6F696C48 
 2404      756D5F44 
 2404      535000
 2405              	.LASF29:
 2406 0173 6176674C 		.ascii	"avgLight\000"
 2406      69676874 
 2406      00
 2407              	.LASF20:
 2408 017c 696E6974 		.ascii	"initDSP\000"
 2408      44535000 
 2409              	.LASF13:
 2410 0184 646F7562 		.ascii	"double\000"
 2410      6C6500
 2411              	.LASF36:
 2412 018b 736F696C 		.ascii	"soilHum\000"
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 49


 2412      48756D00 
 2413              	.LASF34:
 2414 0193 696E7075 		.ascii	"inputHum\000"
 2414      7448756D 
 2414      00
 2415              	.LASF18:
 2416 019c 67657448 		.ascii	"getHum_DSP\000"
 2416      756D5F44 
 2416      535000
 2417              	.LASF22:
 2418 01a7 736B6970 		.ascii	"skip\000"
 2418      00
 2419              	.LASF8:
 2420 01ac 756E7369 		.ascii	"unsigned int\000"
 2420      676E6564 
 2420      20696E74 
 2420      00
 2421              	.LASF33:
 2422 01b9 74656D70 		.ascii	"temp\000"
 2422      00
 2423              	.LASF28:
 2424 01be 736F696C 		.ascii	"soilHumInRH\000"
 2424      48756D49 
 2424      6E524800 
 2425              	.LASF7:
 2426 01ca 6C6F6E67 		.ascii	"long long unsigned int\000"
 2426      206C6F6E 
 2426      6720756E 
 2426      7369676E 
 2426      65642069 
 2427              	.LASF37:
 2428 01e1 696E7075 		.ascii	"inputLight\000"
 2428      744C6967 
 2428      687400
 2429              	.LASF10:
 2430 01ec 696E7431 		.ascii	"int16\000"
 2430      3600
 2431              	.LASF40:
 2432 01f2 74656D70 		.ascii	"tempArrayPtr\000"
 2432      41727261 
 2432      79507472 
 2432      00
 2433              	.LASF19:
 2434 01ff 6765744C 		.ascii	"getLight_DSP\000"
 2434      69676874 
 2434      5F445350 
 2434      00
 2435              	.LASF11:
 2436 020c 696E7433 		.ascii	"int32\000"
 2436      3200
 2437              	.LASF16:
 2438 0212 73697A65 		.ascii	"sizetype\000"
 2438      74797065 
 2438      00
 2439              	.LASF6:
 2440 021b 6C6F6E67 		.ascii	"long long int\000"
 2440      206C6F6E 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 50


 2440      6720696E 
 2440      7400
 2441              	.LASF31:
 2442 0229 6C696768 		.ascii	"lightInUartVarSteps\000"
 2442      74496E55 
 2442      61727456 
 2442      61725374 
 2442      65707300 
 2443              	.LASF15:
 2444 023d 63686172 		.ascii	"char\000"
 2444      00
 2445              	.LASF26:
 2446 0242 61766753 		.ascii	"avgSoilHum\000"
 2446      6F696C48 
 2446      756D00
 2447              	.LASF27:
 2448 024d 696E6465 		.ascii	"index\000"
 2448      7800
 2449              	.LASF48:
 2450 0253 2E5C4453 		.ascii	".\\DSP_Class.c\000"
 2450      505F436C 
 2450      6173732E 
 2450      6300
 2451              	.LASF2:
 2452 0261 73686F72 		.ascii	"short int\000"
 2452      7420696E 
 2452      7400
 2453              	.LASF39:
 2454 026b 74656D70 		.ascii	"tempArray\000"
 2454      41727261 
 2454      7900
 2455              	.LASF9:
 2456 0275 75696E74 		.ascii	"uint8\000"
 2456      3800
 2457              	.LASF23:
 2458 027b 746F7461 		.ascii	"total\000"
 2458      6C00
 2459              	.LASF4:
 2460 0281 6C6F6E67 		.ascii	"long int\000"
 2460      20696E74 
 2460      00
 2461              	.LASF21:
 2462 028a 61766754 		.ascii	"avgTemp\000"
 2462      656D7000 
 2463              	.LASF0:
 2464 0292 7369676E 		.ascii	"signed char\000"
 2464      65642063 
 2464      68617200 
 2465              	.LASF43:
 2466 029e 736F696C 		.ascii	"soilHumArray\000"
 2466      48756D41 
 2466      72726179 
 2466      00
 2467              	.LASF46:
 2468 02ab 6C696768 		.ascii	"lightArrayPtr\000"
 2468      74417272 
 2468      61795074 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccLdOZFZ.s 			page 51


 2468      7200
 2469              	.LASF41:
 2470 02b9 68756D41 		.ascii	"humArray\000"
 2470      72726179 
 2470      00
 2471              	.LASF14:
 2472 02c2 696E7436 		.ascii	"int64\000"
 2472      3400
 2473              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
