ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"DSP_Class.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	tempArray,40,4
  18              		.comm	tempArrayPtr,4,4
  19              		.comm	humArray,40,4
  20              		.comm	humArrayPtr,4,4
  21              		.comm	soilHumArray,120,4
  22              		.comm	soilHumPtr,24,4
  23              		.comm	lightArray,40,4
  24              		.comm	lightArrayPtr,4,4
  25              		.comm	temp,1,1
  26              		.comm	hum,1,1
  27              		.comm	soilHum,6,4
  28              		.comm	light,1,1
  29              		.section	.text.initDSP,"ax",%progbits
  30              		.align	2
  31              		.global	initDSP
  32              		.code	16
  33              		.thumb_func
  34              		.type	initDSP, %function
  35              	initDSP:
  36              	.LFB33:
  37              		.file 1 ".\\DSP_Class.c"
   1:.\DSP_Class.c **** /* ========================================
   2:.\DSP_Class.c ****  * 
   3:.\DSP_Class.c ****  * AutoGreen - PSoC_Master
   4:.\DSP_Class.c ****  * DSP_Class.c
   5:.\DSP_Class.c ****  * Digital signal processing
   6:.\DSP_Class.c ****  * PRJ3 - GRP9
   7:.\DSP_Class.c ****  * 2015-04-15
   8:.\DSP_Class.c ****  *
   9:.\DSP_Class.c ****  * ========================================
  10:.\DSP_Class.c **** */
  11:.\DSP_Class.c **** 
  12:.\DSP_Class.c **** // Include files
  13:.\DSP_Class.c **** #include "DSP_Class.h"
  14:.\DSP_Class.c **** 
  15:.\DSP_Class.c **** // Private data members
  16:.\DSP_Class.c **** int32 tempArray[ARRAYSIZE];
  17:.\DSP_Class.c **** int32* tempArrayPtr;
  18:.\DSP_Class.c **** int32 humArray[ARRAYSIZE];
  19:.\DSP_Class.c **** int32* humArrayPtr;
  20:.\DSP_Class.c **** int16 soilHumArray[NBR_OF_SOILHUM_SENSORS][ARRAYSIZE];
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 2


  21:.\DSP_Class.c **** int16* soilHumPtr[NBR_OF_SOILHUM_SENSORS];
  22:.\DSP_Class.c **** int32 lightArray[ARRAYSIZE];
  23:.\DSP_Class.c **** int32* lightArrayPtr;
  24:.\DSP_Class.c **** uint8 temp, hum, soilHum[NBR_OF_SOILHUM_SENSORS], light;     // Used for storing the newest, value 
  25:.\DSP_Class.c **** 
  26:.\DSP_Class.c **** // Private prototypes
  27:.\DSP_Class.c **** void avgTemp(void);
  28:.\DSP_Class.c **** void avgHum(void);
  29:.\DSP_Class.c **** void avgSoilHum(uint8 index);
  30:.\DSP_Class.c **** void avgLight(void);
  31:.\DSP_Class.c **** 
  32:.\DSP_Class.c **** // Init: All datamebers are initialized with -1, meaning they are empty
  33:.\DSP_Class.c **** void initDSP(void){
  38              		.loc 1 33 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 82B0     		sub	sp, sp, #8
  45              		.cfi_def_cfa_offset 16
  46 0004 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  48              	.LBB2:
  34:.\DSP_Class.c ****     {
  35:.\DSP_Class.c ****         uint8 i;
  36:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
  49              		.loc 1 36 0
  50 0006 FB1D     		add	r3, r7, #7
  51 0008 0022     		mov	r2, #0
  52 000a 1A70     		strb	r2, [r3]
  53 000c 34E0     		b	.L2
  54              	.L5:
  37:.\DSP_Class.c ****             tempArray[i] = EMPTY;
  55              		.loc 1 37 0
  56 000e FB1D     		add	r3, r7, #7
  57 0010 1A78     		ldrb	r2, [r3]
  58 0012 354B     		ldr	r3, .L8
  59 0014 9200     		lsl	r2, r2, #2
  60 0016 0121     		mov	r1, #1
  61 0018 4942     		neg	r1, r1
  62 001a D150     		str	r1, [r2, r3]
  38:.\DSP_Class.c ****             humArray[i] = EMPTY;
  63              		.loc 1 38 0
  64 001c FB1D     		add	r3, r7, #7
  65 001e 1A78     		ldrb	r2, [r3]
  66 0020 324B     		ldr	r3, .L8+4
  67 0022 9200     		lsl	r2, r2, #2
  68 0024 0121     		mov	r1, #1
  69 0026 4942     		neg	r1, r1
  70 0028 D150     		str	r1, [r2, r3]
  71              	.LBB3:
  39:.\DSP_Class.c ****             {
  40:.\DSP_Class.c ****                 uint8 j;
  41:.\DSP_Class.c ****                 for(j = 0 ; j<NBR_OF_SOILHUM_SENSORS ; j++){
  72              		.loc 1 41 0
  73 002a BB1D     		add	r3, r7, #6
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 3


  74 002c 0022     		mov	r2, #0
  75 002e 1A70     		strb	r2, [r3]
  76 0030 12E0     		b	.L3
  77              	.L4:
  42:.\DSP_Class.c ****                     soilHumArray[j][i] = EMPTY;
  78              		.loc 1 42 0 discriminator 2
  79 0032 BB1D     		add	r3, r7, #6
  80 0034 1A78     		ldrb	r2, [r3]
  81 0036 FB1D     		add	r3, r7, #7
  82 0038 1878     		ldrb	r0, [r3]
  83 003a 2D49     		ldr	r1, .L8+8
  84 003c 131C     		mov	r3, r2
  85 003e 9B00     		lsl	r3, r3, #2
  86 0040 9B18     		add	r3, r3, r2
  87 0042 5B00     		lsl	r3, r3, #1
  88 0044 1B18     		add	r3, r3, r0
  89 0046 5B00     		lsl	r3, r3, #1
  90 0048 0122     		mov	r2, #1
  91 004a 5242     		neg	r2, r2
  92 004c 5A52     		strh	r2, [r3, r1]
  41:.\DSP_Class.c ****                 for(j = 0 ; j<NBR_OF_SOILHUM_SENSORS ; j++){
  93              		.loc 1 41 0 discriminator 2
  94 004e BB1D     		add	r3, r7, #6
  95 0050 1A78     		ldrb	r2, [r3]
  96 0052 BB1D     		add	r3, r7, #6
  97 0054 0132     		add	r2, r2, #1
  98 0056 1A70     		strb	r2, [r3]
  99              	.L3:
  41:.\DSP_Class.c ****                 for(j = 0 ; j<NBR_OF_SOILHUM_SENSORS ; j++){
 100              		.loc 1 41 0 is_stmt 0 discriminator 1
 101 0058 BB1D     		add	r3, r7, #6
 102 005a 1B78     		ldrb	r3, [r3]
 103 005c 052B     		cmp	r3, #5
 104 005e E8D9     		bls	.L4
 105              	.LBE3:
  43:.\DSP_Class.c ****                 }
  44:.\DSP_Class.c ****             }
  45:.\DSP_Class.c ****             lightArray[i] = EMPTY;
 106              		.loc 1 45 0 is_stmt 1
 107 0060 FB1D     		add	r3, r7, #7
 108 0062 1A78     		ldrb	r2, [r3]
 109 0064 234B     		ldr	r3, .L8+12
 110 0066 9200     		lsl	r2, r2, #2
 111 0068 0121     		mov	r1, #1
 112 006a 4942     		neg	r1, r1
 113 006c D150     		str	r1, [r2, r3]
  36:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 114              		.loc 1 36 0
 115 006e FB1D     		add	r3, r7, #7
 116 0070 1A78     		ldrb	r2, [r3]
 117 0072 FB1D     		add	r3, r7, #7
 118 0074 0132     		add	r2, r2, #1
 119 0076 1A70     		strb	r2, [r3]
 120              	.L2:
  36:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 121              		.loc 1 36 0 is_stmt 0 discriminator 1
 122 0078 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 4


 123 007a 1B78     		ldrb	r3, [r3]
 124 007c 092B     		cmp	r3, #9
 125 007e C6D9     		bls	.L5
 126              	.LBE2:
  46:.\DSP_Class.c ****             
  47:.\DSP_Class.c ****         }
  48:.\DSP_Class.c ****     }
  49:.\DSP_Class.c ****     tempArrayPtr = & tempArray[0];
 127              		.loc 1 49 0 is_stmt 1
 128 0080 1D4B     		ldr	r3, .L8+16
 129 0082 194A     		ldr	r2, .L8
 130 0084 1A60     		str	r2, [r3]
  50:.\DSP_Class.c ****     humArrayPtr = & humArray[0];
 131              		.loc 1 50 0
 132 0086 1D4B     		ldr	r3, .L8+20
 133 0088 184A     		ldr	r2, .L8+4
 134 008a 1A60     		str	r2, [r3]
 135              	.LBB4:
  51:.\DSP_Class.c ****     {
  52:.\DSP_Class.c ****         uint8 k;
  53:.\DSP_Class.c ****         for(k = 0 ; k<NBR_OF_SOILHUM_SENSORS ; k++){
 136              		.loc 1 53 0
 137 008c 7B1D     		add	r3, r7, #5
 138 008e 0022     		mov	r2, #0
 139 0090 1A70     		strb	r2, [r3]
 140 0092 16E0     		b	.L6
 141              	.L7:
  54:.\DSP_Class.c ****             soilHumPtr[k] = & soilHumArray[k][0];
 142              		.loc 1 54 0 discriminator 2
 143 0094 7B1D     		add	r3, r7, #5
 144 0096 1878     		ldrb	r0, [r3]
 145 0098 7B1D     		add	r3, r7, #5
 146 009a 1A78     		ldrb	r2, [r3]
 147 009c 131C     		mov	r3, r2
 148 009e 9B00     		lsl	r3, r3, #2
 149 00a0 9B18     		add	r3, r3, r2
 150 00a2 9B00     		lsl	r3, r3, #2
 151 00a4 124A     		ldr	r2, .L8+8
 152 00a6 9918     		add	r1, r3, r2
 153 00a8 154B     		ldr	r3, .L8+24
 154 00aa 8200     		lsl	r2, r0, #2
 155 00ac D150     		str	r1, [r2, r3]
  55:.\DSP_Class.c ****             soilHum[k] = 0; 
 156              		.loc 1 55 0 discriminator 2
 157 00ae 7B1D     		add	r3, r7, #5
 158 00b0 1B78     		ldrb	r3, [r3]
 159 00b2 144A     		ldr	r2, .L8+28
 160 00b4 0021     		mov	r1, #0
 161 00b6 D154     		strb	r1, [r2, r3]
  53:.\DSP_Class.c ****         for(k = 0 ; k<NBR_OF_SOILHUM_SENSORS ; k++){
 162              		.loc 1 53 0 discriminator 2
 163 00b8 7B1D     		add	r3, r7, #5
 164 00ba 1A78     		ldrb	r2, [r3]
 165 00bc 7B1D     		add	r3, r7, #5
 166 00be 0132     		add	r2, r2, #1
 167 00c0 1A70     		strb	r2, [r3]
 168              	.L6:
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 5


  53:.\DSP_Class.c ****         for(k = 0 ; k<NBR_OF_SOILHUM_SENSORS ; k++){
 169              		.loc 1 53 0 is_stmt 0 discriminator 1
 170 00c2 7B1D     		add	r3, r7, #5
 171 00c4 1B78     		ldrb	r3, [r3]
 172 00c6 052B     		cmp	r3, #5
 173 00c8 E4D9     		bls	.L7
 174              	.LBE4:
  56:.\DSP_Class.c ****             }
  57:.\DSP_Class.c ****     }
  58:.\DSP_Class.c ****     lightArrayPtr = & lightArray[0];
 175              		.loc 1 58 0 is_stmt 1
 176 00ca 0F4B     		ldr	r3, .L8+32
 177 00cc 094A     		ldr	r2, .L8+12
 178 00ce 1A60     		str	r2, [r3]
  59:.\DSP_Class.c ****     temp = 0;
 179              		.loc 1 59 0
 180 00d0 0E4B     		ldr	r3, .L8+36
 181 00d2 0022     		mov	r2, #0
 182 00d4 1A70     		strb	r2, [r3]
  60:.\DSP_Class.c ****     hum = 0;
 183              		.loc 1 60 0
 184 00d6 0E4B     		ldr	r3, .L8+40
 185 00d8 0022     		mov	r2, #0
 186 00da 1A70     		strb	r2, [r3]
  61:.\DSP_Class.c ****     light = 0;
 187              		.loc 1 61 0
 188 00dc 0D4B     		ldr	r3, .L8+44
 189 00de 0022     		mov	r2, #0
 190 00e0 1A70     		strb	r2, [r3]
  62:.\DSP_Class.c **** }
 191              		.loc 1 62 0
 192 00e2 BD46     		mov	sp, r7
 193 00e4 02B0     		add	sp, sp, #8
 194              		@ sp needed
 195 00e6 80BD     		pop	{r7, pc}
 196              	.L9:
 197              		.align	2
 198              	.L8:
 199 00e8 00000000 		.word	tempArray
 200 00ec 00000000 		.word	humArray
 201 00f0 00000000 		.word	soilHumArray
 202 00f4 00000000 		.word	lightArray
 203 00f8 00000000 		.word	tempArrayPtr
 204 00fc 00000000 		.word	humArrayPtr
 205 0100 00000000 		.word	soilHumPtr
 206 0104 00000000 		.word	soilHum
 207 0108 00000000 		.word	lightArrayPtr
 208 010c 00000000 		.word	temp
 209 0110 00000000 		.word	hum
 210 0114 00000000 		.word	light
 211              		.cfi_endproc
 212              	.LFE33:
 213              		.size	initDSP, .-initDSP
 214              		.section	.text.getTemp_DSP,"ax",%progbits
 215              		.align	2
 216              		.global	getTemp_DSP
 217              		.code	16
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 6


 218              		.thumb_func
 219              		.type	getTemp_DSP, %function
 220              	getTemp_DSP:
 221              	.LFB34:
  63:.\DSP_Class.c **** 
  64:.\DSP_Class.c **** uint8 getTemp_DSP(void){
 222              		.loc 1 64 0
 223              		.cfi_startproc
 224 0000 80B5     		push	{r7, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 7, -8
 227              		.cfi_offset 14, -4
 228 0002 00AF     		add	r7, sp, #0
 229              		.cfi_def_cfa_register 7
  65:.\DSP_Class.c ****     return temp;
 230              		.loc 1 65 0
 231 0004 024B     		ldr	r3, .L12
 232 0006 1B78     		ldrb	r3, [r3]
  66:.\DSP_Class.c **** }
 233              		.loc 1 66 0
 234 0008 181C     		mov	r0, r3
 235 000a BD46     		mov	sp, r7
 236              		@ sp needed
 237 000c 80BD     		pop	{r7, pc}
 238              	.L13:
 239 000e C046     		.align	2
 240              	.L12:
 241 0010 00000000 		.word	temp
 242              		.cfi_endproc
 243              	.LFE34:
 244              		.size	getTemp_DSP, .-getTemp_DSP
 245              		.section	.text.getHum_DSP,"ax",%progbits
 246              		.align	2
 247              		.global	getHum_DSP
 248              		.code	16
 249              		.thumb_func
 250              		.type	getHum_DSP, %function
 251              	getHum_DSP:
 252              	.LFB35:
  67:.\DSP_Class.c **** 
  68:.\DSP_Class.c **** uint8 getHum_DSP(void){
 253              		.loc 1 68 0
 254              		.cfi_startproc
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 00AF     		add	r7, sp, #0
 260              		.cfi_def_cfa_register 7
  69:.\DSP_Class.c ****     return hum;
 261              		.loc 1 69 0
 262 0004 024B     		ldr	r3, .L16
 263 0006 1B78     		ldrb	r3, [r3]
  70:.\DSP_Class.c **** }
 264              		.loc 1 70 0
 265 0008 181C     		mov	r0, r3
 266 000a BD46     		mov	sp, r7
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 7


 267              		@ sp needed
 268 000c 80BD     		pop	{r7, pc}
 269              	.L17:
 270 000e C046     		.align	2
 271              	.L16:
 272 0010 00000000 		.word	hum
 273              		.cfi_endproc
 274              	.LFE35:
 275              		.size	getHum_DSP, .-getHum_DSP
 276              		.section	.text.getSoilHum_DSP,"ax",%progbits
 277              		.align	2
 278              		.global	getSoilHum_DSP
 279              		.code	16
 280              		.thumb_func
 281              		.type	getSoilHum_DSP, %function
 282              	getSoilHum_DSP:
 283              	.LFB36:
  71:.\DSP_Class.c **** 
  72:.\DSP_Class.c **** uint8 getSoilHum_DSP(uint8 index){
 284              		.loc 1 72 0
 285              		.cfi_startproc
 286 0000 80B5     		push	{r7, lr}
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 7, -8
 289              		.cfi_offset 14, -4
 290 0002 82B0     		sub	sp, sp, #8
 291              		.cfi_def_cfa_offset 16
 292 0004 00AF     		add	r7, sp, #0
 293              		.cfi_def_cfa_register 7
 294 0006 021C     		mov	r2, r0
 295 0008 FB1D     		add	r3, r7, #7
 296 000a 1A70     		strb	r2, [r3]
  73:.\DSP_Class.c ****     return soilHum[index];
 297              		.loc 1 73 0
 298 000c FB1D     		add	r3, r7, #7
 299 000e 1B78     		ldrb	r3, [r3]
 300 0010 024A     		ldr	r2, .L20
 301 0012 D35C     		ldrb	r3, [r2, r3]
  74:.\DSP_Class.c **** }
 302              		.loc 1 74 0
 303 0014 181C     		mov	r0, r3
 304 0016 BD46     		mov	sp, r7
 305 0018 02B0     		add	sp, sp, #8
 306              		@ sp needed
 307 001a 80BD     		pop	{r7, pc}
 308              	.L21:
 309              		.align	2
 310              	.L20:
 311 001c 00000000 		.word	soilHum
 312              		.cfi_endproc
 313              	.LFE36:
 314              		.size	getSoilHum_DSP, .-getSoilHum_DSP
 315              		.section	.text.getLight_DSP,"ax",%progbits
 316              		.align	2
 317              		.global	getLight_DSP
 318              		.code	16
 319              		.thumb_func
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 8


 320              		.type	getLight_DSP, %function
 321              	getLight_DSP:
 322              	.LFB37:
  75:.\DSP_Class.c **** 
  76:.\DSP_Class.c **** uint8 getLight_DSP(void){
 323              		.loc 1 76 0
 324              		.cfi_startproc
 325 0000 80B5     		push	{r7, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 7, -8
 328              		.cfi_offset 14, -4
 329 0002 00AF     		add	r7, sp, #0
 330              		.cfi_def_cfa_register 7
  77:.\DSP_Class.c ****     return light;
 331              		.loc 1 77 0
 332 0004 024B     		ldr	r3, .L24
 333 0006 1B78     		ldrb	r3, [r3]
  78:.\DSP_Class.c **** }
 334              		.loc 1 78 0
 335 0008 181C     		mov	r0, r3
 336 000a BD46     		mov	sp, r7
 337              		@ sp needed
 338 000c 80BD     		pop	{r7, pc}
 339              	.L25:
 340 000e C046     		.align	2
 341              	.L24:
 342 0010 00000000 		.word	light
 343              		.cfi_endproc
 344              	.LFE37:
 345              		.size	getLight_DSP, .-getLight_DSP
 346              		.global	__aeabi_ldivmod
 347              		.global	__aeabi_l2f
 348              		.global	__aeabi_fdiv
 349              		.global	__aeabi_fmul
 350              		.global	__aeabi_fsub
 351              		.global	__aeabi_fcmplt
 352              		.global	__aeabi_fcmpgt
 353              		.global	__aeabi_fadd
 354              		.global	__aeabi_f2uiz
 355              		.section	.text.avgTemp,"ax",%progbits
 356              		.align	2
 357              		.global	avgTemp
 358              		.code	16
 359              		.thumb_func
 360              		.type	avgTemp, %function
 361              	avgTemp:
 362              	.LFB38:
  79:.\DSP_Class.c **** 
  80:.\DSP_Class.c **** void avgTemp(void){
 363              		.loc 1 80 0
 364              		.cfi_startproc
 365 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 366              		.cfi_def_cfa_offset 20
 367              		.cfi_offset 4, -20
 368              		.cfi_offset 5, -16
 369              		.cfi_offset 6, -12
 370              		.cfi_offset 7, -8
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 9


 371              		.cfi_offset 14, -4
 372 0002 89B0     		sub	sp, sp, #36
 373              		.cfi_def_cfa_offset 56
 374 0004 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
  81:.\DSP_Class.c ****     uint8 skip = 0;
 376              		.loc 1 81 0
 377 0006 381C     		mov	r0, r7
 378 0008 1F30     		add	r0, r0, #31
 379 000a 0025     		mov	r5, #0
 380 000c 0570     		strb	r5, [r0]
  82:.\DSP_Class.c ****     int64 total = 0;
 381              		.loc 1 82 0
 382 000e 0025     		mov	r5, #0
 383 0010 0026     		mov	r6, #0
 384 0012 3D61     		str	r5, [r7, #16]
 385 0014 7E61     		str	r6, [r7, #20]
 386              	.LBB5:
  83:.\DSP_Class.c ****     {
  84:.\DSP_Class.c ****         uint8 i;
  85:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 387              		.loc 1 85 0
 388 0016 381C     		mov	r0, r7
 389 0018 0F30     		add	r0, r0, #15
 390 001a 0025     		mov	r5, #0
 391 001c 0570     		strb	r5, [r0]
 392 001e 25E0     		b	.L27
 393              	.L30:
  86:.\DSP_Class.c ****             if(tempArray[i]>=0){
 394              		.loc 1 86 0
 395 0020 381C     		mov	r0, r7
 396 0022 0F30     		add	r0, r0, #15
 397 0024 0578     		ldrb	r5, [r0]
 398 0026 4248     		ldr	r0, .L40
 399 0028 AD00     		lsl	r5, r5, #2
 400 002a 2858     		ldr	r0, [r5, r0]
 401 002c 0028     		cmp	r0, #0
 402 002e 0FDB     		blt	.L28
  87:.\DSP_Class.c ****                 total += tempArray[i];
 403              		.loc 1 87 0
 404 0030 381C     		mov	r0, r7
 405 0032 0F30     		add	r0, r0, #15
 406 0034 0578     		ldrb	r5, [r0]
 407 0036 3E48     		ldr	r0, .L40
 408 0038 AD00     		lsl	r5, r5, #2
 409 003a 2858     		ldr	r0, [r5, r0]
 410 003c 011C     		mov	r1, r0
 411 003e C017     		asr	r0, r0, #31
 412 0040 021C     		mov	r2, r0
 413 0042 3D69     		ldr	r5, [r7, #16]
 414 0044 7E69     		ldr	r6, [r7, #20]
 415 0046 6D18     		add	r5, r5, r1
 416 0048 5641     		adc	r6, r6, r2
 417 004a 3D61     		str	r5, [r7, #16]
 418 004c 7E61     		str	r6, [r7, #20]
 419 004e 06E0     		b	.L29
 420              	.L28:
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 10


  88:.\DSP_Class.c ****             }
  89:.\DSP_Class.c ****             else{
  90:.\DSP_Class.c ****                 skip++;
 421              		.loc 1 90 0
 422 0050 381C     		mov	r0, r7
 423 0052 1F30     		add	r0, r0, #31
 424 0054 0578     		ldrb	r5, [r0]
 425 0056 381C     		mov	r0, r7
 426 0058 1F30     		add	r0, r0, #31
 427 005a 0135     		add	r5, r5, #1
 428 005c 0570     		strb	r5, [r0]
 429              	.L29:
  85:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 430              		.loc 1 85 0
 431 005e 381C     		mov	r0, r7
 432 0060 0F30     		add	r0, r0, #15
 433 0062 0578     		ldrb	r5, [r0]
 434 0064 381C     		mov	r0, r7
 435 0066 0F30     		add	r0, r0, #15
 436 0068 0135     		add	r5, r5, #1
 437 006a 0570     		strb	r5, [r0]
 438              	.L27:
  85:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 439              		.loc 1 85 0 is_stmt 0 discriminator 1
 440 006c 381C     		mov	r0, r7
 441 006e 0F30     		add	r0, r0, #15
 442 0070 0078     		ldrb	r0, [r0]
 443 0072 0928     		cmp	r0, #9
 444 0074 D4D9     		bls	.L30
 445              	.LBE5:
  91:.\DSP_Class.c ****             }
  92:.\DSP_Class.c ****         }
  93:.\DSP_Class.c ****     }
  94:.\DSP_Class.c ****     // Makes sure that enough datapoints are pressent
  95:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 446              		.loc 1 95 0 is_stmt 1
 447 0076 3A1C     		mov	r2, r7
 448 0078 1F32     		add	r2, r2, #31
 449 007a 1278     		ldrb	r2, [r2]
 450 007c 0A21     		mov	r1, #10
 451 007e 8A1A     		sub	r2, r1, r2
 452 0080 092A     		cmp	r2, #9
 453 0082 4FDD     		ble	.L31
 454              	.LBB6:
  96:.\DSP_Class.c ****         float avg = total/(ARRAYSIZE-skip);                         // Calculate the average value
 455              		.loc 1 96 0
 456 0084 3A1C     		mov	r2, r7
 457 0086 1F32     		add	r2, r2, #31
 458 0088 1278     		ldrb	r2, [r2]
 459 008a 0A21     		mov	r1, #10
 460 008c 8A1A     		sub	r2, r1, r2
 461 008e 131C     		mov	r3, r2
 462 0090 D217     		asr	r2, r2, #31
 463 0092 141C     		mov	r4, r2
 464 0094 3869     		ldr	r0, [r7, #16]
 465 0096 7969     		ldr	r1, [r7, #20]
 466 0098 1A1C     		mov	r2, r3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 11


 467 009a 231C     		mov	r3, r4
 468 009c FFF7FEFF 		bl	__aeabi_ldivmod
 469 00a0 031C     		mov	r3, r0
 470 00a2 0C1C     		mov	r4, r1
 471 00a4 181C     		mov	r0, r3
 472 00a6 211C     		mov	r1, r4
 473 00a8 FFF7FEFF 		bl	__aeabi_l2f
 474 00ac 031C     		add	r3, r0, #0
 475 00ae 7B60     		str	r3, [r7, #4]
  97:.\DSP_Class.c ****         float tempInDegreesC = (((avg)/((16380)-2))*165)-40;        // Conversion formula from data
 476              		.loc 1 97 0
 477 00b0 7868     		ldr	r0, [r7, #4]
 478 00b2 2049     		ldr	r1, .L40+4
 479 00b4 FFF7FEFF 		bl	__aeabi_fdiv
 480 00b8 031C     		add	r3, r0, #0
 481 00ba 181C     		add	r0, r3, #0
 482 00bc 1E49     		ldr	r1, .L40+8
 483 00be FFF7FEFF 		bl	__aeabi_fmul
 484 00c2 031C     		add	r3, r0, #0
 485 00c4 181C     		add	r0, r3, #0
 486 00c6 1D49     		ldr	r1, .L40+12
 487 00c8 FFF7FEFF 		bl	__aeabi_fsub
 488 00cc 031C     		add	r3, r0, #0
 489 00ce BB60     		str	r3, [r7, #8]
  98:.\DSP_Class.c **** 
  99:.\DSP_Class.c ****         // tempInDegreesC is limited to -20 and +80 degrees C
 100:.\DSP_Class.c ****         if ( -19.5 > tempInDegreesC){
 490              		.loc 1 100 0
 491 00d0 B868     		ldr	r0, [r7, #8]
 492 00d2 1B49     		ldr	r1, .L40+16
 493 00d4 FFF7FEFF 		bl	__aeabi_fcmplt
 494 00d8 031C     		mov	r3, r0
 495 00da 002B     		cmp	r3, #0
 496 00dc 02D0     		beq	.L39
 101:.\DSP_Class.c ****             tempInDegreesC = -19.5;
 497              		.loc 1 101 0
 498 00de 184B     		ldr	r3, .L40+16
 499 00e0 BB60     		str	r3, [r7, #8]
 500 00e2 08E0     		b	.L34
 501              	.L39:
 102:.\DSP_Class.c ****         }
 103:.\DSP_Class.c ****         else if(tempInDegreesC > 80){
 502              		.loc 1 103 0
 503 00e4 B868     		ldr	r0, [r7, #8]
 504 00e6 1749     		ldr	r1, .L40+20
 505 00e8 FFF7FEFF 		bl	__aeabi_fcmpgt
 506 00ec 031C     		mov	r3, r0
 507 00ee 002B     		cmp	r3, #0
 508 00f0 01D0     		beq	.L34
 104:.\DSP_Class.c ****             tempInDegreesC = 80;
 509              		.loc 1 104 0
 510 00f2 144B     		ldr	r3, .L40+20
 511 00f4 BB60     		str	r3, [r7, #8]
 512              	.L34:
 105:.\DSP_Class.c ****         }
 106:.\DSP_Class.c **** 
 107:.\DSP_Class.c ****         temp = (tempInDegreesC+20)*2;       // Conversion to UART protocol
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 12


 513              		.loc 1 107 0 discriminator 1
 514 00f6 B868     		ldr	r0, [r7, #8]
 515 00f8 1349     		ldr	r1, .L40+24
 516 00fa FFF7FEFF 		bl	__aeabi_fadd
 517 00fe 031C     		add	r3, r0, #0
 518 0100 181C     		add	r0, r3, #0
 519 0102 191C     		add	r1, r3, #0
 520 0104 FFF7FEFF 		bl	__aeabi_fadd
 521 0108 031C     		add	r3, r0, #0
 522 010a 181C     		add	r0, r3, #0
 523 010c FFF7FEFF 		bl	__aeabi_f2uiz
 524 0110 031C     		mov	r3, r0
 525 0112 DAB2     		uxtb	r2, r3
 526 0114 0D4B     		ldr	r3, .L40+28
 527 0116 1A70     		strb	r2, [r3]
 108:.\DSP_Class.c ****         UART_UartPutChar(temp);
 528              		.loc 1 108 0 discriminator 1
 529 0118 0C4B     		ldr	r3, .L40+28
 530 011a 1B78     		ldrb	r3, [r3]
 531 011c 181C     		mov	r0, r3
 532 011e FFF7FEFF 		bl	UART_SpiUartWriteTxData
 533              	.LBE6:
 534 0122 02E0     		b	.L26
 535              	.L31:
 109:.\DSP_Class.c ****     }
 110:.\DSP_Class.c ****     else{
 111:.\DSP_Class.c ****         temp = 0;
 536              		.loc 1 111 0
 537 0124 094B     		ldr	r3, .L40+28
 538 0126 0022     		mov	r2, #0
 539 0128 1A70     		strb	r2, [r3]
 540              	.L26:
 112:.\DSP_Class.c ****     }
 113:.\DSP_Class.c **** }
 541              		.loc 1 113 0
 542 012a BD46     		mov	sp, r7
 543 012c 09B0     		add	sp, sp, #36
 544              		@ sp needed
 545 012e F0BD     		pop	{r4, r5, r6, r7, pc}
 546              	.L41:
 547              		.align	2
 548              	.L40:
 549 0130 00000000 		.word	tempArray
 550 0134 00E87F46 		.word	1182787584
 551 0138 00002543 		.word	1126498304
 552 013c 00002042 		.word	1109393408
 553 0140 00009CC1 		.word	-1046740992
 554 0144 0000A042 		.word	1117782016
 555 0148 0000A041 		.word	1101004800
 556 014c 00000000 		.word	temp
 557              		.cfi_endproc
 558              	.LFE38:
 559              		.size	avgTemp, .-avgTemp
 560              		.global	__aeabi_fcmple
 561              		.section	.text.avgHum,"ax",%progbits
 562              		.align	2
 563              		.global	avgHum
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 13


 564              		.code	16
 565              		.thumb_func
 566              		.type	avgHum, %function
 567              	avgHum:
 568              	.LFB39:
 114:.\DSP_Class.c **** 
 115:.\DSP_Class.c **** void avgHum(void){
 569              		.loc 1 115 0
 570              		.cfi_startproc
 571 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 572              		.cfi_def_cfa_offset 20
 573              		.cfi_offset 4, -20
 574              		.cfi_offset 5, -16
 575              		.cfi_offset 6, -12
 576              		.cfi_offset 7, -8
 577              		.cfi_offset 14, -4
 578 0002 89B0     		sub	sp, sp, #36
 579              		.cfi_def_cfa_offset 56
 580 0004 00AF     		add	r7, sp, #0
 581              		.cfi_def_cfa_register 7
 116:.\DSP_Class.c ****     uint8 skip = 0;
 582              		.loc 1 116 0
 583 0006 381C     		mov	r0, r7
 584 0008 1F30     		add	r0, r0, #31
 585 000a 0025     		mov	r5, #0
 586 000c 0570     		strb	r5, [r0]
 117:.\DSP_Class.c ****     int64 total = 0;
 587              		.loc 1 117 0
 588 000e 0025     		mov	r5, #0
 589 0010 0026     		mov	r6, #0
 590 0012 3D61     		str	r5, [r7, #16]
 591 0014 7E61     		str	r6, [r7, #20]
 592              	.LBB7:
 118:.\DSP_Class.c ****     {
 119:.\DSP_Class.c ****         uint8 i;
 120:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 593              		.loc 1 120 0
 594 0016 381C     		mov	r0, r7
 595 0018 0F30     		add	r0, r0, #15
 596 001a 0025     		mov	r5, #0
 597 001c 0570     		strb	r5, [r0]
 598 001e 25E0     		b	.L43
 599              	.L46:
 121:.\DSP_Class.c ****             if(humArray[i]>=0){
 600              		.loc 1 121 0
 601 0020 381C     		mov	r0, r7
 602 0022 0F30     		add	r0, r0, #15
 603 0024 0578     		ldrb	r5, [r0]
 604 0026 3948     		ldr	r0, .L56
 605 0028 AD00     		lsl	r5, r5, #2
 606 002a 2858     		ldr	r0, [r5, r0]
 607 002c 0028     		cmp	r0, #0
 608 002e 0FDB     		blt	.L44
 122:.\DSP_Class.c ****                 total += humArray[i];
 609              		.loc 1 122 0
 610 0030 381C     		mov	r0, r7
 611 0032 0F30     		add	r0, r0, #15
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 14


 612 0034 0578     		ldrb	r5, [r0]
 613 0036 3548     		ldr	r0, .L56
 614 0038 AD00     		lsl	r5, r5, #2
 615 003a 2858     		ldr	r0, [r5, r0]
 616 003c 011C     		mov	r1, r0
 617 003e C017     		asr	r0, r0, #31
 618 0040 021C     		mov	r2, r0
 619 0042 3D69     		ldr	r5, [r7, #16]
 620 0044 7E69     		ldr	r6, [r7, #20]
 621 0046 6D18     		add	r5, r5, r1
 622 0048 5641     		adc	r6, r6, r2
 623 004a 3D61     		str	r5, [r7, #16]
 624 004c 7E61     		str	r6, [r7, #20]
 625 004e 06E0     		b	.L45
 626              	.L44:
 123:.\DSP_Class.c ****             }
 124:.\DSP_Class.c ****             else{
 125:.\DSP_Class.c ****                 skip++;
 627              		.loc 1 125 0
 628 0050 381C     		mov	r0, r7
 629 0052 1F30     		add	r0, r0, #31
 630 0054 0578     		ldrb	r5, [r0]
 631 0056 381C     		mov	r0, r7
 632 0058 1F30     		add	r0, r0, #31
 633 005a 0135     		add	r5, r5, #1
 634 005c 0570     		strb	r5, [r0]
 635              	.L45:
 120:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 636              		.loc 1 120 0
 637 005e 381C     		mov	r0, r7
 638 0060 0F30     		add	r0, r0, #15
 639 0062 0578     		ldrb	r5, [r0]
 640 0064 381C     		mov	r0, r7
 641 0066 0F30     		add	r0, r0, #15
 642 0068 0135     		add	r5, r5, #1
 643 006a 0570     		strb	r5, [r0]
 644              	.L43:
 120:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 645              		.loc 1 120 0 is_stmt 0 discriminator 1
 646 006c 381C     		mov	r0, r7
 647 006e 0F30     		add	r0, r0, #15
 648 0070 0078     		ldrb	r0, [r0]
 649 0072 0928     		cmp	r0, #9
 650 0074 D4D9     		bls	.L46
 651              	.LBE7:
 126:.\DSP_Class.c ****             }
 127:.\DSP_Class.c ****         }
 128:.\DSP_Class.c ****     }
 129:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 130:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 652              		.loc 1 130 0 is_stmt 1
 653 0076 3A1C     		mov	r2, r7
 654 0078 1F32     		add	r2, r2, #31
 655 007a 1278     		ldrb	r2, [r2]
 656 007c 0A21     		mov	r1, #10
 657 007e 8A1A     		sub	r2, r1, r2
 658 0080 092A     		cmp	r2, #9
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 15


 659 0082 3CDD     		ble	.L47
 660              	.LBB8:
 131:.\DSP_Class.c ****         float avg = total/(ARRAYSIZE-skip);                     // Calculate the average value
 661              		.loc 1 131 0
 662 0084 3A1C     		mov	r2, r7
 663 0086 1F32     		add	r2, r2, #31
 664 0088 1278     		ldrb	r2, [r2]
 665 008a 0A21     		mov	r1, #10
 666 008c 8A1A     		sub	r2, r1, r2
 667 008e 131C     		mov	r3, r2
 668 0090 D217     		asr	r2, r2, #31
 669 0092 141C     		mov	r4, r2
 670 0094 3869     		ldr	r0, [r7, #16]
 671 0096 7969     		ldr	r1, [r7, #20]
 672 0098 1A1C     		mov	r2, r3
 673 009a 231C     		mov	r3, r4
 674 009c FFF7FEFF 		bl	__aeabi_ldivmod
 675 00a0 031C     		mov	r3, r0
 676 00a2 0C1C     		mov	r4, r1
 677 00a4 181C     		mov	r0, r3
 678 00a6 211C     		mov	r1, r4
 679 00a8 FFF7FEFF 		bl	__aeabi_l2f
 680 00ac 031C     		add	r3, r0, #0
 681 00ae 7B60     		str	r3, [r7, #4]
 132:.\DSP_Class.c ****         float humInRH = (avg/(16380-2))*100;                // Conversion formula from datasheet
 682              		.loc 1 132 0
 683 00b0 7868     		ldr	r0, [r7, #4]
 684 00b2 1749     		ldr	r1, .L56+4
 685 00b4 FFF7FEFF 		bl	__aeabi_fdiv
 686 00b8 031C     		add	r3, r0, #0
 687 00ba 181C     		add	r0, r3, #0
 688 00bc 1549     		ldr	r1, .L56+8
 689 00be FFF7FEFF 		bl	__aeabi_fmul
 690 00c2 031C     		add	r3, r0, #0
 691 00c4 BB60     		str	r3, [r7, #8]
 133:.\DSP_Class.c ****         
 134:.\DSP_Class.c ****         // humInRH is limited to 1 and 100 RH
 135:.\DSP_Class.c ****         if(humInRH <= 0){
 692              		.loc 1 135 0
 693 00c6 B868     		ldr	r0, [r7, #8]
 694 00c8 0021     		mov	r1, #0
 695 00ca FFF7FEFF 		bl	__aeabi_fcmple
 696 00ce 031C     		mov	r3, r0
 697 00d0 002B     		cmp	r3, #0
 698 00d2 03D0     		beq	.L55
 136:.\DSP_Class.c ****             humInRH = 1;
 699              		.loc 1 136 0
 700 00d4 FE23     		mov	r3, #254
 701 00d6 9B05     		lsl	r3, r3, #22
 702 00d8 BB60     		str	r3, [r7, #8]
 703 00da 08E0     		b	.L50
 704              	.L55:
 137:.\DSP_Class.c ****         }
 138:.\DSP_Class.c ****         else if(humInRH > 100){
 705              		.loc 1 138 0
 706 00dc B868     		ldr	r0, [r7, #8]
 707 00de 0D49     		ldr	r1, .L56+8
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 16


 708 00e0 FFF7FEFF 		bl	__aeabi_fcmpgt
 709 00e4 031C     		mov	r3, r0
 710 00e6 002B     		cmp	r3, #0
 711 00e8 01D0     		beq	.L50
 139:.\DSP_Class.c ****             humInRH = 100;
 712              		.loc 1 139 0
 713 00ea 0A4B     		ldr	r3, .L56+8
 714 00ec BB60     		str	r3, [r7, #8]
 715              	.L50:
 140:.\DSP_Class.c ****         }
 141:.\DSP_Class.c ****         hum = humInRH;
 716              		.loc 1 141 0 discriminator 1
 717 00ee B868     		ldr	r0, [r7, #8]
 718 00f0 FFF7FEFF 		bl	__aeabi_f2uiz
 719 00f4 031C     		mov	r3, r0
 720 00f6 DAB2     		uxtb	r2, r3
 721 00f8 074B     		ldr	r3, .L56+12
 722 00fa 1A70     		strb	r2, [r3]
 723              	.LBE8:
 724 00fc 02E0     		b	.L42
 725              	.L47:
 142:.\DSP_Class.c ****     }
 143:.\DSP_Class.c ****     else{
 144:.\DSP_Class.c ****     hum = 0;
 726              		.loc 1 144 0
 727 00fe 064B     		ldr	r3, .L56+12
 728 0100 0022     		mov	r2, #0
 729 0102 1A70     		strb	r2, [r3]
 730              	.L42:
 145:.\DSP_Class.c ****     }
 146:.\DSP_Class.c **** }
 731              		.loc 1 146 0
 732 0104 BD46     		mov	sp, r7
 733 0106 09B0     		add	sp, sp, #36
 734              		@ sp needed
 735 0108 F0BD     		pop	{r4, r5, r6, r7, pc}
 736              	.L57:
 737 010a C046     		.align	2
 738              	.L56:
 739 010c 00000000 		.word	humArray
 740 0110 00E87F46 		.word	1182787584
 741 0114 0000C842 		.word	1120403456
 742 0118 00000000 		.word	hum
 743              		.cfi_endproc
 744              	.LFE39:
 745              		.size	avgHum, .-avgHum
 746              		.section	.text.avgSoilHum,"ax",%progbits
 747              		.align	2
 748              		.global	avgSoilHum
 749              		.code	16
 750              		.thumb_func
 751              		.type	avgSoilHum, %function
 752              	avgSoilHum:
 753              	.LFB40:
 147:.\DSP_Class.c **** 
 148:.\DSP_Class.c **** void avgSoilHum(uint8 index){
 754              		.loc 1 148 0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 17


 755              		.cfi_startproc
 756 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 757              		.cfi_def_cfa_offset 20
 758              		.cfi_offset 4, -20
 759              		.cfi_offset 5, -16
 760              		.cfi_offset 6, -12
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 0002 93B0     		sub	sp, sp, #76
 764              		.cfi_def_cfa_offset 96
 765 0004 00AF     		add	r7, sp, #0
 766              		.cfi_def_cfa_register 7
 767 0006 3B1C     		mov	r3, r7
 768 0008 2733     		add	r3, r3, #39
 769 000a 1870     		strb	r0, [r3]
 149:.\DSP_Class.c ****     uint8 skip = 0;
 770              		.loc 1 149 0
 771 000c 3B1C     		mov	r3, r7
 772 000e 4733     		add	r3, r3, #71
 773 0010 0020     		mov	r0, #0
 774 0012 1870     		strb	r0, [r3]
 150:.\DSP_Class.c ****     int64 total = 0;
 775              		.loc 1 150 0
 776 0014 0023     		mov	r3, #0
 777 0016 0024     		mov	r4, #0
 778 0018 BB61     		str	r3, [r7, #24]
 779 001a FC61     		str	r4, [r7, #28]
 780 001c BB69     		ldr	r3, [r7, #24]
 781 001e FC69     		ldr	r4, [r7, #28]
 782 0020 BB63     		str	r3, [r7, #56]
 783 0022 FC63     		str	r4, [r7, #60]
 784              	.LBB9:
 151:.\DSP_Class.c ****     {
 152:.\DSP_Class.c ****         uint8 i;
 153:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 785              		.loc 1 153 0
 786 0024 3B1C     		mov	r3, r7
 787 0026 3733     		add	r3, r3, #55
 788 0028 0020     		mov	r0, #0
 789 002a 1870     		strb	r0, [r3]
 790 002c 41E0     		b	.L59
 791              	.L62:
 154:.\DSP_Class.c ****             if(soilHumArray[index][i]>=0){
 792              		.loc 1 154 0
 793 002e 3B1C     		mov	r3, r7
 794 0030 2733     		add	r3, r3, #39
 795 0032 1878     		ldrb	r0, [r3]
 796 0034 3B1C     		mov	r3, r7
 797 0036 3733     		add	r3, r3, #55
 798 0038 1B78     		ldrb	r3, [r3]
 799 003a 9C46     		mov	ip, r3
 800 003c 434E     		ldr	r6, .L72
 801 003e 031C     		mov	r3, r0
 802 0040 9B00     		lsl	r3, r3, #2
 803 0042 1B18     		add	r3, r3, r0
 804 0044 5B00     		lsl	r3, r3, #1
 805 0046 6344     		add	r3, r3, ip
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 18


 806 0048 5B00     		lsl	r3, r3, #1
 807 004a 9B5B     		ldrh	r3, [r3, r6]
 808 004c 1BB2     		sxth	r3, r3
 809 004e 002B     		cmp	r3, #0
 810 0050 21DB     		blt	.L60
 155:.\DSP_Class.c ****                 total += soilHumArray[index][i];
 811              		.loc 1 155 0
 812 0052 3B1C     		mov	r3, r7
 813 0054 2733     		add	r3, r3, #39
 814 0056 1878     		ldrb	r0, [r3]
 815 0058 3B1C     		mov	r3, r7
 816 005a 3733     		add	r3, r3, #55
 817 005c 1B78     		ldrb	r3, [r3]
 818 005e 9C46     		mov	ip, r3
 819 0060 3A4E     		ldr	r6, .L72
 820 0062 031C     		mov	r3, r0
 821 0064 9B00     		lsl	r3, r3, #2
 822 0066 1B18     		add	r3, r3, r0
 823 0068 5B00     		lsl	r3, r3, #1
 824 006a 6344     		add	r3, r3, ip
 825 006c 5B00     		lsl	r3, r3, #1
 826 006e 9B5B     		ldrh	r3, [r3, r6]
 827 0070 1BB2     		sxth	r3, r3
 828 0072 191C     		mov	r1, r3
 829 0074 DB17     		asr	r3, r3, #31
 830 0076 1A1C     		mov	r2, r3
 831 0078 BB6B     		ldr	r3, [r7, #56]
 832 007a FC6B     		ldr	r4, [r7, #60]
 833 007c BB60     		str	r3, [r7, #8]
 834 007e FC60     		str	r4, [r7, #12]
 835 0080 BB68     		ldr	r3, [r7, #8]
 836 0082 FC68     		ldr	r4, [r7, #12]
 837 0084 5B18     		add	r3, r3, r1
 838 0086 5441     		adc	r4, r4, r2
 839 0088 3B61     		str	r3, [r7, #16]
 840 008a 7C61     		str	r4, [r7, #20]
 841 008c 3B69     		ldr	r3, [r7, #16]
 842 008e 7C69     		ldr	r4, [r7, #20]
 843 0090 BB63     		str	r3, [r7, #56]
 844 0092 FC63     		str	r4, [r7, #60]
 845 0094 06E0     		b	.L61
 846              	.L60:
 156:.\DSP_Class.c ****             }
 157:.\DSP_Class.c ****             else{
 158:.\DSP_Class.c ****                 skip++;
 847              		.loc 1 158 0
 848 0096 3B1C     		mov	r3, r7
 849 0098 4733     		add	r3, r3, #71
 850 009a 1878     		ldrb	r0, [r3]
 851 009c 3B1C     		mov	r3, r7
 852 009e 4733     		add	r3, r3, #71
 853 00a0 0130     		add	r0, r0, #1
 854 00a2 1870     		strb	r0, [r3]
 855              	.L61:
 153:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 856              		.loc 1 153 0
 857 00a4 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 19


 858 00a6 3733     		add	r3, r3, #55
 859 00a8 1878     		ldrb	r0, [r3]
 860 00aa 3B1C     		mov	r3, r7
 861 00ac 3733     		add	r3, r3, #55
 862 00ae 0130     		add	r0, r0, #1
 863 00b0 1870     		strb	r0, [r3]
 864              	.L59:
 153:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 865              		.loc 1 153 0 is_stmt 0 discriminator 1
 866 00b2 3B1C     		mov	r3, r7
 867 00b4 3733     		add	r3, r3, #55
 868 00b6 1B78     		ldrb	r3, [r3]
 869 00b8 092B     		cmp	r3, #9
 870 00ba B8D9     		bls	.L62
 871              	.LBE9:
 159:.\DSP_Class.c ****             }
 160:.\DSP_Class.c ****         }
 161:.\DSP_Class.c ****     }
 162:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 163:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 872              		.loc 1 163 0 is_stmt 1
 873 00bc 3B1C     		mov	r3, r7
 874 00be 4733     		add	r3, r3, #71
 875 00c0 1B78     		ldrb	r3, [r3]
 876 00c2 0A22     		mov	r2, #10
 877 00c4 D31A     		sub	r3, r2, r3
 878 00c6 092B     		cmp	r3, #9
 879 00c8 36DD     		ble	.L63
 880              	.LBB10:
 164:.\DSP_Class.c ****         float avg = total/(ARRAYSIZE-skip);         // Calculate the average value (assuming input 
 881              		.loc 1 164 0
 882 00ca 3B1C     		mov	r3, r7
 883 00cc 4733     		add	r3, r3, #71
 884 00ce 1B78     		ldrb	r3, [r3]
 885 00d0 0A22     		mov	r2, #10
 886 00d2 D31A     		sub	r3, r2, r3
 887 00d4 3B60     		str	r3, [r7]
 888 00d6 DB17     		asr	r3, r3, #31
 889 00d8 7B60     		str	r3, [r7, #4]
 890 00da B86B     		ldr	r0, [r7, #56]
 891 00dc F96B     		ldr	r1, [r7, #60]
 892 00de 3A68     		ldr	r2, [r7]
 893 00e0 7B68     		ldr	r3, [r7, #4]
 894 00e2 FFF7FEFF 		bl	__aeabi_ldivmod
 895 00e6 031C     		mov	r3, r0
 896 00e8 0C1C     		mov	r4, r1
 897 00ea 181C     		mov	r0, r3
 898 00ec 211C     		mov	r1, r4
 899 00ee FFF7FEFF 		bl	__aeabi_l2f
 900 00f2 031C     		add	r3, r0, #0
 901 00f4 FB62     		str	r3, [r7, #44]
 165:.\DSP_Class.c ****         float soilHumInRH = avg;                    // Takes care of conversion ( NB no conversion 
 902              		.loc 1 165 0
 903 00f6 FB6A     		ldr	r3, [r7, #44]
 904 00f8 3B63     		str	r3, [r7, #48]
 166:.\DSP_Class.c ****         
 167:.\DSP_Class.c ****         // soilHumInRH is limited to 1 and 100 RH
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 20


 168:.\DSP_Class.c ****         if(soilHumInRH <= 0){
 905              		.loc 1 168 0
 906 00fa 386B     		ldr	r0, [r7, #48]
 907 00fc 0021     		mov	r1, #0
 908 00fe FFF7FEFF 		bl	__aeabi_fcmple
 909 0102 031C     		mov	r3, r0
 910 0104 002B     		cmp	r3, #0
 911 0106 03D0     		beq	.L71
 169:.\DSP_Class.c ****             soilHumInRH = 1;
 912              		.loc 1 169 0
 913 0108 FE23     		mov	r3, #254
 914 010a 9B05     		lsl	r3, r3, #22
 915 010c 3B63     		str	r3, [r7, #48]
 916 010e 08E0     		b	.L66
 917              	.L71:
 170:.\DSP_Class.c ****         }
 171:.\DSP_Class.c ****         else if(soilHumInRH > 100){
 918              		.loc 1 171 0
 919 0110 386B     		ldr	r0, [r7, #48]
 920 0112 0F49     		ldr	r1, .L72+4
 921 0114 FFF7FEFF 		bl	__aeabi_fcmpgt
 922 0118 031C     		mov	r3, r0
 923 011a 002B     		cmp	r3, #0
 924 011c 01D0     		beq	.L66
 172:.\DSP_Class.c ****             soilHumInRH = 100;
 925              		.loc 1 172 0
 926 011e 0C4B     		ldr	r3, .L72+4
 927 0120 3B63     		str	r3, [r7, #48]
 928              	.L66:
 173:.\DSP_Class.c ****         }
 174:.\DSP_Class.c ****         soilHum[index] = (uint8)soilHumInRH;
 929              		.loc 1 174 0 discriminator 1
 930 0122 3B1C     		mov	r3, r7
 931 0124 2733     		add	r3, r3, #39
 932 0126 1C78     		ldrb	r4, [r3]
 933 0128 386B     		ldr	r0, [r7, #48]
 934 012a FFF7FEFF 		bl	__aeabi_f2uiz
 935 012e 031C     		mov	r3, r0
 936 0130 DAB2     		uxtb	r2, r3
 937 0132 084B     		ldr	r3, .L72+8
 938 0134 1A55     		strb	r2, [r3, r4]
 939              	.LBE10:
 940 0136 05E0     		b	.L58
 941              	.L63:
 175:.\DSP_Class.c ****     }
 176:.\DSP_Class.c ****     else{
 177:.\DSP_Class.c ****     soilHum[index] = 0;
 942              		.loc 1 177 0
 943 0138 3B1C     		mov	r3, r7
 944 013a 2733     		add	r3, r3, #39
 945 013c 1B78     		ldrb	r3, [r3]
 946 013e 054A     		ldr	r2, .L72+8
 947 0140 0021     		mov	r1, #0
 948 0142 D154     		strb	r1, [r2, r3]
 949              	.L58:
 178:.\DSP_Class.c ****     }
 179:.\DSP_Class.c **** }
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 21


 950              		.loc 1 179 0
 951 0144 BD46     		mov	sp, r7
 952 0146 13B0     		add	sp, sp, #76
 953              		@ sp needed
 954 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 955              	.L73:
 956 014a C046     		.align	2
 957              	.L72:
 958 014c 00000000 		.word	soilHumArray
 959 0150 0000C842 		.word	1120403456
 960 0154 00000000 		.word	soilHum
 961              		.cfi_endproc
 962              	.LFE40:
 963              		.size	avgSoilHum, .-avgSoilHum
 964              		.global	__aeabi_f2iz
 965              		.global	__aeabi_idiv
 966              		.section	.text.avgLight,"ax",%progbits
 967              		.align	2
 968              		.global	avgLight
 969              		.code	16
 970              		.thumb_func
 971              		.type	avgLight, %function
 972              	avgLight:
 973              	.LFB41:
 180:.\DSP_Class.c **** 
 181:.\DSP_Class.c **** void avgLight(void){
 974              		.loc 1 181 0
 975              		.cfi_startproc
 976 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 977              		.cfi_def_cfa_offset 20
 978              		.cfi_offset 4, -20
 979              		.cfi_offset 5, -16
 980              		.cfi_offset 6, -12
 981              		.cfi_offset 7, -8
 982              		.cfi_offset 14, -4
 983 0002 89B0     		sub	sp, sp, #36
 984              		.cfi_def_cfa_offset 56
 985 0004 00AF     		add	r7, sp, #0
 986              		.cfi_def_cfa_register 7
 182:.\DSP_Class.c ****     uint8 skip = 0;
 987              		.loc 1 182 0
 988 0006 381C     		mov	r0, r7
 989 0008 1F30     		add	r0, r0, #31
 990 000a 0025     		mov	r5, #0
 991 000c 0570     		strb	r5, [r0]
 183:.\DSP_Class.c ****     int64 total = 0;
 992              		.loc 1 183 0
 993 000e 0025     		mov	r5, #0
 994 0010 0026     		mov	r6, #0
 995 0012 3D61     		str	r5, [r7, #16]
 996 0014 7E61     		str	r6, [r7, #20]
 997              	.LBB11:
 184:.\DSP_Class.c ****     {
 185:.\DSP_Class.c ****         uint8 i;
 186:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 998              		.loc 1 186 0
 999 0016 381C     		mov	r0, r7
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 22


 1000 0018 0F30     		add	r0, r0, #15
 1001 001a 0025     		mov	r5, #0
 1002 001c 0570     		strb	r5, [r0]
 1003 001e 25E0     		b	.L75
 1004              	.L78:
 187:.\DSP_Class.c ****             if(lightArray[i]>=0){
 1005              		.loc 1 187 0
 1006 0020 381C     		mov	r0, r7
 1007 0022 0F30     		add	r0, r0, #15
 1008 0024 0578     		ldrb	r5, [r0]
 1009 0026 3C48     		ldr	r0, .L83
 1010 0028 AD00     		lsl	r5, r5, #2
 1011 002a 2858     		ldr	r0, [r5, r0]
 1012 002c 0028     		cmp	r0, #0
 1013 002e 0FDB     		blt	.L76
 188:.\DSP_Class.c ****                 total += lightArray[i];
 1014              		.loc 1 188 0
 1015 0030 381C     		mov	r0, r7
 1016 0032 0F30     		add	r0, r0, #15
 1017 0034 0578     		ldrb	r5, [r0]
 1018 0036 3848     		ldr	r0, .L83
 1019 0038 AD00     		lsl	r5, r5, #2
 1020 003a 2858     		ldr	r0, [r5, r0]
 1021 003c 011C     		mov	r1, r0
 1022 003e C017     		asr	r0, r0, #31
 1023 0040 021C     		mov	r2, r0
 1024 0042 3D69     		ldr	r5, [r7, #16]
 1025 0044 7E69     		ldr	r6, [r7, #20]
 1026 0046 6D18     		add	r5, r5, r1
 1027 0048 5641     		adc	r6, r6, r2
 1028 004a 3D61     		str	r5, [r7, #16]
 1029 004c 7E61     		str	r6, [r7, #20]
 1030 004e 06E0     		b	.L77
 1031              	.L76:
 189:.\DSP_Class.c ****             }
 190:.\DSP_Class.c ****             else{
 191:.\DSP_Class.c ****                 skip++;
 1032              		.loc 1 191 0
 1033 0050 381C     		mov	r0, r7
 1034 0052 1F30     		add	r0, r0, #31
 1035 0054 0578     		ldrb	r5, [r0]
 1036 0056 381C     		mov	r0, r7
 1037 0058 1F30     		add	r0, r0, #31
 1038 005a 0135     		add	r5, r5, #1
 1039 005c 0570     		strb	r5, [r0]
 1040              	.L77:
 186:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 1041              		.loc 1 186 0
 1042 005e 381C     		mov	r0, r7
 1043 0060 0F30     		add	r0, r0, #15
 1044 0062 0578     		ldrb	r5, [r0]
 1045 0064 381C     		mov	r0, r7
 1046 0066 0F30     		add	r0, r0, #15
 1047 0068 0135     		add	r5, r5, #1
 1048 006a 0570     		strb	r5, [r0]
 1049              	.L75:
 186:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 23


 1050              		.loc 1 186 0 is_stmt 0 discriminator 1
 1051 006c 381C     		mov	r0, r7
 1052 006e 0F30     		add	r0, r0, #15
 1053 0070 0078     		ldrb	r0, [r0]
 1054 0072 0928     		cmp	r0, #9
 1055 0074 D4D9     		bls	.L78
 1056              	.LBE11:
 192:.\DSP_Class.c ****             }
 193:.\DSP_Class.c ****         }
 194:.\DSP_Class.c ****     }
 195:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 196:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 1057              		.loc 1 196 0 is_stmt 1
 1058 0076 3A1C     		mov	r2, r7
 1059 0078 1F32     		add	r2, r2, #31
 1060 007a 1278     		ldrb	r2, [r2]
 1061 007c 0A21     		mov	r1, #10
 1062 007e 8A1A     		sub	r2, r1, r2
 1063 0080 092A     		cmp	r2, #9
 1064 0082 43DD     		ble	.L79
 1065              	.LBB12:
 197:.\DSP_Class.c ****         float avg = total/(ARRAYSIZE-skip);                              // Calculate the average v
 1066              		.loc 1 197 0
 1067 0084 3A1C     		mov	r2, r7
 1068 0086 1F32     		add	r2, r2, #31
 1069 0088 1278     		ldrb	r2, [r2]
 1070 008a 0A21     		mov	r1, #10
 1071 008c 8A1A     		sub	r2, r1, r2
 1072 008e 131C     		mov	r3, r2
 1073 0090 D217     		asr	r2, r2, #31
 1074 0092 141C     		mov	r4, r2
 1075 0094 3869     		ldr	r0, [r7, #16]
 1076 0096 7969     		ldr	r1, [r7, #20]
 1077 0098 1A1C     		mov	r2, r3
 1078 009a 231C     		mov	r3, r4
 1079 009c FFF7FEFF 		bl	__aeabi_ldivmod
 1080 00a0 031C     		mov	r3, r0
 1081 00a2 0C1C     		mov	r4, r1
 1082 00a4 181C     		mov	r0, r3
 1083 00a6 211C     		mov	r1, r4
 1084 00a8 FFF7FEFF 		bl	__aeabi_l2f
 1085 00ac 031C     		add	r3, r0, #0
 1086 00ae BB60     		str	r3, [r7, #8]
 198:.\DSP_Class.c ****         
 199:.\DSP_Class.c ****         // Conversion to lux formula from datasheet
 200:.\DSP_Class.c ****         // Range = 128000, R_EXT = 100kOhm, n = 7 and DATA max 128
 201:.\DSP_Class.c ****         int32 lightInLux = ((128000*(100/100))/(128))*avg;
 1087              		.loc 1 201 0
 1088 00b0 B868     		ldr	r0, [r7, #8]
 1089 00b2 1A49     		ldr	r1, .L83+4
 1090 00b4 FFF7FEFF 		bl	__aeabi_fmul
 1091 00b8 031C     		add	r3, r0, #0
 1092 00ba 181C     		add	r0, r3, #0
 1093 00bc FFF7FEFF 		bl	__aeabi_f2iz
 1094 00c0 031C     		mov	r3, r0
 1095 00c2 7B60     		str	r3, [r7, #4]
 202:.\DSP_Class.c ****         
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 24


 203:.\DSP_Class.c ****         uint8 lightInUartVarSteps = lightInLux/1000;     // Conversion to UART ready value, 1 = 100
 1096              		.loc 1 203 0
 1097 00c4 7B68     		ldr	r3, [r7, #4]
 1098 00c6 181C     		mov	r0, r3
 1099 00c8 FA23     		mov	r3, #250
 1100 00ca 9900     		lsl	r1, r3, #2
 1101 00cc FFF7FEFF 		bl	__aeabi_idiv
 1102 00d0 031C     		mov	r3, r0
 1103 00d2 1A1C     		mov	r2, r3
 1104 00d4 3B1C     		mov	r3, r7
 1105 00d6 0E33     		add	r3, r3, #14
 1106 00d8 1A70     		strb	r2, [r3]
 204:.\DSP_Class.c ****         
 205:.\DSP_Class.c ****         // lightInLux is limited to 1 and 100 RH
 206:.\DSP_Class.c ****         if(lightInUartVarSteps <= 0){
 1107              		.loc 1 206 0
 1108 00da 3B1C     		mov	r3, r7
 1109 00dc 0E33     		add	r3, r3, #14
 1110 00de 1B78     		ldrb	r3, [r3]
 1111 00e0 002B     		cmp	r3, #0
 1112 00e2 04D1     		bne	.L80
 207:.\DSP_Class.c ****             lightInUartVarSteps = 1;
 1113              		.loc 1 207 0
 1114 00e4 3B1C     		mov	r3, r7
 1115 00e6 0E33     		add	r3, r3, #14
 1116 00e8 0122     		mov	r2, #1
 1117 00ea 1A70     		strb	r2, [r3]
 1118 00ec 08E0     		b	.L81
 1119              	.L80:
 208:.\DSP_Class.c ****         }
 209:.\DSP_Class.c ****         else if(lightInUartVarSteps > 100){
 1120              		.loc 1 209 0
 1121 00ee 3B1C     		mov	r3, r7
 1122 00f0 0E33     		add	r3, r3, #14
 1123 00f2 1B78     		ldrb	r3, [r3]
 1124 00f4 642B     		cmp	r3, #100
 1125 00f6 03D9     		bls	.L81
 210:.\DSP_Class.c ****             lightInUartVarSteps = 100;
 1126              		.loc 1 210 0
 1127 00f8 3B1C     		mov	r3, r7
 1128 00fa 0E33     		add	r3, r3, #14
 1129 00fc 6422     		mov	r2, #100
 1130 00fe 1A70     		strb	r2, [r3]
 1131              	.L81:
 211:.\DSP_Class.c ****         }
 212:.\DSP_Class.c ****         light = lightInUartVarSteps;
 1132              		.loc 1 212 0 discriminator 1
 1133 0100 074B     		ldr	r3, .L83+8
 1134 0102 3A1C     		mov	r2, r7
 1135 0104 0E32     		add	r2, r2, #14
 1136 0106 1278     		ldrb	r2, [r2]
 1137 0108 1A70     		strb	r2, [r3]
 1138              	.LBE12:
 1139 010a 02E0     		b	.L74
 1140              	.L79:
 213:.\DSP_Class.c ****     }
 214:.\DSP_Class.c ****     else{
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 25


 215:.\DSP_Class.c ****     light = 0;
 1141              		.loc 1 215 0
 1142 010c 044B     		ldr	r3, .L83+8
 1143 010e 0022     		mov	r2, #0
 1144 0110 1A70     		strb	r2, [r3]
 1145              	.L74:
 216:.\DSP_Class.c ****     }
 217:.\DSP_Class.c ****   }
 1146              		.loc 1 217 0
 1147 0112 BD46     		mov	sp, r7
 1148 0114 09B0     		add	sp, sp, #36
 1149              		@ sp needed
 1150 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1151              	.L84:
 1152              		.align	2
 1153              	.L83:
 1154 0118 00000000 		.word	lightArray
 1155 011c 00007A44 		.word	1148846080
 1156 0120 00000000 		.word	light
 1157              		.cfi_endproc
 1158              	.LFE41:
 1159              		.size	avgLight, .-avgLight
 1160              		.section	.text.inputTemp,"ax",%progbits
 1161              		.align	2
 1162              		.global	inputTemp
 1163              		.code	16
 1164              		.thumb_func
 1165              		.type	inputTemp, %function
 1166              	inputTemp:
 1167              	.LFB42:
 218:.\DSP_Class.c **** 
 219:.\DSP_Class.c **** void inputTemp(int32* temp){
 1168              		.loc 1 219 0
 1169              		.cfi_startproc
 1170 0000 80B5     		push	{r7, lr}
 1171              		.cfi_def_cfa_offset 8
 1172              		.cfi_offset 7, -8
 1173              		.cfi_offset 14, -4
 1174 0002 82B0     		sub	sp, sp, #8
 1175              		.cfi_def_cfa_offset 16
 1176 0004 00AF     		add	r7, sp, #0
 1177              		.cfi_def_cfa_register 7
 1178 0006 7860     		str	r0, [r7, #4]
 220:.\DSP_Class.c ****     *tempArrayPtr = *temp;      // The input value is written to the array
 1179              		.loc 1 220 0
 1180 0008 0B4B     		ldr	r3, .L87
 1181 000a 1B68     		ldr	r3, [r3]
 1182 000c 7A68     		ldr	r2, [r7, #4]
 1183 000e 1268     		ldr	r2, [r2]
 1184 0010 1A60     		str	r2, [r3]
 221:.\DSP_Class.c ****     tempArrayPtr++;             // The pointer is moved to the next place in array
 1185              		.loc 1 221 0
 1186 0012 094B     		ldr	r3, .L87
 1187 0014 1B68     		ldr	r3, [r3]
 1188 0016 1A1D     		add	r2, r3, #4
 1189 0018 074B     		ldr	r3, .L87
 1190 001a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 26


 222:.\DSP_Class.c ****     if(tempArrayPtr > &tempArray[ARRAYSIZE-1]){
 1191              		.loc 1 222 0
 1192 001c 064B     		ldr	r3, .L87
 1193 001e 1A68     		ldr	r2, [r3]
 1194 0020 064B     		ldr	r3, .L87+4
 1195 0022 9A42     		cmp	r2, r3
 1196 0024 02D9     		bls	.L86
 223:.\DSP_Class.c ****         tempArrayPtr = &tempArray[0];   // If the pointer is pointing past the end of the array it'
 1197              		.loc 1 223 0
 1198 0026 044B     		ldr	r3, .L87
 1199 0028 054A     		ldr	r2, .L87+8
 1200 002a 1A60     		str	r2, [r3]
 1201              	.L86:
 224:.\DSP_Class.c ****     }
 225:.\DSP_Class.c ****     
 226:.\DSP_Class.c ****     avgTemp();      // The average value is calculated and onverted into temp(globel) 
 1202              		.loc 1 226 0
 1203 002c FFF7FEFF 		bl	avgTemp
 227:.\DSP_Class.c **** }
 1204              		.loc 1 227 0
 1205 0030 BD46     		mov	sp, r7
 1206 0032 02B0     		add	sp, sp, #8
 1207              		@ sp needed
 1208 0034 80BD     		pop	{r7, pc}
 1209              	.L88:
 1210 0036 C046     		.align	2
 1211              	.L87:
 1212 0038 00000000 		.word	tempArrayPtr
 1213 003c 24000000 		.word	tempArray+36
 1214 0040 00000000 		.word	tempArray
 1215              		.cfi_endproc
 1216              	.LFE42:
 1217              		.size	inputTemp, .-inputTemp
 1218              		.section	.text.inputHum,"ax",%progbits
 1219              		.align	2
 1220              		.global	inputHum
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	inputHum, %function
 1224              	inputHum:
 1225              	.LFB43:
 228:.\DSP_Class.c **** 
 229:.\DSP_Class.c **** void inputHum(int32* hum){
 1226              		.loc 1 229 0
 1227              		.cfi_startproc
 1228 0000 80B5     		push	{r7, lr}
 1229              		.cfi_def_cfa_offset 8
 1230              		.cfi_offset 7, -8
 1231              		.cfi_offset 14, -4
 1232 0002 82B0     		sub	sp, sp, #8
 1233              		.cfi_def_cfa_offset 16
 1234 0004 00AF     		add	r7, sp, #0
 1235              		.cfi_def_cfa_register 7
 1236 0006 7860     		str	r0, [r7, #4]
 230:.\DSP_Class.c ****     *humArrayPtr = *hum;        // The input value is written to the array
 1237              		.loc 1 230 0
 1238 0008 0B4B     		ldr	r3, .L91
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 27


 1239 000a 1B68     		ldr	r3, [r3]
 1240 000c 7A68     		ldr	r2, [r7, #4]
 1241 000e 1268     		ldr	r2, [r2]
 1242 0010 1A60     		str	r2, [r3]
 231:.\DSP_Class.c ****     humArrayPtr++;              // The pointer is moved to the next place in array
 1243              		.loc 1 231 0
 1244 0012 094B     		ldr	r3, .L91
 1245 0014 1B68     		ldr	r3, [r3]
 1246 0016 1A1D     		add	r2, r3, #4
 1247 0018 074B     		ldr	r3, .L91
 1248 001a 1A60     		str	r2, [r3]
 232:.\DSP_Class.c ****     if(humArrayPtr > &humArray[ARRAYSIZE-1]){
 1249              		.loc 1 232 0
 1250 001c 064B     		ldr	r3, .L91
 1251 001e 1A68     		ldr	r2, [r3]
 1252 0020 064B     		ldr	r3, .L91+4
 1253 0022 9A42     		cmp	r2, r3
 1254 0024 02D9     		bls	.L90
 233:.\DSP_Class.c ****         humArrayPtr = &humArray[0];     // If the pointer is pointing past the end of the array it'
 1255              		.loc 1 233 0
 1256 0026 044B     		ldr	r3, .L91
 1257 0028 054A     		ldr	r2, .L91+8
 1258 002a 1A60     		str	r2, [r3]
 1259              	.L90:
 234:.\DSP_Class.c ****     }
 235:.\DSP_Class.c ****     
 236:.\DSP_Class.c ****     avgHum();      // The average value is calculated and onverted into hum(globel)
 1260              		.loc 1 236 0
 1261 002c FFF7FEFF 		bl	avgHum
 237:.\DSP_Class.c **** }
 1262              		.loc 1 237 0
 1263 0030 BD46     		mov	sp, r7
 1264 0032 02B0     		add	sp, sp, #8
 1265              		@ sp needed
 1266 0034 80BD     		pop	{r7, pc}
 1267              	.L92:
 1268 0036 C046     		.align	2
 1269              	.L91:
 1270 0038 00000000 		.word	humArrayPtr
 1271 003c 24000000 		.word	humArray+36
 1272 0040 00000000 		.word	humArray
 1273              		.cfi_endproc
 1274              	.LFE43:
 1275              		.size	inputHum, .-inputHum
 1276              		.section	.text.inputSoilHum,"ax",%progbits
 1277              		.align	2
 1278              		.global	inputSoilHum
 1279              		.code	16
 1280              		.thumb_func
 1281              		.type	inputSoilHum, %function
 1282              	inputSoilHum:
 1283              	.LFB44:
 238:.\DSP_Class.c **** 
 239:.\DSP_Class.c **** void inputSoilHum(uint8 index, int16* soilHum){
 1284              		.loc 1 239 0
 1285              		.cfi_startproc
 1286 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 28


 1287              		.cfi_def_cfa_offset 8
 1288              		.cfi_offset 7, -8
 1289              		.cfi_offset 14, -4
 1290 0002 82B0     		sub	sp, sp, #8
 1291              		.cfi_def_cfa_offset 16
 1292 0004 00AF     		add	r7, sp, #0
 1293              		.cfi_def_cfa_register 7
 1294 0006 021C     		mov	r2, r0
 1295 0008 3960     		str	r1, [r7]
 1296 000a FB1D     		add	r3, r7, #7
 1297 000c 1A70     		strb	r2, [r3]
 240:.\DSP_Class.c ****     *soilHumPtr[index] = *soilHum;          // The input value is written to the array
 1298              		.loc 1 240 0
 1299 000e FB1D     		add	r3, r7, #7
 1300 0010 1A78     		ldrb	r2, [r3]
 1301 0012 1A4B     		ldr	r3, .L95
 1302 0014 9200     		lsl	r2, r2, #2
 1303 0016 D358     		ldr	r3, [r2, r3]
 1304 0018 3A68     		ldr	r2, [r7]
 1305 001a 1288     		ldrh	r2, [r2]
 1306 001c 1A80     		strh	r2, [r3]
 241:.\DSP_Class.c ****     soilHumPtr[index]++;                    // The pointer is moved to the next place in array
 1307              		.loc 1 241 0
 1308 001e FB1D     		add	r3, r7, #7
 1309 0020 1B78     		ldrb	r3, [r3]
 1310 0022 164A     		ldr	r2, .L95
 1311 0024 9900     		lsl	r1, r3, #2
 1312 0026 8A58     		ldr	r2, [r1, r2]
 1313 0028 911C     		add	r1, r2, #2
 1314 002a 144A     		ldr	r2, .L95
 1315 002c 9B00     		lsl	r3, r3, #2
 1316 002e 9950     		str	r1, [r3, r2]
 242:.\DSP_Class.c ****     if(soilHumPtr[index] > &soilHumArray[index][ARRAYSIZE-1]){
 1317              		.loc 1 242 0
 1318 0030 FB1D     		add	r3, r7, #7
 1319 0032 1A78     		ldrb	r2, [r3]
 1320 0034 114B     		ldr	r3, .L95
 1321 0036 9200     		lsl	r2, r2, #2
 1322 0038 D158     		ldr	r1, [r2, r3]
 1323 003a FB1D     		add	r3, r7, #7
 1324 003c 1A78     		ldrb	r2, [r3]
 1325 003e 131C     		mov	r3, r2
 1326 0040 9B00     		lsl	r3, r3, #2
 1327 0042 9B18     		add	r3, r3, r2
 1328 0044 9B00     		lsl	r3, r3, #2
 1329 0046 1A1C     		mov	r2, r3
 1330 0048 1232     		add	r2, r2, #18
 1331 004a 0D4B     		ldr	r3, .L95+4
 1332 004c D318     		add	r3, r2, r3
 1333 004e 9942     		cmp	r1, r3
 1334 0050 0CD9     		bls	.L94
 243:.\DSP_Class.c ****         soilHumPtr[index] = &soilHumArray[index][0];            // If the pointer is pointing past 
 1335              		.loc 1 243 0
 1336 0052 FB1D     		add	r3, r7, #7
 1337 0054 1878     		ldrb	r0, [r3]
 1338 0056 FB1D     		add	r3, r7, #7
 1339 0058 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 29


 1340 005a 131C     		mov	r3, r2
 1341 005c 9B00     		lsl	r3, r3, #2
 1342 005e 9B18     		add	r3, r3, r2
 1343 0060 9B00     		lsl	r3, r3, #2
 1344 0062 074A     		ldr	r2, .L95+4
 1345 0064 9918     		add	r1, r3, r2
 1346 0066 054B     		ldr	r3, .L95
 1347 0068 8200     		lsl	r2, r0, #2
 1348 006a D150     		str	r1, [r2, r3]
 1349              	.L94:
 244:.\DSP_Class.c ****     }
 245:.\DSP_Class.c ****     
 246:.\DSP_Class.c ****     avgSoilHum(index);          // The average value is calculated and onverted into soilHum(globel
 1350              		.loc 1 246 0
 1351 006c FB1D     		add	r3, r7, #7
 1352 006e 1B78     		ldrb	r3, [r3]
 1353 0070 181C     		mov	r0, r3
 1354 0072 FFF7FEFF 		bl	avgSoilHum
 247:.\DSP_Class.c **** }
 1355              		.loc 1 247 0
 1356 0076 BD46     		mov	sp, r7
 1357 0078 02B0     		add	sp, sp, #8
 1358              		@ sp needed
 1359 007a 80BD     		pop	{r7, pc}
 1360              	.L96:
 1361              		.align	2
 1362              	.L95:
 1363 007c 00000000 		.word	soilHumPtr
 1364 0080 00000000 		.word	soilHumArray
 1365              		.cfi_endproc
 1366              	.LFE44:
 1367              		.size	inputSoilHum, .-inputSoilHum
 1368              		.section	.text.inputLight,"ax",%progbits
 1369              		.align	2
 1370              		.global	inputLight
 1371              		.code	16
 1372              		.thumb_func
 1373              		.type	inputLight, %function
 1374              	inputLight:
 1375              	.LFB45:
 248:.\DSP_Class.c **** 
 249:.\DSP_Class.c **** void inputLight(int32* light){
 1376              		.loc 1 249 0
 1377              		.cfi_startproc
 1378 0000 80B5     		push	{r7, lr}
 1379              		.cfi_def_cfa_offset 8
 1380              		.cfi_offset 7, -8
 1381              		.cfi_offset 14, -4
 1382 0002 82B0     		sub	sp, sp, #8
 1383              		.cfi_def_cfa_offset 16
 1384 0004 00AF     		add	r7, sp, #0
 1385              		.cfi_def_cfa_register 7
 1386 0006 7860     		str	r0, [r7, #4]
 250:.\DSP_Class.c ****     *lightArrayPtr = *light;        // The input value is written to the array
 1387              		.loc 1 250 0
 1388 0008 0B4B     		ldr	r3, .L99
 1389 000a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 30


 1390 000c 7A68     		ldr	r2, [r7, #4]
 1391 000e 1268     		ldr	r2, [r2]
 1392 0010 1A60     		str	r2, [r3]
 251:.\DSP_Class.c ****     lightArrayPtr++;                // The pointer is moved to the next place in array
 1393              		.loc 1 251 0
 1394 0012 094B     		ldr	r3, .L99
 1395 0014 1B68     		ldr	r3, [r3]
 1396 0016 1A1D     		add	r2, r3, #4
 1397 0018 074B     		ldr	r3, .L99
 1398 001a 1A60     		str	r2, [r3]
 252:.\DSP_Class.c ****     if(lightArrayPtr > &lightArray[ARRAYSIZE-1]){
 1399              		.loc 1 252 0
 1400 001c 064B     		ldr	r3, .L99
 1401 001e 1A68     		ldr	r2, [r3]
 1402 0020 064B     		ldr	r3, .L99+4
 1403 0022 9A42     		cmp	r2, r3
 1404 0024 02D9     		bls	.L98
 253:.\DSP_Class.c ****         lightArrayPtr = &lightArray[0];     // If the pointer is pointing past the end of the array
 1405              		.loc 1 253 0
 1406 0026 044B     		ldr	r3, .L99
 1407 0028 054A     		ldr	r2, .L99+8
 1408 002a 1A60     		str	r2, [r3]
 1409              	.L98:
 254:.\DSP_Class.c ****     }
 255:.\DSP_Class.c ****     
 256:.\DSP_Class.c ****     avgLight();      // The average value is calculated and onverted into hum(globel)
 1410              		.loc 1 256 0
 1411 002c FFF7FEFF 		bl	avgLight
 257:.\DSP_Class.c **** }
 1412              		.loc 1 257 0
 1413 0030 BD46     		mov	sp, r7
 1414 0032 02B0     		add	sp, sp, #8
 1415              		@ sp needed
 1416 0034 80BD     		pop	{r7, pc}
 1417              	.L100:
 1418 0036 C046     		.align	2
 1419              	.L99:
 1420 0038 00000000 		.word	lightArrayPtr
 1421 003c 24000000 		.word	lightArray+36
 1422 0040 00000000 		.word	lightArray
 1423              		.cfi_endproc
 1424              	.LFE45:
 1425              		.size	inputLight, .-inputLight
 1426              		.text
 1427              	.Letext0:
 1428              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 1429              		.section	.debug_info,"",%progbits
 1430              	.Ldebug_info0:
 1431 0000 1E050000 		.4byte	0x51e
 1432 0004 0400     		.2byte	0x4
 1433 0006 00000000 		.4byte	.Ldebug_abbrev0
 1434 000a 04       		.byte	0x4
 1435 000b 01       		.uleb128 0x1
 1436 000c 84000000 		.4byte	.LASF49
 1437 0010 01       		.byte	0x1
 1438 0011 75020000 		.4byte	.LASF50
 1439 0015 B7010000 		.4byte	.LASF51
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 31


 1440 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1441 001d 00000000 		.4byte	0
 1442 0021 00000000 		.4byte	.Ldebug_line0
 1443 0025 02       		.uleb128 0x2
 1444 0026 01       		.byte	0x1
 1445 0027 06       		.byte	0x6
 1446 0028 AA020000 		.4byte	.LASF0
 1447 002c 02       		.uleb128 0x2
 1448 002d 01       		.byte	0x1
 1449 002e 08       		.byte	0x8
 1450 002f 00010000 		.4byte	.LASF1
 1451 0033 02       		.uleb128 0x2
 1452 0034 02       		.byte	0x2
 1453 0035 05       		.byte	0x5
 1454 0036 83020000 		.4byte	.LASF2
 1455 003a 02       		.uleb128 0x2
 1456 003b 02       		.byte	0x2
 1457 003c 07       		.byte	0x7
 1458 003d 3D000000 		.4byte	.LASF3
 1459 0041 02       		.uleb128 0x2
 1460 0042 04       		.byte	0x4
 1461 0043 05       		.byte	0x5
 1462 0044 99020000 		.4byte	.LASF4
 1463 0048 02       		.uleb128 0x2
 1464 0049 04       		.byte	0x4
 1465 004a 07       		.byte	0x7
 1466 004b 18010000 		.4byte	.LASF5
 1467 004f 02       		.uleb128 0x2
 1468 0050 08       		.byte	0x8
 1469 0051 05       		.byte	0x5
 1470 0052 3D020000 		.4byte	.LASF6
 1471 0056 02       		.uleb128 0x2
 1472 0057 08       		.byte	0x8
 1473 0058 07       		.byte	0x7
 1474 0059 A0010000 		.4byte	.LASF7
 1475 005d 03       		.uleb128 0x3
 1476 005e 04       		.byte	0x4
 1477 005f 05       		.byte	0x5
 1478 0060 696E7400 		.ascii	"int\000"
 1479 0064 02       		.uleb128 0x2
 1480 0065 04       		.byte	0x4
 1481 0066 07       		.byte	0x7
 1482 0067 82010000 		.4byte	.LASF8
 1483 006b 04       		.uleb128 0x4
 1484 006c 8D020000 		.4byte	.LASF9
 1485 0070 02       		.byte	0x2
 1486 0071 A1       		.byte	0xa1
 1487 0072 2C000000 		.4byte	0x2c
 1488 0076 04       		.uleb128 0x4
 1489 0077 76010000 		.4byte	.LASF10
 1490 007b 02       		.byte	0x2
 1491 007c A3       		.byte	0xa3
 1492 007d 48000000 		.4byte	0x48
 1493 0081 04       		.uleb128 0x4
 1494 0082 03020000 		.4byte	.LASF11
 1495 0086 02       		.byte	0x2
 1496 0087 A5       		.byte	0xa5
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 32


 1497 0088 33000000 		.4byte	0x33
 1498 008c 04       		.uleb128 0x4
 1499 008d 2E020000 		.4byte	.LASF12
 1500 0091 02       		.byte	0x2
 1501 0092 A6       		.byte	0xa6
 1502 0093 41000000 		.4byte	0x41
 1503 0097 02       		.uleb128 0x2
 1504 0098 04       		.byte	0x4
 1505 0099 04       		.byte	0x4
 1506 009a 7E000000 		.4byte	.LASF13
 1507 009e 02       		.uleb128 0x2
 1508 009f 08       		.byte	0x8
 1509 00a0 04       		.byte	0x4
 1510 00a1 5E010000 		.4byte	.LASF14
 1511 00a5 04       		.uleb128 0x4
 1512 00a6 DA020000 		.4byte	.LASF15
 1513 00aa 02       		.byte	0x2
 1514 00ab AC       		.byte	0xac
 1515 00ac 4F000000 		.4byte	0x4f
 1516 00b0 02       		.uleb128 0x2
 1517 00b1 01       		.byte	0x1
 1518 00b2 08       		.byte	0x8
 1519 00b3 5F020000 		.4byte	.LASF16
 1520 00b7 02       		.uleb128 0x2
 1521 00b8 04       		.byte	0x4
 1522 00b9 07       		.byte	0x7
 1523 00ba 34020000 		.4byte	.LASF17
 1524 00be 05       		.uleb128 0x5
 1525 00bf 56010000 		.4byte	.LASF21
 1526 00c3 01       		.byte	0x1
 1527 00c4 21       		.byte	0x21
 1528 00c5 00000000 		.4byte	.LFB33
 1529 00c9 18010000 		.4byte	.LFE33-.LFB33
 1530 00cd 01       		.uleb128 0x1
 1531 00ce 9C       		.byte	0x9c
 1532 00cf 1A010000 		.4byte	0x11a
 1533 00d3 06       		.uleb128 0x6
 1534 00d4 06000000 		.4byte	.LBB2
 1535 00d8 7A000000 		.4byte	.LBE2-.LBB2
 1536 00dc 03010000 		.4byte	0x103
 1537 00e0 07       		.uleb128 0x7
 1538 00e1 6900     		.ascii	"i\000"
 1539 00e3 01       		.byte	0x1
 1540 00e4 23       		.byte	0x23
 1541 00e5 6B000000 		.4byte	0x6b
 1542 00e9 02       		.uleb128 0x2
 1543 00ea 91       		.byte	0x91
 1544 00eb 77       		.sleb128 -9
 1545 00ec 08       		.uleb128 0x8
 1546 00ed 2A000000 		.4byte	.LBB3
 1547 00f1 36000000 		.4byte	.LBE3-.LBB3
 1548 00f5 07       		.uleb128 0x7
 1549 00f6 6A00     		.ascii	"j\000"
 1550 00f8 01       		.byte	0x1
 1551 00f9 28       		.byte	0x28
 1552 00fa 6B000000 		.4byte	0x6b
 1553 00fe 02       		.uleb128 0x2
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 33


 1554 00ff 91       		.byte	0x91
 1555 0100 76       		.sleb128 -10
 1556 0101 00       		.byte	0
 1557 0102 00       		.byte	0
 1558 0103 08       		.uleb128 0x8
 1559 0104 8C000000 		.4byte	.LBB4
 1560 0108 3E000000 		.4byte	.LBE4-.LBB4
 1561 010c 07       		.uleb128 0x7
 1562 010d 6B00     		.ascii	"k\000"
 1563 010f 01       		.byte	0x1
 1564 0110 34       		.byte	0x34
 1565 0111 6B000000 		.4byte	0x6b
 1566 0115 02       		.uleb128 0x2
 1567 0116 91       		.byte	0x91
 1568 0117 75       		.sleb128 -11
 1569 0118 00       		.byte	0
 1570 0119 00       		.byte	0
 1571 011a 09       		.uleb128 0x9
 1572 011b 2A010000 		.4byte	.LASF18
 1573 011f 01       		.byte	0x1
 1574 0120 40       		.byte	0x40
 1575 0121 6B000000 		.4byte	0x6b
 1576 0125 00000000 		.4byte	.LFB34
 1577 0129 14000000 		.4byte	.LFE34-.LFB34
 1578 012d 01       		.uleb128 0x1
 1579 012e 9C       		.byte	0x9c
 1580 012f 09       		.uleb128 0x9
 1581 0130 16020000 		.4byte	.LASF19
 1582 0134 01       		.byte	0x1
 1583 0135 44       		.byte	0x44
 1584 0136 6B000000 		.4byte	0x6b
 1585 013a 00000000 		.4byte	.LFB35
 1586 013e 14000000 		.4byte	.LFE35-.LFB35
 1587 0142 01       		.uleb128 0x1
 1588 0143 9C       		.byte	0x9c
 1589 0144 0A       		.uleb128 0xa
 1590 0145 3E010000 		.4byte	.LASF52
 1591 0149 01       		.byte	0x1
 1592 014a 48       		.byte	0x48
 1593 014b 6B000000 		.4byte	0x6b
 1594 014f 00000000 		.4byte	.LFB36
 1595 0153 20000000 		.4byte	.LFE36-.LFB36
 1596 0157 01       		.uleb128 0x1
 1597 0158 9C       		.byte	0x9c
 1598 0159 6C010000 		.4byte	0x16c
 1599 015d 0B       		.uleb128 0xb
 1600 015e 6F020000 		.4byte	.LASF29
 1601 0162 01       		.byte	0x1
 1602 0163 48       		.byte	0x48
 1603 0164 6B000000 		.4byte	0x6b
 1604 0168 02       		.uleb128 0x2
 1605 0169 91       		.byte	0x91
 1606 016a 77       		.sleb128 -9
 1607 016b 00       		.byte	0
 1608 016c 09       		.uleb128 0x9
 1609 016d 21020000 		.4byte	.LASF20
 1610 0171 01       		.byte	0x1
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 34


 1611 0172 4C       		.byte	0x4c
 1612 0173 6B000000 		.4byte	0x6b
 1613 0177 00000000 		.4byte	.LFB37
 1614 017b 14000000 		.4byte	.LFE37-.LFB37
 1615 017f 01       		.uleb128 0x1
 1616 0180 9C       		.byte	0x9c
 1617 0181 0C       		.uleb128 0xc
 1618 0182 A2020000 		.4byte	.LASF22
 1619 0186 01       		.byte	0x1
 1620 0187 50       		.byte	0x50
 1621 0188 00000000 		.4byte	.LFB38
 1622 018c 50010000 		.4byte	.LFE38-.LFB38
 1623 0190 01       		.uleb128 0x1
 1624 0191 9C       		.byte	0x9c
 1625 0192 F3010000 		.4byte	0x1f3
 1626 0196 0D       		.uleb128 0xd
 1627 0197 7D010000 		.4byte	.LASF23
 1628 019b 01       		.byte	0x1
 1629 019c 51       		.byte	0x51
 1630 019d 6B000000 		.4byte	0x6b
 1631 01a1 02       		.uleb128 0x2
 1632 01a2 91       		.byte	0x91
 1633 01a3 67       		.sleb128 -25
 1634 01a4 0D       		.uleb128 0xd
 1635 01a5 93020000 		.4byte	.LASF24
 1636 01a9 01       		.byte	0x1
 1637 01aa 52       		.byte	0x52
 1638 01ab A5000000 		.4byte	0xa5
 1639 01af 02       		.uleb128 0x2
 1640 01b0 91       		.byte	0x91
 1641 01b1 58       		.sleb128 -40
 1642 01b2 06       		.uleb128 0x6
 1643 01b3 16000000 		.4byte	.LBB5
 1644 01b7 60000000 		.4byte	.LBE5-.LBB5
 1645 01bb CC010000 		.4byte	0x1cc
 1646 01bf 07       		.uleb128 0x7
 1647 01c0 6900     		.ascii	"i\000"
 1648 01c2 01       		.byte	0x1
 1649 01c3 54       		.byte	0x54
 1650 01c4 6B000000 		.4byte	0x6b
 1651 01c8 02       		.uleb128 0x2
 1652 01c9 91       		.byte	0x91
 1653 01ca 57       		.sleb128 -41
 1654 01cb 00       		.byte	0
 1655 01cc 08       		.uleb128 0x8
 1656 01cd 84000000 		.4byte	.LBB6
 1657 01d1 9E000000 		.4byte	.LBE6-.LBB6
 1658 01d5 07       		.uleb128 0x7
 1659 01d6 61766700 		.ascii	"avg\000"
 1660 01da 01       		.byte	0x1
 1661 01db 60       		.byte	0x60
 1662 01dc 97000000 		.4byte	0x97
 1663 01e0 02       		.uleb128 0x2
 1664 01e1 91       		.byte	0x91
 1665 01e2 4C       		.sleb128 -52
 1666 01e3 0D       		.uleb128 0xd
 1667 01e4 00000000 		.4byte	.LASF25
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 35


 1668 01e8 01       		.byte	0x1
 1669 01e9 61       		.byte	0x61
 1670 01ea 97000000 		.4byte	0x97
 1671 01ee 02       		.uleb128 0x2
 1672 01ef 91       		.byte	0x91
 1673 01f0 50       		.sleb128 -48
 1674 01f1 00       		.byte	0
 1675 01f2 00       		.byte	0
 1676 01f3 0C       		.uleb128 0xc
 1677 01f4 2A000000 		.4byte	.LASF26
 1678 01f8 01       		.byte	0x1
 1679 01f9 73       		.byte	0x73
 1680 01fa 00000000 		.4byte	.LFB39
 1681 01fe 1C010000 		.4byte	.LFE39-.LFB39
 1682 0202 01       		.uleb128 0x1
 1683 0203 9C       		.byte	0x9c
 1684 0204 65020000 		.4byte	0x265
 1685 0208 0D       		.uleb128 0xd
 1686 0209 7D010000 		.4byte	.LASF23
 1687 020d 01       		.byte	0x1
 1688 020e 74       		.byte	0x74
 1689 020f 6B000000 		.4byte	0x6b
 1690 0213 02       		.uleb128 0x2
 1691 0214 91       		.byte	0x91
 1692 0215 67       		.sleb128 -25
 1693 0216 0D       		.uleb128 0xd
 1694 0217 93020000 		.4byte	.LASF24
 1695 021b 01       		.byte	0x1
 1696 021c 75       		.byte	0x75
 1697 021d A5000000 		.4byte	0xa5
 1698 0221 02       		.uleb128 0x2
 1699 0222 91       		.byte	0x91
 1700 0223 58       		.sleb128 -40
 1701 0224 06       		.uleb128 0x6
 1702 0225 16000000 		.4byte	.LBB7
 1703 0229 60000000 		.4byte	.LBE7-.LBB7
 1704 022d 3E020000 		.4byte	0x23e
 1705 0231 07       		.uleb128 0x7
 1706 0232 6900     		.ascii	"i\000"
 1707 0234 01       		.byte	0x1
 1708 0235 77       		.byte	0x77
 1709 0236 6B000000 		.4byte	0x6b
 1710 023a 02       		.uleb128 0x2
 1711 023b 91       		.byte	0x91
 1712 023c 57       		.sleb128 -41
 1713 023d 00       		.byte	0
 1714 023e 08       		.uleb128 0x8
 1715 023f 84000000 		.4byte	.LBB8
 1716 0243 78000000 		.4byte	.LBE8-.LBB8
 1717 0247 07       		.uleb128 0x7
 1718 0248 61766700 		.ascii	"avg\000"
 1719 024c 01       		.byte	0x1
 1720 024d 83       		.byte	0x83
 1721 024e 97000000 		.4byte	0x97
 1722 0252 02       		.uleb128 0x2
 1723 0253 91       		.byte	0x91
 1724 0254 4C       		.sleb128 -52
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 36


 1725 0255 0D       		.uleb128 0xd
 1726 0256 36010000 		.4byte	.LASF27
 1727 025a 01       		.byte	0x1
 1728 025b 84       		.byte	0x84
 1729 025c 97000000 		.4byte	0x97
 1730 0260 02       		.uleb128 0x2
 1731 0261 91       		.byte	0x91
 1732 0262 50       		.sleb128 -48
 1733 0263 00       		.byte	0
 1734 0264 00       		.byte	0
 1735 0265 0C       		.uleb128 0xc
 1736 0266 64020000 		.4byte	.LASF28
 1737 026a 01       		.byte	0x1
 1738 026b 94       		.byte	0x94
 1739 026c 00000000 		.4byte	.LFB40
 1740 0270 58010000 		.4byte	.LFE40-.LFB40
 1741 0274 01       		.uleb128 0x1
 1742 0275 9C       		.byte	0x9c
 1743 0276 E5020000 		.4byte	0x2e5
 1744 027a 0B       		.uleb128 0xb
 1745 027b 6F020000 		.4byte	.LASF29
 1746 027f 01       		.byte	0x1
 1747 0280 94       		.byte	0x94
 1748 0281 6B000000 		.4byte	0x6b
 1749 0285 02       		.uleb128 0x2
 1750 0286 91       		.byte	0x91
 1751 0287 47       		.sleb128 -57
 1752 0288 0D       		.uleb128 0xd
 1753 0289 7D010000 		.4byte	.LASF23
 1754 028d 01       		.byte	0x1
 1755 028e 95       		.byte	0x95
 1756 028f 6B000000 		.4byte	0x6b
 1757 0293 02       		.uleb128 0x2
 1758 0294 91       		.byte	0x91
 1759 0295 67       		.sleb128 -25
 1760 0296 0D       		.uleb128 0xd
 1761 0297 93020000 		.4byte	.LASF24
 1762 029b 01       		.byte	0x1
 1763 029c 96       		.byte	0x96
 1764 029d A5000000 		.4byte	0xa5
 1765 02a1 02       		.uleb128 0x2
 1766 02a2 91       		.byte	0x91
 1767 02a3 58       		.sleb128 -40
 1768 02a4 06       		.uleb128 0x6
 1769 02a5 24000000 		.4byte	.LBB9
 1770 02a9 98000000 		.4byte	.LBE9-.LBB9
 1771 02ad BE020000 		.4byte	0x2be
 1772 02b1 07       		.uleb128 0x7
 1773 02b2 6900     		.ascii	"i\000"
 1774 02b4 01       		.byte	0x1
 1775 02b5 98       		.byte	0x98
 1776 02b6 6B000000 		.4byte	0x6b
 1777 02ba 02       		.uleb128 0x2
 1778 02bb 91       		.byte	0x91
 1779 02bc 57       		.sleb128 -41
 1780 02bd 00       		.byte	0
 1781 02be 08       		.uleb128 0x8
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 37


 1782 02bf CA000000 		.4byte	.LBB10
 1783 02c3 6C000000 		.4byte	.LBE10-.LBB10
 1784 02c7 07       		.uleb128 0x7
 1785 02c8 61766700 		.ascii	"avg\000"
 1786 02cc 01       		.byte	0x1
 1787 02cd A4       		.byte	0xa4
 1788 02ce 97000000 		.4byte	0x97
 1789 02d2 02       		.uleb128 0x2
 1790 02d3 91       		.byte	0x91
 1791 02d4 4C       		.sleb128 -52
 1792 02d5 0D       		.uleb128 0xd
 1793 02d6 94010000 		.4byte	.LASF30
 1794 02da 01       		.byte	0x1
 1795 02db A5       		.byte	0xa5
 1796 02dc 97000000 		.4byte	0x97
 1797 02e0 02       		.uleb128 0x2
 1798 02e1 91       		.byte	0x91
 1799 02e2 50       		.sleb128 -48
 1800 02e3 00       		.byte	0
 1801 02e4 00       		.byte	0
 1802 02e5 0C       		.uleb128 0xc
 1803 02e6 4D010000 		.4byte	.LASF31
 1804 02ea 01       		.byte	0x1
 1805 02eb B5       		.byte	0xb5
 1806 02ec 00000000 		.4byte	.LFB41
 1807 02f0 24010000 		.4byte	.LFE41-.LFB41
 1808 02f4 01       		.uleb128 0x1
 1809 02f5 9C       		.byte	0x9c
 1810 02f6 65030000 		.4byte	0x365
 1811 02fa 0D       		.uleb128 0xd
 1812 02fb 7D010000 		.4byte	.LASF23
 1813 02ff 01       		.byte	0x1
 1814 0300 B6       		.byte	0xb6
 1815 0301 6B000000 		.4byte	0x6b
 1816 0305 02       		.uleb128 0x2
 1817 0306 91       		.byte	0x91
 1818 0307 67       		.sleb128 -25
 1819 0308 0D       		.uleb128 0xd
 1820 0309 93020000 		.4byte	.LASF24
 1821 030d 01       		.byte	0x1
 1822 030e B7       		.byte	0xb7
 1823 030f A5000000 		.4byte	0xa5
 1824 0313 02       		.uleb128 0x2
 1825 0314 91       		.byte	0x91
 1826 0315 58       		.sleb128 -40
 1827 0316 06       		.uleb128 0x6
 1828 0317 16000000 		.4byte	.LBB11
 1829 031b 60000000 		.4byte	.LBE11-.LBB11
 1830 031f 30030000 		.4byte	0x330
 1831 0323 07       		.uleb128 0x7
 1832 0324 6900     		.ascii	"i\000"
 1833 0326 01       		.byte	0x1
 1834 0327 B9       		.byte	0xb9
 1835 0328 6B000000 		.4byte	0x6b
 1836 032c 02       		.uleb128 0x2
 1837 032d 91       		.byte	0x91
 1838 032e 57       		.sleb128 -41
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 38


 1839 032f 00       		.byte	0
 1840 0330 08       		.uleb128 0x8
 1841 0331 84000000 		.4byte	.LBB12
 1842 0335 86000000 		.4byte	.LBE12-.LBB12
 1843 0339 07       		.uleb128 0x7
 1844 033a 61766700 		.ascii	"avg\000"
 1845 033e 01       		.byte	0x1
 1846 033f C5       		.byte	0xc5
 1847 0340 97000000 		.4byte	0x97
 1848 0344 02       		.uleb128 0x2
 1849 0345 91       		.byte	0x91
 1850 0346 50       		.sleb128 -48
 1851 0347 0D       		.uleb128 0xd
 1852 0348 68000000 		.4byte	.LASF32
 1853 034c 01       		.byte	0x1
 1854 034d C9       		.byte	0xc9
 1855 034e 8C000000 		.4byte	0x8c
 1856 0352 02       		.uleb128 0x2
 1857 0353 91       		.byte	0x91
 1858 0354 4C       		.sleb128 -52
 1859 0355 0D       		.uleb128 0xd
 1860 0356 4B020000 		.4byte	.LASF33
 1861 035a 01       		.byte	0x1
 1862 035b CB       		.byte	0xcb
 1863 035c 6B000000 		.4byte	0x6b
 1864 0360 02       		.uleb128 0x2
 1865 0361 91       		.byte	0x91
 1866 0362 56       		.sleb128 -42
 1867 0363 00       		.byte	0
 1868 0364 00       		.byte	0
 1869 0365 0C       		.uleb128 0xc
 1870 0366 15000000 		.4byte	.LASF34
 1871 036a 01       		.byte	0x1
 1872 036b DB       		.byte	0xdb
 1873 036c 00000000 		.4byte	.LFB42
 1874 0370 44000000 		.4byte	.LFE42-.LFB42
 1875 0374 01       		.uleb128 0x1
 1876 0375 9C       		.byte	0x9c
 1877 0376 89030000 		.4byte	0x389
 1878 037a 0B       		.uleb128 0xb
 1879 037b 8F010000 		.4byte	.LASF35
 1880 037f 01       		.byte	0x1
 1881 0380 DB       		.byte	0xdb
 1882 0381 89030000 		.4byte	0x389
 1883 0385 02       		.uleb128 0x2
 1884 0386 91       		.byte	0x91
 1885 0387 74       		.sleb128 -12
 1886 0388 00       		.byte	0
 1887 0389 0E       		.uleb128 0xe
 1888 038a 04       		.byte	0x4
 1889 038b 8C000000 		.4byte	0x8c
 1890 038f 0C       		.uleb128 0xc
 1891 0390 6D010000 		.4byte	.LASF36
 1892 0394 01       		.byte	0x1
 1893 0395 E5       		.byte	0xe5
 1894 0396 00000000 		.4byte	.LFB43
 1895 039a 44000000 		.4byte	.LFE43-.LFB43
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 39


 1896 039e 01       		.uleb128 0x1
 1897 039f 9C       		.byte	0x9c
 1898 03a0 B3030000 		.4byte	0x3b3
 1899 03a4 0F       		.uleb128 0xf
 1900 03a5 68756D00 		.ascii	"hum\000"
 1901 03a9 01       		.byte	0x1
 1902 03aa E5       		.byte	0xe5
 1903 03ab 89030000 		.4byte	0x389
 1904 03af 02       		.uleb128 0x2
 1905 03b0 91       		.byte	0x91
 1906 03b1 74       		.sleb128 -12
 1907 03b2 00       		.byte	0
 1908 03b3 0C       		.uleb128 0xc
 1909 03b4 5B000000 		.4byte	.LASF37
 1910 03b8 01       		.byte	0x1
 1911 03b9 EF       		.byte	0xef
 1912 03ba 00000000 		.4byte	.LFB44
 1913 03be 84000000 		.4byte	.LFE44-.LFB44
 1914 03c2 01       		.uleb128 0x1
 1915 03c3 9C       		.byte	0x9c
 1916 03c4 E5030000 		.4byte	0x3e5
 1917 03c8 0B       		.uleb128 0xb
 1918 03c9 6F020000 		.4byte	.LASF29
 1919 03cd 01       		.byte	0x1
 1920 03ce EF       		.byte	0xef
 1921 03cf 6B000000 		.4byte	0x6b
 1922 03d3 02       		.uleb128 0x2
 1923 03d4 91       		.byte	0x91
 1924 03d5 77       		.sleb128 -9
 1925 03d6 0B       		.uleb128 0xb
 1926 03d7 65010000 		.4byte	.LASF38
 1927 03db 01       		.byte	0x1
 1928 03dc EF       		.byte	0xef
 1929 03dd E5030000 		.4byte	0x3e5
 1930 03e1 02       		.uleb128 0x2
 1931 03e2 91       		.byte	0x91
 1932 03e3 70       		.sleb128 -16
 1933 03e4 00       		.byte	0
 1934 03e5 0E       		.uleb128 0xe
 1935 03e6 04       		.byte	0x4
 1936 03e7 81000000 		.4byte	0x81
 1937 03eb 0C       		.uleb128 0xc
 1938 03ec 73000000 		.4byte	.LASF39
 1939 03f0 01       		.byte	0x1
 1940 03f1 F9       		.byte	0xf9
 1941 03f2 00000000 		.4byte	.LFB45
 1942 03f6 44000000 		.4byte	.LFE45-.LFB45
 1943 03fa 01       		.uleb128 0x1
 1944 03fb 9C       		.byte	0x9c
 1945 03fc 0F040000 		.4byte	0x40f
 1946 0400 0B       		.uleb128 0xb
 1947 0401 0F000000 		.4byte	.LASF40
 1948 0405 01       		.byte	0x1
 1949 0406 F9       		.byte	0xf9
 1950 0407 89030000 		.4byte	0x389
 1951 040b 02       		.uleb128 0x2
 1952 040c 91       		.byte	0x91
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 40


 1953 040d 74       		.sleb128 -12
 1954 040e 00       		.byte	0
 1955 040f 10       		.uleb128 0x10
 1956 0410 8C000000 		.4byte	0x8c
 1957 0414 1F040000 		.4byte	0x41f
 1958 0418 11       		.uleb128 0x11
 1959 0419 B7000000 		.4byte	0xb7
 1960 041d 09       		.byte	0x9
 1961 041e 00       		.byte	0
 1962 041f 12       		.uleb128 0x12
 1963 0420 0E010000 		.4byte	.LASF41
 1964 0424 01       		.byte	0x1
 1965 0425 10       		.byte	0x10
 1966 0426 0F040000 		.4byte	0x40f
 1967 042a 05       		.uleb128 0x5
 1968 042b 03       		.byte	0x3
 1969 042c 00000000 		.4byte	tempArray
 1970 0430 12       		.uleb128 0x12
 1971 0431 09020000 		.4byte	.LASF42
 1972 0435 01       		.byte	0x1
 1973 0436 11       		.byte	0x11
 1974 0437 89030000 		.4byte	0x389
 1975 043b 05       		.uleb128 0x5
 1976 043c 03       		.byte	0x3
 1977 043d 00000000 		.4byte	tempArrayPtr
 1978 0441 12       		.uleb128 0x12
 1979 0442 D1020000 		.4byte	.LASF43
 1980 0446 01       		.byte	0x1
 1981 0447 12       		.byte	0x12
 1982 0448 0F040000 		.4byte	0x40f
 1983 044c 05       		.uleb128 0x5
 1984 044d 03       		.byte	0x3
 1985 044e 00000000 		.4byte	humArray
 1986 0452 12       		.uleb128 0x12
 1987 0453 31000000 		.4byte	.LASF44
 1988 0457 01       		.byte	0x1
 1989 0458 13       		.byte	0x13
 1990 0459 89030000 		.4byte	0x389
 1991 045d 05       		.uleb128 0x5
 1992 045e 03       		.byte	0x3
 1993 045f 00000000 		.4byte	humArrayPtr
 1994 0463 10       		.uleb128 0x10
 1995 0464 81000000 		.4byte	0x81
 1996 0468 79040000 		.4byte	0x479
 1997 046c 11       		.uleb128 0x11
 1998 046d B7000000 		.4byte	0xb7
 1999 0471 05       		.byte	0x5
 2000 0472 11       		.uleb128 0x11
 2001 0473 B7000000 		.4byte	0xb7
 2002 0477 09       		.byte	0x9
 2003 0478 00       		.byte	0
 2004 0479 12       		.uleb128 0x12
 2005 047a B6020000 		.4byte	.LASF45
 2006 047e 01       		.byte	0x1
 2007 047f 14       		.byte	0x14
 2008 0480 63040000 		.4byte	0x463
 2009 0484 05       		.uleb128 0x5
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 41


 2010 0485 03       		.byte	0x3
 2011 0486 00000000 		.4byte	soilHumArray
 2012 048a 10       		.uleb128 0x10
 2013 048b E5030000 		.4byte	0x3e5
 2014 048f 9A040000 		.4byte	0x49a
 2015 0493 11       		.uleb128 0x11
 2016 0494 B7000000 		.4byte	0xb7
 2017 0498 05       		.byte	0x5
 2018 0499 00       		.byte	0
 2019 049a 12       		.uleb128 0x12
 2020 049b 1F000000 		.4byte	.LASF46
 2021 049f 01       		.byte	0x1
 2022 04a0 15       		.byte	0x15
 2023 04a1 8A040000 		.4byte	0x48a
 2024 04a5 05       		.uleb128 0x5
 2025 04a6 03       		.byte	0x3
 2026 04a7 00000000 		.4byte	soilHumPtr
 2027 04ab 12       		.uleb128 0x12
 2028 04ac 50000000 		.4byte	.LASF47
 2029 04b0 01       		.byte	0x1
 2030 04b1 16       		.byte	0x16
 2031 04b2 0F040000 		.4byte	0x40f
 2032 04b6 05       		.uleb128 0x5
 2033 04b7 03       		.byte	0x3
 2034 04b8 00000000 		.4byte	lightArray
 2035 04bc 12       		.uleb128 0x12
 2036 04bd C3020000 		.4byte	.LASF48
 2037 04c1 01       		.byte	0x1
 2038 04c2 17       		.byte	0x17
 2039 04c3 89030000 		.4byte	0x389
 2040 04c7 05       		.uleb128 0x5
 2041 04c8 03       		.byte	0x3
 2042 04c9 00000000 		.4byte	lightArrayPtr
 2043 04cd 12       		.uleb128 0x12
 2044 04ce 8F010000 		.4byte	.LASF35
 2045 04d2 01       		.byte	0x1
 2046 04d3 18       		.byte	0x18
 2047 04d4 6B000000 		.4byte	0x6b
 2048 04d8 05       		.uleb128 0x5
 2049 04d9 03       		.byte	0x3
 2050 04da 00000000 		.4byte	temp
 2051 04de 13       		.uleb128 0x13
 2052 04df 68756D00 		.ascii	"hum\000"
 2053 04e3 01       		.byte	0x1
 2054 04e4 18       		.byte	0x18
 2055 04e5 6B000000 		.4byte	0x6b
 2056 04e9 05       		.uleb128 0x5
 2057 04ea 03       		.byte	0x3
 2058 04eb 00000000 		.4byte	hum
 2059 04ef 10       		.uleb128 0x10
 2060 04f0 6B000000 		.4byte	0x6b
 2061 04f4 FF040000 		.4byte	0x4ff
 2062 04f8 11       		.uleb128 0x11
 2063 04f9 B7000000 		.4byte	0xb7
 2064 04fd 05       		.byte	0x5
 2065 04fe 00       		.byte	0
 2066 04ff 12       		.uleb128 0x12
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 42


 2067 0500 65010000 		.4byte	.LASF38
 2068 0504 01       		.byte	0x1
 2069 0505 18       		.byte	0x18
 2070 0506 EF040000 		.4byte	0x4ef
 2071 050a 05       		.uleb128 0x5
 2072 050b 03       		.byte	0x3
 2073 050c 00000000 		.4byte	soilHum
 2074 0510 12       		.uleb128 0x12
 2075 0511 0F000000 		.4byte	.LASF40
 2076 0515 01       		.byte	0x1
 2077 0516 18       		.byte	0x18
 2078 0517 6B000000 		.4byte	0x6b
 2079 051b 05       		.uleb128 0x5
 2080 051c 03       		.byte	0x3
 2081 051d 00000000 		.4byte	light
 2082 0521 00       		.byte	0
 2083              		.section	.debug_abbrev,"",%progbits
 2084              	.Ldebug_abbrev0:
 2085 0000 01       		.uleb128 0x1
 2086 0001 11       		.uleb128 0x11
 2087 0002 01       		.byte	0x1
 2088 0003 25       		.uleb128 0x25
 2089 0004 0E       		.uleb128 0xe
 2090 0005 13       		.uleb128 0x13
 2091 0006 0B       		.uleb128 0xb
 2092 0007 03       		.uleb128 0x3
 2093 0008 0E       		.uleb128 0xe
 2094 0009 1B       		.uleb128 0x1b
 2095 000a 0E       		.uleb128 0xe
 2096 000b 55       		.uleb128 0x55
 2097 000c 17       		.uleb128 0x17
 2098 000d 11       		.uleb128 0x11
 2099 000e 01       		.uleb128 0x1
 2100 000f 10       		.uleb128 0x10
 2101 0010 17       		.uleb128 0x17
 2102 0011 00       		.byte	0
 2103 0012 00       		.byte	0
 2104 0013 02       		.uleb128 0x2
 2105 0014 24       		.uleb128 0x24
 2106 0015 00       		.byte	0
 2107 0016 0B       		.uleb128 0xb
 2108 0017 0B       		.uleb128 0xb
 2109 0018 3E       		.uleb128 0x3e
 2110 0019 0B       		.uleb128 0xb
 2111 001a 03       		.uleb128 0x3
 2112 001b 0E       		.uleb128 0xe
 2113 001c 00       		.byte	0
 2114 001d 00       		.byte	0
 2115 001e 03       		.uleb128 0x3
 2116 001f 24       		.uleb128 0x24
 2117 0020 00       		.byte	0
 2118 0021 0B       		.uleb128 0xb
 2119 0022 0B       		.uleb128 0xb
 2120 0023 3E       		.uleb128 0x3e
 2121 0024 0B       		.uleb128 0xb
 2122 0025 03       		.uleb128 0x3
 2123 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 43


 2124 0027 00       		.byte	0
 2125 0028 00       		.byte	0
 2126 0029 04       		.uleb128 0x4
 2127 002a 16       		.uleb128 0x16
 2128 002b 00       		.byte	0
 2129 002c 03       		.uleb128 0x3
 2130 002d 0E       		.uleb128 0xe
 2131 002e 3A       		.uleb128 0x3a
 2132 002f 0B       		.uleb128 0xb
 2133 0030 3B       		.uleb128 0x3b
 2134 0031 0B       		.uleb128 0xb
 2135 0032 49       		.uleb128 0x49
 2136 0033 13       		.uleb128 0x13
 2137 0034 00       		.byte	0
 2138 0035 00       		.byte	0
 2139 0036 05       		.uleb128 0x5
 2140 0037 2E       		.uleb128 0x2e
 2141 0038 01       		.byte	0x1
 2142 0039 3F       		.uleb128 0x3f
 2143 003a 19       		.uleb128 0x19
 2144 003b 03       		.uleb128 0x3
 2145 003c 0E       		.uleb128 0xe
 2146 003d 3A       		.uleb128 0x3a
 2147 003e 0B       		.uleb128 0xb
 2148 003f 3B       		.uleb128 0x3b
 2149 0040 0B       		.uleb128 0xb
 2150 0041 27       		.uleb128 0x27
 2151 0042 19       		.uleb128 0x19
 2152 0043 11       		.uleb128 0x11
 2153 0044 01       		.uleb128 0x1
 2154 0045 12       		.uleb128 0x12
 2155 0046 06       		.uleb128 0x6
 2156 0047 40       		.uleb128 0x40
 2157 0048 18       		.uleb128 0x18
 2158 0049 9742     		.uleb128 0x2117
 2159 004b 19       		.uleb128 0x19
 2160 004c 01       		.uleb128 0x1
 2161 004d 13       		.uleb128 0x13
 2162 004e 00       		.byte	0
 2163 004f 00       		.byte	0
 2164 0050 06       		.uleb128 0x6
 2165 0051 0B       		.uleb128 0xb
 2166 0052 01       		.byte	0x1
 2167 0053 11       		.uleb128 0x11
 2168 0054 01       		.uleb128 0x1
 2169 0055 12       		.uleb128 0x12
 2170 0056 06       		.uleb128 0x6
 2171 0057 01       		.uleb128 0x1
 2172 0058 13       		.uleb128 0x13
 2173 0059 00       		.byte	0
 2174 005a 00       		.byte	0
 2175 005b 07       		.uleb128 0x7
 2176 005c 34       		.uleb128 0x34
 2177 005d 00       		.byte	0
 2178 005e 03       		.uleb128 0x3
 2179 005f 08       		.uleb128 0x8
 2180 0060 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 44


 2181 0061 0B       		.uleb128 0xb
 2182 0062 3B       		.uleb128 0x3b
 2183 0063 0B       		.uleb128 0xb
 2184 0064 49       		.uleb128 0x49
 2185 0065 13       		.uleb128 0x13
 2186 0066 02       		.uleb128 0x2
 2187 0067 18       		.uleb128 0x18
 2188 0068 00       		.byte	0
 2189 0069 00       		.byte	0
 2190 006a 08       		.uleb128 0x8
 2191 006b 0B       		.uleb128 0xb
 2192 006c 01       		.byte	0x1
 2193 006d 11       		.uleb128 0x11
 2194 006e 01       		.uleb128 0x1
 2195 006f 12       		.uleb128 0x12
 2196 0070 06       		.uleb128 0x6
 2197 0071 00       		.byte	0
 2198 0072 00       		.byte	0
 2199 0073 09       		.uleb128 0x9
 2200 0074 2E       		.uleb128 0x2e
 2201 0075 00       		.byte	0
 2202 0076 3F       		.uleb128 0x3f
 2203 0077 19       		.uleb128 0x19
 2204 0078 03       		.uleb128 0x3
 2205 0079 0E       		.uleb128 0xe
 2206 007a 3A       		.uleb128 0x3a
 2207 007b 0B       		.uleb128 0xb
 2208 007c 3B       		.uleb128 0x3b
 2209 007d 0B       		.uleb128 0xb
 2210 007e 27       		.uleb128 0x27
 2211 007f 19       		.uleb128 0x19
 2212 0080 49       		.uleb128 0x49
 2213 0081 13       		.uleb128 0x13
 2214 0082 11       		.uleb128 0x11
 2215 0083 01       		.uleb128 0x1
 2216 0084 12       		.uleb128 0x12
 2217 0085 06       		.uleb128 0x6
 2218 0086 40       		.uleb128 0x40
 2219 0087 18       		.uleb128 0x18
 2220 0088 9742     		.uleb128 0x2117
 2221 008a 19       		.uleb128 0x19
 2222 008b 00       		.byte	0
 2223 008c 00       		.byte	0
 2224 008d 0A       		.uleb128 0xa
 2225 008e 2E       		.uleb128 0x2e
 2226 008f 01       		.byte	0x1
 2227 0090 3F       		.uleb128 0x3f
 2228 0091 19       		.uleb128 0x19
 2229 0092 03       		.uleb128 0x3
 2230 0093 0E       		.uleb128 0xe
 2231 0094 3A       		.uleb128 0x3a
 2232 0095 0B       		.uleb128 0xb
 2233 0096 3B       		.uleb128 0x3b
 2234 0097 0B       		.uleb128 0xb
 2235 0098 27       		.uleb128 0x27
 2236 0099 19       		.uleb128 0x19
 2237 009a 49       		.uleb128 0x49
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 45


 2238 009b 13       		.uleb128 0x13
 2239 009c 11       		.uleb128 0x11
 2240 009d 01       		.uleb128 0x1
 2241 009e 12       		.uleb128 0x12
 2242 009f 06       		.uleb128 0x6
 2243 00a0 40       		.uleb128 0x40
 2244 00a1 18       		.uleb128 0x18
 2245 00a2 9742     		.uleb128 0x2117
 2246 00a4 19       		.uleb128 0x19
 2247 00a5 01       		.uleb128 0x1
 2248 00a6 13       		.uleb128 0x13
 2249 00a7 00       		.byte	0
 2250 00a8 00       		.byte	0
 2251 00a9 0B       		.uleb128 0xb
 2252 00aa 05       		.uleb128 0x5
 2253 00ab 00       		.byte	0
 2254 00ac 03       		.uleb128 0x3
 2255 00ad 0E       		.uleb128 0xe
 2256 00ae 3A       		.uleb128 0x3a
 2257 00af 0B       		.uleb128 0xb
 2258 00b0 3B       		.uleb128 0x3b
 2259 00b1 0B       		.uleb128 0xb
 2260 00b2 49       		.uleb128 0x49
 2261 00b3 13       		.uleb128 0x13
 2262 00b4 02       		.uleb128 0x2
 2263 00b5 18       		.uleb128 0x18
 2264 00b6 00       		.byte	0
 2265 00b7 00       		.byte	0
 2266 00b8 0C       		.uleb128 0xc
 2267 00b9 2E       		.uleb128 0x2e
 2268 00ba 01       		.byte	0x1
 2269 00bb 3F       		.uleb128 0x3f
 2270 00bc 19       		.uleb128 0x19
 2271 00bd 03       		.uleb128 0x3
 2272 00be 0E       		.uleb128 0xe
 2273 00bf 3A       		.uleb128 0x3a
 2274 00c0 0B       		.uleb128 0xb
 2275 00c1 3B       		.uleb128 0x3b
 2276 00c2 0B       		.uleb128 0xb
 2277 00c3 27       		.uleb128 0x27
 2278 00c4 19       		.uleb128 0x19
 2279 00c5 11       		.uleb128 0x11
 2280 00c6 01       		.uleb128 0x1
 2281 00c7 12       		.uleb128 0x12
 2282 00c8 06       		.uleb128 0x6
 2283 00c9 40       		.uleb128 0x40
 2284 00ca 18       		.uleb128 0x18
 2285 00cb 9642     		.uleb128 0x2116
 2286 00cd 19       		.uleb128 0x19
 2287 00ce 01       		.uleb128 0x1
 2288 00cf 13       		.uleb128 0x13
 2289 00d0 00       		.byte	0
 2290 00d1 00       		.byte	0
 2291 00d2 0D       		.uleb128 0xd
 2292 00d3 34       		.uleb128 0x34
 2293 00d4 00       		.byte	0
 2294 00d5 03       		.uleb128 0x3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 46


 2295 00d6 0E       		.uleb128 0xe
 2296 00d7 3A       		.uleb128 0x3a
 2297 00d8 0B       		.uleb128 0xb
 2298 00d9 3B       		.uleb128 0x3b
 2299 00da 0B       		.uleb128 0xb
 2300 00db 49       		.uleb128 0x49
 2301 00dc 13       		.uleb128 0x13
 2302 00dd 02       		.uleb128 0x2
 2303 00de 18       		.uleb128 0x18
 2304 00df 00       		.byte	0
 2305 00e0 00       		.byte	0
 2306 00e1 0E       		.uleb128 0xe
 2307 00e2 0F       		.uleb128 0xf
 2308 00e3 00       		.byte	0
 2309 00e4 0B       		.uleb128 0xb
 2310 00e5 0B       		.uleb128 0xb
 2311 00e6 49       		.uleb128 0x49
 2312 00e7 13       		.uleb128 0x13
 2313 00e8 00       		.byte	0
 2314 00e9 00       		.byte	0
 2315 00ea 0F       		.uleb128 0xf
 2316 00eb 05       		.uleb128 0x5
 2317 00ec 00       		.byte	0
 2318 00ed 03       		.uleb128 0x3
 2319 00ee 08       		.uleb128 0x8
 2320 00ef 3A       		.uleb128 0x3a
 2321 00f0 0B       		.uleb128 0xb
 2322 00f1 3B       		.uleb128 0x3b
 2323 00f2 0B       		.uleb128 0xb
 2324 00f3 49       		.uleb128 0x49
 2325 00f4 13       		.uleb128 0x13
 2326 00f5 02       		.uleb128 0x2
 2327 00f6 18       		.uleb128 0x18
 2328 00f7 00       		.byte	0
 2329 00f8 00       		.byte	0
 2330 00f9 10       		.uleb128 0x10
 2331 00fa 01       		.uleb128 0x1
 2332 00fb 01       		.byte	0x1
 2333 00fc 49       		.uleb128 0x49
 2334 00fd 13       		.uleb128 0x13
 2335 00fe 01       		.uleb128 0x1
 2336 00ff 13       		.uleb128 0x13
 2337 0100 00       		.byte	0
 2338 0101 00       		.byte	0
 2339 0102 11       		.uleb128 0x11
 2340 0103 21       		.uleb128 0x21
 2341 0104 00       		.byte	0
 2342 0105 49       		.uleb128 0x49
 2343 0106 13       		.uleb128 0x13
 2344 0107 2F       		.uleb128 0x2f
 2345 0108 0B       		.uleb128 0xb
 2346 0109 00       		.byte	0
 2347 010a 00       		.byte	0
 2348 010b 12       		.uleb128 0x12
 2349 010c 34       		.uleb128 0x34
 2350 010d 00       		.byte	0
 2351 010e 03       		.uleb128 0x3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 47


 2352 010f 0E       		.uleb128 0xe
 2353 0110 3A       		.uleb128 0x3a
 2354 0111 0B       		.uleb128 0xb
 2355 0112 3B       		.uleb128 0x3b
 2356 0113 0B       		.uleb128 0xb
 2357 0114 49       		.uleb128 0x49
 2358 0115 13       		.uleb128 0x13
 2359 0116 3F       		.uleb128 0x3f
 2360 0117 19       		.uleb128 0x19
 2361 0118 02       		.uleb128 0x2
 2362 0119 18       		.uleb128 0x18
 2363 011a 00       		.byte	0
 2364 011b 00       		.byte	0
 2365 011c 13       		.uleb128 0x13
 2366 011d 34       		.uleb128 0x34
 2367 011e 00       		.byte	0
 2368 011f 03       		.uleb128 0x3
 2369 0120 08       		.uleb128 0x8
 2370 0121 3A       		.uleb128 0x3a
 2371 0122 0B       		.uleb128 0xb
 2372 0123 3B       		.uleb128 0x3b
 2373 0124 0B       		.uleb128 0xb
 2374 0125 49       		.uleb128 0x49
 2375 0126 13       		.uleb128 0x13
 2376 0127 3F       		.uleb128 0x3f
 2377 0128 19       		.uleb128 0x19
 2378 0129 02       		.uleb128 0x2
 2379 012a 18       		.uleb128 0x18
 2380 012b 00       		.byte	0
 2381 012c 00       		.byte	0
 2382 012d 00       		.byte	0
 2383              		.section	.debug_aranges,"",%progbits
 2384 0000 7C000000 		.4byte	0x7c
 2385 0004 0200     		.2byte	0x2
 2386 0006 00000000 		.4byte	.Ldebug_info0
 2387 000a 04       		.byte	0x4
 2388 000b 00       		.byte	0
 2389 000c 0000     		.2byte	0
 2390 000e 0000     		.2byte	0
 2391 0010 00000000 		.4byte	.LFB33
 2392 0014 18010000 		.4byte	.LFE33-.LFB33
 2393 0018 00000000 		.4byte	.LFB34
 2394 001c 14000000 		.4byte	.LFE34-.LFB34
 2395 0020 00000000 		.4byte	.LFB35
 2396 0024 14000000 		.4byte	.LFE35-.LFB35
 2397 0028 00000000 		.4byte	.LFB36
 2398 002c 20000000 		.4byte	.LFE36-.LFB36
 2399 0030 00000000 		.4byte	.LFB37
 2400 0034 14000000 		.4byte	.LFE37-.LFB37
 2401 0038 00000000 		.4byte	.LFB38
 2402 003c 50010000 		.4byte	.LFE38-.LFB38
 2403 0040 00000000 		.4byte	.LFB39
 2404 0044 1C010000 		.4byte	.LFE39-.LFB39
 2405 0048 00000000 		.4byte	.LFB40
 2406 004c 58010000 		.4byte	.LFE40-.LFB40
 2407 0050 00000000 		.4byte	.LFB41
 2408 0054 24010000 		.4byte	.LFE41-.LFB41
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 48


 2409 0058 00000000 		.4byte	.LFB42
 2410 005c 44000000 		.4byte	.LFE42-.LFB42
 2411 0060 00000000 		.4byte	.LFB43
 2412 0064 44000000 		.4byte	.LFE43-.LFB43
 2413 0068 00000000 		.4byte	.LFB44
 2414 006c 84000000 		.4byte	.LFE44-.LFB44
 2415 0070 00000000 		.4byte	.LFB45
 2416 0074 44000000 		.4byte	.LFE45-.LFB45
 2417 0078 00000000 		.4byte	0
 2418 007c 00000000 		.4byte	0
 2419              		.section	.debug_ranges,"",%progbits
 2420              	.Ldebug_ranges0:
 2421 0000 00000000 		.4byte	.LFB33
 2422 0004 18010000 		.4byte	.LFE33
 2423 0008 00000000 		.4byte	.LFB34
 2424 000c 14000000 		.4byte	.LFE34
 2425 0010 00000000 		.4byte	.LFB35
 2426 0014 14000000 		.4byte	.LFE35
 2427 0018 00000000 		.4byte	.LFB36
 2428 001c 20000000 		.4byte	.LFE36
 2429 0020 00000000 		.4byte	.LFB37
 2430 0024 14000000 		.4byte	.LFE37
 2431 0028 00000000 		.4byte	.LFB38
 2432 002c 50010000 		.4byte	.LFE38
 2433 0030 00000000 		.4byte	.LFB39
 2434 0034 1C010000 		.4byte	.LFE39
 2435 0038 00000000 		.4byte	.LFB40
 2436 003c 58010000 		.4byte	.LFE40
 2437 0040 00000000 		.4byte	.LFB41
 2438 0044 24010000 		.4byte	.LFE41
 2439 0048 00000000 		.4byte	.LFB42
 2440 004c 44000000 		.4byte	.LFE42
 2441 0050 00000000 		.4byte	.LFB43
 2442 0054 44000000 		.4byte	.LFE43
 2443 0058 00000000 		.4byte	.LFB44
 2444 005c 84000000 		.4byte	.LFE44
 2445 0060 00000000 		.4byte	.LFB45
 2446 0064 44000000 		.4byte	.LFE45
 2447 0068 00000000 		.4byte	0
 2448 006c 00000000 		.4byte	0
 2449              		.section	.debug_line,"",%progbits
 2450              	.Ldebug_line0:
 2451 0000 05020000 		.section	.debug_str,"MS",%progbits,1
 2451      02004A00 
 2451      00000201 
 2451      FB0E0D00 
 2451      01010101 
 2452              	.LASF25:
 2453 0000 74656D70 		.ascii	"tempInDegreesC\000"
 2453      496E4465 
 2453      67726565 
 2453      734300
 2454              	.LASF40:
 2455 000f 6C696768 		.ascii	"light\000"
 2455      7400
 2456              	.LASF34:
 2457 0015 696E7075 		.ascii	"inputTemp\000"
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 49


 2457      7454656D 
 2457      7000
 2458              	.LASF46:
 2459 001f 736F696C 		.ascii	"soilHumPtr\000"
 2459      48756D50 
 2459      747200
 2460              	.LASF26:
 2461 002a 61766748 		.ascii	"avgHum\000"
 2461      756D00
 2462              	.LASF44:
 2463 0031 68756D41 		.ascii	"humArrayPtr\000"
 2463      72726179 
 2463      50747200 
 2464              	.LASF3:
 2465 003d 73686F72 		.ascii	"short unsigned int\000"
 2465      7420756E 
 2465      7369676E 
 2465      65642069 
 2465      6E7400
 2466              	.LASF47:
 2467 0050 6C696768 		.ascii	"lightArray\000"
 2467      74417272 
 2467      617900
 2468              	.LASF37:
 2469 005b 696E7075 		.ascii	"inputSoilHum\000"
 2469      74536F69 
 2469      6C48756D 
 2469      00
 2470              	.LASF32:
 2471 0068 6C696768 		.ascii	"lightInLux\000"
 2471      74496E4C 
 2471      757800
 2472              	.LASF39:
 2473 0073 696E7075 		.ascii	"inputLight\000"
 2473      744C6967 
 2473      687400
 2474              	.LASF13:
 2475 007e 666C6F61 		.ascii	"float\000"
 2475      7400
 2476              	.LASF49:
 2477 0084 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2477      4320342E 
 2477      382E3420 
 2477      32303134 
 2477      30353236 
 2478 00b7 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2478      20726576 
 2478      6973696F 
 2478      6E203231 
 2478      31333538 
 2479 00ea 30202D66 		.ascii	"0 -ffunction-sections\000"
 2479      66756E63 
 2479      74696F6E 
 2479      2D736563 
 2479      74696F6E 
 2480              	.LASF1:
 2481 0100 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 50


 2481      676E6564 
 2481      20636861 
 2481      7200
 2482              	.LASF41:
 2483 010e 74656D70 		.ascii	"tempArray\000"
 2483      41727261 
 2483      7900
 2484              	.LASF5:
 2485 0118 6C6F6E67 		.ascii	"long unsigned int\000"
 2485      20756E73 
 2485      69676E65 
 2485      6420696E 
 2485      7400
 2486              	.LASF18:
 2487 012a 67657454 		.ascii	"getTemp_DSP\000"
 2487      656D705F 
 2487      44535000 
 2488              	.LASF27:
 2489 0136 68756D49 		.ascii	"humInRH\000"
 2489      6E524800 
 2490              	.LASF52:
 2491 013e 67657453 		.ascii	"getSoilHum_DSP\000"
 2491      6F696C48 
 2491      756D5F44 
 2491      535000
 2492              	.LASF31:
 2493 014d 6176674C 		.ascii	"avgLight\000"
 2493      69676874 
 2493      00
 2494              	.LASF21:
 2495 0156 696E6974 		.ascii	"initDSP\000"
 2495      44535000 
 2496              	.LASF14:
 2497 015e 646F7562 		.ascii	"double\000"
 2497      6C6500
 2498              	.LASF38:
 2499 0165 736F696C 		.ascii	"soilHum\000"
 2499      48756D00 
 2500              	.LASF36:
 2501 016d 696E7075 		.ascii	"inputHum\000"
 2501      7448756D 
 2501      00
 2502              	.LASF10:
 2503 0176 75696E74 		.ascii	"uint32\000"
 2503      333200
 2504              	.LASF23:
 2505 017d 736B6970 		.ascii	"skip\000"
 2505      00
 2506              	.LASF8:
 2507 0182 756E7369 		.ascii	"unsigned int\000"
 2507      676E6564 
 2507      20696E74 
 2507      00
 2508              	.LASF35:
 2509 018f 74656D70 		.ascii	"temp\000"
 2509      00
 2510              	.LASF30:
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 51


 2511 0194 736F696C 		.ascii	"soilHumInRH\000"
 2511      48756D49 
 2511      6E524800 
 2512              	.LASF7:
 2513 01a0 6C6F6E67 		.ascii	"long long unsigned int\000"
 2513      206C6F6E 
 2513      6720756E 
 2513      7369676E 
 2513      65642069 
 2514              	.LASF51:
 2515 01b7 433A5C55 		.ascii	"C:\\Users\\Snufkin\\Documents\\GitHub\\PSoC_Master\\"
 2515      73657273 
 2515      5C536E75 
 2515      666B696E 
 2515      5C446F63 
 2516 01e5 50536F43 		.ascii	"PSoC_Master\\PSoC_Master.cydsn\000"
 2516      5F4D6173 
 2516      7465725C 
 2516      50536F43 
 2516      5F4D6173 
 2517              	.LASF11:
 2518 0203 696E7431 		.ascii	"int16\000"
 2518      3600
 2519              	.LASF42:
 2520 0209 74656D70 		.ascii	"tempArrayPtr\000"
 2520      41727261 
 2520      79507472 
 2520      00
 2521              	.LASF19:
 2522 0216 67657448 		.ascii	"getHum_DSP\000"
 2522      756D5F44 
 2522      535000
 2523              	.LASF20:
 2524 0221 6765744C 		.ascii	"getLight_DSP\000"
 2524      69676874 
 2524      5F445350 
 2524      00
 2525              	.LASF12:
 2526 022e 696E7433 		.ascii	"int32\000"
 2526      3200
 2527              	.LASF17:
 2528 0234 73697A65 		.ascii	"sizetype\000"
 2528      74797065 
 2528      00
 2529              	.LASF6:
 2530 023d 6C6F6E67 		.ascii	"long long int\000"
 2530      206C6F6E 
 2530      6720696E 
 2530      7400
 2531              	.LASF33:
 2532 024b 6C696768 		.ascii	"lightInUartVarSteps\000"
 2532      74496E55 
 2532      61727456 
 2532      61725374 
 2532      65707300 
 2533              	.LASF16:
 2534 025f 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccsyaIoC.s 			page 52


 2534      00
 2535              	.LASF28:
 2536 0264 61766753 		.ascii	"avgSoilHum\000"
 2536      6F696C48 
 2536      756D00
 2537              	.LASF29:
 2538 026f 696E6465 		.ascii	"index\000"
 2538      7800
 2539              	.LASF50:
 2540 0275 2E5C4453 		.ascii	".\\DSP_Class.c\000"
 2540      505F436C 
 2540      6173732E 
 2540      6300
 2541              	.LASF2:
 2542 0283 73686F72 		.ascii	"short int\000"
 2542      7420696E 
 2542      7400
 2543              	.LASF9:
 2544 028d 75696E74 		.ascii	"uint8\000"
 2544      3800
 2545              	.LASF24:
 2546 0293 746F7461 		.ascii	"total\000"
 2546      6C00
 2547              	.LASF4:
 2548 0299 6C6F6E67 		.ascii	"long int\000"
 2548      20696E74 
 2548      00
 2549              	.LASF22:
 2550 02a2 61766754 		.ascii	"avgTemp\000"
 2550      656D7000 
 2551              	.LASF0:
 2552 02aa 7369676E 		.ascii	"signed char\000"
 2552      65642063 
 2552      68617200 
 2553              	.LASF45:
 2554 02b6 736F696C 		.ascii	"soilHumArray\000"
 2554      48756D41 
 2554      72726179 
 2554      00
 2555              	.LASF48:
 2556 02c3 6C696768 		.ascii	"lightArrayPtr\000"
 2556      74417272 
 2556      61795074 
 2556      7200
 2557              	.LASF43:
 2558 02d1 68756D41 		.ascii	"humArray\000"
 2558      72726179 
 2558      00
 2559              	.LASF15:
 2560 02da 696E7436 		.ascii	"int64\000"
 2560      3400
 2561              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
