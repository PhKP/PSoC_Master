ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"DSP_Class.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	tempArray,400,4
  18              		.comm	tempArrayPtr,4,4
  19              		.comm	humArray,400,4
  20              		.comm	humArrayPtr,4,4
  21              		.comm	soilHumArray,1200,4
  22              		.comm	soilHumPtr,24,4
  23              		.comm	lightArray,400,4
  24              		.comm	lightArrayPtr,4,4
  25              		.comm	temp,1,1
  26              		.comm	hum,1,1
  27              		.comm	soilHum,6,4
  28              		.comm	light,1,1
  29              		.section	.text.initDSP,"ax",%progbits
  30              		.align	2
  31              		.global	initDSP
  32              		.code	16
  33              		.thumb_func
  34              		.type	initDSP, %function
  35              	initDSP:
  36              	.LFB33:
  37              		.file 1 ".\\DSP_Class.c"
   1:.\DSP_Class.c **** /* ========================================
   2:.\DSP_Class.c ****  * 
   3:.\DSP_Class.c ****  * AutoGreen - PSoC_Master
   4:.\DSP_Class.c ****  * DSP_Class.c
   5:.\DSP_Class.c ****  * Digital signal processing
   6:.\DSP_Class.c ****  * PRJ3 - GRP9
   7:.\DSP_Class.c ****  * 2015-04-15
   8:.\DSP_Class.c ****  *
   9:.\DSP_Class.c ****  * ========================================
  10:.\DSP_Class.c **** */
  11:.\DSP_Class.c **** 
  12:.\DSP_Class.c **** // Include files
  13:.\DSP_Class.c **** #include "DSP_Class.h"
  14:.\DSP_Class.c **** 
  15:.\DSP_Class.c **** // Definitions
  16:.\DSP_Class.c **** #define ARRAYSIZE 100
  17:.\DSP_Class.c **** #define NMR_OF_VALID_DATAPOINTS_NEEDED 10
  18:.\DSP_Class.c **** #define NUMBER_OF_SOILHUM_SENSORS 6
  19:.\DSP_Class.c **** #define EMPTY -1
  20:.\DSP_Class.c **** 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 2


  21:.\DSP_Class.c **** // Private data members
  22:.\DSP_Class.c **** int32 tempArray[ARRAYSIZE];
  23:.\DSP_Class.c **** int32* tempArrayPtr;
  24:.\DSP_Class.c **** int32 humArray[ARRAYSIZE];
  25:.\DSP_Class.c **** int32* humArrayPtr;
  26:.\DSP_Class.c **** int16 soilHumArray[NUMBER_OF_SOILHUM_SENSORS][ARRAYSIZE];
  27:.\DSP_Class.c **** int16* soilHumPtr[NUMBER_OF_SOILHUM_SENSORS];
  28:.\DSP_Class.c **** int32 lightArray[ARRAYSIZE];
  29:.\DSP_Class.c **** int32* lightArrayPtr;
  30:.\DSP_Class.c **** uint8 temp, hum, soilHum[NUMBER_OF_SOILHUM_SENSORS], light;     // Used for storing the newest, val
  31:.\DSP_Class.c **** 
  32:.\DSP_Class.c **** // Private prototypes
  33:.\DSP_Class.c **** void avgTemp(void);
  34:.\DSP_Class.c **** void avgHum(void);
  35:.\DSP_Class.c **** void avgSoilHum(uint8 index);
  36:.\DSP_Class.c **** void avgLight(void);
  37:.\DSP_Class.c **** 
  38:.\DSP_Class.c **** // Init: All datamebers are initialized with -1, meaning they are empty
  39:.\DSP_Class.c **** void initDSP(void){
  38              		.loc 1 39 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 82B0     		sub	sp, sp, #8
  45              		.cfi_def_cfa_offset 16
  46 0004 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  48              	.LBB2:
  40:.\DSP_Class.c ****     {
  41:.\DSP_Class.c ****         uint8 i;
  42:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
  49              		.loc 1 42 0
  50 0006 FB1D     		add	r3, r7, #7
  51 0008 0022     		mov	r2, #0
  52 000a 1A70     		strb	r2, [r3]
  53 000c 32E0     		b	.L2
  54              	.L5:
  43:.\DSP_Class.c ****             tempArray[i] = EMPTY;
  55              		.loc 1 43 0
  56 000e FB1D     		add	r3, r7, #7
  57 0010 1A78     		ldrb	r2, [r3]
  58 0012 334B     		ldr	r3, .L8
  59 0014 9200     		lsl	r2, r2, #2
  60 0016 0121     		mov	r1, #1
  61 0018 4942     		neg	r1, r1
  62 001a D150     		str	r1, [r2, r3]
  44:.\DSP_Class.c ****             humArray[i] = EMPTY;
  63              		.loc 1 44 0
  64 001c FB1D     		add	r3, r7, #7
  65 001e 1A78     		ldrb	r2, [r3]
  66 0020 304B     		ldr	r3, .L8+4
  67 0022 9200     		lsl	r2, r2, #2
  68 0024 0121     		mov	r1, #1
  69 0026 4942     		neg	r1, r1
  70 0028 D150     		str	r1, [r2, r3]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 3


  71              	.LBB3:
  45:.\DSP_Class.c ****             {
  46:.\DSP_Class.c ****                 uint8 j;
  47:.\DSP_Class.c ****                 for(j = 0 ; j<NUMBER_OF_SOILHUM_SENSORS ; j++){
  72              		.loc 1 47 0
  73 002a BB1D     		add	r3, r7, #6
  74 002c 0022     		mov	r2, #0
  75 002e 1A70     		strb	r2, [r3]
  76 0030 10E0     		b	.L3
  77              	.L4:
  48:.\DSP_Class.c ****                     soilHumArray[i][j] = EMPTY;
  78              		.loc 1 48 0 discriminator 2
  79 0032 FB1D     		add	r3, r7, #7
  80 0034 1978     		ldrb	r1, [r3]
  81 0036 BB1D     		add	r3, r7, #6
  82 0038 1A78     		ldrb	r2, [r3]
  83 003a 2B4B     		ldr	r3, .L8+8
  84 003c 6420     		mov	r0, #100
  85 003e 4143     		mul	r1, r0
  86 0040 8A18     		add	r2, r1, r2
  87 0042 5200     		lsl	r2, r2, #1
  88 0044 0121     		mov	r1, #1
  89 0046 4942     		neg	r1, r1
  90 0048 D152     		strh	r1, [r2, r3]
  47:.\DSP_Class.c ****                 for(j = 0 ; j<NUMBER_OF_SOILHUM_SENSORS ; j++){
  91              		.loc 1 47 0 discriminator 2
  92 004a BB1D     		add	r3, r7, #6
  93 004c 1A78     		ldrb	r2, [r3]
  94 004e BB1D     		add	r3, r7, #6
  95 0050 0132     		add	r2, r2, #1
  96 0052 1A70     		strb	r2, [r3]
  97              	.L3:
  47:.\DSP_Class.c ****                 for(j = 0 ; j<NUMBER_OF_SOILHUM_SENSORS ; j++){
  98              		.loc 1 47 0 is_stmt 0 discriminator 1
  99 0054 BB1D     		add	r3, r7, #6
 100 0056 1B78     		ldrb	r3, [r3]
 101 0058 052B     		cmp	r3, #5
 102 005a EAD9     		bls	.L4
 103              	.LBE3:
  49:.\DSP_Class.c ****                 }
  50:.\DSP_Class.c ****             }
  51:.\DSP_Class.c ****             lightArray[i] = EMPTY;
 104              		.loc 1 51 0 is_stmt 1
 105 005c FB1D     		add	r3, r7, #7
 106 005e 1A78     		ldrb	r2, [r3]
 107 0060 224B     		ldr	r3, .L8+12
 108 0062 9200     		lsl	r2, r2, #2
 109 0064 0121     		mov	r1, #1
 110 0066 4942     		neg	r1, r1
 111 0068 D150     		str	r1, [r2, r3]
  42:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 112              		.loc 1 42 0
 113 006a FB1D     		add	r3, r7, #7
 114 006c 1A78     		ldrb	r2, [r3]
 115 006e FB1D     		add	r3, r7, #7
 116 0070 0132     		add	r2, r2, #1
 117 0072 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 4


 118              	.L2:
  42:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 119              		.loc 1 42 0 is_stmt 0 discriminator 1
 120 0074 FB1D     		add	r3, r7, #7
 121 0076 1B78     		ldrb	r3, [r3]
 122 0078 632B     		cmp	r3, #99
 123 007a C8D9     		bls	.L5
 124              	.LBE2:
  52:.\DSP_Class.c ****             
  53:.\DSP_Class.c ****         }
  54:.\DSP_Class.c ****     }
  55:.\DSP_Class.c ****     tempArrayPtr = & tempArray[0];
 125              		.loc 1 55 0 is_stmt 1
 126 007c 1C4B     		ldr	r3, .L8+16
 127 007e 184A     		ldr	r2, .L8
 128 0080 1A60     		str	r2, [r3]
  56:.\DSP_Class.c ****     humArrayPtr = & humArray[0];
 129              		.loc 1 56 0
 130 0082 1C4B     		ldr	r3, .L8+20
 131 0084 174A     		ldr	r2, .L8+4
 132 0086 1A60     		str	r2, [r3]
 133              	.LBB4:
  57:.\DSP_Class.c ****     {
  58:.\DSP_Class.c ****         uint8 k;
  59:.\DSP_Class.c ****         for(k = 0 ; k<NUMBER_OF_SOILHUM_SENSORS ; k++){
 134              		.loc 1 59 0
 135 0088 7B1D     		add	r3, r7, #5
 136 008a 0022     		mov	r2, #0
 137 008c 1A70     		strb	r2, [r3]
 138 008e 14E0     		b	.L6
 139              	.L7:
  60:.\DSP_Class.c ****             soilHumPtr[k] = & soilHumArray[k][0];
 140              		.loc 1 60 0 discriminator 2
 141 0090 7B1D     		add	r3, r7, #5
 142 0092 1A78     		ldrb	r2, [r3]
 143 0094 7B1D     		add	r3, r7, #5
 144 0096 1B78     		ldrb	r3, [r3]
 145 0098 C821     		mov	r1, #200
 146 009a 5943     		mul	r1, r3
 147 009c 124B     		ldr	r3, .L8+8
 148 009e C918     		add	r1, r1, r3
 149 00a0 154B     		ldr	r3, .L8+24
 150 00a2 9200     		lsl	r2, r2, #2
 151 00a4 D150     		str	r1, [r2, r3]
  61:.\DSP_Class.c ****             soilHum[k] = EMPTY; 
 152              		.loc 1 61 0 discriminator 2
 153 00a6 7B1D     		add	r3, r7, #5
 154 00a8 1B78     		ldrb	r3, [r3]
 155 00aa 144A     		ldr	r2, .L8+28
 156 00ac FF21     		mov	r1, #255
 157 00ae D154     		strb	r1, [r2, r3]
  59:.\DSP_Class.c ****         for(k = 0 ; k<NUMBER_OF_SOILHUM_SENSORS ; k++){
 158              		.loc 1 59 0 discriminator 2
 159 00b0 7B1D     		add	r3, r7, #5
 160 00b2 1A78     		ldrb	r2, [r3]
 161 00b4 7B1D     		add	r3, r7, #5
 162 00b6 0132     		add	r2, r2, #1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 5


 163 00b8 1A70     		strb	r2, [r3]
 164              	.L6:
  59:.\DSP_Class.c ****         for(k = 0 ; k<NUMBER_OF_SOILHUM_SENSORS ; k++){
 165              		.loc 1 59 0 is_stmt 0 discriminator 1
 166 00ba 7B1D     		add	r3, r7, #5
 167 00bc 1B78     		ldrb	r3, [r3]
 168 00be 052B     		cmp	r3, #5
 169 00c0 E6D9     		bls	.L7
 170              	.LBE4:
  62:.\DSP_Class.c ****             }
  63:.\DSP_Class.c ****     }
  64:.\DSP_Class.c ****     lightArrayPtr = & lightArray[0];
 171              		.loc 1 64 0 is_stmt 1
 172 00c2 0F4B     		ldr	r3, .L8+32
 173 00c4 094A     		ldr	r2, .L8+12
 174 00c6 1A60     		str	r2, [r3]
  65:.\DSP_Class.c ****     temp = EMPTY;
 175              		.loc 1 65 0
 176 00c8 0E4B     		ldr	r3, .L8+36
 177 00ca FF22     		mov	r2, #255
 178 00cc 1A70     		strb	r2, [r3]
  66:.\DSP_Class.c ****     hum = EMPTY;
 179              		.loc 1 66 0
 180 00ce 0E4B     		ldr	r3, .L8+40
 181 00d0 FF22     		mov	r2, #255
 182 00d2 1A70     		strb	r2, [r3]
  67:.\DSP_Class.c ****     light = EMPTY;
 183              		.loc 1 67 0
 184 00d4 0D4B     		ldr	r3, .L8+44
 185 00d6 FF22     		mov	r2, #255
 186 00d8 1A70     		strb	r2, [r3]
  68:.\DSP_Class.c **** }
 187              		.loc 1 68 0
 188 00da BD46     		mov	sp, r7
 189 00dc 02B0     		add	sp, sp, #8
 190              		@ sp needed
 191 00de 80BD     		pop	{r7, pc}
 192              	.L9:
 193              		.align	2
 194              	.L8:
 195 00e0 00000000 		.word	tempArray
 196 00e4 00000000 		.word	humArray
 197 00e8 00000000 		.word	soilHumArray
 198 00ec 00000000 		.word	lightArray
 199 00f0 00000000 		.word	tempArrayPtr
 200 00f4 00000000 		.word	humArrayPtr
 201 00f8 00000000 		.word	soilHumPtr
 202 00fc 00000000 		.word	soilHum
 203 0100 00000000 		.word	lightArrayPtr
 204 0104 00000000 		.word	temp
 205 0108 00000000 		.word	hum
 206 010c 00000000 		.word	light
 207              		.cfi_endproc
 208              	.LFE33:
 209              		.size	initDSP, .-initDSP
 210              		.section	.text.getTemp_DSP,"ax",%progbits
 211              		.align	2
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 6


 212              		.global	getTemp_DSP
 213              		.code	16
 214              		.thumb_func
 215              		.type	getTemp_DSP, %function
 216              	getTemp_DSP:
 217              	.LFB34:
  69:.\DSP_Class.c **** 
  70:.\DSP_Class.c **** uint8 getTemp_DSP(void){
 218              		.loc 1 70 0
 219              		.cfi_startproc
 220 0000 80B5     		push	{r7, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 7, -8
 223              		.cfi_offset 14, -4
 224 0002 00AF     		add	r7, sp, #0
 225              		.cfi_def_cfa_register 7
  71:.\DSP_Class.c ****     return temp;
 226              		.loc 1 71 0
 227 0004 024B     		ldr	r3, .L12
 228 0006 1B78     		ldrb	r3, [r3]
  72:.\DSP_Class.c **** }
 229              		.loc 1 72 0
 230 0008 181C     		mov	r0, r3
 231 000a BD46     		mov	sp, r7
 232              		@ sp needed
 233 000c 80BD     		pop	{r7, pc}
 234              	.L13:
 235 000e C046     		.align	2
 236              	.L12:
 237 0010 00000000 		.word	temp
 238              		.cfi_endproc
 239              	.LFE34:
 240              		.size	getTemp_DSP, .-getTemp_DSP
 241              		.section	.text.getHum_DSP,"ax",%progbits
 242              		.align	2
 243              		.global	getHum_DSP
 244              		.code	16
 245              		.thumb_func
 246              		.type	getHum_DSP, %function
 247              	getHum_DSP:
 248              	.LFB35:
  73:.\DSP_Class.c **** 
  74:.\DSP_Class.c **** uint8 getHum_DSP(void){
 249              		.loc 1 74 0
 250              		.cfi_startproc
 251 0000 80B5     		push	{r7, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
  75:.\DSP_Class.c ****     return hum;
 257              		.loc 1 75 0
 258 0004 024B     		ldr	r3, .L16
 259 0006 1B78     		ldrb	r3, [r3]
  76:.\DSP_Class.c **** }
 260              		.loc 1 76 0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 7


 261 0008 181C     		mov	r0, r3
 262 000a BD46     		mov	sp, r7
 263              		@ sp needed
 264 000c 80BD     		pop	{r7, pc}
 265              	.L17:
 266 000e C046     		.align	2
 267              	.L16:
 268 0010 00000000 		.word	hum
 269              		.cfi_endproc
 270              	.LFE35:
 271              		.size	getHum_DSP, .-getHum_DSP
 272              		.section	.text.getSoilHum_DSP,"ax",%progbits
 273              		.align	2
 274              		.global	getSoilHum_DSP
 275              		.code	16
 276              		.thumb_func
 277              		.type	getSoilHum_DSP, %function
 278              	getSoilHum_DSP:
 279              	.LFB36:
  77:.\DSP_Class.c **** 
  78:.\DSP_Class.c **** uint8 getSoilHum_DSP(uint8 index){
 280              		.loc 1 78 0
 281              		.cfi_startproc
 282 0000 80B5     		push	{r7, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 7, -8
 285              		.cfi_offset 14, -4
 286 0002 82B0     		sub	sp, sp, #8
 287              		.cfi_def_cfa_offset 16
 288 0004 00AF     		add	r7, sp, #0
 289              		.cfi_def_cfa_register 7
 290 0006 021C     		mov	r2, r0
 291 0008 FB1D     		add	r3, r7, #7
 292 000a 1A70     		strb	r2, [r3]
  79:.\DSP_Class.c ****     return soilHum[index];
 293              		.loc 1 79 0
 294 000c FB1D     		add	r3, r7, #7
 295 000e 1B78     		ldrb	r3, [r3]
 296 0010 024A     		ldr	r2, .L20
 297 0012 D35C     		ldrb	r3, [r2, r3]
  80:.\DSP_Class.c **** }
 298              		.loc 1 80 0
 299 0014 181C     		mov	r0, r3
 300 0016 BD46     		mov	sp, r7
 301 0018 02B0     		add	sp, sp, #8
 302              		@ sp needed
 303 001a 80BD     		pop	{r7, pc}
 304              	.L21:
 305              		.align	2
 306              	.L20:
 307 001c 00000000 		.word	soilHum
 308              		.cfi_endproc
 309              	.LFE36:
 310              		.size	getSoilHum_DSP, .-getSoilHum_DSP
 311              		.section	.text.getLight_DSP,"ax",%progbits
 312              		.align	2
 313              		.global	getLight_DSP
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 8


 314              		.code	16
 315              		.thumb_func
 316              		.type	getLight_DSP, %function
 317              	getLight_DSP:
 318              	.LFB37:
  81:.\DSP_Class.c **** 
  82:.\DSP_Class.c **** uint8 getLight_DSP(void){
 319              		.loc 1 82 0
 320              		.cfi_startproc
 321 0000 80B5     		push	{r7, lr}
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 7, -8
 324              		.cfi_offset 14, -4
 325 0002 00AF     		add	r7, sp, #0
 326              		.cfi_def_cfa_register 7
  83:.\DSP_Class.c ****     return light;
 327              		.loc 1 83 0
 328 0004 024B     		ldr	r3, .L24
 329 0006 1B78     		ldrb	r3, [r3]
  84:.\DSP_Class.c **** }
 330              		.loc 1 84 0
 331 0008 181C     		mov	r0, r3
 332 000a BD46     		mov	sp, r7
 333              		@ sp needed
 334 000c 80BD     		pop	{r7, pc}
 335              	.L25:
 336 000e C046     		.align	2
 337              	.L24:
 338 0010 00000000 		.word	light
 339              		.cfi_endproc
 340              	.LFE37:
 341              		.size	getLight_DSP, .-getLight_DSP
 342              		.global	__aeabi_ldivmod
 343              		.global	__aeabi_l2f
 344              		.global	__aeabi_fcmplt
 345              		.global	__aeabi_fcmpgt
 346              		.global	__aeabi_fadd
 347              		.global	__aeabi_f2uiz
 348              		.section	.text.avgTemp,"ax",%progbits
 349              		.align	2
 350              		.global	avgTemp
 351              		.code	16
 352              		.thumb_func
 353              		.type	avgTemp, %function
 354              	avgTemp:
 355              	.LFB38:
  85:.\DSP_Class.c **** 
  86:.\DSP_Class.c **** void avgTemp(void){
 356              		.loc 1 86 0
 357              		.cfi_startproc
 358 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 359              		.cfi_def_cfa_offset 20
 360              		.cfi_offset 4, -20
 361              		.cfi_offset 5, -16
 362              		.cfi_offset 6, -12
 363              		.cfi_offset 7, -8
 364              		.cfi_offset 14, -4
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 9


 365 0002 93B0     		sub	sp, sp, #76
 366              		.cfi_def_cfa_offset 96
 367 0004 00AF     		add	r7, sp, #0
 368              		.cfi_def_cfa_register 7
  87:.\DSP_Class.c ****     uint8 skip = 0;
 369              		.loc 1 87 0
 370 0006 381C     		mov	r0, r7
 371 0008 4730     		add	r0, r0, #71
 372 000a 7860     		str	r0, [r7, #4]
 373 000c 0023     		mov	r3, #0
 374 000e 9C46     		mov	ip, r3
 375 0010 6046     		mov	r0, ip
 376 0012 7C68     		ldr	r4, [r7, #4]
 377 0014 2070     		strb	r0, [r4]
  88:.\DSP_Class.c ****     int64 avgTempVar = 0;
 378              		.loc 1 88 0
 379 0016 0023     		mov	r3, #0
 380 0018 0024     		mov	r4, #0
 381 001a BB62     		str	r3, [r7, #40]
 382 001c FC62     		str	r4, [r7, #44]
 383 001e BB6A     		ldr	r3, [r7, #40]
 384 0020 FC6A     		ldr	r4, [r7, #44]
 385 0022 BB63     		str	r3, [r7, #56]
 386 0024 FC63     		str	r4, [r7, #60]
 387              	.LBB5:
  89:.\DSP_Class.c ****     {
  90:.\DSP_Class.c ****         uint8 i;
  91:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 388              		.loc 1 91 0
 389 0026 381C     		mov	r0, r7
 390 0028 3730     		add	r0, r0, #55
 391 002a 0024     		mov	r4, #0
 392 002c A446     		mov	ip, r4
 393 002e 6346     		mov	r3, ip
 394 0030 0370     		strb	r3, [r0]
 395 0032 3BE0     		b	.L27
 396              	.L30:
  92:.\DSP_Class.c ****             if(tempArray[i]>=0){
 397              		.loc 1 92 0
 398 0034 381C     		mov	r0, r7
 399 0036 3730     		add	r0, r0, #55
 400 0038 0078     		ldrb	r0, [r0]
 401 003a 8446     		mov	ip, r0
 402 003c 5648     		ldr	r0, .L40
 403 003e 6446     		mov	r4, ip
 404 0040 A400     		lsl	r4, r4, #2
 405 0042 A446     		mov	ip, r4
 406 0044 6346     		mov	r3, ip
 407 0046 1858     		ldr	r0, [r3, r0]
 408 0048 0028     		cmp	r0, #0
 409 004a 1BDB     		blt	.L28
  93:.\DSP_Class.c ****                 avgTempVar += tempArray[i];
 410              		.loc 1 93 0
 411 004c 381C     		mov	r0, r7
 412 004e 3730     		add	r0, r0, #55
 413 0050 0078     		ldrb	r0, [r0]
 414 0052 8446     		mov	ip, r0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 10


 415 0054 5048     		ldr	r0, .L40
 416 0056 6446     		mov	r4, ip
 417 0058 A400     		lsl	r4, r4, #2
 418 005a A446     		mov	ip, r4
 419 005c 6346     		mov	r3, ip
 420 005e 1858     		ldr	r0, [r3, r0]
 421 0060 011C     		mov	r1, r0
 422 0062 C017     		asr	r0, r0, #31
 423 0064 021C     		mov	r2, r0
 424 0066 BB6B     		ldr	r3, [r7, #56]
 425 0068 FC6B     		ldr	r4, [r7, #60]
 426 006a BB61     		str	r3, [r7, #24]
 427 006c FC61     		str	r4, [r7, #28]
 428 006e BB69     		ldr	r3, [r7, #24]
 429 0070 FC69     		ldr	r4, [r7, #28]
 430 0072 5B18     		add	r3, r3, r1
 431 0074 5441     		adc	r4, r4, r2
 432 0076 3B62     		str	r3, [r7, #32]
 433 0078 7C62     		str	r4, [r7, #36]
 434 007a 3B6A     		ldr	r3, [r7, #32]
 435 007c 7C6A     		ldr	r4, [r7, #36]
 436 007e BB63     		str	r3, [r7, #56]
 437 0080 FC63     		str	r4, [r7, #60]
 438 0082 09E0     		b	.L29
 439              	.L28:
  94:.\DSP_Class.c ****             }
  95:.\DSP_Class.c ****             else{
  96:.\DSP_Class.c ****                 skip++;
 440              		.loc 1 96 0
 441 0084 381C     		mov	r0, r7
 442 0086 4730     		add	r0, r0, #71
 443 0088 0078     		ldrb	r0, [r0]
 444 008a 8446     		mov	ip, r0
 445 008c 381C     		mov	r0, r7
 446 008e 4730     		add	r0, r0, #71
 447 0090 0124     		mov	r4, #1
 448 0092 A444     		add	ip, ip, r4
 449 0094 6346     		mov	r3, ip
 450 0096 0370     		strb	r3, [r0]
 451              	.L29:
  91:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 452              		.loc 1 91 0
 453 0098 381C     		mov	r0, r7
 454 009a 3730     		add	r0, r0, #55
 455 009c 0078     		ldrb	r0, [r0]
 456 009e 8446     		mov	ip, r0
 457 00a0 381C     		mov	r0, r7
 458 00a2 3730     		add	r0, r0, #55
 459 00a4 0124     		mov	r4, #1
 460 00a6 A444     		add	ip, ip, r4
 461 00a8 6346     		mov	r3, ip
 462 00aa 0370     		strb	r3, [r0]
 463              	.L27:
  91:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 464              		.loc 1 91 0 is_stmt 0 discriminator 1
 465 00ac 381C     		mov	r0, r7
 466 00ae 3730     		add	r0, r0, #55
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 11


 467 00b0 0078     		ldrb	r0, [r0]
 468 00b2 6328     		cmp	r0, #99
 469 00b4 BED9     		bls	.L30
 470              	.LBE5:
  97:.\DSP_Class.c ****             }
  98:.\DSP_Class.c ****         }
  99:.\DSP_Class.c ****     }
 100:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 101:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 471              		.loc 1 101 0 is_stmt 1
 472 00b6 3A1C     		mov	r2, r7
 473 00b8 4732     		add	r2, r2, #71
 474 00ba 1278     		ldrb	r2, [r2]
 475 00bc 6421     		mov	r1, #100
 476 00be 8A1A     		sub	r2, r1, r2
 477 00c0 092A     		cmp	r2, #9
 478 00c2 63DD     		ble	.L31
 479              	.LBB6:
 102:.\DSP_Class.c ****         avgTempVar/=(ARRAYSIZE-skip);                               // Calculate the average value
 480              		.loc 1 102 0
 481 00c4 3A1C     		mov	r2, r7
 482 00c6 4732     		add	r2, r2, #71
 483 00c8 1278     		ldrb	r2, [r2]
 484 00ca 6421     		mov	r1, #100
 485 00cc 8A1A     		sub	r2, r1, r2
 486 00ce BA60     		str	r2, [r7, #8]
 487 00d0 D217     		asr	r2, r2, #31
 488 00d2 FA60     		str	r2, [r7, #12]
 489 00d4 B86B     		ldr	r0, [r7, #56]
 490 00d6 F96B     		ldr	r1, [r7, #60]
 491 00d8 BA68     		ldr	r2, [r7, #8]
 492 00da FB68     		ldr	r3, [r7, #12]
 493 00dc FFF7FEFF 		bl	__aeabi_ldivmod
 494 00e0 031C     		mov	r3, r0
 495 00e2 0C1C     		mov	r4, r1
 496 00e4 BB63     		str	r3, [r7, #56]
 497 00e6 FC63     		str	r4, [r7, #60]
 103:.\DSP_Class.c ****         float tempInDegreesC = (avgTempVar/((2^14)-2))*165-40;      // Conversion formula from data
 498              		.loc 1 103 0
 499 00e8 BB6B     		ldr	r3, [r7, #56]
 500 00ea FC6B     		ldr	r4, [r7, #60]
 501 00ec 181C     		mov	r0, r3
 502 00ee 211C     		mov	r1, r4
 503 00f0 0A22     		mov	r2, #10
 504 00f2 0023     		mov	r3, #0
 505 00f4 FFF7FEFF 		bl	__aeabi_ldivmod
 506 00f8 031C     		mov	r3, r0
 507 00fa 0C1C     		mov	r4, r1
 508 00fc 191C     		mov	r1, r3
 509 00fe 221C     		mov	r2, r4
 510 0100 0B1C     		mov	r3, r1
 511 0102 141C     		mov	r4, r2
 512 0104 980F     		lsr	r0, r3, #30
 513 0106 A500     		lsl	r5, r4, #2
 514 0108 7D61     		str	r5, [r7, #20]
 515 010a 7D69     		ldr	r5, [r7, #20]
 516 010c 0543     		orr	r5, r0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 12


 517 010e 7D61     		str	r5, [r7, #20]
 518 0110 9800     		lsl	r0, r3, #2
 519 0112 3861     		str	r0, [r7, #16]
 520 0114 3B69     		ldr	r3, [r7, #16]
 521 0116 7C69     		ldr	r4, [r7, #20]
 522 0118 5B18     		add	r3, r3, r1
 523 011a 5441     		adc	r4, r4, r2
 524 011c DA0E     		lsr	r2, r3, #27
 525 011e 6601     		lsl	r6, r4, #5
 526 0120 1643     		orr	r6, r2
 527 0122 5D01     		lsl	r5, r3, #5
 528 0124 191C     		mov	r1, r3
 529 0126 221C     		mov	r2, r4
 530 0128 4919     		add	r1, r1, r5
 531 012a 7241     		adc	r2, r2, r6
 532 012c 2823     		mov	r3, #40
 533 012e 5B42     		neg	r3, r3
 534 0130 DC17     		asr	r4, r3, #31
 535 0132 5B18     		add	r3, r3, r1
 536 0134 5441     		adc	r4, r4, r2
 537 0136 181C     		mov	r0, r3
 538 0138 211C     		mov	r1, r4
 539 013a FFF7FEFF 		bl	__aeabi_l2f
 540 013e 031C     		add	r3, r0, #0
 541 0140 3B63     		str	r3, [r7, #48]
 104:.\DSP_Class.c ****         
 105:.\DSP_Class.c ****         // tempInDegreesC is limited to -20 and +80 degrees C
 106:.\DSP_Class.c ****         if ( -19.5 > tempInDegreesC){
 542              		.loc 1 106 0
 543 0142 386B     		ldr	r0, [r7, #48]
 544 0144 1549     		ldr	r1, .L40+4
 545 0146 FFF7FEFF 		bl	__aeabi_fcmplt
 546 014a 031C     		mov	r3, r0
 547 014c 002B     		cmp	r3, #0
 548 014e 02D0     		beq	.L39
 107:.\DSP_Class.c ****             tempInDegreesC = -19.5;
 549              		.loc 1 107 0
 550 0150 124B     		ldr	r3, .L40+4
 551 0152 3B63     		str	r3, [r7, #48]
 552 0154 08E0     		b	.L34
 553              	.L39:
 108:.\DSP_Class.c ****         }
 109:.\DSP_Class.c ****         else if(tempInDegreesC > 80){
 554              		.loc 1 109 0
 555 0156 386B     		ldr	r0, [r7, #48]
 556 0158 1149     		ldr	r1, .L40+8
 557 015a FFF7FEFF 		bl	__aeabi_fcmpgt
 558 015e 031C     		mov	r3, r0
 559 0160 002B     		cmp	r3, #0
 560 0162 01D0     		beq	.L34
 110:.\DSP_Class.c ****             tempInDegreesC = 80;
 561              		.loc 1 110 0
 562 0164 0E4B     		ldr	r3, .L40+8
 563 0166 3B63     		str	r3, [r7, #48]
 564              	.L34:
 111:.\DSP_Class.c ****         }
 112:.\DSP_Class.c ****         temp = (tempInDegreesC+20)*2;       // Conversion to UART protocol
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 13


 565              		.loc 1 112 0 discriminator 1
 566 0168 386B     		ldr	r0, [r7, #48]
 567 016a 0E49     		ldr	r1, .L40+12
 568 016c FFF7FEFF 		bl	__aeabi_fadd
 569 0170 031C     		add	r3, r0, #0
 570 0172 181C     		add	r0, r3, #0
 571 0174 191C     		add	r1, r3, #0
 572 0176 FFF7FEFF 		bl	__aeabi_fadd
 573 017a 031C     		add	r3, r0, #0
 574 017c 181C     		add	r0, r3, #0
 575 017e FFF7FEFF 		bl	__aeabi_f2uiz
 576 0182 031C     		mov	r3, r0
 577 0184 DAB2     		uxtb	r2, r3
 578 0186 084B     		ldr	r3, .L40+16
 579 0188 1A70     		strb	r2, [r3]
 580              	.LBE6:
 581 018a 02E0     		b	.L26
 582              	.L31:
 113:.\DSP_Class.c ****     }
 114:.\DSP_Class.c ****     else{
 115:.\DSP_Class.c ****         temp = 0;
 583              		.loc 1 115 0
 584 018c 064B     		ldr	r3, .L40+16
 585 018e 0022     		mov	r2, #0
 586 0190 1A70     		strb	r2, [r3]
 587              	.L26:
 116:.\DSP_Class.c ****     }
 117:.\DSP_Class.c **** }
 588              		.loc 1 117 0
 589 0192 BD46     		mov	sp, r7
 590 0194 13B0     		add	sp, sp, #76
 591              		@ sp needed
 592 0196 F0BD     		pop	{r4, r5, r6, r7, pc}
 593              	.L41:
 594              		.align	2
 595              	.L40:
 596 0198 00000000 		.word	tempArray
 597 019c 00009CC1 		.word	-1046740992
 598 01a0 0000A042 		.word	1117782016
 599 01a4 0000A041 		.word	1101004800
 600 01a8 00000000 		.word	temp
 601              		.cfi_endproc
 602              	.LFE38:
 603              		.size	avgTemp, .-avgTemp
 604              		.section	.text.avgHum,"ax",%progbits
 605              		.align	2
 606              		.global	avgHum
 607              		.code	16
 608              		.thumb_func
 609              		.type	avgHum, %function
 610              	avgHum:
 611              	.LFB39:
 118:.\DSP_Class.c **** 
 119:.\DSP_Class.c **** void avgHum(void){
 612              		.loc 1 119 0
 613              		.cfi_startproc
 614 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 14


 615              		.cfi_def_cfa_offset 20
 616              		.cfi_offset 4, -20
 617              		.cfi_offset 5, -16
 618              		.cfi_offset 6, -12
 619              		.cfi_offset 7, -8
 620              		.cfi_offset 14, -4
 621 0002 87B0     		sub	sp, sp, #28
 622              		.cfi_def_cfa_offset 48
 623 0004 00AF     		add	r7, sp, #0
 624              		.cfi_def_cfa_register 7
 120:.\DSP_Class.c ****     uint8 skip = 0;
 625              		.loc 1 120 0
 626 0006 381C     		mov	r0, r7
 627 0008 1730     		add	r0, r0, #23
 628 000a 0025     		mov	r5, #0
 629 000c 0570     		strb	r5, [r0]
 121:.\DSP_Class.c ****     int64 avgHumVar = 0;
 630              		.loc 1 121 0
 631 000e 0025     		mov	r5, #0
 632 0010 0026     		mov	r6, #0
 633 0012 BD60     		str	r5, [r7, #8]
 634 0014 FE60     		str	r6, [r7, #12]
 635              	.LBB7:
 122:.\DSP_Class.c ****     {
 123:.\DSP_Class.c ****         uint8 i;
 124:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 636              		.loc 1 124 0
 637 0016 F81D     		add	r0, r7, #7
 638 0018 0025     		mov	r5, #0
 639 001a 0570     		strb	r5, [r0]
 640 001c 21E0     		b	.L43
 641              	.L46:
 125:.\DSP_Class.c ****             if(humArray[i]>=0){
 642              		.loc 1 125 0
 643 001e F81D     		add	r0, r7, #7
 644 0020 0578     		ldrb	r5, [r0]
 645 0022 3348     		ldr	r0, .L51
 646 0024 AD00     		lsl	r5, r5, #2
 647 0026 2858     		ldr	r0, [r5, r0]
 648 0028 0028     		cmp	r0, #0
 649 002a 0EDB     		blt	.L44
 126:.\DSP_Class.c ****                 avgHumVar += humArray[i];
 650              		.loc 1 126 0
 651 002c F81D     		add	r0, r7, #7
 652 002e 0578     		ldrb	r5, [r0]
 653 0030 2F48     		ldr	r0, .L51
 654 0032 AD00     		lsl	r5, r5, #2
 655 0034 2858     		ldr	r0, [r5, r0]
 656 0036 011C     		mov	r1, r0
 657 0038 C017     		asr	r0, r0, #31
 658 003a 021C     		mov	r2, r0
 659 003c BD68     		ldr	r5, [r7, #8]
 660 003e FE68     		ldr	r6, [r7, #12]
 661 0040 6D18     		add	r5, r5, r1
 662 0042 5641     		adc	r6, r6, r2
 663 0044 BD60     		str	r5, [r7, #8]
 664 0046 FE60     		str	r6, [r7, #12]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 15


 665 0048 06E0     		b	.L45
 666              	.L44:
 127:.\DSP_Class.c ****             }
 128:.\DSP_Class.c ****             else{
 129:.\DSP_Class.c ****                 skip++;
 667              		.loc 1 129 0
 668 004a 381C     		mov	r0, r7
 669 004c 1730     		add	r0, r0, #23
 670 004e 0578     		ldrb	r5, [r0]
 671 0050 381C     		mov	r0, r7
 672 0052 1730     		add	r0, r0, #23
 673 0054 0135     		add	r5, r5, #1
 674 0056 0570     		strb	r5, [r0]
 675              	.L45:
 124:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 676              		.loc 1 124 0
 677 0058 F81D     		add	r0, r7, #7
 678 005a 0578     		ldrb	r5, [r0]
 679 005c F81D     		add	r0, r7, #7
 680 005e 0135     		add	r5, r5, #1
 681 0060 0570     		strb	r5, [r0]
 682              	.L43:
 124:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 683              		.loc 1 124 0 is_stmt 0 discriminator 1
 684 0062 F81D     		add	r0, r7, #7
 685 0064 0078     		ldrb	r0, [r0]
 686 0066 6328     		cmp	r0, #99
 687 0068 D9D9     		bls	.L46
 688              	.LBE7:
 130:.\DSP_Class.c ****             }
 131:.\DSP_Class.c ****         }
 132:.\DSP_Class.c ****     }
 133:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 134:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 689              		.loc 1 134 0 is_stmt 1
 690 006a 3A1C     		mov	r2, r7
 691 006c 1732     		add	r2, r2, #23
 692 006e 1278     		ldrb	r2, [r2]
 693 0070 6421     		mov	r1, #100
 694 0072 8A1A     		sub	r2, r1, r2
 695 0074 092A     		cmp	r2, #9
 696 0076 34DD     		ble	.L47
 697              	.LBB8:
 135:.\DSP_Class.c ****         avgHumVar/=(ARRAYSIZE-skip);                                // Calculate the average value
 698              		.loc 1 135 0
 699 0078 3A1C     		mov	r2, r7
 700 007a 1732     		add	r2, r2, #23
 701 007c 1278     		ldrb	r2, [r2]
 702 007e 6421     		mov	r1, #100
 703 0080 8A1A     		sub	r2, r1, r2
 704 0082 131C     		mov	r3, r2
 705 0084 D217     		asr	r2, r2, #31
 706 0086 141C     		mov	r4, r2
 707 0088 B868     		ldr	r0, [r7, #8]
 708 008a F968     		ldr	r1, [r7, #12]
 709 008c 1A1C     		mov	r2, r3
 710 008e 231C     		mov	r3, r4
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 16


 711 0090 FFF7FEFF 		bl	__aeabi_ldivmod
 712 0094 031C     		mov	r3, r0
 713 0096 0C1C     		mov	r4, r1
 714 0098 BB60     		str	r3, [r7, #8]
 715 009a FC60     		str	r4, [r7, #12]
 136:.\DSP_Class.c ****         uint8 humInRH = (avgHumVar/((2^14)-2))*100;                 // Conversion formula from data
 716              		.loc 1 136 0
 717 009c BB68     		ldr	r3, [r7, #8]
 718 009e FC68     		ldr	r4, [r7, #12]
 719 00a0 181C     		mov	r0, r3
 720 00a2 211C     		mov	r1, r4
 721 00a4 0A22     		mov	r2, #10
 722 00a6 0023     		mov	r3, #0
 723 00a8 FFF7FEFF 		bl	__aeabi_ldivmod
 724 00ac 031C     		mov	r3, r0
 725 00ae 0C1C     		mov	r4, r1
 726 00b0 DAB2     		uxtb	r2, r3
 727 00b2 BB1D     		add	r3, r7, #6
 728 00b4 6421     		mov	r1, #100
 729 00b6 4A43     		mul	r2, r1
 730 00b8 1A70     		strb	r2, [r3]
 137:.\DSP_Class.c ****         
 138:.\DSP_Class.c ****         // humInRH is limited to 1 and 100 RH
 139:.\DSP_Class.c ****         if(humInRH <= 0){
 731              		.loc 1 139 0
 732 00ba BB1D     		add	r3, r7, #6
 733 00bc 1B78     		ldrb	r3, [r3]
 734 00be 002B     		cmp	r3, #0
 735 00c0 03D1     		bne	.L48
 140:.\DSP_Class.c ****             humInRH = 1;
 736              		.loc 1 140 0
 737 00c2 BB1D     		add	r3, r7, #6
 738 00c4 0122     		mov	r2, #1
 739 00c6 1A70     		strb	r2, [r3]
 740 00c8 06E0     		b	.L49
 741              	.L48:
 141:.\DSP_Class.c ****         }
 142:.\DSP_Class.c ****         else if(humInRH > 100){
 742              		.loc 1 142 0
 743 00ca BB1D     		add	r3, r7, #6
 744 00cc 1B78     		ldrb	r3, [r3]
 745 00ce 642B     		cmp	r3, #100
 746 00d0 02D9     		bls	.L49
 143:.\DSP_Class.c ****             humInRH = 100;
 747              		.loc 1 143 0
 748 00d2 BB1D     		add	r3, r7, #6
 749 00d4 6422     		mov	r2, #100
 750 00d6 1A70     		strb	r2, [r3]
 751              	.L49:
 144:.\DSP_Class.c ****         }
 145:.\DSP_Class.c ****         hum = humInRH;
 752              		.loc 1 145 0 discriminator 1
 753 00d8 064B     		ldr	r3, .L51+4
 754 00da BA1D     		add	r2, r7, #6
 755 00dc 1278     		ldrb	r2, [r2]
 756 00de 1A70     		strb	r2, [r3]
 757              	.LBE8:
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 17


 758 00e0 02E0     		b	.L42
 759              	.L47:
 146:.\DSP_Class.c ****     }
 147:.\DSP_Class.c ****     else{
 148:.\DSP_Class.c ****     hum = 0;
 760              		.loc 1 148 0
 761 00e2 044B     		ldr	r3, .L51+4
 762 00e4 0022     		mov	r2, #0
 763 00e6 1A70     		strb	r2, [r3]
 764              	.L42:
 149:.\DSP_Class.c ****     }
 150:.\DSP_Class.c **** }
 765              		.loc 1 150 0
 766 00e8 BD46     		mov	sp, r7
 767 00ea 07B0     		add	sp, sp, #28
 768              		@ sp needed
 769 00ec F0BD     		pop	{r4, r5, r6, r7, pc}
 770              	.L52:
 771 00ee C046     		.align	2
 772              	.L51:
 773 00f0 00000000 		.word	humArray
 774 00f4 00000000 		.word	hum
 775              		.cfi_endproc
 776              	.LFE39:
 777              		.size	avgHum, .-avgHum
 778              		.section	.text.avgSoilHum,"ax",%progbits
 779              		.align	2
 780              		.global	avgSoilHum
 781              		.code	16
 782              		.thumb_func
 783              		.type	avgSoilHum, %function
 784              	avgSoilHum:
 785              	.LFB40:
 151:.\DSP_Class.c **** 
 152:.\DSP_Class.c **** void avgSoilHum(uint8 index){
 786              		.loc 1 152 0
 787              		.cfi_startproc
 788 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 789              		.cfi_def_cfa_offset 20
 790              		.cfi_offset 4, -20
 791              		.cfi_offset 5, -16
 792              		.cfi_offset 6, -12
 793              		.cfi_offset 7, -8
 794              		.cfi_offset 14, -4
 795 0002 89B0     		sub	sp, sp, #36
 796              		.cfi_def_cfa_offset 56
 797 0004 00AF     		add	r7, sp, #0
 798              		.cfi_def_cfa_register 7
 799 0006 051C     		mov	r5, r0
 800 0008 F81D     		add	r0, r7, #7
 801 000a 0570     		strb	r5, [r0]
 153:.\DSP_Class.c ****     uint8 skip = 0;
 802              		.loc 1 153 0
 803 000c 381C     		mov	r0, r7
 804 000e 1F30     		add	r0, r0, #31
 805 0010 0025     		mov	r5, #0
 806 0012 0570     		strb	r5, [r0]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 18


 154:.\DSP_Class.c ****     int64 avgSoilHumVar = 0;
 807              		.loc 1 154 0
 808 0014 0025     		mov	r5, #0
 809 0016 0026     		mov	r6, #0
 810 0018 3D61     		str	r5, [r7, #16]
 811 001a 7E61     		str	r6, [r7, #20]
 812              	.LBB9:
 155:.\DSP_Class.c ****     {
 156:.\DSP_Class.c ****         uint8 i;
 157:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 813              		.loc 1 157 0
 814 001c 381C     		mov	r0, r7
 815 001e 0F30     		add	r0, r0, #15
 816 0020 0025     		mov	r5, #0
 817 0022 0570     		strb	r5, [r0]
 818 0024 37E0     		b	.L54
 819              	.L57:
 158:.\DSP_Class.c ****             if(soilHumArray[index][i]>=0){
 820              		.loc 1 158 0
 821 0026 F81D     		add	r0, r7, #7
 822 0028 0678     		ldrb	r6, [r0]
 823 002a 381C     		mov	r0, r7
 824 002c 0F30     		add	r0, r0, #15
 825 002e 0578     		ldrb	r5, [r0]
 826 0030 3A48     		ldr	r0, .L62
 827 0032 3860     		str	r0, [r7]
 828 0034 6420     		mov	r0, #100
 829 0036 8446     		mov	ip, r0
 830 0038 6046     		mov	r0, ip
 831 003a 4643     		mul	r6, r0
 832 003c 7519     		add	r5, r6, r5
 833 003e 6D00     		lsl	r5, r5, #1
 834 0040 3E68     		ldr	r6, [r7]
 835 0042 A85B     		ldrh	r0, [r5, r6]
 836 0044 00B2     		sxth	r0, r0
 837 0046 0028     		cmp	r0, #0
 838 0048 17DB     		blt	.L55
 159:.\DSP_Class.c ****                 avgSoilHumVar += soilHumArray[index][i];
 839              		.loc 1 159 0
 840 004a F81D     		add	r0, r7, #7
 841 004c 0678     		ldrb	r6, [r0]
 842 004e 381C     		mov	r0, r7
 843 0050 0F30     		add	r0, r0, #15
 844 0052 0578     		ldrb	r5, [r0]
 845 0054 3148     		ldr	r0, .L62
 846 0056 6422     		mov	r2, #100
 847 0058 9446     		mov	ip, r2
 848 005a 6246     		mov	r2, ip
 849 005c 5643     		mul	r6, r2
 850 005e 7519     		add	r5, r6, r5
 851 0060 6D00     		lsl	r5, r5, #1
 852 0062 285A     		ldrh	r0, [r5, r0]
 853 0064 00B2     		sxth	r0, r0
 854 0066 011C     		mov	r1, r0
 855 0068 C017     		asr	r0, r0, #31
 856 006a 021C     		mov	r2, r0
 857 006c 3D69     		ldr	r5, [r7, #16]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 19


 858 006e 7E69     		ldr	r6, [r7, #20]
 859 0070 6D18     		add	r5, r5, r1
 860 0072 5641     		adc	r6, r6, r2
 861 0074 3D61     		str	r5, [r7, #16]
 862 0076 7E61     		str	r6, [r7, #20]
 863 0078 06E0     		b	.L56
 864              	.L55:
 160:.\DSP_Class.c ****             }
 161:.\DSP_Class.c ****             else{
 162:.\DSP_Class.c ****                 skip++;
 865              		.loc 1 162 0
 866 007a 381C     		mov	r0, r7
 867 007c 1F30     		add	r0, r0, #31
 868 007e 0578     		ldrb	r5, [r0]
 869 0080 381C     		mov	r0, r7
 870 0082 1F30     		add	r0, r0, #31
 871 0084 0135     		add	r5, r5, #1
 872 0086 0570     		strb	r5, [r0]
 873              	.L56:
 157:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 874              		.loc 1 157 0
 875 0088 381C     		mov	r0, r7
 876 008a 0F30     		add	r0, r0, #15
 877 008c 0578     		ldrb	r5, [r0]
 878 008e 381C     		mov	r0, r7
 879 0090 0F30     		add	r0, r0, #15
 880 0092 0135     		add	r5, r5, #1
 881 0094 0570     		strb	r5, [r0]
 882              	.L54:
 157:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 883              		.loc 1 157 0 is_stmt 0 discriminator 1
 884 0096 381C     		mov	r0, r7
 885 0098 0F30     		add	r0, r0, #15
 886 009a 0078     		ldrb	r0, [r0]
 887 009c 6328     		cmp	r0, #99
 888 009e C2D9     		bls	.L57
 889              	.LBE9:
 163:.\DSP_Class.c ****             }
 164:.\DSP_Class.c ****         }
 165:.\DSP_Class.c ****     }
 166:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 167:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 890              		.loc 1 167 0 is_stmt 1
 891 00a0 3A1C     		mov	r2, r7
 892 00a2 1F32     		add	r2, r2, #31
 893 00a4 1278     		ldrb	r2, [r2]
 894 00a6 6421     		mov	r1, #100
 895 00a8 8A1A     		sub	r2, r1, r2
 896 00aa 092A     		cmp	r2, #9
 897 00ac 2DDD     		ble	.L58
 898              	.LBB10:
 168:.\DSP_Class.c ****         uint8 soilHumInRH = avgSoilHumVar/(ARRAYSIZE-skip);         // Calculate the average value 
 899              		.loc 1 168 0
 900 00ae 3A1C     		mov	r2, r7
 901 00b0 1F32     		add	r2, r2, #31
 902 00b2 1278     		ldrb	r2, [r2]
 903 00b4 6421     		mov	r1, #100
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 20


 904 00b6 8A1A     		sub	r2, r1, r2
 905 00b8 131C     		mov	r3, r2
 906 00ba D217     		asr	r2, r2, #31
 907 00bc 141C     		mov	r4, r2
 908 00be 3869     		ldr	r0, [r7, #16]
 909 00c0 7969     		ldr	r1, [r7, #20]
 910 00c2 1A1C     		mov	r2, r3
 911 00c4 231C     		mov	r3, r4
 912 00c6 FFF7FEFF 		bl	__aeabi_ldivmod
 913 00ca 031C     		mov	r3, r0
 914 00cc 0C1C     		mov	r4, r1
 915 00ce 3A1C     		mov	r2, r7
 916 00d0 0E32     		add	r2, r2, #14
 917 00d2 1370     		strb	r3, [r2]
 169:.\DSP_Class.c ****         
 170:.\DSP_Class.c ****         // soilHumInRH is limited to 1 and 100 RH
 171:.\DSP_Class.c ****         if(soilHumInRH <= 0){
 918              		.loc 1 171 0
 919 00d4 3B1C     		mov	r3, r7
 920 00d6 0E33     		add	r3, r3, #14
 921 00d8 1B78     		ldrb	r3, [r3]
 922 00da 002B     		cmp	r3, #0
 923 00dc 04D1     		bne	.L59
 172:.\DSP_Class.c ****             soilHumInRH = 1;
 924              		.loc 1 172 0
 925 00de 3B1C     		mov	r3, r7
 926 00e0 0E33     		add	r3, r3, #14
 927 00e2 0122     		mov	r2, #1
 928 00e4 1A70     		strb	r2, [r3]
 929 00e6 08E0     		b	.L60
 930              	.L59:
 173:.\DSP_Class.c ****         }
 174:.\DSP_Class.c ****         else if(soilHumInRH > 100){
 931              		.loc 1 174 0
 932 00e8 3B1C     		mov	r3, r7
 933 00ea 0E33     		add	r3, r3, #14
 934 00ec 1B78     		ldrb	r3, [r3]
 935 00ee 642B     		cmp	r3, #100
 936 00f0 03D9     		bls	.L60
 175:.\DSP_Class.c ****             soilHumInRH = 100;
 937              		.loc 1 175 0
 938 00f2 3B1C     		mov	r3, r7
 939 00f4 0E33     		add	r3, r3, #14
 940 00f6 6422     		mov	r2, #100
 941 00f8 1A70     		strb	r2, [r3]
 942              	.L60:
 176:.\DSP_Class.c ****         }
 177:.\DSP_Class.c ****         soilHum[index] = soilHumInRH;
 943              		.loc 1 177 0 discriminator 1
 944 00fa FB1D     		add	r3, r7, #7
 945 00fc 1B78     		ldrb	r3, [r3]
 946 00fe 084A     		ldr	r2, .L62+4
 947 0100 391C     		mov	r1, r7
 948 0102 0E31     		add	r1, r1, #14
 949 0104 0978     		ldrb	r1, [r1]
 950 0106 D154     		strb	r1, [r2, r3]
 951              	.LBE10:
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 21


 952 0108 04E0     		b	.L53
 953              	.L58:
 178:.\DSP_Class.c ****     }
 179:.\DSP_Class.c ****     else{
 180:.\DSP_Class.c ****     soilHum[index] = 0;
 954              		.loc 1 180 0
 955 010a FB1D     		add	r3, r7, #7
 956 010c 1B78     		ldrb	r3, [r3]
 957 010e 044A     		ldr	r2, .L62+4
 958 0110 0021     		mov	r1, #0
 959 0112 D154     		strb	r1, [r2, r3]
 960              	.L53:
 181:.\DSP_Class.c ****     }
 182:.\DSP_Class.c **** }
 961              		.loc 1 182 0
 962 0114 BD46     		mov	sp, r7
 963 0116 09B0     		add	sp, sp, #36
 964              		@ sp needed
 965 0118 F0BD     		pop	{r4, r5, r6, r7, pc}
 966              	.L63:
 967 011a C046     		.align	2
 968              	.L62:
 969 011c 00000000 		.word	soilHumArray
 970 0120 00000000 		.word	soilHum
 971              		.cfi_endproc
 972              	.LFE40:
 973              		.size	avgSoilHum, .-avgSoilHum
 974              		.global	__aeabi_idiv
 975              		.section	.text.avgLight,"ax",%progbits
 976              		.align	2
 977              		.global	avgLight
 978              		.code	16
 979              		.thumb_func
 980              		.type	avgLight, %function
 981              	avgLight:
 982              	.LFB41:
 183:.\DSP_Class.c **** 
 184:.\DSP_Class.c **** void avgLight(void){
 983              		.loc 1 184 0
 984              		.cfi_startproc
 985 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 986              		.cfi_def_cfa_offset 20
 987              		.cfi_offset 4, -20
 988              		.cfi_offset 5, -16
 989              		.cfi_offset 6, -12
 990              		.cfi_offset 7, -8
 991              		.cfi_offset 14, -4
 992 0002 87B0     		sub	sp, sp, #28
 993              		.cfi_def_cfa_offset 48
 994 0004 00AF     		add	r7, sp, #0
 995              		.cfi_def_cfa_register 7
 185:.\DSP_Class.c ****     uint8 skip = 0;
 996              		.loc 1 185 0
 997 0006 381C     		mov	r0, r7
 998 0008 1730     		add	r0, r0, #23
 999 000a 0025     		mov	r5, #0
 1000 000c 0570     		strb	r5, [r0]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 22


 186:.\DSP_Class.c ****     int64 avgLightVar = 0;
 1001              		.loc 1 186 0
 1002 000e 0025     		mov	r5, #0
 1003 0010 0026     		mov	r6, #0
 1004 0012 BD60     		str	r5, [r7, #8]
 1005 0014 FE60     		str	r6, [r7, #12]
 1006              	.LBB11:
 187:.\DSP_Class.c ****     {
 188:.\DSP_Class.c ****         uint8 i;
 189:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 1007              		.loc 1 189 0
 1008 0016 F81D     		add	r0, r7, #7
 1009 0018 0025     		mov	r5, #0
 1010 001a 0570     		strb	r5, [r0]
 1011 001c 21E0     		b	.L65
 1012              	.L68:
 190:.\DSP_Class.c ****             if(lightArray[i]>=0){
 1013              		.loc 1 190 0
 1014 001e F81D     		add	r0, r7, #7
 1015 0020 0578     		ldrb	r5, [r0]
 1016 0022 3448     		ldr	r0, .L73
 1017 0024 AD00     		lsl	r5, r5, #2
 1018 0026 2858     		ldr	r0, [r5, r0]
 1019 0028 0028     		cmp	r0, #0
 1020 002a 0EDB     		blt	.L66
 191:.\DSP_Class.c ****                 avgLightVar += lightArray[i];
 1021              		.loc 1 191 0
 1022 002c F81D     		add	r0, r7, #7
 1023 002e 0578     		ldrb	r5, [r0]
 1024 0030 3048     		ldr	r0, .L73
 1025 0032 AD00     		lsl	r5, r5, #2
 1026 0034 2858     		ldr	r0, [r5, r0]
 1027 0036 011C     		mov	r1, r0
 1028 0038 C017     		asr	r0, r0, #31
 1029 003a 021C     		mov	r2, r0
 1030 003c BD68     		ldr	r5, [r7, #8]
 1031 003e FE68     		ldr	r6, [r7, #12]
 1032 0040 6D18     		add	r5, r5, r1
 1033 0042 5641     		adc	r6, r6, r2
 1034 0044 BD60     		str	r5, [r7, #8]
 1035 0046 FE60     		str	r6, [r7, #12]
 1036 0048 06E0     		b	.L67
 1037              	.L66:
 192:.\DSP_Class.c ****             }
 193:.\DSP_Class.c ****             else{
 194:.\DSP_Class.c ****                 skip++;
 1038              		.loc 1 194 0
 1039 004a 381C     		mov	r0, r7
 1040 004c 1730     		add	r0, r0, #23
 1041 004e 0578     		ldrb	r5, [r0]
 1042 0050 381C     		mov	r0, r7
 1043 0052 1730     		add	r0, r0, #23
 1044 0054 0135     		add	r5, r5, #1
 1045 0056 0570     		strb	r5, [r0]
 1046              	.L67:
 189:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 1047              		.loc 1 189 0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 23


 1048 0058 F81D     		add	r0, r7, #7
 1049 005a 0578     		ldrb	r5, [r0]
 1050 005c F81D     		add	r0, r7, #7
 1051 005e 0135     		add	r5, r5, #1
 1052 0060 0570     		strb	r5, [r0]
 1053              	.L65:
 189:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 1054              		.loc 1 189 0 is_stmt 0 discriminator 1
 1055 0062 F81D     		add	r0, r7, #7
 1056 0064 0078     		ldrb	r0, [r0]
 1057 0066 6328     		cmp	r0, #99
 1058 0068 D9D9     		bls	.L68
 1059              	.LBE11:
 195:.\DSP_Class.c ****             }
 196:.\DSP_Class.c ****         }
 197:.\DSP_Class.c ****     }
 198:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 199:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 1060              		.loc 1 199 0 is_stmt 1
 1061 006a 3A1C     		mov	r2, r7
 1062 006c 1732     		add	r2, r2, #23
 1063 006e 1278     		ldrb	r2, [r2]
 1064 0070 6421     		mov	r1, #100
 1065 0072 8A1A     		sub	r2, r1, r2
 1066 0074 092A     		cmp	r2, #9
 1067 0076 36DD     		ble	.L69
 1068              	.LBB12:
 200:.\DSP_Class.c ****         avgLightVar/=(ARRAYSIZE-skip);                              // Calculate the average value
 1069              		.loc 1 200 0
 1070 0078 3A1C     		mov	r2, r7
 1071 007a 1732     		add	r2, r2, #23
 1072 007c 1278     		ldrb	r2, [r2]
 1073 007e 6421     		mov	r1, #100
 1074 0080 8A1A     		sub	r2, r1, r2
 1075 0082 131C     		mov	r3, r2
 1076 0084 D217     		asr	r2, r2, #31
 1077 0086 141C     		mov	r4, r2
 1078 0088 B868     		ldr	r0, [r7, #8]
 1079 008a F968     		ldr	r1, [r7, #12]
 1080 008c 1A1C     		mov	r2, r3
 1081 008e 231C     		mov	r3, r4
 1082 0090 FFF7FEFF 		bl	__aeabi_ldivmod
 1083 0094 031C     		mov	r3, r0
 1084 0096 0C1C     		mov	r4, r1
 1085 0098 BB60     		str	r3, [r7, #8]
 1086 009a FC60     		str	r4, [r7, #12]
 201:.\DSP_Class.c ****         
 202:.\DSP_Class.c ****         // Conversion to lux formula from datasheet
 203:.\DSP_Class.c ****         // Range = 128000, R_EXT = 100kOhm, n = 7 and DATA max 128
 204:.\DSP_Class.c ****         int32 lightInLux = ((128000*(100/100))/(2^7))*(uint8)avgLightVar;
 1087              		.loc 1 204 0
 1088 009c BB68     		ldr	r3, [r7, #8]
 1089 009e FC68     		ldr	r4, [r7, #12]
 1090 00a0 DBB2     		uxtb	r3, r3
 1091 00a2 C822     		mov	r2, #200
 1092 00a4 D201     		lsl	r2, r2, #7
 1093 00a6 5343     		mul	r3, r2
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 24


 1094 00a8 3B60     		str	r3, [r7]
 205:.\DSP_Class.c ****         
 206:.\DSP_Class.c ****         uint8 lightInuartVarSteps = lightInLux/1000;     // Conversion to UART ready value, 1 = 100
 1095              		.loc 1 206 0
 1096 00aa 3B68     		ldr	r3, [r7]
 1097 00ac 181C     		mov	r0, r3
 1098 00ae FA23     		mov	r3, #250
 1099 00b0 9900     		lsl	r1, r3, #2
 1100 00b2 FFF7FEFF 		bl	__aeabi_idiv
 1101 00b6 031C     		mov	r3, r0
 1102 00b8 1A1C     		mov	r2, r3
 1103 00ba BB1D     		add	r3, r7, #6
 1104 00bc 1A70     		strb	r2, [r3]
 207:.\DSP_Class.c ****         
 208:.\DSP_Class.c ****         // lightInLux is limited to 1 and 100 RH
 209:.\DSP_Class.c ****         if(lightInuartVarSteps <= 0){
 1105              		.loc 1 209 0
 1106 00be BB1D     		add	r3, r7, #6
 1107 00c0 1B78     		ldrb	r3, [r3]
 1108 00c2 002B     		cmp	r3, #0
 1109 00c4 03D1     		bne	.L70
 210:.\DSP_Class.c ****             lightInuartVarSteps = 1;
 1110              		.loc 1 210 0
 1111 00c6 BB1D     		add	r3, r7, #6
 1112 00c8 0122     		mov	r2, #1
 1113 00ca 1A70     		strb	r2, [r3]
 1114 00cc 06E0     		b	.L71
 1115              	.L70:
 211:.\DSP_Class.c ****         }
 212:.\DSP_Class.c ****         else if(lightInuartVarSteps > 100){
 1116              		.loc 1 212 0
 1117 00ce BB1D     		add	r3, r7, #6
 1118 00d0 1B78     		ldrb	r3, [r3]
 1119 00d2 642B     		cmp	r3, #100
 1120 00d4 02D9     		bls	.L71
 213:.\DSP_Class.c ****             lightInuartVarSteps = 100;
 1121              		.loc 1 213 0
 1122 00d6 BB1D     		add	r3, r7, #6
 1123 00d8 6422     		mov	r2, #100
 1124 00da 1A70     		strb	r2, [r3]
 1125              	.L71:
 214:.\DSP_Class.c ****         }
 215:.\DSP_Class.c ****         light = lightInuartVarSteps;
 1126              		.loc 1 215 0 discriminator 1
 1127 00dc 064B     		ldr	r3, .L73+4
 1128 00de BA1D     		add	r2, r7, #6
 1129 00e0 1278     		ldrb	r2, [r2]
 1130 00e2 1A70     		strb	r2, [r3]
 1131              	.LBE12:
 1132 00e4 02E0     		b	.L64
 1133              	.L69:
 216:.\DSP_Class.c ****     }
 217:.\DSP_Class.c ****     else{
 218:.\DSP_Class.c ****     light = 0;
 1134              		.loc 1 218 0
 1135 00e6 044B     		ldr	r3, .L73+4
 1136 00e8 0022     		mov	r2, #0
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 25


 1137 00ea 1A70     		strb	r2, [r3]
 1138              	.L64:
 219:.\DSP_Class.c ****     }
 220:.\DSP_Class.c ****   }
 1139              		.loc 1 220 0
 1140 00ec BD46     		mov	sp, r7
 1141 00ee 07B0     		add	sp, sp, #28
 1142              		@ sp needed
 1143 00f0 F0BD     		pop	{r4, r5, r6, r7, pc}
 1144              	.L74:
 1145 00f2 C046     		.align	2
 1146              	.L73:
 1147 00f4 00000000 		.word	lightArray
 1148 00f8 00000000 		.word	light
 1149              		.cfi_endproc
 1150              	.LFE41:
 1151              		.size	avgLight, .-avgLight
 1152              		.section	.text.inputTemp,"ax",%progbits
 1153              		.align	2
 1154              		.global	inputTemp
 1155              		.code	16
 1156              		.thumb_func
 1157              		.type	inputTemp, %function
 1158              	inputTemp:
 1159              	.LFB42:
 221:.\DSP_Class.c **** 
 222:.\DSP_Class.c **** void inputTemp(int32* temp){
 1160              		.loc 1 222 0
 1161              		.cfi_startproc
 1162 0000 80B5     		push	{r7, lr}
 1163              		.cfi_def_cfa_offset 8
 1164              		.cfi_offset 7, -8
 1165              		.cfi_offset 14, -4
 1166 0002 82B0     		sub	sp, sp, #8
 1167              		.cfi_def_cfa_offset 16
 1168 0004 00AF     		add	r7, sp, #0
 1169              		.cfi_def_cfa_register 7
 1170 0006 7860     		str	r0, [r7, #4]
 223:.\DSP_Class.c ****     *tempArrayPtr = *temp;      // The input value is written to the array
 1171              		.loc 1 223 0
 1172 0008 0B4B     		ldr	r3, .L77
 1173 000a 1B68     		ldr	r3, [r3]
 1174 000c 7A68     		ldr	r2, [r7, #4]
 1175 000e 1268     		ldr	r2, [r2]
 1176 0010 1A60     		str	r2, [r3]
 224:.\DSP_Class.c ****     tempArrayPtr++;             // The pointer is moved to the next place in array
 1177              		.loc 1 224 0
 1178 0012 094B     		ldr	r3, .L77
 1179 0014 1B68     		ldr	r3, [r3]
 1180 0016 1A1D     		add	r2, r3, #4
 1181 0018 074B     		ldr	r3, .L77
 1182 001a 1A60     		str	r2, [r3]
 225:.\DSP_Class.c ****     if(tempArrayPtr > &tempArray[ARRAYSIZE-1]){
 1183              		.loc 1 225 0
 1184 001c 064B     		ldr	r3, .L77
 1185 001e 1A68     		ldr	r2, [r3]
 1186 0020 064B     		ldr	r3, .L77+4
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 26


 1187 0022 9A42     		cmp	r2, r3
 1188 0024 02D9     		bls	.L76
 226:.\DSP_Class.c ****         tempArrayPtr = &tempArray[0];   // If the pointer is pointing past the end of the array it'
 1189              		.loc 1 226 0
 1190 0026 044B     		ldr	r3, .L77
 1191 0028 054A     		ldr	r2, .L77+8
 1192 002a 1A60     		str	r2, [r3]
 1193              	.L76:
 227:.\DSP_Class.c ****     }
 228:.\DSP_Class.c ****     
 229:.\DSP_Class.c ****     avgTemp();      // The average value is calculated and onverted into temp(globel) 
 1194              		.loc 1 229 0
 1195 002c FFF7FEFF 		bl	avgTemp
 230:.\DSP_Class.c **** }
 1196              		.loc 1 230 0
 1197 0030 BD46     		mov	sp, r7
 1198 0032 02B0     		add	sp, sp, #8
 1199              		@ sp needed
 1200 0034 80BD     		pop	{r7, pc}
 1201              	.L78:
 1202 0036 C046     		.align	2
 1203              	.L77:
 1204 0038 00000000 		.word	tempArrayPtr
 1205 003c 8C010000 		.word	tempArray+396
 1206 0040 00000000 		.word	tempArray
 1207              		.cfi_endproc
 1208              	.LFE42:
 1209              		.size	inputTemp, .-inputTemp
 1210              		.section	.text.inputHum,"ax",%progbits
 1211              		.align	2
 1212              		.global	inputHum
 1213              		.code	16
 1214              		.thumb_func
 1215              		.type	inputHum, %function
 1216              	inputHum:
 1217              	.LFB43:
 231:.\DSP_Class.c **** 
 232:.\DSP_Class.c **** void inputHum(int32* hum){
 1218              		.loc 1 232 0
 1219              		.cfi_startproc
 1220 0000 80B5     		push	{r7, lr}
 1221              		.cfi_def_cfa_offset 8
 1222              		.cfi_offset 7, -8
 1223              		.cfi_offset 14, -4
 1224 0002 82B0     		sub	sp, sp, #8
 1225              		.cfi_def_cfa_offset 16
 1226 0004 00AF     		add	r7, sp, #0
 1227              		.cfi_def_cfa_register 7
 1228 0006 7860     		str	r0, [r7, #4]
 233:.\DSP_Class.c ****     *humArrayPtr = *hum;        // The input value is written to the array
 1229              		.loc 1 233 0
 1230 0008 0B4B     		ldr	r3, .L81
 1231 000a 1B68     		ldr	r3, [r3]
 1232 000c 7A68     		ldr	r2, [r7, #4]
 1233 000e 1268     		ldr	r2, [r2]
 1234 0010 1A60     		str	r2, [r3]
 234:.\DSP_Class.c ****     humArrayPtr++;              // The pointer is moved to the next place in array
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 27


 1235              		.loc 1 234 0
 1236 0012 094B     		ldr	r3, .L81
 1237 0014 1B68     		ldr	r3, [r3]
 1238 0016 1A1D     		add	r2, r3, #4
 1239 0018 074B     		ldr	r3, .L81
 1240 001a 1A60     		str	r2, [r3]
 235:.\DSP_Class.c ****     if(humArrayPtr > &humArray[ARRAYSIZE-1]){
 1241              		.loc 1 235 0
 1242 001c 064B     		ldr	r3, .L81
 1243 001e 1A68     		ldr	r2, [r3]
 1244 0020 064B     		ldr	r3, .L81+4
 1245 0022 9A42     		cmp	r2, r3
 1246 0024 02D9     		bls	.L80
 236:.\DSP_Class.c ****         humArrayPtr = &humArray[0];     // If the pointer is pointing past the end of the array it'
 1247              		.loc 1 236 0
 1248 0026 044B     		ldr	r3, .L81
 1249 0028 054A     		ldr	r2, .L81+8
 1250 002a 1A60     		str	r2, [r3]
 1251              	.L80:
 237:.\DSP_Class.c ****     }
 238:.\DSP_Class.c ****     
 239:.\DSP_Class.c ****     avgHum();      // The average value is calculated and onverted into hum(globel)
 1252              		.loc 1 239 0
 1253 002c FFF7FEFF 		bl	avgHum
 240:.\DSP_Class.c **** }
 1254              		.loc 1 240 0
 1255 0030 BD46     		mov	sp, r7
 1256 0032 02B0     		add	sp, sp, #8
 1257              		@ sp needed
 1258 0034 80BD     		pop	{r7, pc}
 1259              	.L82:
 1260 0036 C046     		.align	2
 1261              	.L81:
 1262 0038 00000000 		.word	humArrayPtr
 1263 003c 8C010000 		.word	humArray+396
 1264 0040 00000000 		.word	humArray
 1265              		.cfi_endproc
 1266              	.LFE43:
 1267              		.size	inputHum, .-inputHum
 1268              		.section	.text.inputSoilHum,"ax",%progbits
 1269              		.align	2
 1270              		.global	inputSoilHum
 1271              		.code	16
 1272              		.thumb_func
 1273              		.type	inputSoilHum, %function
 1274              	inputSoilHum:
 1275              	.LFB44:
 241:.\DSP_Class.c **** 
 242:.\DSP_Class.c **** void inputSoilHum(uint8 index, int16* soilHum){
 1276              		.loc 1 242 0
 1277              		.cfi_startproc
 1278 0000 80B5     		push	{r7, lr}
 1279              		.cfi_def_cfa_offset 8
 1280              		.cfi_offset 7, -8
 1281              		.cfi_offset 14, -4
 1282 0002 82B0     		sub	sp, sp, #8
 1283              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 28


 1284 0004 00AF     		add	r7, sp, #0
 1285              		.cfi_def_cfa_register 7
 1286 0006 021C     		mov	r2, r0
 1287 0008 3960     		str	r1, [r7]
 1288 000a FB1D     		add	r3, r7, #7
 1289 000c 1A70     		strb	r2, [r3]
 243:.\DSP_Class.c ****     *soilHumPtr[index] = *soilHum;          // The input value is written to the array
 1290              		.loc 1 243 0
 1291 000e FB1D     		add	r3, r7, #7
 1292 0010 1A78     		ldrb	r2, [r3]
 1293 0012 184B     		ldr	r3, .L85
 1294 0014 9200     		lsl	r2, r2, #2
 1295 0016 D358     		ldr	r3, [r2, r3]
 1296 0018 3A68     		ldr	r2, [r7]
 1297 001a 1288     		ldrh	r2, [r2]
 1298 001c 1A80     		strh	r2, [r3]
 244:.\DSP_Class.c ****     soilHumPtr[index]++;                    // The pointer is moved to the next place in array
 1299              		.loc 1 244 0
 1300 001e FB1D     		add	r3, r7, #7
 1301 0020 1B78     		ldrb	r3, [r3]
 1302 0022 144A     		ldr	r2, .L85
 1303 0024 9900     		lsl	r1, r3, #2
 1304 0026 8A58     		ldr	r2, [r1, r2]
 1305 0028 911C     		add	r1, r2, #2
 1306 002a 124A     		ldr	r2, .L85
 1307 002c 9B00     		lsl	r3, r3, #2
 1308 002e 9950     		str	r1, [r3, r2]
 245:.\DSP_Class.c ****     if(soilHumPtr[index] > &soilHumArray[index][ARRAYSIZE-1]){
 1309              		.loc 1 245 0
 1310 0030 FB1D     		add	r3, r7, #7
 1311 0032 1A78     		ldrb	r2, [r3]
 1312 0034 0F4B     		ldr	r3, .L85
 1313 0036 9200     		lsl	r2, r2, #2
 1314 0038 D258     		ldr	r2, [r2, r3]
 1315 003a FB1D     		add	r3, r7, #7
 1316 003c 1B78     		ldrb	r3, [r3]
 1317 003e C821     		mov	r1, #200
 1318 0040 4B43     		mul	r3, r1
 1319 0042 191C     		mov	r1, r3
 1320 0044 C631     		add	r1, r1, #198
 1321 0046 0C4B     		ldr	r3, .L85+4
 1322 0048 CB18     		add	r3, r1, r3
 1323 004a 9A42     		cmp	r2, r3
 1324 004c 0AD9     		bls	.L84
 246:.\DSP_Class.c ****         soilHumPtr[index] = &soilHumArray[index][0];            // If the pointer is pointing past 
 1325              		.loc 1 246 0
 1326 004e FB1D     		add	r3, r7, #7
 1327 0050 1A78     		ldrb	r2, [r3]
 1328 0052 FB1D     		add	r3, r7, #7
 1329 0054 1B78     		ldrb	r3, [r3]
 1330 0056 C821     		mov	r1, #200
 1331 0058 5943     		mul	r1, r3
 1332 005a 074B     		ldr	r3, .L85+4
 1333 005c C918     		add	r1, r1, r3
 1334 005e 054B     		ldr	r3, .L85
 1335 0060 9200     		lsl	r2, r2, #2
 1336 0062 D150     		str	r1, [r2, r3]
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 29


 1337              	.L84:
 247:.\DSP_Class.c ****     }
 248:.\DSP_Class.c ****     
 249:.\DSP_Class.c ****     avgSoilHum(index);          // The average value is calculated and onverted into soilHum(globel
 1338              		.loc 1 249 0
 1339 0064 FB1D     		add	r3, r7, #7
 1340 0066 1B78     		ldrb	r3, [r3]
 1341 0068 181C     		mov	r0, r3
 1342 006a FFF7FEFF 		bl	avgSoilHum
 250:.\DSP_Class.c **** }
 1343              		.loc 1 250 0
 1344 006e BD46     		mov	sp, r7
 1345 0070 02B0     		add	sp, sp, #8
 1346              		@ sp needed
 1347 0072 80BD     		pop	{r7, pc}
 1348              	.L86:
 1349              		.align	2
 1350              	.L85:
 1351 0074 00000000 		.word	soilHumPtr
 1352 0078 00000000 		.word	soilHumArray
 1353              		.cfi_endproc
 1354              	.LFE44:
 1355              		.size	inputSoilHum, .-inputSoilHum
 1356              		.section	.text.inputLight,"ax",%progbits
 1357              		.align	2
 1358              		.global	inputLight
 1359              		.code	16
 1360              		.thumb_func
 1361              		.type	inputLight, %function
 1362              	inputLight:
 1363              	.LFB45:
 251:.\DSP_Class.c **** 
 252:.\DSP_Class.c **** void inputLight(int32* light){
 1364              		.loc 1 252 0
 1365              		.cfi_startproc
 1366 0000 80B5     		push	{r7, lr}
 1367              		.cfi_def_cfa_offset 8
 1368              		.cfi_offset 7, -8
 1369              		.cfi_offset 14, -4
 1370 0002 82B0     		sub	sp, sp, #8
 1371              		.cfi_def_cfa_offset 16
 1372 0004 00AF     		add	r7, sp, #0
 1373              		.cfi_def_cfa_register 7
 1374 0006 7860     		str	r0, [r7, #4]
 253:.\DSP_Class.c ****     *lightArrayPtr = *light;        // The input value is written to the array
 1375              		.loc 1 253 0
 1376 0008 0B4B     		ldr	r3, .L89
 1377 000a 1B68     		ldr	r3, [r3]
 1378 000c 7A68     		ldr	r2, [r7, #4]
 1379 000e 1268     		ldr	r2, [r2]
 1380 0010 1A60     		str	r2, [r3]
 254:.\DSP_Class.c ****     lightArrayPtr++;                // The pointer is moved to the next place in array
 1381              		.loc 1 254 0
 1382 0012 094B     		ldr	r3, .L89
 1383 0014 1B68     		ldr	r3, [r3]
 1384 0016 1A1D     		add	r2, r3, #4
 1385 0018 074B     		ldr	r3, .L89
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 30


 1386 001a 1A60     		str	r2, [r3]
 255:.\DSP_Class.c ****     if(lightArrayPtr > &lightArray[ARRAYSIZE-1]){
 1387              		.loc 1 255 0
 1388 001c 064B     		ldr	r3, .L89
 1389 001e 1A68     		ldr	r2, [r3]
 1390 0020 064B     		ldr	r3, .L89+4
 1391 0022 9A42     		cmp	r2, r3
 1392 0024 02D9     		bls	.L88
 256:.\DSP_Class.c ****         lightArrayPtr = &lightArray[0];     // If the pointer is pointing past the end of the array
 1393              		.loc 1 256 0
 1394 0026 044B     		ldr	r3, .L89
 1395 0028 054A     		ldr	r2, .L89+8
 1396 002a 1A60     		str	r2, [r3]
 1397              	.L88:
 257:.\DSP_Class.c ****     }
 258:.\DSP_Class.c ****     
 259:.\DSP_Class.c ****     avgLight();      // The average value is calculated and onverted into hum(globel)
 1398              		.loc 1 259 0
 1399 002c FFF7FEFF 		bl	avgLight
 260:.\DSP_Class.c **** }
 1400              		.loc 1 260 0
 1401 0030 BD46     		mov	sp, r7
 1402 0032 02B0     		add	sp, sp, #8
 1403              		@ sp needed
 1404 0034 80BD     		pop	{r7, pc}
 1405              	.L90:
 1406 0036 C046     		.align	2
 1407              	.L89:
 1408 0038 00000000 		.word	lightArrayPtr
 1409 003c 8C010000 		.word	lightArray+396
 1410 0040 00000000 		.word	lightArray
 1411              		.cfi_endproc
 1412              	.LFE45:
 1413              		.size	inputLight, .-inputLight
 1414              		.text
 1415              	.Letext0:
 1416              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 1417              		.section	.debug_info,"",%progbits
 1418              	.Ldebug_info0:
 1419 0000 DB040000 		.4byte	0x4db
 1420 0004 0400     		.2byte	0x4
 1421 0006 00000000 		.4byte	.Ldebug_abbrev0
 1422 000a 04       		.byte	0x4
 1423 000b 01       		.uleb128 0x1
 1424 000c A5000000 		.4byte	.LASF51
 1425 0010 01       		.byte	0x1
 1426 0011 8A020000 		.4byte	.LASF52
 1427 0015 2F010000 		.4byte	.LASF53
 1428 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1429 001d 00000000 		.4byte	0
 1430 0021 00000000 		.4byte	.Ldebug_line0
 1431 0025 02       		.uleb128 0x2
 1432 0026 01       		.byte	0x1
 1433 0027 06       		.byte	0x6
 1434 0028 D7020000 		.4byte	.LASF0
 1435 002c 02       		.uleb128 0x2
 1436 002d 01       		.byte	0x1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 31


 1437 002e 08       		.byte	0x8
 1438 002f 21010000 		.4byte	.LASF1
 1439 0033 02       		.uleb128 0x2
 1440 0034 02       		.byte	0x2
 1441 0035 05       		.byte	0x5
 1442 0036 98020000 		.4byte	.LASF2
 1443 003a 02       		.uleb128 0x2
 1444 003b 02       		.byte	0x2
 1445 003c 07       		.byte	0x7
 1446 003d 61000000 		.4byte	.LASF3
 1447 0041 02       		.uleb128 0x2
 1448 0042 04       		.byte	0x4
 1449 0043 05       		.byte	0x5
 1450 0044 C6020000 		.4byte	.LASF4
 1451 0048 02       		.uleb128 0x2
 1452 0049 04       		.byte	0x4
 1453 004a 07       		.byte	0x7
 1454 004b 79010000 		.4byte	.LASF5
 1455 004f 02       		.uleb128 0x2
 1456 0050 08       		.byte	0x8
 1457 0051 05       		.byte	0x5
 1458 0052 66020000 		.4byte	.LASF6
 1459 0056 02       		.uleb128 0x2
 1460 0057 08       		.byte	0x8
 1461 0058 07       		.byte	0x7
 1462 0059 09020000 		.4byte	.LASF7
 1463 005d 03       		.uleb128 0x3
 1464 005e 04       		.byte	0x4
 1465 005f 05       		.byte	0x5
 1466 0060 696E7400 		.ascii	"int\000"
 1467 0064 02       		.uleb128 0x2
 1468 0065 04       		.byte	0x4
 1469 0066 07       		.byte	0x7
 1470 0067 F7010000 		.4byte	.LASF8
 1471 006b 04       		.uleb128 0x4
 1472 006c AC020000 		.4byte	.LASF9
 1473 0070 02       		.byte	0x2
 1474 0071 A1       		.byte	0xa1
 1475 0072 2C000000 		.4byte	0x2c
 1476 0076 04       		.uleb128 0x4
 1477 0077 2B020000 		.4byte	.LASF10
 1478 007b 02       		.byte	0x2
 1479 007c A5       		.byte	0xa5
 1480 007d 33000000 		.4byte	0x33
 1481 0081 04       		.uleb128 0x4
 1482 0082 57020000 		.4byte	.LASF11
 1483 0086 02       		.byte	0x2
 1484 0087 A6       		.byte	0xa6
 1485 0088 41000000 		.4byte	0x41
 1486 008c 02       		.uleb128 0x2
 1487 008d 04       		.byte	0x4
 1488 008e 04       		.byte	0x4
 1489 008f 9F000000 		.4byte	.LASF12
 1490 0093 02       		.uleb128 0x2
 1491 0094 08       		.byte	0x8
 1492 0095 04       		.byte	0x4
 1493 0096 CD010000 		.4byte	.LASF13
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 32


 1494 009a 04       		.uleb128 0x4
 1495 009b FA020000 		.4byte	.LASF14
 1496 009f 02       		.byte	0x2
 1497 00a0 AC       		.byte	0xac
 1498 00a1 4F000000 		.4byte	0x4f
 1499 00a5 02       		.uleb128 0x2
 1500 00a6 01       		.byte	0x1
 1501 00a7 08       		.byte	0x8
 1502 00a8 74020000 		.4byte	.LASF15
 1503 00ac 02       		.uleb128 0x2
 1504 00ad 04       		.byte	0x4
 1505 00ae 07       		.byte	0x7
 1506 00af 5D020000 		.4byte	.LASF16
 1507 00b3 05       		.uleb128 0x5
 1508 00b4 C5010000 		.4byte	.LASF20
 1509 00b8 01       		.byte	0x1
 1510 00b9 27       		.byte	0x27
 1511 00ba 00000000 		.4byte	.LFB33
 1512 00be 10010000 		.4byte	.LFE33-.LFB33
 1513 00c2 01       		.uleb128 0x1
 1514 00c3 9C       		.byte	0x9c
 1515 00c4 0F010000 		.4byte	0x10f
 1516 00c8 06       		.uleb128 0x6
 1517 00c9 06000000 		.4byte	.LBB2
 1518 00cd 76000000 		.4byte	.LBE2-.LBB2
 1519 00d1 F8000000 		.4byte	0xf8
 1520 00d5 07       		.uleb128 0x7
 1521 00d6 6900     		.ascii	"i\000"
 1522 00d8 01       		.byte	0x1
 1523 00d9 29       		.byte	0x29
 1524 00da 6B000000 		.4byte	0x6b
 1525 00de 02       		.uleb128 0x2
 1526 00df 91       		.byte	0x91
 1527 00e0 77       		.sleb128 -9
 1528 00e1 08       		.uleb128 0x8
 1529 00e2 2A000000 		.4byte	.LBB3
 1530 00e6 32000000 		.4byte	.LBE3-.LBB3
 1531 00ea 07       		.uleb128 0x7
 1532 00eb 6A00     		.ascii	"j\000"
 1533 00ed 01       		.byte	0x1
 1534 00ee 2E       		.byte	0x2e
 1535 00ef 6B000000 		.4byte	0x6b
 1536 00f3 02       		.uleb128 0x2
 1537 00f4 91       		.byte	0x91
 1538 00f5 76       		.sleb128 -10
 1539 00f6 00       		.byte	0
 1540 00f7 00       		.byte	0
 1541 00f8 08       		.uleb128 0x8
 1542 00f9 88000000 		.4byte	.LBB4
 1543 00fd 3A000000 		.4byte	.LBE4-.LBB4
 1544 0101 07       		.uleb128 0x7
 1545 0102 6B00     		.ascii	"k\000"
 1546 0104 01       		.byte	0x1
 1547 0105 3A       		.byte	0x3a
 1548 0106 6B000000 		.4byte	0x6b
 1549 010a 02       		.uleb128 0x2
 1550 010b 91       		.byte	0x91
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 33


 1551 010c 75       		.sleb128 -11
 1552 010d 00       		.byte	0
 1553 010e 00       		.byte	0
 1554 010f 09       		.uleb128 0x9
 1555 0110 8B010000 		.4byte	.LASF17
 1556 0114 01       		.byte	0x1
 1557 0115 46       		.byte	0x46
 1558 0116 6B000000 		.4byte	0x6b
 1559 011a 00000000 		.4byte	.LFB34
 1560 011e 14000000 		.4byte	.LFE34-.LFB34
 1561 0122 01       		.uleb128 0x1
 1562 0123 9C       		.byte	0x9c
 1563 0124 09       		.uleb128 0x9
 1564 0125 E7010000 		.4byte	.LASF18
 1565 0129 01       		.byte	0x1
 1566 012a 4A       		.byte	0x4a
 1567 012b 6B000000 		.4byte	0x6b
 1568 012f 00000000 		.4byte	.LFB35
 1569 0133 14000000 		.4byte	.LFE35-.LFB35
 1570 0137 01       		.uleb128 0x1
 1571 0138 9C       		.byte	0x9c
 1572 0139 0A       		.uleb128 0xa
 1573 013a 9F010000 		.4byte	.LASF54
 1574 013e 01       		.byte	0x1
 1575 013f 4E       		.byte	0x4e
 1576 0140 6B000000 		.4byte	0x6b
 1577 0144 00000000 		.4byte	.LFB36
 1578 0148 20000000 		.4byte	.LFE36-.LFB36
 1579 014c 01       		.uleb128 0x1
 1580 014d 9C       		.byte	0x9c
 1581 014e 61010000 		.4byte	0x161
 1582 0152 0B       		.uleb128 0xb
 1583 0153 84020000 		.4byte	.LASF29
 1584 0157 01       		.byte	0x1
 1585 0158 4E       		.byte	0x4e
 1586 0159 6B000000 		.4byte	0x6b
 1587 015d 02       		.uleb128 0x2
 1588 015e 91       		.byte	0x91
 1589 015f 77       		.sleb128 -9
 1590 0160 00       		.byte	0
 1591 0161 09       		.uleb128 0x9
 1592 0162 4A020000 		.4byte	.LASF19
 1593 0166 01       		.byte	0x1
 1594 0167 52       		.byte	0x52
 1595 0168 6B000000 		.4byte	0x6b
 1596 016c 00000000 		.4byte	.LFB37
 1597 0170 14000000 		.4byte	.LFE37-.LFB37
 1598 0174 01       		.uleb128 0x1
 1599 0175 9C       		.byte	0x9c
 1600 0176 0C       		.uleb128 0xc
 1601 0177 CF020000 		.4byte	.LASF21
 1602 017b 01       		.byte	0x1
 1603 017c 56       		.byte	0x56
 1604 017d 00000000 		.4byte	.LFB38
 1605 0181 AC010000 		.4byte	.LFE38-.LFB38
 1606 0185 01       		.uleb128 0x1
 1607 0186 9C       		.byte	0x9c
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 34


 1608 0187 DA010000 		.4byte	0x1da
 1609 018b 0D       		.uleb128 0xd
 1610 018c F2010000 		.4byte	.LASF22
 1611 0190 01       		.byte	0x1
 1612 0191 57       		.byte	0x57
 1613 0192 6B000000 		.4byte	0x6b
 1614 0196 02       		.uleb128 0x2
 1615 0197 91       		.byte	0x91
 1616 0198 67       		.sleb128 -25
 1617 0199 0D       		.uleb128 0xd
 1618 019a 37000000 		.4byte	.LASF23
 1619 019e 01       		.byte	0x1
 1620 019f 58       		.byte	0x58
 1621 01a0 9A000000 		.4byte	0x9a
 1622 01a4 02       		.uleb128 0x2
 1623 01a5 91       		.byte	0x91
 1624 01a6 58       		.sleb128 -40
 1625 01a7 06       		.uleb128 0x6
 1626 01a8 26000000 		.4byte	.LBB5
 1627 01ac 90000000 		.4byte	.LBE5-.LBB5
 1628 01b0 C1010000 		.4byte	0x1c1
 1629 01b4 07       		.uleb128 0x7
 1630 01b5 6900     		.ascii	"i\000"
 1631 01b7 01       		.byte	0x1
 1632 01b8 5A       		.byte	0x5a
 1633 01b9 6B000000 		.4byte	0x6b
 1634 01bd 02       		.uleb128 0x2
 1635 01be 91       		.byte	0x91
 1636 01bf 57       		.sleb128 -41
 1637 01c0 00       		.byte	0
 1638 01c1 08       		.uleb128 0x8
 1639 01c2 C4000000 		.4byte	.LBB6
 1640 01c6 C6000000 		.4byte	.LBE6-.LBB6
 1641 01ca 0D       		.uleb128 0xd
 1642 01cb 00000000 		.4byte	.LASF24
 1643 01cf 01       		.byte	0x1
 1644 01d0 67       		.byte	0x67
 1645 01d1 8C000000 		.4byte	0x8c
 1646 01d5 02       		.uleb128 0x2
 1647 01d6 91       		.byte	0x91
 1648 01d7 50       		.sleb128 -48
 1649 01d8 00       		.byte	0
 1650 01d9 00       		.byte	0
 1651 01da 0C       		.uleb128 0xc
 1652 01db 4E000000 		.4byte	.LASF25
 1653 01df 01       		.byte	0x1
 1654 01e0 77       		.byte	0x77
 1655 01e1 00000000 		.4byte	.LFB39
 1656 01e5 F8000000 		.4byte	.LFE39-.LFB39
 1657 01e9 01       		.uleb128 0x1
 1658 01ea 9C       		.byte	0x9c
 1659 01eb 3E020000 		.4byte	0x23e
 1660 01ef 0D       		.uleb128 0xd
 1661 01f0 F2010000 		.4byte	.LASF22
 1662 01f4 01       		.byte	0x1
 1663 01f5 78       		.byte	0x78
 1664 01f6 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 35


 1665 01fa 02       		.uleb128 0x2
 1666 01fb 91       		.byte	0x91
 1667 01fc 67       		.sleb128 -25
 1668 01fd 0D       		.uleb128 0xd
 1669 01fe D4010000 		.4byte	.LASF26
 1670 0202 01       		.byte	0x1
 1671 0203 79       		.byte	0x79
 1672 0204 9A000000 		.4byte	0x9a
 1673 0208 02       		.uleb128 0x2
 1674 0209 91       		.byte	0x91
 1675 020a 58       		.sleb128 -40
 1676 020b 06       		.uleb128 0x6
 1677 020c 16000000 		.4byte	.LBB7
 1678 0210 54000000 		.4byte	.LBE7-.LBB7
 1679 0214 25020000 		.4byte	0x225
 1680 0218 07       		.uleb128 0x7
 1681 0219 6900     		.ascii	"i\000"
 1682 021b 01       		.byte	0x1
 1683 021c 7B       		.byte	0x7b
 1684 021d 6B000000 		.4byte	0x6b
 1685 0221 02       		.uleb128 0x2
 1686 0222 91       		.byte	0x91
 1687 0223 57       		.sleb128 -41
 1688 0224 00       		.byte	0
 1689 0225 08       		.uleb128 0x8
 1690 0226 78000000 		.4byte	.LBB8
 1691 022a 68000000 		.4byte	.LBE8-.LBB8
 1692 022e 0D       		.uleb128 0xd
 1693 022f 97010000 		.4byte	.LASF27
 1694 0233 01       		.byte	0x1
 1695 0234 88       		.byte	0x88
 1696 0235 6B000000 		.4byte	0x6b
 1697 0239 02       		.uleb128 0x2
 1698 023a 91       		.byte	0x91
 1699 023b 56       		.sleb128 -42
 1700 023c 00       		.byte	0
 1701 023d 00       		.byte	0
 1702 023e 0C       		.uleb128 0xc
 1703 023f 79020000 		.4byte	.LASF28
 1704 0243 01       		.byte	0x1
 1705 0244 98       		.byte	0x98
 1706 0245 00000000 		.4byte	.LFB40
 1707 0249 24010000 		.4byte	.LFE40-.LFB40
 1708 024d 01       		.uleb128 0x1
 1709 024e 9C       		.byte	0x9c
 1710 024f B0020000 		.4byte	0x2b0
 1711 0253 0B       		.uleb128 0xb
 1712 0254 84020000 		.4byte	.LASF29
 1713 0258 01       		.byte	0x1
 1714 0259 98       		.byte	0x98
 1715 025a 6B000000 		.4byte	0x6b
 1716 025e 02       		.uleb128 0x2
 1717 025f 91       		.byte	0x91
 1718 0260 4F       		.sleb128 -49
 1719 0261 0D       		.uleb128 0xd
 1720 0262 F2010000 		.4byte	.LASF22
 1721 0266 01       		.byte	0x1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 36


 1722 0267 99       		.byte	0x99
 1723 0268 6B000000 		.4byte	0x6b
 1724 026c 02       		.uleb128 0x2
 1725 026d 91       		.byte	0x91
 1726 026e 67       		.sleb128 -25
 1727 026f 0D       		.uleb128 0xd
 1728 0270 AE010000 		.4byte	.LASF30
 1729 0274 01       		.byte	0x1
 1730 0275 9A       		.byte	0x9a
 1731 0276 9A000000 		.4byte	0x9a
 1732 027a 02       		.uleb128 0x2
 1733 027b 91       		.byte	0x91
 1734 027c 58       		.sleb128 -40
 1735 027d 06       		.uleb128 0x6
 1736 027e 1C000000 		.4byte	.LBB9
 1737 0282 84000000 		.4byte	.LBE9-.LBB9
 1738 0286 97020000 		.4byte	0x297
 1739 028a 07       		.uleb128 0x7
 1740 028b 6900     		.ascii	"i\000"
 1741 028d 01       		.byte	0x1
 1742 028e 9C       		.byte	0x9c
 1743 028f 6B000000 		.4byte	0x6b
 1744 0293 02       		.uleb128 0x2
 1745 0294 91       		.byte	0x91
 1746 0295 57       		.sleb128 -41
 1747 0296 00       		.byte	0
 1748 0297 08       		.uleb128 0x8
 1749 0298 AE000000 		.4byte	.LBB10
 1750 029c 5A000000 		.4byte	.LBE10-.LBB10
 1751 02a0 0D       		.uleb128 0xd
 1752 02a1 55000000 		.4byte	.LASF31
 1753 02a5 01       		.byte	0x1
 1754 02a6 A8       		.byte	0xa8
 1755 02a7 6B000000 		.4byte	0x6b
 1756 02ab 02       		.uleb128 0x2
 1757 02ac 91       		.byte	0x91
 1758 02ad 56       		.sleb128 -42
 1759 02ae 00       		.byte	0
 1760 02af 00       		.byte	0
 1761 02b0 0C       		.uleb128 0xc
 1762 02b1 BC010000 		.4byte	.LASF32
 1763 02b5 01       		.byte	0x1
 1764 02b6 B8       		.byte	0xb8
 1765 02b7 00000000 		.4byte	.LFB41
 1766 02bb FC000000 		.4byte	.LFE41-.LFB41
 1767 02bf 01       		.uleb128 0x1
 1768 02c0 9C       		.byte	0x9c
 1769 02c1 22030000 		.4byte	0x322
 1770 02c5 0D       		.uleb128 0xd
 1771 02c6 F2010000 		.4byte	.LASF22
 1772 02ca 01       		.byte	0x1
 1773 02cb B9       		.byte	0xb9
 1774 02cc 6B000000 		.4byte	0x6b
 1775 02d0 02       		.uleb128 0x2
 1776 02d1 91       		.byte	0x91
 1777 02d2 67       		.sleb128 -25
 1778 02d3 0D       		.uleb128 0xd
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 37


 1779 02d4 31020000 		.4byte	.LASF33
 1780 02d8 01       		.byte	0x1
 1781 02d9 BA       		.byte	0xba
 1782 02da 9A000000 		.4byte	0x9a
 1783 02de 02       		.uleb128 0x2
 1784 02df 91       		.byte	0x91
 1785 02e0 58       		.sleb128 -40
 1786 02e1 06       		.uleb128 0x6
 1787 02e2 16000000 		.4byte	.LBB11
 1788 02e6 54000000 		.4byte	.LBE11-.LBB11
 1789 02ea FB020000 		.4byte	0x2fb
 1790 02ee 07       		.uleb128 0x7
 1791 02ef 6900     		.ascii	"i\000"
 1792 02f1 01       		.byte	0x1
 1793 02f2 BC       		.byte	0xbc
 1794 02f3 6B000000 		.4byte	0x6b
 1795 02f7 02       		.uleb128 0x2
 1796 02f8 91       		.byte	0x91
 1797 02f9 57       		.sleb128 -41
 1798 02fa 00       		.byte	0
 1799 02fb 08       		.uleb128 0x8
 1800 02fc 78000000 		.4byte	.LBB12
 1801 0300 6C000000 		.4byte	.LBE12-.LBB12
 1802 0304 0D       		.uleb128 0xd
 1803 0305 94000000 		.4byte	.LASF34
 1804 0309 01       		.byte	0x1
 1805 030a CC       		.byte	0xcc
 1806 030b 81000000 		.4byte	0x81
 1807 030f 02       		.uleb128 0x2
 1808 0310 91       		.byte	0x91
 1809 0311 50       		.sleb128 -48
 1810 0312 0D       		.uleb128 0xd
 1811 0313 B2020000 		.4byte	.LASF35
 1812 0317 01       		.byte	0x1
 1813 0318 CE       		.byte	0xce
 1814 0319 6B000000 		.4byte	0x6b
 1815 031d 02       		.uleb128 0x2
 1816 031e 91       		.byte	0x91
 1817 031f 56       		.sleb128 -42
 1818 0320 00       		.byte	0
 1819 0321 00       		.byte	0
 1820 0322 0C       		.uleb128 0xc
 1821 0323 2D000000 		.4byte	.LASF36
 1822 0327 01       		.byte	0x1
 1823 0328 DE       		.byte	0xde
 1824 0329 00000000 		.4byte	.LFB42
 1825 032d 44000000 		.4byte	.LFE42-.LFB42
 1826 0331 01       		.uleb128 0x1
 1827 0332 9C       		.byte	0x9c
 1828 0333 46030000 		.4byte	0x346
 1829 0337 0B       		.uleb128 0xb
 1830 0338 04020000 		.4byte	.LASF37
 1831 033c 01       		.byte	0x1
 1832 033d DE       		.byte	0xde
 1833 033e 46030000 		.4byte	0x346
 1834 0342 02       		.uleb128 0x2
 1835 0343 91       		.byte	0x91
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 38


 1836 0344 74       		.sleb128 -12
 1837 0345 00       		.byte	0
 1838 0346 0E       		.uleb128 0xe
 1839 0347 04       		.byte	0x4
 1840 0348 81000000 		.4byte	0x81
 1841 034c 0C       		.uleb128 0xc
 1842 034d DE010000 		.4byte	.LASF38
 1843 0351 01       		.byte	0x1
 1844 0352 E8       		.byte	0xe8
 1845 0353 00000000 		.4byte	.LFB43
 1846 0357 44000000 		.4byte	.LFE43-.LFB43
 1847 035b 01       		.uleb128 0x1
 1848 035c 9C       		.byte	0x9c
 1849 035d 70030000 		.4byte	0x370
 1850 0361 0F       		.uleb128 0xf
 1851 0362 68756D00 		.ascii	"hum\000"
 1852 0366 01       		.byte	0x1
 1853 0367 E8       		.byte	0xe8
 1854 0368 46030000 		.4byte	0x346
 1855 036c 02       		.uleb128 0x2
 1856 036d 91       		.byte	0x91
 1857 036e 74       		.sleb128 -12
 1858 036f 00       		.byte	0
 1859 0370 0C       		.uleb128 0xc
 1860 0371 87000000 		.4byte	.LASF39
 1861 0375 01       		.byte	0x1
 1862 0376 F2       		.byte	0xf2
 1863 0377 00000000 		.4byte	.LFB44
 1864 037b 7C000000 		.4byte	.LFE44-.LFB44
 1865 037f 01       		.uleb128 0x1
 1866 0380 9C       		.byte	0x9c
 1867 0381 A2030000 		.4byte	0x3a2
 1868 0385 0B       		.uleb128 0xb
 1869 0386 84020000 		.4byte	.LASF29
 1870 038a 01       		.byte	0x1
 1871 038b F2       		.byte	0xf2
 1872 038c 6B000000 		.4byte	0x6b
 1873 0390 02       		.uleb128 0x2
 1874 0391 91       		.byte	0x91
 1875 0392 77       		.sleb128 -9
 1876 0393 0B       		.uleb128 0xb
 1877 0394 74000000 		.4byte	.LASF40
 1878 0398 01       		.byte	0x1
 1879 0399 F2       		.byte	0xf2
 1880 039a A2030000 		.4byte	0x3a2
 1881 039e 02       		.uleb128 0x2
 1882 039f 91       		.byte	0x91
 1883 03a0 70       		.sleb128 -16
 1884 03a1 00       		.byte	0
 1885 03a2 0E       		.uleb128 0xe
 1886 03a3 04       		.byte	0x4
 1887 03a4 76000000 		.4byte	0x76
 1888 03a8 0C       		.uleb128 0xc
 1889 03a9 20020000 		.4byte	.LASF41
 1890 03ad 01       		.byte	0x1
 1891 03ae FC       		.byte	0xfc
 1892 03af 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 39


 1893 03b3 44000000 		.4byte	.LFE45-.LFB45
 1894 03b7 01       		.uleb128 0x1
 1895 03b8 9C       		.byte	0x9c
 1896 03b9 CC030000 		.4byte	0x3cc
 1897 03bd 0B       		.uleb128 0xb
 1898 03be 0F000000 		.4byte	.LASF42
 1899 03c2 01       		.byte	0x1
 1900 03c3 FC       		.byte	0xfc
 1901 03c4 46030000 		.4byte	0x346
 1902 03c8 02       		.uleb128 0x2
 1903 03c9 91       		.byte	0x91
 1904 03ca 74       		.sleb128 -12
 1905 03cb 00       		.byte	0
 1906 03cc 10       		.uleb128 0x10
 1907 03cd 81000000 		.4byte	0x81
 1908 03d1 DC030000 		.4byte	0x3dc
 1909 03d5 11       		.uleb128 0x11
 1910 03d6 AC000000 		.4byte	0xac
 1911 03da 63       		.byte	0x63
 1912 03db 00       		.byte	0
 1913 03dc 12       		.uleb128 0x12
 1914 03dd A2020000 		.4byte	.LASF43
 1915 03e1 01       		.byte	0x1
 1916 03e2 16       		.byte	0x16
 1917 03e3 CC030000 		.4byte	0x3cc
 1918 03e7 05       		.uleb128 0x5
 1919 03e8 03       		.byte	0x3
 1920 03e9 00000000 		.4byte	tempArray
 1921 03ed 12       		.uleb128 0x12
 1922 03ee 3D020000 		.4byte	.LASF44
 1923 03f2 01       		.byte	0x1
 1924 03f3 17       		.byte	0x17
 1925 03f4 46030000 		.4byte	0x346
 1926 03f8 05       		.uleb128 0x5
 1927 03f9 03       		.byte	0x3
 1928 03fa 00000000 		.4byte	tempArrayPtr
 1929 03fe 12       		.uleb128 0x12
 1930 03ff F1020000 		.4byte	.LASF45
 1931 0403 01       		.byte	0x1
 1932 0404 18       		.byte	0x18
 1933 0405 CC030000 		.4byte	0x3cc
 1934 0409 05       		.uleb128 0x5
 1935 040a 03       		.byte	0x3
 1936 040b 00000000 		.4byte	humArray
 1937 040f 12       		.uleb128 0x12
 1938 0410 42000000 		.4byte	.LASF46
 1939 0414 01       		.byte	0x1
 1940 0415 19       		.byte	0x19
 1941 0416 46030000 		.4byte	0x346
 1942 041a 05       		.uleb128 0x5
 1943 041b 03       		.byte	0x3
 1944 041c 00000000 		.4byte	humArrayPtr
 1945 0420 10       		.uleb128 0x10
 1946 0421 76000000 		.4byte	0x76
 1947 0425 36040000 		.4byte	0x436
 1948 0429 11       		.uleb128 0x11
 1949 042a AC000000 		.4byte	0xac
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 40


 1950 042e 05       		.byte	0x5
 1951 042f 11       		.uleb128 0x11
 1952 0430 AC000000 		.4byte	0xac
 1953 0434 63       		.byte	0x63
 1954 0435 00       		.byte	0
 1955 0436 12       		.uleb128 0x12
 1956 0437 15000000 		.4byte	.LASF47
 1957 043b 01       		.byte	0x1
 1958 043c 1A       		.byte	0x1a
 1959 043d 20040000 		.4byte	0x420
 1960 0441 05       		.uleb128 0x5
 1961 0442 03       		.byte	0x3
 1962 0443 00000000 		.4byte	soilHumArray
 1963 0447 10       		.uleb128 0x10
 1964 0448 A2030000 		.4byte	0x3a2
 1965 044c 57040000 		.4byte	0x457
 1966 0450 11       		.uleb128 0x11
 1967 0451 AC000000 		.4byte	0xac
 1968 0455 05       		.byte	0x5
 1969 0456 00       		.byte	0
 1970 0457 12       		.uleb128 0x12
 1971 0458 22000000 		.4byte	.LASF48
 1972 045c 01       		.byte	0x1
 1973 045d 1B       		.byte	0x1b
 1974 045e 47040000 		.4byte	0x447
 1975 0462 05       		.uleb128 0x5
 1976 0463 03       		.byte	0x3
 1977 0464 00000000 		.4byte	soilHumPtr
 1978 0468 12       		.uleb128 0x12
 1979 0469 7C000000 		.4byte	.LASF49
 1980 046d 01       		.byte	0x1
 1981 046e 1C       		.byte	0x1c
 1982 046f CC030000 		.4byte	0x3cc
 1983 0473 05       		.uleb128 0x5
 1984 0474 03       		.byte	0x3
 1985 0475 00000000 		.4byte	lightArray
 1986 0479 12       		.uleb128 0x12
 1987 047a E3020000 		.4byte	.LASF50
 1988 047e 01       		.byte	0x1
 1989 047f 1D       		.byte	0x1d
 1990 0480 46030000 		.4byte	0x346
 1991 0484 05       		.uleb128 0x5
 1992 0485 03       		.byte	0x3
 1993 0486 00000000 		.4byte	lightArrayPtr
 1994 048a 12       		.uleb128 0x12
 1995 048b 04020000 		.4byte	.LASF37
 1996 048f 01       		.byte	0x1
 1997 0490 1E       		.byte	0x1e
 1998 0491 6B000000 		.4byte	0x6b
 1999 0495 05       		.uleb128 0x5
 2000 0496 03       		.byte	0x3
 2001 0497 00000000 		.4byte	temp
 2002 049b 13       		.uleb128 0x13
 2003 049c 68756D00 		.ascii	"hum\000"
 2004 04a0 01       		.byte	0x1
 2005 04a1 1E       		.byte	0x1e
 2006 04a2 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 41


 2007 04a6 05       		.uleb128 0x5
 2008 04a7 03       		.byte	0x3
 2009 04a8 00000000 		.4byte	hum
 2010 04ac 10       		.uleb128 0x10
 2011 04ad 6B000000 		.4byte	0x6b
 2012 04b1 BC040000 		.4byte	0x4bc
 2013 04b5 11       		.uleb128 0x11
 2014 04b6 AC000000 		.4byte	0xac
 2015 04ba 05       		.byte	0x5
 2016 04bb 00       		.byte	0
 2017 04bc 12       		.uleb128 0x12
 2018 04bd 74000000 		.4byte	.LASF40
 2019 04c1 01       		.byte	0x1
 2020 04c2 1E       		.byte	0x1e
 2021 04c3 AC040000 		.4byte	0x4ac
 2022 04c7 05       		.uleb128 0x5
 2023 04c8 03       		.byte	0x3
 2024 04c9 00000000 		.4byte	soilHum
 2025 04cd 12       		.uleb128 0x12
 2026 04ce 0F000000 		.4byte	.LASF42
 2027 04d2 01       		.byte	0x1
 2028 04d3 1E       		.byte	0x1e
 2029 04d4 6B000000 		.4byte	0x6b
 2030 04d8 05       		.uleb128 0x5
 2031 04d9 03       		.byte	0x3
 2032 04da 00000000 		.4byte	light
 2033 04de 00       		.byte	0
 2034              		.section	.debug_abbrev,"",%progbits
 2035              	.Ldebug_abbrev0:
 2036 0000 01       		.uleb128 0x1
 2037 0001 11       		.uleb128 0x11
 2038 0002 01       		.byte	0x1
 2039 0003 25       		.uleb128 0x25
 2040 0004 0E       		.uleb128 0xe
 2041 0005 13       		.uleb128 0x13
 2042 0006 0B       		.uleb128 0xb
 2043 0007 03       		.uleb128 0x3
 2044 0008 0E       		.uleb128 0xe
 2045 0009 1B       		.uleb128 0x1b
 2046 000a 0E       		.uleb128 0xe
 2047 000b 55       		.uleb128 0x55
 2048 000c 17       		.uleb128 0x17
 2049 000d 11       		.uleb128 0x11
 2050 000e 01       		.uleb128 0x1
 2051 000f 10       		.uleb128 0x10
 2052 0010 17       		.uleb128 0x17
 2053 0011 00       		.byte	0
 2054 0012 00       		.byte	0
 2055 0013 02       		.uleb128 0x2
 2056 0014 24       		.uleb128 0x24
 2057 0015 00       		.byte	0
 2058 0016 0B       		.uleb128 0xb
 2059 0017 0B       		.uleb128 0xb
 2060 0018 3E       		.uleb128 0x3e
 2061 0019 0B       		.uleb128 0xb
 2062 001a 03       		.uleb128 0x3
 2063 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 42


 2064 001c 00       		.byte	0
 2065 001d 00       		.byte	0
 2066 001e 03       		.uleb128 0x3
 2067 001f 24       		.uleb128 0x24
 2068 0020 00       		.byte	0
 2069 0021 0B       		.uleb128 0xb
 2070 0022 0B       		.uleb128 0xb
 2071 0023 3E       		.uleb128 0x3e
 2072 0024 0B       		.uleb128 0xb
 2073 0025 03       		.uleb128 0x3
 2074 0026 08       		.uleb128 0x8
 2075 0027 00       		.byte	0
 2076 0028 00       		.byte	0
 2077 0029 04       		.uleb128 0x4
 2078 002a 16       		.uleb128 0x16
 2079 002b 00       		.byte	0
 2080 002c 03       		.uleb128 0x3
 2081 002d 0E       		.uleb128 0xe
 2082 002e 3A       		.uleb128 0x3a
 2083 002f 0B       		.uleb128 0xb
 2084 0030 3B       		.uleb128 0x3b
 2085 0031 0B       		.uleb128 0xb
 2086 0032 49       		.uleb128 0x49
 2087 0033 13       		.uleb128 0x13
 2088 0034 00       		.byte	0
 2089 0035 00       		.byte	0
 2090 0036 05       		.uleb128 0x5
 2091 0037 2E       		.uleb128 0x2e
 2092 0038 01       		.byte	0x1
 2093 0039 3F       		.uleb128 0x3f
 2094 003a 19       		.uleb128 0x19
 2095 003b 03       		.uleb128 0x3
 2096 003c 0E       		.uleb128 0xe
 2097 003d 3A       		.uleb128 0x3a
 2098 003e 0B       		.uleb128 0xb
 2099 003f 3B       		.uleb128 0x3b
 2100 0040 0B       		.uleb128 0xb
 2101 0041 27       		.uleb128 0x27
 2102 0042 19       		.uleb128 0x19
 2103 0043 11       		.uleb128 0x11
 2104 0044 01       		.uleb128 0x1
 2105 0045 12       		.uleb128 0x12
 2106 0046 06       		.uleb128 0x6
 2107 0047 40       		.uleb128 0x40
 2108 0048 18       		.uleb128 0x18
 2109 0049 9742     		.uleb128 0x2117
 2110 004b 19       		.uleb128 0x19
 2111 004c 01       		.uleb128 0x1
 2112 004d 13       		.uleb128 0x13
 2113 004e 00       		.byte	0
 2114 004f 00       		.byte	0
 2115 0050 06       		.uleb128 0x6
 2116 0051 0B       		.uleb128 0xb
 2117 0052 01       		.byte	0x1
 2118 0053 11       		.uleb128 0x11
 2119 0054 01       		.uleb128 0x1
 2120 0055 12       		.uleb128 0x12
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 43


 2121 0056 06       		.uleb128 0x6
 2122 0057 01       		.uleb128 0x1
 2123 0058 13       		.uleb128 0x13
 2124 0059 00       		.byte	0
 2125 005a 00       		.byte	0
 2126 005b 07       		.uleb128 0x7
 2127 005c 34       		.uleb128 0x34
 2128 005d 00       		.byte	0
 2129 005e 03       		.uleb128 0x3
 2130 005f 08       		.uleb128 0x8
 2131 0060 3A       		.uleb128 0x3a
 2132 0061 0B       		.uleb128 0xb
 2133 0062 3B       		.uleb128 0x3b
 2134 0063 0B       		.uleb128 0xb
 2135 0064 49       		.uleb128 0x49
 2136 0065 13       		.uleb128 0x13
 2137 0066 02       		.uleb128 0x2
 2138 0067 18       		.uleb128 0x18
 2139 0068 00       		.byte	0
 2140 0069 00       		.byte	0
 2141 006a 08       		.uleb128 0x8
 2142 006b 0B       		.uleb128 0xb
 2143 006c 01       		.byte	0x1
 2144 006d 11       		.uleb128 0x11
 2145 006e 01       		.uleb128 0x1
 2146 006f 12       		.uleb128 0x12
 2147 0070 06       		.uleb128 0x6
 2148 0071 00       		.byte	0
 2149 0072 00       		.byte	0
 2150 0073 09       		.uleb128 0x9
 2151 0074 2E       		.uleb128 0x2e
 2152 0075 00       		.byte	0
 2153 0076 3F       		.uleb128 0x3f
 2154 0077 19       		.uleb128 0x19
 2155 0078 03       		.uleb128 0x3
 2156 0079 0E       		.uleb128 0xe
 2157 007a 3A       		.uleb128 0x3a
 2158 007b 0B       		.uleb128 0xb
 2159 007c 3B       		.uleb128 0x3b
 2160 007d 0B       		.uleb128 0xb
 2161 007e 27       		.uleb128 0x27
 2162 007f 19       		.uleb128 0x19
 2163 0080 49       		.uleb128 0x49
 2164 0081 13       		.uleb128 0x13
 2165 0082 11       		.uleb128 0x11
 2166 0083 01       		.uleb128 0x1
 2167 0084 12       		.uleb128 0x12
 2168 0085 06       		.uleb128 0x6
 2169 0086 40       		.uleb128 0x40
 2170 0087 18       		.uleb128 0x18
 2171 0088 9742     		.uleb128 0x2117
 2172 008a 19       		.uleb128 0x19
 2173 008b 00       		.byte	0
 2174 008c 00       		.byte	0
 2175 008d 0A       		.uleb128 0xa
 2176 008e 2E       		.uleb128 0x2e
 2177 008f 01       		.byte	0x1
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 44


 2178 0090 3F       		.uleb128 0x3f
 2179 0091 19       		.uleb128 0x19
 2180 0092 03       		.uleb128 0x3
 2181 0093 0E       		.uleb128 0xe
 2182 0094 3A       		.uleb128 0x3a
 2183 0095 0B       		.uleb128 0xb
 2184 0096 3B       		.uleb128 0x3b
 2185 0097 0B       		.uleb128 0xb
 2186 0098 27       		.uleb128 0x27
 2187 0099 19       		.uleb128 0x19
 2188 009a 49       		.uleb128 0x49
 2189 009b 13       		.uleb128 0x13
 2190 009c 11       		.uleb128 0x11
 2191 009d 01       		.uleb128 0x1
 2192 009e 12       		.uleb128 0x12
 2193 009f 06       		.uleb128 0x6
 2194 00a0 40       		.uleb128 0x40
 2195 00a1 18       		.uleb128 0x18
 2196 00a2 9742     		.uleb128 0x2117
 2197 00a4 19       		.uleb128 0x19
 2198 00a5 01       		.uleb128 0x1
 2199 00a6 13       		.uleb128 0x13
 2200 00a7 00       		.byte	0
 2201 00a8 00       		.byte	0
 2202 00a9 0B       		.uleb128 0xb
 2203 00aa 05       		.uleb128 0x5
 2204 00ab 00       		.byte	0
 2205 00ac 03       		.uleb128 0x3
 2206 00ad 0E       		.uleb128 0xe
 2207 00ae 3A       		.uleb128 0x3a
 2208 00af 0B       		.uleb128 0xb
 2209 00b0 3B       		.uleb128 0x3b
 2210 00b1 0B       		.uleb128 0xb
 2211 00b2 49       		.uleb128 0x49
 2212 00b3 13       		.uleb128 0x13
 2213 00b4 02       		.uleb128 0x2
 2214 00b5 18       		.uleb128 0x18
 2215 00b6 00       		.byte	0
 2216 00b7 00       		.byte	0
 2217 00b8 0C       		.uleb128 0xc
 2218 00b9 2E       		.uleb128 0x2e
 2219 00ba 01       		.byte	0x1
 2220 00bb 3F       		.uleb128 0x3f
 2221 00bc 19       		.uleb128 0x19
 2222 00bd 03       		.uleb128 0x3
 2223 00be 0E       		.uleb128 0xe
 2224 00bf 3A       		.uleb128 0x3a
 2225 00c0 0B       		.uleb128 0xb
 2226 00c1 3B       		.uleb128 0x3b
 2227 00c2 0B       		.uleb128 0xb
 2228 00c3 27       		.uleb128 0x27
 2229 00c4 19       		.uleb128 0x19
 2230 00c5 11       		.uleb128 0x11
 2231 00c6 01       		.uleb128 0x1
 2232 00c7 12       		.uleb128 0x12
 2233 00c8 06       		.uleb128 0x6
 2234 00c9 40       		.uleb128 0x40
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 45


 2235 00ca 18       		.uleb128 0x18
 2236 00cb 9642     		.uleb128 0x2116
 2237 00cd 19       		.uleb128 0x19
 2238 00ce 01       		.uleb128 0x1
 2239 00cf 13       		.uleb128 0x13
 2240 00d0 00       		.byte	0
 2241 00d1 00       		.byte	0
 2242 00d2 0D       		.uleb128 0xd
 2243 00d3 34       		.uleb128 0x34
 2244 00d4 00       		.byte	0
 2245 00d5 03       		.uleb128 0x3
 2246 00d6 0E       		.uleb128 0xe
 2247 00d7 3A       		.uleb128 0x3a
 2248 00d8 0B       		.uleb128 0xb
 2249 00d9 3B       		.uleb128 0x3b
 2250 00da 0B       		.uleb128 0xb
 2251 00db 49       		.uleb128 0x49
 2252 00dc 13       		.uleb128 0x13
 2253 00dd 02       		.uleb128 0x2
 2254 00de 18       		.uleb128 0x18
 2255 00df 00       		.byte	0
 2256 00e0 00       		.byte	0
 2257 00e1 0E       		.uleb128 0xe
 2258 00e2 0F       		.uleb128 0xf
 2259 00e3 00       		.byte	0
 2260 00e4 0B       		.uleb128 0xb
 2261 00e5 0B       		.uleb128 0xb
 2262 00e6 49       		.uleb128 0x49
 2263 00e7 13       		.uleb128 0x13
 2264 00e8 00       		.byte	0
 2265 00e9 00       		.byte	0
 2266 00ea 0F       		.uleb128 0xf
 2267 00eb 05       		.uleb128 0x5
 2268 00ec 00       		.byte	0
 2269 00ed 03       		.uleb128 0x3
 2270 00ee 08       		.uleb128 0x8
 2271 00ef 3A       		.uleb128 0x3a
 2272 00f0 0B       		.uleb128 0xb
 2273 00f1 3B       		.uleb128 0x3b
 2274 00f2 0B       		.uleb128 0xb
 2275 00f3 49       		.uleb128 0x49
 2276 00f4 13       		.uleb128 0x13
 2277 00f5 02       		.uleb128 0x2
 2278 00f6 18       		.uleb128 0x18
 2279 00f7 00       		.byte	0
 2280 00f8 00       		.byte	0
 2281 00f9 10       		.uleb128 0x10
 2282 00fa 01       		.uleb128 0x1
 2283 00fb 01       		.byte	0x1
 2284 00fc 49       		.uleb128 0x49
 2285 00fd 13       		.uleb128 0x13
 2286 00fe 01       		.uleb128 0x1
 2287 00ff 13       		.uleb128 0x13
 2288 0100 00       		.byte	0
 2289 0101 00       		.byte	0
 2290 0102 11       		.uleb128 0x11
 2291 0103 21       		.uleb128 0x21
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 46


 2292 0104 00       		.byte	0
 2293 0105 49       		.uleb128 0x49
 2294 0106 13       		.uleb128 0x13
 2295 0107 2F       		.uleb128 0x2f
 2296 0108 0B       		.uleb128 0xb
 2297 0109 00       		.byte	0
 2298 010a 00       		.byte	0
 2299 010b 12       		.uleb128 0x12
 2300 010c 34       		.uleb128 0x34
 2301 010d 00       		.byte	0
 2302 010e 03       		.uleb128 0x3
 2303 010f 0E       		.uleb128 0xe
 2304 0110 3A       		.uleb128 0x3a
 2305 0111 0B       		.uleb128 0xb
 2306 0112 3B       		.uleb128 0x3b
 2307 0113 0B       		.uleb128 0xb
 2308 0114 49       		.uleb128 0x49
 2309 0115 13       		.uleb128 0x13
 2310 0116 3F       		.uleb128 0x3f
 2311 0117 19       		.uleb128 0x19
 2312 0118 02       		.uleb128 0x2
 2313 0119 18       		.uleb128 0x18
 2314 011a 00       		.byte	0
 2315 011b 00       		.byte	0
 2316 011c 13       		.uleb128 0x13
 2317 011d 34       		.uleb128 0x34
 2318 011e 00       		.byte	0
 2319 011f 03       		.uleb128 0x3
 2320 0120 08       		.uleb128 0x8
 2321 0121 3A       		.uleb128 0x3a
 2322 0122 0B       		.uleb128 0xb
 2323 0123 3B       		.uleb128 0x3b
 2324 0124 0B       		.uleb128 0xb
 2325 0125 49       		.uleb128 0x49
 2326 0126 13       		.uleb128 0x13
 2327 0127 3F       		.uleb128 0x3f
 2328 0128 19       		.uleb128 0x19
 2329 0129 02       		.uleb128 0x2
 2330 012a 18       		.uleb128 0x18
 2331 012b 00       		.byte	0
 2332 012c 00       		.byte	0
 2333 012d 00       		.byte	0
 2334              		.section	.debug_aranges,"",%progbits
 2335 0000 7C000000 		.4byte	0x7c
 2336 0004 0200     		.2byte	0x2
 2337 0006 00000000 		.4byte	.Ldebug_info0
 2338 000a 04       		.byte	0x4
 2339 000b 00       		.byte	0
 2340 000c 0000     		.2byte	0
 2341 000e 0000     		.2byte	0
 2342 0010 00000000 		.4byte	.LFB33
 2343 0014 10010000 		.4byte	.LFE33-.LFB33
 2344 0018 00000000 		.4byte	.LFB34
 2345 001c 14000000 		.4byte	.LFE34-.LFB34
 2346 0020 00000000 		.4byte	.LFB35
 2347 0024 14000000 		.4byte	.LFE35-.LFB35
 2348 0028 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 47


 2349 002c 20000000 		.4byte	.LFE36-.LFB36
 2350 0030 00000000 		.4byte	.LFB37
 2351 0034 14000000 		.4byte	.LFE37-.LFB37
 2352 0038 00000000 		.4byte	.LFB38
 2353 003c AC010000 		.4byte	.LFE38-.LFB38
 2354 0040 00000000 		.4byte	.LFB39
 2355 0044 F8000000 		.4byte	.LFE39-.LFB39
 2356 0048 00000000 		.4byte	.LFB40
 2357 004c 24010000 		.4byte	.LFE40-.LFB40
 2358 0050 00000000 		.4byte	.LFB41
 2359 0054 FC000000 		.4byte	.LFE41-.LFB41
 2360 0058 00000000 		.4byte	.LFB42
 2361 005c 44000000 		.4byte	.LFE42-.LFB42
 2362 0060 00000000 		.4byte	.LFB43
 2363 0064 44000000 		.4byte	.LFE43-.LFB43
 2364 0068 00000000 		.4byte	.LFB44
 2365 006c 7C000000 		.4byte	.LFE44-.LFB44
 2366 0070 00000000 		.4byte	.LFB45
 2367 0074 44000000 		.4byte	.LFE45-.LFB45
 2368 0078 00000000 		.4byte	0
 2369 007c 00000000 		.4byte	0
 2370              		.section	.debug_ranges,"",%progbits
 2371              	.Ldebug_ranges0:
 2372 0000 00000000 		.4byte	.LFB33
 2373 0004 10010000 		.4byte	.LFE33
 2374 0008 00000000 		.4byte	.LFB34
 2375 000c 14000000 		.4byte	.LFE34
 2376 0010 00000000 		.4byte	.LFB35
 2377 0014 14000000 		.4byte	.LFE35
 2378 0018 00000000 		.4byte	.LFB36
 2379 001c 20000000 		.4byte	.LFE36
 2380 0020 00000000 		.4byte	.LFB37
 2381 0024 14000000 		.4byte	.LFE37
 2382 0028 00000000 		.4byte	.LFB38
 2383 002c AC010000 		.4byte	.LFE38
 2384 0030 00000000 		.4byte	.LFB39
 2385 0034 F8000000 		.4byte	.LFE39
 2386 0038 00000000 		.4byte	.LFB40
 2387 003c 24010000 		.4byte	.LFE40
 2388 0040 00000000 		.4byte	.LFB41
 2389 0044 FC000000 		.4byte	.LFE41
 2390 0048 00000000 		.4byte	.LFB42
 2391 004c 44000000 		.4byte	.LFE42
 2392 0050 00000000 		.4byte	.LFB43
 2393 0054 44000000 		.4byte	.LFE43
 2394 0058 00000000 		.4byte	.LFB44
 2395 005c 7C000000 		.4byte	.LFE44
 2396 0060 00000000 		.4byte	.LFB45
 2397 0064 44000000 		.4byte	.LFE45
 2398 0068 00000000 		.4byte	0
 2399 006c 00000000 		.4byte	0
 2400              		.section	.debug_line,"",%progbits
 2401              	.Ldebug_line0:
 2402 0000 01020000 		.section	.debug_str,"MS",%progbits,1
 2402      02004A00 
 2402      00000201 
 2402      FB0E0D00 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 48


 2402      01010101 
 2403              	.LASF24:
 2404 0000 74656D70 		.ascii	"tempInDegreesC\000"
 2404      496E4465 
 2404      67726565 
 2404      734300
 2405              	.LASF42:
 2406 000f 6C696768 		.ascii	"light\000"
 2406      7400
 2407              	.LASF47:
 2408 0015 736F696C 		.ascii	"soilHumArray\000"
 2408      48756D41 
 2408      72726179 
 2408      00
 2409              	.LASF48:
 2410 0022 736F696C 		.ascii	"soilHumPtr\000"
 2410      48756D50 
 2410      747200
 2411              	.LASF36:
 2412 002d 696E7075 		.ascii	"inputTemp\000"
 2412      7454656D 
 2412      7000
 2413              	.LASF23:
 2414 0037 61766754 		.ascii	"avgTempVar\000"
 2414      656D7056 
 2414      617200
 2415              	.LASF46:
 2416 0042 68756D41 		.ascii	"humArrayPtr\000"
 2416      72726179 
 2416      50747200 
 2417              	.LASF25:
 2418 004e 61766748 		.ascii	"avgHum\000"
 2418      756D00
 2419              	.LASF31:
 2420 0055 736F696C 		.ascii	"soilHumInRH\000"
 2420      48756D49 
 2420      6E524800 
 2421              	.LASF3:
 2422 0061 73686F72 		.ascii	"short unsigned int\000"
 2422      7420756E 
 2422      7369676E 
 2422      65642069 
 2422      6E7400
 2423              	.LASF40:
 2424 0074 736F696C 		.ascii	"soilHum\000"
 2424      48756D00 
 2425              	.LASF49:
 2426 007c 6C696768 		.ascii	"lightArray\000"
 2426      74417272 
 2426      617900
 2427              	.LASF39:
 2428 0087 696E7075 		.ascii	"inputSoilHum\000"
 2428      74536F69 
 2428      6C48756D 
 2428      00
 2429              	.LASF34:
 2430 0094 6C696768 		.ascii	"lightInLux\000"
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 49


 2430      74496E4C 
 2430      757800
 2431              	.LASF12:
 2432 009f 666C6F61 		.ascii	"float\000"
 2432      7400
 2433              	.LASF51:
 2434 00a5 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2434      4320342E 
 2434      382E3420 
 2434      32303134 
 2434      30353236 
 2435 00d8 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2435      20726576 
 2435      6973696F 
 2435      6E203231 
 2435      31333538 
 2436 010b 30202D66 		.ascii	"0 -ffunction-sections\000"
 2436      66756E63 
 2436      74696F6E 
 2436      2D736563 
 2436      74696F6E 
 2437              	.LASF1:
 2438 0121 756E7369 		.ascii	"unsigned char\000"
 2438      676E6564 
 2438      20636861 
 2438      7200
 2439              	.LASF53:
 2440 012f 433A5C55 		.ascii	"C:\\Users\\Philip\\OneDrive\\GitHub\\PSoC_Master\\P"
 2440      73657273 
 2440      5C506869 
 2440      6C69705C 
 2440      4F6E6544 
 2441 015c 536F435F 		.ascii	"SoC_Master\\PSoC_Master.cydsn\000"
 2441      4D617374 
 2441      65725C50 
 2441      536F435F 
 2441      4D617374 
 2442              	.LASF5:
 2443 0179 6C6F6E67 		.ascii	"long unsigned int\000"
 2443      20756E73 
 2443      69676E65 
 2443      6420696E 
 2443      7400
 2444              	.LASF17:
 2445 018b 67657454 		.ascii	"getTemp_DSP\000"
 2445      656D705F 
 2445      44535000 
 2446              	.LASF27:
 2447 0197 68756D49 		.ascii	"humInRH\000"
 2447      6E524800 
 2448              	.LASF54:
 2449 019f 67657453 		.ascii	"getSoilHum_DSP\000"
 2449      6F696C48 
 2449      756D5F44 
 2449      535000
 2450              	.LASF30:
 2451 01ae 61766753 		.ascii	"avgSoilHumVar\000"
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 50


 2451      6F696C48 
 2451      756D5661 
 2451      7200
 2452              	.LASF32:
 2453 01bc 6176674C 		.ascii	"avgLight\000"
 2453      69676874 
 2453      00
 2454              	.LASF20:
 2455 01c5 696E6974 		.ascii	"initDSP\000"
 2455      44535000 
 2456              	.LASF13:
 2457 01cd 646F7562 		.ascii	"double\000"
 2457      6C6500
 2458              	.LASF26:
 2459 01d4 61766748 		.ascii	"avgHumVar\000"
 2459      756D5661 
 2459      7200
 2460              	.LASF38:
 2461 01de 696E7075 		.ascii	"inputHum\000"
 2461      7448756D 
 2461      00
 2462              	.LASF18:
 2463 01e7 67657448 		.ascii	"getHum_DSP\000"
 2463      756D5F44 
 2463      535000
 2464              	.LASF22:
 2465 01f2 736B6970 		.ascii	"skip\000"
 2465      00
 2466              	.LASF8:
 2467 01f7 756E7369 		.ascii	"unsigned int\000"
 2467      676E6564 
 2467      20696E74 
 2467      00
 2468              	.LASF37:
 2469 0204 74656D70 		.ascii	"temp\000"
 2469      00
 2470              	.LASF7:
 2471 0209 6C6F6E67 		.ascii	"long long unsigned int\000"
 2471      206C6F6E 
 2471      6720756E 
 2471      7369676E 
 2471      65642069 
 2472              	.LASF41:
 2473 0220 696E7075 		.ascii	"inputLight\000"
 2473      744C6967 
 2473      687400
 2474              	.LASF10:
 2475 022b 696E7431 		.ascii	"int16\000"
 2475      3600
 2476              	.LASF33:
 2477 0231 6176674C 		.ascii	"avgLightVar\000"
 2477      69676874 
 2477      56617200 
 2478              	.LASF44:
 2479 023d 74656D70 		.ascii	"tempArrayPtr\000"
 2479      41727261 
 2479      79507472 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 51


 2479      00
 2480              	.LASF19:
 2481 024a 6765744C 		.ascii	"getLight_DSP\000"
 2481      69676874 
 2481      5F445350 
 2481      00
 2482              	.LASF11:
 2483 0257 696E7433 		.ascii	"int32\000"
 2483      3200
 2484              	.LASF16:
 2485 025d 73697A65 		.ascii	"sizetype\000"
 2485      74797065 
 2485      00
 2486              	.LASF6:
 2487 0266 6C6F6E67 		.ascii	"long long int\000"
 2487      206C6F6E 
 2487      6720696E 
 2487      7400
 2488              	.LASF15:
 2489 0274 63686172 		.ascii	"char\000"
 2489      00
 2490              	.LASF28:
 2491 0279 61766753 		.ascii	"avgSoilHum\000"
 2491      6F696C48 
 2491      756D00
 2492              	.LASF29:
 2493 0284 696E6465 		.ascii	"index\000"
 2493      7800
 2494              	.LASF52:
 2495 028a 2E5C4453 		.ascii	".\\DSP_Class.c\000"
 2495      505F436C 
 2495      6173732E 
 2495      6300
 2496              	.LASF2:
 2497 0298 73686F72 		.ascii	"short int\000"
 2497      7420696E 
 2497      7400
 2498              	.LASF43:
 2499 02a2 74656D70 		.ascii	"tempArray\000"
 2499      41727261 
 2499      7900
 2500              	.LASF9:
 2501 02ac 75696E74 		.ascii	"uint8\000"
 2501      3800
 2502              	.LASF35:
 2503 02b2 6C696768 		.ascii	"lightInuartVarSteps\000"
 2503      74496E75 
 2503      61727456 
 2503      61725374 
 2503      65707300 
 2504              	.LASF4:
 2505 02c6 6C6F6E67 		.ascii	"long int\000"
 2505      20696E74 
 2505      00
 2506              	.LASF21:
 2507 02cf 61766754 		.ascii	"avgTemp\000"
 2507      656D7000 
ARM GAS  C:\Users\Philip\AppData\Local\Temp\ccJ0zdeh.s 			page 52


 2508              	.LASF0:
 2509 02d7 7369676E 		.ascii	"signed char\000"
 2509      65642063 
 2509      68617200 
 2510              	.LASF50:
 2511 02e3 6C696768 		.ascii	"lightArrayPtr\000"
 2511      74417272 
 2511      61795074 
 2511      7200
 2512              	.LASF45:
 2513 02f1 68756D41 		.ascii	"humArray\000"
 2513      72726179 
 2513      00
 2514              	.LASF14:
 2515 02fa 696E7436 		.ascii	"int64\000"
 2515      3400
 2516              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
