ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"DSP_Class.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	tempArray,40,4
  18              		.comm	tempArrayPtr,4,4
  19              		.comm	humArray,40,4
  20              		.comm	humArrayPtr,4,4
  21              		.comm	soilHumArray,120,4
  22              		.comm	soilHumPtr,24,4
  23              		.comm	lightArray,40,4
  24              		.comm	lightArrayPtr,4,4
  25              		.comm	temp,1,1
  26              		.comm	hum,1,1
  27              		.comm	soilHum,6,4
  28              		.comm	light,1,1
  29              		.section	.text.initDSP,"ax",%progbits
  30              		.align	2
  31              		.global	initDSP
  32              		.code	16
  33              		.thumb_func
  34              		.type	initDSP, %function
  35              	initDSP:
  36              	.LFB33:
  37              		.file 1 ".\\DSP_Class.c"
   1:.\DSP_Class.c **** /* ========================================
   2:.\DSP_Class.c ****  * 
   3:.\DSP_Class.c ****  * AutoGreen - PSoC_Master
   4:.\DSP_Class.c ****  * DSP_Class.c
   5:.\DSP_Class.c ****  * Digital signal processing
   6:.\DSP_Class.c ****  * PRJ3 - GRP9
   7:.\DSP_Class.c ****  * 2015-04-15
   8:.\DSP_Class.c ****  *
   9:.\DSP_Class.c ****  * ========================================
  10:.\DSP_Class.c **** */
  11:.\DSP_Class.c **** 
  12:.\DSP_Class.c **** // Include files
  13:.\DSP_Class.c **** #include "DSP_Class.h"
  14:.\DSP_Class.c **** 
  15:.\DSP_Class.c **** // Private data members
  16:.\DSP_Class.c **** int32 tempArray[ARRAYSIZE];
  17:.\DSP_Class.c **** int32* tempArrayPtr;
  18:.\DSP_Class.c **** int32 humArray[ARRAYSIZE];
  19:.\DSP_Class.c **** int32* humArrayPtr;
  20:.\DSP_Class.c **** int16 soilHumArray[NBR_OF_SOILHUM_SENSORS][ARRAYSIZE];
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 2


  21:.\DSP_Class.c **** int16* soilHumPtr[NBR_OF_SOILHUM_SENSORS];
  22:.\DSP_Class.c **** int32 lightArray[ARRAYSIZE];
  23:.\DSP_Class.c **** int32* lightArrayPtr;
  24:.\DSP_Class.c **** uint8 temp, hum, soilHum[NBR_OF_SOILHUM_SENSORS], light;     // Used for storing the newest, value 
  25:.\DSP_Class.c **** 
  26:.\DSP_Class.c **** // Private prototypes
  27:.\DSP_Class.c **** void avgTemp(void);
  28:.\DSP_Class.c **** void avgHum(void);
  29:.\DSP_Class.c **** void avgSoilHum(uint8 index);
  30:.\DSP_Class.c **** void avgLight(void);
  31:.\DSP_Class.c **** 
  32:.\DSP_Class.c **** // Init: All datamebers are initialized with -1, meaning they are empty
  33:.\DSP_Class.c **** void initDSP(void){
  38              		.loc 1 33 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 82B0     		sub	sp, sp, #8
  45              		.cfi_def_cfa_offset 16
  46 0004 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  48              	.LBB2:
  34:.\DSP_Class.c ****     {
  35:.\DSP_Class.c ****         uint8 i;
  36:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
  49              		.loc 1 36 0
  50 0006 FB1D     		add	r3, r7, #7
  51 0008 0022     		mov	r2, #0
  52 000a 1A70     		strb	r2, [r3]
  53 000c 34E0     		b	.L2
  54              	.L5:
  37:.\DSP_Class.c ****             tempArray[i] = EMPTY;
  55              		.loc 1 37 0
  56 000e FB1D     		add	r3, r7, #7
  57 0010 1A78     		ldrb	r2, [r3]
  58 0012 354B     		ldr	r3, .L8
  59 0014 9200     		lsl	r2, r2, #2
  60 0016 0121     		mov	r1, #1
  61 0018 4942     		neg	r1, r1
  62 001a D150     		str	r1, [r2, r3]
  38:.\DSP_Class.c ****             humArray[i] = EMPTY;
  63              		.loc 1 38 0
  64 001c FB1D     		add	r3, r7, #7
  65 001e 1A78     		ldrb	r2, [r3]
  66 0020 324B     		ldr	r3, .L8+4
  67 0022 9200     		lsl	r2, r2, #2
  68 0024 0121     		mov	r1, #1
  69 0026 4942     		neg	r1, r1
  70 0028 D150     		str	r1, [r2, r3]
  71              	.LBB3:
  39:.\DSP_Class.c ****             {
  40:.\DSP_Class.c ****                 uint8 j;
  41:.\DSP_Class.c ****                 for(j = 0 ; j<NBR_OF_SOILHUM_SENSORS ; j++){
  72              		.loc 1 41 0
  73 002a BB1D     		add	r3, r7, #6
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 3


  74 002c 0022     		mov	r2, #0
  75 002e 1A70     		strb	r2, [r3]
  76 0030 12E0     		b	.L3
  77              	.L4:
  42:.\DSP_Class.c ****                     soilHumArray[j][i] = EMPTY;
  78              		.loc 1 42 0 discriminator 2
  79 0032 BB1D     		add	r3, r7, #6
  80 0034 1A78     		ldrb	r2, [r3]
  81 0036 FB1D     		add	r3, r7, #7
  82 0038 1878     		ldrb	r0, [r3]
  83 003a 2D49     		ldr	r1, .L8+8
  84 003c 131C     		mov	r3, r2
  85 003e 9B00     		lsl	r3, r3, #2
  86 0040 9B18     		add	r3, r3, r2
  87 0042 5B00     		lsl	r3, r3, #1
  88 0044 1B18     		add	r3, r3, r0
  89 0046 5B00     		lsl	r3, r3, #1
  90 0048 0122     		mov	r2, #1
  91 004a 5242     		neg	r2, r2
  92 004c 5A52     		strh	r2, [r3, r1]
  41:.\DSP_Class.c ****                 for(j = 0 ; j<NBR_OF_SOILHUM_SENSORS ; j++){
  93              		.loc 1 41 0 discriminator 2
  94 004e BB1D     		add	r3, r7, #6
  95 0050 1A78     		ldrb	r2, [r3]
  96 0052 BB1D     		add	r3, r7, #6
  97 0054 0132     		add	r2, r2, #1
  98 0056 1A70     		strb	r2, [r3]
  99              	.L3:
  41:.\DSP_Class.c ****                 for(j = 0 ; j<NBR_OF_SOILHUM_SENSORS ; j++){
 100              		.loc 1 41 0 is_stmt 0 discriminator 1
 101 0058 BB1D     		add	r3, r7, #6
 102 005a 1B78     		ldrb	r3, [r3]
 103 005c 052B     		cmp	r3, #5
 104 005e E8D9     		bls	.L4
 105              	.LBE3:
  43:.\DSP_Class.c ****                 }
  44:.\DSP_Class.c ****             }
  45:.\DSP_Class.c ****             lightArray[i] = EMPTY;
 106              		.loc 1 45 0 is_stmt 1
 107 0060 FB1D     		add	r3, r7, #7
 108 0062 1A78     		ldrb	r2, [r3]
 109 0064 234B     		ldr	r3, .L8+12
 110 0066 9200     		lsl	r2, r2, #2
 111 0068 0121     		mov	r1, #1
 112 006a 4942     		neg	r1, r1
 113 006c D150     		str	r1, [r2, r3]
  36:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 114              		.loc 1 36 0
 115 006e FB1D     		add	r3, r7, #7
 116 0070 1A78     		ldrb	r2, [r3]
 117 0072 FB1D     		add	r3, r7, #7
 118 0074 0132     		add	r2, r2, #1
 119 0076 1A70     		strb	r2, [r3]
 120              	.L2:
  36:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 121              		.loc 1 36 0 is_stmt 0 discriminator 1
 122 0078 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 4


 123 007a 1B78     		ldrb	r3, [r3]
 124 007c 092B     		cmp	r3, #9
 125 007e C6D9     		bls	.L5
 126              	.LBE2:
  46:.\DSP_Class.c ****             
  47:.\DSP_Class.c ****         }
  48:.\DSP_Class.c ****     }
  49:.\DSP_Class.c ****     tempArrayPtr = & tempArray[0];
 127              		.loc 1 49 0 is_stmt 1
 128 0080 1D4B     		ldr	r3, .L8+16
 129 0082 194A     		ldr	r2, .L8
 130 0084 1A60     		str	r2, [r3]
  50:.\DSP_Class.c ****     humArrayPtr = & humArray[0];
 131              		.loc 1 50 0
 132 0086 1D4B     		ldr	r3, .L8+20
 133 0088 184A     		ldr	r2, .L8+4
 134 008a 1A60     		str	r2, [r3]
 135              	.LBB4:
  51:.\DSP_Class.c ****     {
  52:.\DSP_Class.c ****         uint8 k;
  53:.\DSP_Class.c ****         for(k = 0 ; k<NBR_OF_SOILHUM_SENSORS ; k++){
 136              		.loc 1 53 0
 137 008c 7B1D     		add	r3, r7, #5
 138 008e 0022     		mov	r2, #0
 139 0090 1A70     		strb	r2, [r3]
 140 0092 16E0     		b	.L6
 141              	.L7:
  54:.\DSP_Class.c ****             soilHumPtr[k] = & soilHumArray[k][0];
 142              		.loc 1 54 0 discriminator 2
 143 0094 7B1D     		add	r3, r7, #5
 144 0096 1878     		ldrb	r0, [r3]
 145 0098 7B1D     		add	r3, r7, #5
 146 009a 1A78     		ldrb	r2, [r3]
 147 009c 131C     		mov	r3, r2
 148 009e 9B00     		lsl	r3, r3, #2
 149 00a0 9B18     		add	r3, r3, r2
 150 00a2 9B00     		lsl	r3, r3, #2
 151 00a4 124A     		ldr	r2, .L8+8
 152 00a6 9918     		add	r1, r3, r2
 153 00a8 154B     		ldr	r3, .L8+24
 154 00aa 8200     		lsl	r2, r0, #2
 155 00ac D150     		str	r1, [r2, r3]
  55:.\DSP_Class.c ****             soilHum[k] = 0; 
 156              		.loc 1 55 0 discriminator 2
 157 00ae 7B1D     		add	r3, r7, #5
 158 00b0 1B78     		ldrb	r3, [r3]
 159 00b2 144A     		ldr	r2, .L8+28
 160 00b4 0021     		mov	r1, #0
 161 00b6 D154     		strb	r1, [r2, r3]
  53:.\DSP_Class.c ****         for(k = 0 ; k<NBR_OF_SOILHUM_SENSORS ; k++){
 162              		.loc 1 53 0 discriminator 2
 163 00b8 7B1D     		add	r3, r7, #5
 164 00ba 1A78     		ldrb	r2, [r3]
 165 00bc 7B1D     		add	r3, r7, #5
 166 00be 0132     		add	r2, r2, #1
 167 00c0 1A70     		strb	r2, [r3]
 168              	.L6:
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 5


  53:.\DSP_Class.c ****         for(k = 0 ; k<NBR_OF_SOILHUM_SENSORS ; k++){
 169              		.loc 1 53 0 is_stmt 0 discriminator 1
 170 00c2 7B1D     		add	r3, r7, #5
 171 00c4 1B78     		ldrb	r3, [r3]
 172 00c6 052B     		cmp	r3, #5
 173 00c8 E4D9     		bls	.L7
 174              	.LBE4:
  56:.\DSP_Class.c ****             }
  57:.\DSP_Class.c ****     }
  58:.\DSP_Class.c ****     lightArrayPtr = & lightArray[0];
 175              		.loc 1 58 0 is_stmt 1
 176 00ca 0F4B     		ldr	r3, .L8+32
 177 00cc 094A     		ldr	r2, .L8+12
 178 00ce 1A60     		str	r2, [r3]
  59:.\DSP_Class.c ****     temp = 0;
 179              		.loc 1 59 0
 180 00d0 0E4B     		ldr	r3, .L8+36
 181 00d2 0022     		mov	r2, #0
 182 00d4 1A70     		strb	r2, [r3]
  60:.\DSP_Class.c ****     hum = 0;
 183              		.loc 1 60 0
 184 00d6 0E4B     		ldr	r3, .L8+40
 185 00d8 0022     		mov	r2, #0
 186 00da 1A70     		strb	r2, [r3]
  61:.\DSP_Class.c ****     light = 0;
 187              		.loc 1 61 0
 188 00dc 0D4B     		ldr	r3, .L8+44
 189 00de 0022     		mov	r2, #0
 190 00e0 1A70     		strb	r2, [r3]
  62:.\DSP_Class.c **** }
 191              		.loc 1 62 0
 192 00e2 BD46     		mov	sp, r7
 193 00e4 02B0     		add	sp, sp, #8
 194              		@ sp needed
 195 00e6 80BD     		pop	{r7, pc}
 196              	.L9:
 197              		.align	2
 198              	.L8:
 199 00e8 00000000 		.word	tempArray
 200 00ec 00000000 		.word	humArray
 201 00f0 00000000 		.word	soilHumArray
 202 00f4 00000000 		.word	lightArray
 203 00f8 00000000 		.word	tempArrayPtr
 204 00fc 00000000 		.word	humArrayPtr
 205 0100 00000000 		.word	soilHumPtr
 206 0104 00000000 		.word	soilHum
 207 0108 00000000 		.word	lightArrayPtr
 208 010c 00000000 		.word	temp
 209 0110 00000000 		.word	hum
 210 0114 00000000 		.word	light
 211              		.cfi_endproc
 212              	.LFE33:
 213              		.size	initDSP, .-initDSP
 214              		.section	.text.getTemp_DSP,"ax",%progbits
 215              		.align	2
 216              		.global	getTemp_DSP
 217              		.code	16
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 6


 218              		.thumb_func
 219              		.type	getTemp_DSP, %function
 220              	getTemp_DSP:
 221              	.LFB34:
  63:.\DSP_Class.c **** 
  64:.\DSP_Class.c **** uint8 getTemp_DSP(void){
 222              		.loc 1 64 0
 223              		.cfi_startproc
 224 0000 80B5     		push	{r7, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 7, -8
 227              		.cfi_offset 14, -4
 228 0002 00AF     		add	r7, sp, #0
 229              		.cfi_def_cfa_register 7
  65:.\DSP_Class.c ****     return temp;
 230              		.loc 1 65 0
 231 0004 024B     		ldr	r3, .L12
 232 0006 1B78     		ldrb	r3, [r3]
  66:.\DSP_Class.c **** }
 233              		.loc 1 66 0
 234 0008 181C     		mov	r0, r3
 235 000a BD46     		mov	sp, r7
 236              		@ sp needed
 237 000c 80BD     		pop	{r7, pc}
 238              	.L13:
 239 000e C046     		.align	2
 240              	.L12:
 241 0010 00000000 		.word	temp
 242              		.cfi_endproc
 243              	.LFE34:
 244              		.size	getTemp_DSP, .-getTemp_DSP
 245              		.section	.text.getHum_DSP,"ax",%progbits
 246              		.align	2
 247              		.global	getHum_DSP
 248              		.code	16
 249              		.thumb_func
 250              		.type	getHum_DSP, %function
 251              	getHum_DSP:
 252              	.LFB35:
  67:.\DSP_Class.c **** 
  68:.\DSP_Class.c **** uint8 getHum_DSP(void){
 253              		.loc 1 68 0
 254              		.cfi_startproc
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 00AF     		add	r7, sp, #0
 260              		.cfi_def_cfa_register 7
  69:.\DSP_Class.c ****     return hum;
 261              		.loc 1 69 0
 262 0004 024B     		ldr	r3, .L16
 263 0006 1B78     		ldrb	r3, [r3]
  70:.\DSP_Class.c **** }
 264              		.loc 1 70 0
 265 0008 181C     		mov	r0, r3
 266 000a BD46     		mov	sp, r7
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 7


 267              		@ sp needed
 268 000c 80BD     		pop	{r7, pc}
 269              	.L17:
 270 000e C046     		.align	2
 271              	.L16:
 272 0010 00000000 		.word	hum
 273              		.cfi_endproc
 274              	.LFE35:
 275              		.size	getHum_DSP, .-getHum_DSP
 276              		.section	.text.getSoilHum_DSP,"ax",%progbits
 277              		.align	2
 278              		.global	getSoilHum_DSP
 279              		.code	16
 280              		.thumb_func
 281              		.type	getSoilHum_DSP, %function
 282              	getSoilHum_DSP:
 283              	.LFB36:
  71:.\DSP_Class.c **** 
  72:.\DSP_Class.c **** uint8 getSoilHum_DSP(uint8 index){
 284              		.loc 1 72 0
 285              		.cfi_startproc
 286 0000 80B5     		push	{r7, lr}
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 7, -8
 289              		.cfi_offset 14, -4
 290 0002 82B0     		sub	sp, sp, #8
 291              		.cfi_def_cfa_offset 16
 292 0004 00AF     		add	r7, sp, #0
 293              		.cfi_def_cfa_register 7
 294 0006 021C     		mov	r2, r0
 295 0008 FB1D     		add	r3, r7, #7
 296 000a 1A70     		strb	r2, [r3]
  73:.\DSP_Class.c ****     return soilHum[index];
 297              		.loc 1 73 0
 298 000c FB1D     		add	r3, r7, #7
 299 000e 1B78     		ldrb	r3, [r3]
 300 0010 024A     		ldr	r2, .L20
 301 0012 D35C     		ldrb	r3, [r2, r3]
  74:.\DSP_Class.c **** }
 302              		.loc 1 74 0
 303 0014 181C     		mov	r0, r3
 304 0016 BD46     		mov	sp, r7
 305 0018 02B0     		add	sp, sp, #8
 306              		@ sp needed
 307 001a 80BD     		pop	{r7, pc}
 308              	.L21:
 309              		.align	2
 310              	.L20:
 311 001c 00000000 		.word	soilHum
 312              		.cfi_endproc
 313              	.LFE36:
 314              		.size	getSoilHum_DSP, .-getSoilHum_DSP
 315              		.section	.text.getLight_DSP,"ax",%progbits
 316              		.align	2
 317              		.global	getLight_DSP
 318              		.code	16
 319              		.thumb_func
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 8


 320              		.type	getLight_DSP, %function
 321              	getLight_DSP:
 322              	.LFB37:
  75:.\DSP_Class.c **** 
  76:.\DSP_Class.c **** uint8 getLight_DSP(void){
 323              		.loc 1 76 0
 324              		.cfi_startproc
 325 0000 80B5     		push	{r7, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 7, -8
 328              		.cfi_offset 14, -4
 329 0002 00AF     		add	r7, sp, #0
 330              		.cfi_def_cfa_register 7
  77:.\DSP_Class.c ****     return light;
 331              		.loc 1 77 0
 332 0004 024B     		ldr	r3, .L24
 333 0006 1B78     		ldrb	r3, [r3]
  78:.\DSP_Class.c **** }
 334              		.loc 1 78 0
 335 0008 181C     		mov	r0, r3
 336 000a BD46     		mov	sp, r7
 337              		@ sp needed
 338 000c 80BD     		pop	{r7, pc}
 339              	.L25:
 340 000e C046     		.align	2
 341              	.L24:
 342 0010 00000000 		.word	light
 343              		.cfi_endproc
 344              	.LFE37:
 345              		.size	getLight_DSP, .-getLight_DSP
 346              		.global	__aeabi_ldivmod
 347              		.global	__aeabi_l2f
 348              		.global	__aeabi_fdiv
 349              		.global	__aeabi_fmul
 350              		.global	__aeabi_fsub
 351              		.global	__aeabi_fcmplt
 352              		.global	__aeabi_fcmpgt
 353              		.global	__aeabi_fadd
 354              		.global	__aeabi_f2uiz
 355              		.section	.text.avgTemp,"ax",%progbits
 356              		.align	2
 357              		.global	avgTemp
 358              		.code	16
 359              		.thumb_func
 360              		.type	avgTemp, %function
 361              	avgTemp:
 362              	.LFB38:
  79:.\DSP_Class.c **** 
  80:.\DSP_Class.c **** void avgTemp(void){
 363              		.loc 1 80 0
 364              		.cfi_startproc
 365 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 366              		.cfi_def_cfa_offset 20
 367              		.cfi_offset 4, -20
 368              		.cfi_offset 5, -16
 369              		.cfi_offset 6, -12
 370              		.cfi_offset 7, -8
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 9


 371              		.cfi_offset 14, -4
 372 0002 89B0     		sub	sp, sp, #36
 373              		.cfi_def_cfa_offset 56
 374 0004 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
  81:.\DSP_Class.c ****     uint8 skip = 0;
 376              		.loc 1 81 0
 377 0006 381C     		mov	r0, r7
 378 0008 1F30     		add	r0, r0, #31
 379 000a 0025     		mov	r5, #0
 380 000c 0570     		strb	r5, [r0]
  82:.\DSP_Class.c ****     int64 total = 0;
 381              		.loc 1 82 0
 382 000e 0025     		mov	r5, #0
 383 0010 0026     		mov	r6, #0
 384 0012 3D61     		str	r5, [r7, #16]
 385 0014 7E61     		str	r6, [r7, #20]
 386              	.LBB5:
  83:.\DSP_Class.c ****     {
  84:.\DSP_Class.c ****         uint8 i;
  85:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 387              		.loc 1 85 0
 388 0016 381C     		mov	r0, r7
 389 0018 0F30     		add	r0, r0, #15
 390 001a 0025     		mov	r5, #0
 391 001c 0570     		strb	r5, [r0]
 392 001e 25E0     		b	.L27
 393              	.L30:
  86:.\DSP_Class.c ****             if(tempArray[i]>=0){
 394              		.loc 1 86 0
 395 0020 381C     		mov	r0, r7
 396 0022 0F30     		add	r0, r0, #15
 397 0024 0578     		ldrb	r5, [r0]
 398 0026 4048     		ldr	r0, .L40
 399 0028 AD00     		lsl	r5, r5, #2
 400 002a 2858     		ldr	r0, [r5, r0]
 401 002c 0028     		cmp	r0, #0
 402 002e 0FDB     		blt	.L28
  87:.\DSP_Class.c ****                 total += tempArray[i];
 403              		.loc 1 87 0
 404 0030 381C     		mov	r0, r7
 405 0032 0F30     		add	r0, r0, #15
 406 0034 0578     		ldrb	r5, [r0]
 407 0036 3C48     		ldr	r0, .L40
 408 0038 AD00     		lsl	r5, r5, #2
 409 003a 2858     		ldr	r0, [r5, r0]
 410 003c 011C     		mov	r1, r0
 411 003e C017     		asr	r0, r0, #31
 412 0040 021C     		mov	r2, r0
 413 0042 3D69     		ldr	r5, [r7, #16]
 414 0044 7E69     		ldr	r6, [r7, #20]
 415 0046 6D18     		add	r5, r5, r1
 416 0048 5641     		adc	r6, r6, r2
 417 004a 3D61     		str	r5, [r7, #16]
 418 004c 7E61     		str	r6, [r7, #20]
 419 004e 06E0     		b	.L29
 420              	.L28:
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 10


  88:.\DSP_Class.c ****             }
  89:.\DSP_Class.c ****             else{
  90:.\DSP_Class.c ****                 skip++;
 421              		.loc 1 90 0
 422 0050 381C     		mov	r0, r7
 423 0052 1F30     		add	r0, r0, #31
 424 0054 0578     		ldrb	r5, [r0]
 425 0056 381C     		mov	r0, r7
 426 0058 1F30     		add	r0, r0, #31
 427 005a 0135     		add	r5, r5, #1
 428 005c 0570     		strb	r5, [r0]
 429              	.L29:
  85:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 430              		.loc 1 85 0
 431 005e 381C     		mov	r0, r7
 432 0060 0F30     		add	r0, r0, #15
 433 0062 0578     		ldrb	r5, [r0]
 434 0064 381C     		mov	r0, r7
 435 0066 0F30     		add	r0, r0, #15
 436 0068 0135     		add	r5, r5, #1
 437 006a 0570     		strb	r5, [r0]
 438              	.L27:
  85:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 439              		.loc 1 85 0 is_stmt 0 discriminator 1
 440 006c 381C     		mov	r0, r7
 441 006e 0F30     		add	r0, r0, #15
 442 0070 0078     		ldrb	r0, [r0]
 443 0072 0928     		cmp	r0, #9
 444 0074 D4D9     		bls	.L30
 445              	.LBE5:
  91:.\DSP_Class.c ****             }
  92:.\DSP_Class.c ****         }
  93:.\DSP_Class.c ****     }
  94:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
  95:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 446              		.loc 1 95 0 is_stmt 1
 447 0076 3A1C     		mov	r2, r7
 448 0078 1F32     		add	r2, r2, #31
 449 007a 1278     		ldrb	r2, [r2]
 450 007c 0A21     		mov	r1, #10
 451 007e 8A1A     		sub	r2, r1, r2
 452 0080 092A     		cmp	r2, #9
 453 0082 4ADD     		ble	.L31
 454              	.LBB6:
  96:.\DSP_Class.c ****         float avg = total/(ARRAYSIZE-skip);                         // Calculate the average value
 455              		.loc 1 96 0
 456 0084 3A1C     		mov	r2, r7
 457 0086 1F32     		add	r2, r2, #31
 458 0088 1278     		ldrb	r2, [r2]
 459 008a 0A21     		mov	r1, #10
 460 008c 8A1A     		sub	r2, r1, r2
 461 008e 131C     		mov	r3, r2
 462 0090 D217     		asr	r2, r2, #31
 463 0092 141C     		mov	r4, r2
 464 0094 3869     		ldr	r0, [r7, #16]
 465 0096 7969     		ldr	r1, [r7, #20]
 466 0098 1A1C     		mov	r2, r3
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 11


 467 009a 231C     		mov	r3, r4
 468 009c FFF7FEFF 		bl	__aeabi_ldivmod
 469 00a0 031C     		mov	r3, r0
 470 00a2 0C1C     		mov	r4, r1
 471 00a4 181C     		mov	r0, r3
 472 00a6 211C     		mov	r1, r4
 473 00a8 FFF7FEFF 		bl	__aeabi_l2f
 474 00ac 031C     		add	r3, r0, #0
 475 00ae 7B60     		str	r3, [r7, #4]
  97:.\DSP_Class.c ****         float tempInDegreesC = (((avg)/((16380)-2))*165)-40;        // Conversion formula from data
 476              		.loc 1 97 0
 477 00b0 7868     		ldr	r0, [r7, #4]
 478 00b2 1E49     		ldr	r1, .L40+4
 479 00b4 FFF7FEFF 		bl	__aeabi_fdiv
 480 00b8 031C     		add	r3, r0, #0
 481 00ba 181C     		add	r0, r3, #0
 482 00bc 1C49     		ldr	r1, .L40+8
 483 00be FFF7FEFF 		bl	__aeabi_fmul
 484 00c2 031C     		add	r3, r0, #0
 485 00c4 181C     		add	r0, r3, #0
 486 00c6 1B49     		ldr	r1, .L40+12
 487 00c8 FFF7FEFF 		bl	__aeabi_fsub
 488 00cc 031C     		add	r3, r0, #0
 489 00ce BB60     		str	r3, [r7, #8]
  98:.\DSP_Class.c **** 
  99:.\DSP_Class.c ****         // tempInDegreesC is limited to -20 and +80 degrees C
 100:.\DSP_Class.c ****         if ( -19.5 > tempInDegreesC){
 490              		.loc 1 100 0
 491 00d0 B868     		ldr	r0, [r7, #8]
 492 00d2 1949     		ldr	r1, .L40+16
 493 00d4 FFF7FEFF 		bl	__aeabi_fcmplt
 494 00d8 031C     		mov	r3, r0
 495 00da 002B     		cmp	r3, #0
 496 00dc 02D0     		beq	.L39
 101:.\DSP_Class.c ****             tempInDegreesC = -19.5;
 497              		.loc 1 101 0
 498 00de 164B     		ldr	r3, .L40+16
 499 00e0 BB60     		str	r3, [r7, #8]
 500 00e2 08E0     		b	.L34
 501              	.L39:
 102:.\DSP_Class.c ****         }
 103:.\DSP_Class.c ****         else if(tempInDegreesC > 80){
 502              		.loc 1 103 0
 503 00e4 B868     		ldr	r0, [r7, #8]
 504 00e6 1549     		ldr	r1, .L40+20
 505 00e8 FFF7FEFF 		bl	__aeabi_fcmpgt
 506 00ec 031C     		mov	r3, r0
 507 00ee 002B     		cmp	r3, #0
 508 00f0 01D0     		beq	.L34
 104:.\DSP_Class.c ****             tempInDegreesC = 80;
 509              		.loc 1 104 0
 510 00f2 124B     		ldr	r3, .L40+20
 511 00f4 BB60     		str	r3, [r7, #8]
 512              	.L34:
 105:.\DSP_Class.c ****         }
 106:.\DSP_Class.c **** 
 107:.\DSP_Class.c ****         temp = (tempInDegreesC+20)*2;       // Conversion to UART protocol
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 12


 513              		.loc 1 107 0 discriminator 1
 514 00f6 B868     		ldr	r0, [r7, #8]
 515 00f8 1149     		ldr	r1, .L40+24
 516 00fa FFF7FEFF 		bl	__aeabi_fadd
 517 00fe 031C     		add	r3, r0, #0
 518 0100 181C     		add	r0, r3, #0
 519 0102 191C     		add	r1, r3, #0
 520 0104 FFF7FEFF 		bl	__aeabi_fadd
 521 0108 031C     		add	r3, r0, #0
 522 010a 181C     		add	r0, r3, #0
 523 010c FFF7FEFF 		bl	__aeabi_f2uiz
 524 0110 031C     		mov	r3, r0
 525 0112 DAB2     		uxtb	r2, r3
 526 0114 0B4B     		ldr	r3, .L40+28
 527 0116 1A70     		strb	r2, [r3]
 528              	.LBE6:
 529 0118 02E0     		b	.L26
 530              	.L31:
 108:.\DSP_Class.c ****     }
 109:.\DSP_Class.c ****     else{
 110:.\DSP_Class.c ****         temp = 0;
 531              		.loc 1 110 0
 532 011a 0A4B     		ldr	r3, .L40+28
 533 011c 0022     		mov	r2, #0
 534 011e 1A70     		strb	r2, [r3]
 535              	.L26:
 111:.\DSP_Class.c ****     }
 112:.\DSP_Class.c **** }
 536              		.loc 1 112 0
 537 0120 BD46     		mov	sp, r7
 538 0122 09B0     		add	sp, sp, #36
 539              		@ sp needed
 540 0124 F0BD     		pop	{r4, r5, r6, r7, pc}
 541              	.L41:
 542 0126 C046     		.align	2
 543              	.L40:
 544 0128 00000000 		.word	tempArray
 545 012c 00E87F46 		.word	1182787584
 546 0130 00002543 		.word	1126498304
 547 0134 00002042 		.word	1109393408
 548 0138 00009CC1 		.word	-1046740992
 549 013c 0000A042 		.word	1117782016
 550 0140 0000A041 		.word	1101004800
 551 0144 00000000 		.word	temp
 552              		.cfi_endproc
 553              	.LFE38:
 554              		.size	avgTemp, .-avgTemp
 555              		.global	__aeabi_fcmple
 556              		.section	.text.avgHum,"ax",%progbits
 557              		.align	2
 558              		.global	avgHum
 559              		.code	16
 560              		.thumb_func
 561              		.type	avgHum, %function
 562              	avgHum:
 563              	.LFB39:
 113:.\DSP_Class.c **** 
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 13


 114:.\DSP_Class.c **** void avgHum(void){
 564              		.loc 1 114 0
 565              		.cfi_startproc
 566 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 567              		.cfi_def_cfa_offset 20
 568              		.cfi_offset 4, -20
 569              		.cfi_offset 5, -16
 570              		.cfi_offset 6, -12
 571              		.cfi_offset 7, -8
 572              		.cfi_offset 14, -4
 573 0002 89B0     		sub	sp, sp, #36
 574              		.cfi_def_cfa_offset 56
 575 0004 00AF     		add	r7, sp, #0
 576              		.cfi_def_cfa_register 7
 115:.\DSP_Class.c ****     uint8 skip = 0;
 577              		.loc 1 115 0
 578 0006 381C     		mov	r0, r7
 579 0008 1F30     		add	r0, r0, #31
 580 000a 0025     		mov	r5, #0
 581 000c 0570     		strb	r5, [r0]
 116:.\DSP_Class.c ****     int64 total = 0;
 582              		.loc 1 116 0
 583 000e 0025     		mov	r5, #0
 584 0010 0026     		mov	r6, #0
 585 0012 3D61     		str	r5, [r7, #16]
 586 0014 7E61     		str	r6, [r7, #20]
 587              	.LBB7:
 117:.\DSP_Class.c ****     {
 118:.\DSP_Class.c ****         uint8 i;
 119:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 588              		.loc 1 119 0
 589 0016 381C     		mov	r0, r7
 590 0018 0F30     		add	r0, r0, #15
 591 001a 0025     		mov	r5, #0
 592 001c 0570     		strb	r5, [r0]
 593 001e 25E0     		b	.L43
 594              	.L46:
 120:.\DSP_Class.c ****             if(humArray[i]>=0){
 595              		.loc 1 120 0
 596 0020 381C     		mov	r0, r7
 597 0022 0F30     		add	r0, r0, #15
 598 0024 0578     		ldrb	r5, [r0]
 599 0026 3948     		ldr	r0, .L56
 600 0028 AD00     		lsl	r5, r5, #2
 601 002a 2858     		ldr	r0, [r5, r0]
 602 002c 0028     		cmp	r0, #0
 603 002e 0FDB     		blt	.L44
 121:.\DSP_Class.c ****                 total += humArray[i];
 604              		.loc 1 121 0
 605 0030 381C     		mov	r0, r7
 606 0032 0F30     		add	r0, r0, #15
 607 0034 0578     		ldrb	r5, [r0]
 608 0036 3548     		ldr	r0, .L56
 609 0038 AD00     		lsl	r5, r5, #2
 610 003a 2858     		ldr	r0, [r5, r0]
 611 003c 011C     		mov	r1, r0
 612 003e C017     		asr	r0, r0, #31
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 14


 613 0040 021C     		mov	r2, r0
 614 0042 3D69     		ldr	r5, [r7, #16]
 615 0044 7E69     		ldr	r6, [r7, #20]
 616 0046 6D18     		add	r5, r5, r1
 617 0048 5641     		adc	r6, r6, r2
 618 004a 3D61     		str	r5, [r7, #16]
 619 004c 7E61     		str	r6, [r7, #20]
 620 004e 06E0     		b	.L45
 621              	.L44:
 122:.\DSP_Class.c ****             }
 123:.\DSP_Class.c ****             else{
 124:.\DSP_Class.c ****                 skip++;
 622              		.loc 1 124 0
 623 0050 381C     		mov	r0, r7
 624 0052 1F30     		add	r0, r0, #31
 625 0054 0578     		ldrb	r5, [r0]
 626 0056 381C     		mov	r0, r7
 627 0058 1F30     		add	r0, r0, #31
 628 005a 0135     		add	r5, r5, #1
 629 005c 0570     		strb	r5, [r0]
 630              	.L45:
 119:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 631              		.loc 1 119 0
 632 005e 381C     		mov	r0, r7
 633 0060 0F30     		add	r0, r0, #15
 634 0062 0578     		ldrb	r5, [r0]
 635 0064 381C     		mov	r0, r7
 636 0066 0F30     		add	r0, r0, #15
 637 0068 0135     		add	r5, r5, #1
 638 006a 0570     		strb	r5, [r0]
 639              	.L43:
 119:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 640              		.loc 1 119 0 is_stmt 0 discriminator 1
 641 006c 381C     		mov	r0, r7
 642 006e 0F30     		add	r0, r0, #15
 643 0070 0078     		ldrb	r0, [r0]
 644 0072 0928     		cmp	r0, #9
 645 0074 D4D9     		bls	.L46
 646              	.LBE7:
 125:.\DSP_Class.c ****             }
 126:.\DSP_Class.c ****         }
 127:.\DSP_Class.c ****     }
 128:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 129:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 647              		.loc 1 129 0 is_stmt 1
 648 0076 3A1C     		mov	r2, r7
 649 0078 1F32     		add	r2, r2, #31
 650 007a 1278     		ldrb	r2, [r2]
 651 007c 0A21     		mov	r1, #10
 652 007e 8A1A     		sub	r2, r1, r2
 653 0080 092A     		cmp	r2, #9
 654 0082 3CDD     		ble	.L47
 655              	.LBB8:
 130:.\DSP_Class.c ****         float avg = total/(ARRAYSIZE-skip);                     // Calculate the average value
 656              		.loc 1 130 0
 657 0084 3A1C     		mov	r2, r7
 658 0086 1F32     		add	r2, r2, #31
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 15


 659 0088 1278     		ldrb	r2, [r2]
 660 008a 0A21     		mov	r1, #10
 661 008c 8A1A     		sub	r2, r1, r2
 662 008e 131C     		mov	r3, r2
 663 0090 D217     		asr	r2, r2, #31
 664 0092 141C     		mov	r4, r2
 665 0094 3869     		ldr	r0, [r7, #16]
 666 0096 7969     		ldr	r1, [r7, #20]
 667 0098 1A1C     		mov	r2, r3
 668 009a 231C     		mov	r3, r4
 669 009c FFF7FEFF 		bl	__aeabi_ldivmod
 670 00a0 031C     		mov	r3, r0
 671 00a2 0C1C     		mov	r4, r1
 672 00a4 181C     		mov	r0, r3
 673 00a6 211C     		mov	r1, r4
 674 00a8 FFF7FEFF 		bl	__aeabi_l2f
 675 00ac 031C     		add	r3, r0, #0
 676 00ae 7B60     		str	r3, [r7, #4]
 131:.\DSP_Class.c ****         float humInRH = (avg/(16380-2))*100;                // Conversion formula from datasheet
 677              		.loc 1 131 0
 678 00b0 7868     		ldr	r0, [r7, #4]
 679 00b2 1749     		ldr	r1, .L56+4
 680 00b4 FFF7FEFF 		bl	__aeabi_fdiv
 681 00b8 031C     		add	r3, r0, #0
 682 00ba 181C     		add	r0, r3, #0
 683 00bc 1549     		ldr	r1, .L56+8
 684 00be FFF7FEFF 		bl	__aeabi_fmul
 685 00c2 031C     		add	r3, r0, #0
 686 00c4 BB60     		str	r3, [r7, #8]
 132:.\DSP_Class.c ****         
 133:.\DSP_Class.c ****         // humInRH is limited to 1 and 100 RH
 134:.\DSP_Class.c ****         if(humInRH <= 0){
 687              		.loc 1 134 0
 688 00c6 B868     		ldr	r0, [r7, #8]
 689 00c8 0021     		mov	r1, #0
 690 00ca FFF7FEFF 		bl	__aeabi_fcmple
 691 00ce 031C     		mov	r3, r0
 692 00d0 002B     		cmp	r3, #0
 693 00d2 03D0     		beq	.L55
 135:.\DSP_Class.c ****             humInRH = 1;
 694              		.loc 1 135 0
 695 00d4 FE23     		mov	r3, #254
 696 00d6 9B05     		lsl	r3, r3, #22
 697 00d8 BB60     		str	r3, [r7, #8]
 698 00da 08E0     		b	.L50
 699              	.L55:
 136:.\DSP_Class.c ****         }
 137:.\DSP_Class.c ****         else if(humInRH > 100){
 700              		.loc 1 137 0
 701 00dc B868     		ldr	r0, [r7, #8]
 702 00de 0D49     		ldr	r1, .L56+8
 703 00e0 FFF7FEFF 		bl	__aeabi_fcmpgt
 704 00e4 031C     		mov	r3, r0
 705 00e6 002B     		cmp	r3, #0
 706 00e8 01D0     		beq	.L50
 138:.\DSP_Class.c ****             humInRH = 100;
 707              		.loc 1 138 0
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 16


 708 00ea 0A4B     		ldr	r3, .L56+8
 709 00ec BB60     		str	r3, [r7, #8]
 710              	.L50:
 139:.\DSP_Class.c ****         }
 140:.\DSP_Class.c ****         hum = humInRH;
 711              		.loc 1 140 0 discriminator 1
 712 00ee B868     		ldr	r0, [r7, #8]
 713 00f0 FFF7FEFF 		bl	__aeabi_f2uiz
 714 00f4 031C     		mov	r3, r0
 715 00f6 DAB2     		uxtb	r2, r3
 716 00f8 074B     		ldr	r3, .L56+12
 717 00fa 1A70     		strb	r2, [r3]
 718              	.LBE8:
 719 00fc 02E0     		b	.L42
 720              	.L47:
 141:.\DSP_Class.c ****     }
 142:.\DSP_Class.c ****     else{
 143:.\DSP_Class.c ****     hum = 0;
 721              		.loc 1 143 0
 722 00fe 064B     		ldr	r3, .L56+12
 723 0100 0022     		mov	r2, #0
 724 0102 1A70     		strb	r2, [r3]
 725              	.L42:
 144:.\DSP_Class.c ****     }
 145:.\DSP_Class.c **** }
 726              		.loc 1 145 0
 727 0104 BD46     		mov	sp, r7
 728 0106 09B0     		add	sp, sp, #36
 729              		@ sp needed
 730 0108 F0BD     		pop	{r4, r5, r6, r7, pc}
 731              	.L57:
 732 010a C046     		.align	2
 733              	.L56:
 734 010c 00000000 		.word	humArray
 735 0110 00E87F46 		.word	1182787584
 736 0114 0000C842 		.word	1120403456
 737 0118 00000000 		.word	hum
 738              		.cfi_endproc
 739              	.LFE39:
 740              		.size	avgHum, .-avgHum
 741              		.section	.text.avgSoilHum,"ax",%progbits
 742              		.align	2
 743              		.global	avgSoilHum
 744              		.code	16
 745              		.thumb_func
 746              		.type	avgSoilHum, %function
 747              	avgSoilHum:
 748              	.LFB40:
 146:.\DSP_Class.c **** 
 147:.\DSP_Class.c **** void avgSoilHum(uint8 index){
 749              		.loc 1 147 0
 750              		.cfi_startproc
 751 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 752              		.cfi_def_cfa_offset 20
 753              		.cfi_offset 4, -20
 754              		.cfi_offset 5, -16
 755              		.cfi_offset 6, -12
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 17


 756              		.cfi_offset 7, -8
 757              		.cfi_offset 14, -4
 758 0002 93B0     		sub	sp, sp, #76
 759              		.cfi_def_cfa_offset 96
 760 0004 00AF     		add	r7, sp, #0
 761              		.cfi_def_cfa_register 7
 762 0006 3B1C     		mov	r3, r7
 763 0008 2733     		add	r3, r3, #39
 764 000a 1870     		strb	r0, [r3]
 148:.\DSP_Class.c ****     uint8 skip = 0;
 765              		.loc 1 148 0
 766 000c 3B1C     		mov	r3, r7
 767 000e 4733     		add	r3, r3, #71
 768 0010 0020     		mov	r0, #0
 769 0012 1870     		strb	r0, [r3]
 149:.\DSP_Class.c ****     int64 total = 0;
 770              		.loc 1 149 0
 771 0014 0023     		mov	r3, #0
 772 0016 0024     		mov	r4, #0
 773 0018 BB61     		str	r3, [r7, #24]
 774 001a FC61     		str	r4, [r7, #28]
 775 001c BB69     		ldr	r3, [r7, #24]
 776 001e FC69     		ldr	r4, [r7, #28]
 777 0020 BB63     		str	r3, [r7, #56]
 778 0022 FC63     		str	r4, [r7, #60]
 779              	.LBB9:
 150:.\DSP_Class.c ****     {
 151:.\DSP_Class.c ****         uint8 i;
 152:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 780              		.loc 1 152 0
 781 0024 3B1C     		mov	r3, r7
 782 0026 3733     		add	r3, r3, #55
 783 0028 0020     		mov	r0, #0
 784 002a 1870     		strb	r0, [r3]
 785 002c 41E0     		b	.L59
 786              	.L62:
 153:.\DSP_Class.c ****             if(soilHumArray[index][i]>=0){
 787              		.loc 1 153 0
 788 002e 3B1C     		mov	r3, r7
 789 0030 2733     		add	r3, r3, #39
 790 0032 1878     		ldrb	r0, [r3]
 791 0034 3B1C     		mov	r3, r7
 792 0036 3733     		add	r3, r3, #55
 793 0038 1B78     		ldrb	r3, [r3]
 794 003a 9C46     		mov	ip, r3
 795 003c 434E     		ldr	r6, .L72
 796 003e 031C     		mov	r3, r0
 797 0040 9B00     		lsl	r3, r3, #2
 798 0042 1B18     		add	r3, r3, r0
 799 0044 5B00     		lsl	r3, r3, #1
 800 0046 6344     		add	r3, r3, ip
 801 0048 5B00     		lsl	r3, r3, #1
 802 004a 9B5B     		ldrh	r3, [r3, r6]
 803 004c 1BB2     		sxth	r3, r3
 804 004e 002B     		cmp	r3, #0
 805 0050 21DB     		blt	.L60
 154:.\DSP_Class.c ****                 total += soilHumArray[index][i];
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 18


 806              		.loc 1 154 0
 807 0052 3B1C     		mov	r3, r7
 808 0054 2733     		add	r3, r3, #39
 809 0056 1878     		ldrb	r0, [r3]
 810 0058 3B1C     		mov	r3, r7
 811 005a 3733     		add	r3, r3, #55
 812 005c 1B78     		ldrb	r3, [r3]
 813 005e 9C46     		mov	ip, r3
 814 0060 3A4E     		ldr	r6, .L72
 815 0062 031C     		mov	r3, r0
 816 0064 9B00     		lsl	r3, r3, #2
 817 0066 1B18     		add	r3, r3, r0
 818 0068 5B00     		lsl	r3, r3, #1
 819 006a 6344     		add	r3, r3, ip
 820 006c 5B00     		lsl	r3, r3, #1
 821 006e 9B5B     		ldrh	r3, [r3, r6]
 822 0070 1BB2     		sxth	r3, r3
 823 0072 191C     		mov	r1, r3
 824 0074 DB17     		asr	r3, r3, #31
 825 0076 1A1C     		mov	r2, r3
 826 0078 BB6B     		ldr	r3, [r7, #56]
 827 007a FC6B     		ldr	r4, [r7, #60]
 828 007c BB60     		str	r3, [r7, #8]
 829 007e FC60     		str	r4, [r7, #12]
 830 0080 BB68     		ldr	r3, [r7, #8]
 831 0082 FC68     		ldr	r4, [r7, #12]
 832 0084 5B18     		add	r3, r3, r1
 833 0086 5441     		adc	r4, r4, r2
 834 0088 3B61     		str	r3, [r7, #16]
 835 008a 7C61     		str	r4, [r7, #20]
 836 008c 3B69     		ldr	r3, [r7, #16]
 837 008e 7C69     		ldr	r4, [r7, #20]
 838 0090 BB63     		str	r3, [r7, #56]
 839 0092 FC63     		str	r4, [r7, #60]
 840 0094 06E0     		b	.L61
 841              	.L60:
 155:.\DSP_Class.c ****             }
 156:.\DSP_Class.c ****             else{
 157:.\DSP_Class.c ****                 skip++;
 842              		.loc 1 157 0
 843 0096 3B1C     		mov	r3, r7
 844 0098 4733     		add	r3, r3, #71
 845 009a 1878     		ldrb	r0, [r3]
 846 009c 3B1C     		mov	r3, r7
 847 009e 4733     		add	r3, r3, #71
 848 00a0 0130     		add	r0, r0, #1
 849 00a2 1870     		strb	r0, [r3]
 850              	.L61:
 152:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 851              		.loc 1 152 0
 852 00a4 3B1C     		mov	r3, r7
 853 00a6 3733     		add	r3, r3, #55
 854 00a8 1878     		ldrb	r0, [r3]
 855 00aa 3B1C     		mov	r3, r7
 856 00ac 3733     		add	r3, r3, #55
 857 00ae 0130     		add	r0, r0, #1
 858 00b0 1870     		strb	r0, [r3]
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 19


 859              	.L59:
 152:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 860              		.loc 1 152 0 is_stmt 0 discriminator 1
 861 00b2 3B1C     		mov	r3, r7
 862 00b4 3733     		add	r3, r3, #55
 863 00b6 1B78     		ldrb	r3, [r3]
 864 00b8 092B     		cmp	r3, #9
 865 00ba B8D9     		bls	.L62
 866              	.LBE9:
 158:.\DSP_Class.c ****             }
 159:.\DSP_Class.c ****         }
 160:.\DSP_Class.c ****     }
 161:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 162:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 867              		.loc 1 162 0 is_stmt 1
 868 00bc 3B1C     		mov	r3, r7
 869 00be 4733     		add	r3, r3, #71
 870 00c0 1B78     		ldrb	r3, [r3]
 871 00c2 0A22     		mov	r2, #10
 872 00c4 D31A     		sub	r3, r2, r3
 873 00c6 092B     		cmp	r3, #9
 874 00c8 36DD     		ble	.L63
 875              	.LBB10:
 163:.\DSP_Class.c ****         float avg = total/(ARRAYSIZE-skip);         // Calculate the average value (assuming input 
 876              		.loc 1 163 0
 877 00ca 3B1C     		mov	r3, r7
 878 00cc 4733     		add	r3, r3, #71
 879 00ce 1B78     		ldrb	r3, [r3]
 880 00d0 0A22     		mov	r2, #10
 881 00d2 D31A     		sub	r3, r2, r3
 882 00d4 3B60     		str	r3, [r7]
 883 00d6 DB17     		asr	r3, r3, #31
 884 00d8 7B60     		str	r3, [r7, #4]
 885 00da B86B     		ldr	r0, [r7, #56]
 886 00dc F96B     		ldr	r1, [r7, #60]
 887 00de 3A68     		ldr	r2, [r7]
 888 00e0 7B68     		ldr	r3, [r7, #4]
 889 00e2 FFF7FEFF 		bl	__aeabi_ldivmod
 890 00e6 031C     		mov	r3, r0
 891 00e8 0C1C     		mov	r4, r1
 892 00ea 181C     		mov	r0, r3
 893 00ec 211C     		mov	r1, r4
 894 00ee FFF7FEFF 		bl	__aeabi_l2f
 895 00f2 031C     		add	r3, r0, #0
 896 00f4 FB62     		str	r3, [r7, #44]
 164:.\DSP_Class.c ****         float soilHumInRH = avg;                    // Takes care of conversion ( NB no conversion 
 897              		.loc 1 164 0
 898 00f6 FB6A     		ldr	r3, [r7, #44]
 899 00f8 3B63     		str	r3, [r7, #48]
 165:.\DSP_Class.c ****         
 166:.\DSP_Class.c ****         // soilHumInRH is limited to 1 and 100 RH
 167:.\DSP_Class.c ****         if(soilHumInRH <= 0){
 900              		.loc 1 167 0
 901 00fa 386B     		ldr	r0, [r7, #48]
 902 00fc 0021     		mov	r1, #0
 903 00fe FFF7FEFF 		bl	__aeabi_fcmple
 904 0102 031C     		mov	r3, r0
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 20


 905 0104 002B     		cmp	r3, #0
 906 0106 03D0     		beq	.L71
 168:.\DSP_Class.c ****             soilHumInRH = 1;
 907              		.loc 1 168 0
 908 0108 FE23     		mov	r3, #254
 909 010a 9B05     		lsl	r3, r3, #22
 910 010c 3B63     		str	r3, [r7, #48]
 911 010e 08E0     		b	.L66
 912              	.L71:
 169:.\DSP_Class.c ****         }
 170:.\DSP_Class.c ****         else if(soilHumInRH > 100){
 913              		.loc 1 170 0
 914 0110 386B     		ldr	r0, [r7, #48]
 915 0112 0F49     		ldr	r1, .L72+4
 916 0114 FFF7FEFF 		bl	__aeabi_fcmpgt
 917 0118 031C     		mov	r3, r0
 918 011a 002B     		cmp	r3, #0
 919 011c 01D0     		beq	.L66
 171:.\DSP_Class.c ****             soilHumInRH = 100;
 920              		.loc 1 171 0
 921 011e 0C4B     		ldr	r3, .L72+4
 922 0120 3B63     		str	r3, [r7, #48]
 923              	.L66:
 172:.\DSP_Class.c ****         }
 173:.\DSP_Class.c ****         soilHum[index] = (uint8)soilHumInRH;
 924              		.loc 1 173 0 discriminator 1
 925 0122 3B1C     		mov	r3, r7
 926 0124 2733     		add	r3, r3, #39
 927 0126 1C78     		ldrb	r4, [r3]
 928 0128 386B     		ldr	r0, [r7, #48]
 929 012a FFF7FEFF 		bl	__aeabi_f2uiz
 930 012e 031C     		mov	r3, r0
 931 0130 DAB2     		uxtb	r2, r3
 932 0132 084B     		ldr	r3, .L72+8
 933 0134 1A55     		strb	r2, [r3, r4]
 934              	.LBE10:
 935 0136 05E0     		b	.L58
 936              	.L63:
 174:.\DSP_Class.c ****     }
 175:.\DSP_Class.c ****     else{
 176:.\DSP_Class.c ****     soilHum[index] = 0;
 937              		.loc 1 176 0
 938 0138 3B1C     		mov	r3, r7
 939 013a 2733     		add	r3, r3, #39
 940 013c 1B78     		ldrb	r3, [r3]
 941 013e 054A     		ldr	r2, .L72+8
 942 0140 0021     		mov	r1, #0
 943 0142 D154     		strb	r1, [r2, r3]
 944              	.L58:
 177:.\DSP_Class.c ****     }
 178:.\DSP_Class.c **** }
 945              		.loc 1 178 0
 946 0144 BD46     		mov	sp, r7
 947 0146 13B0     		add	sp, sp, #76
 948              		@ sp needed
 949 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 950              	.L73:
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 21


 951 014a C046     		.align	2
 952              	.L72:
 953 014c 00000000 		.word	soilHumArray
 954 0150 0000C842 		.word	1120403456
 955 0154 00000000 		.word	soilHum
 956              		.cfi_endproc
 957              	.LFE40:
 958              		.size	avgSoilHum, .-avgSoilHum
 959              		.global	__aeabi_f2iz
 960              		.global	__aeabi_idiv
 961              		.section	.text.avgLight,"ax",%progbits
 962              		.align	2
 963              		.global	avgLight
 964              		.code	16
 965              		.thumb_func
 966              		.type	avgLight, %function
 967              	avgLight:
 968              	.LFB41:
 179:.\DSP_Class.c **** 
 180:.\DSP_Class.c **** void avgLight(void){
 969              		.loc 1 180 0
 970              		.cfi_startproc
 971 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 972              		.cfi_def_cfa_offset 20
 973              		.cfi_offset 4, -20
 974              		.cfi_offset 5, -16
 975              		.cfi_offset 6, -12
 976              		.cfi_offset 7, -8
 977              		.cfi_offset 14, -4
 978 0002 89B0     		sub	sp, sp, #36
 979              		.cfi_def_cfa_offset 56
 980 0004 00AF     		add	r7, sp, #0
 981              		.cfi_def_cfa_register 7
 181:.\DSP_Class.c ****     uint8 skip = 0;
 982              		.loc 1 181 0
 983 0006 381C     		mov	r0, r7
 984 0008 1F30     		add	r0, r0, #31
 985 000a 0025     		mov	r5, #0
 986 000c 0570     		strb	r5, [r0]
 182:.\DSP_Class.c ****     int64 total = 0;
 987              		.loc 1 182 0
 988 000e 0025     		mov	r5, #0
 989 0010 0026     		mov	r6, #0
 990 0012 3D61     		str	r5, [r7, #16]
 991 0014 7E61     		str	r6, [r7, #20]
 992              	.LBB11:
 183:.\DSP_Class.c ****     {
 184:.\DSP_Class.c ****         uint8 i;
 185:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 993              		.loc 1 185 0
 994 0016 381C     		mov	r0, r7
 995 0018 0F30     		add	r0, r0, #15
 996 001a 0025     		mov	r5, #0
 997 001c 0570     		strb	r5, [r0]
 998 001e 25E0     		b	.L75
 999              	.L78:
 186:.\DSP_Class.c ****             if(lightArray[i]>=0){
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 22


 1000              		.loc 1 186 0
 1001 0020 381C     		mov	r0, r7
 1002 0022 0F30     		add	r0, r0, #15
 1003 0024 0578     		ldrb	r5, [r0]
 1004 0026 3C48     		ldr	r0, .L83
 1005 0028 AD00     		lsl	r5, r5, #2
 1006 002a 2858     		ldr	r0, [r5, r0]
 1007 002c 0028     		cmp	r0, #0
 1008 002e 0FDB     		blt	.L76
 187:.\DSP_Class.c ****                 total += lightArray[i];
 1009              		.loc 1 187 0
 1010 0030 381C     		mov	r0, r7
 1011 0032 0F30     		add	r0, r0, #15
 1012 0034 0578     		ldrb	r5, [r0]
 1013 0036 3848     		ldr	r0, .L83
 1014 0038 AD00     		lsl	r5, r5, #2
 1015 003a 2858     		ldr	r0, [r5, r0]
 1016 003c 011C     		mov	r1, r0
 1017 003e C017     		asr	r0, r0, #31
 1018 0040 021C     		mov	r2, r0
 1019 0042 3D69     		ldr	r5, [r7, #16]
 1020 0044 7E69     		ldr	r6, [r7, #20]
 1021 0046 6D18     		add	r5, r5, r1
 1022 0048 5641     		adc	r6, r6, r2
 1023 004a 3D61     		str	r5, [r7, #16]
 1024 004c 7E61     		str	r6, [r7, #20]
 1025 004e 06E0     		b	.L77
 1026              	.L76:
 188:.\DSP_Class.c ****             }
 189:.\DSP_Class.c ****             else{
 190:.\DSP_Class.c ****                 skip++;
 1027              		.loc 1 190 0
 1028 0050 381C     		mov	r0, r7
 1029 0052 1F30     		add	r0, r0, #31
 1030 0054 0578     		ldrb	r5, [r0]
 1031 0056 381C     		mov	r0, r7
 1032 0058 1F30     		add	r0, r0, #31
 1033 005a 0135     		add	r5, r5, #1
 1034 005c 0570     		strb	r5, [r0]
 1035              	.L77:
 185:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 1036              		.loc 1 185 0
 1037 005e 381C     		mov	r0, r7
 1038 0060 0F30     		add	r0, r0, #15
 1039 0062 0578     		ldrb	r5, [r0]
 1040 0064 381C     		mov	r0, r7
 1041 0066 0F30     		add	r0, r0, #15
 1042 0068 0135     		add	r5, r5, #1
 1043 006a 0570     		strb	r5, [r0]
 1044              	.L75:
 185:.\DSP_Class.c ****         for(i = 0 ; i<ARRAYSIZE ; i++){
 1045              		.loc 1 185 0 is_stmt 0 discriminator 1
 1046 006c 381C     		mov	r0, r7
 1047 006e 0F30     		add	r0, r0, #15
 1048 0070 0078     		ldrb	r0, [r0]
 1049 0072 0928     		cmp	r0, #9
 1050 0074 D4D9     		bls	.L78
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 23


 1051              	.LBE11:
 191:.\DSP_Class.c ****             }
 192:.\DSP_Class.c ****         }
 193:.\DSP_Class.c ****     }
 194:.\DSP_Class.c ****     // Makes sure that enough datapoits are pressent
 195:.\DSP_Class.c ****     if(ARRAYSIZE-skip>=NMR_OF_VALID_DATAPOINTS_NEEDED){    
 1052              		.loc 1 195 0 is_stmt 1
 1053 0076 3A1C     		mov	r2, r7
 1054 0078 1F32     		add	r2, r2, #31
 1055 007a 1278     		ldrb	r2, [r2]
 1056 007c 0A21     		mov	r1, #10
 1057 007e 8A1A     		sub	r2, r1, r2
 1058 0080 092A     		cmp	r2, #9
 1059 0082 43DD     		ble	.L79
 1060              	.LBB12:
 196:.\DSP_Class.c ****         float avg = total/(ARRAYSIZE-skip);                              // Calculate the average v
 1061              		.loc 1 196 0
 1062 0084 3A1C     		mov	r2, r7
 1063 0086 1F32     		add	r2, r2, #31
 1064 0088 1278     		ldrb	r2, [r2]
 1065 008a 0A21     		mov	r1, #10
 1066 008c 8A1A     		sub	r2, r1, r2
 1067 008e 131C     		mov	r3, r2
 1068 0090 D217     		asr	r2, r2, #31
 1069 0092 141C     		mov	r4, r2
 1070 0094 3869     		ldr	r0, [r7, #16]
 1071 0096 7969     		ldr	r1, [r7, #20]
 1072 0098 1A1C     		mov	r2, r3
 1073 009a 231C     		mov	r3, r4
 1074 009c FFF7FEFF 		bl	__aeabi_ldivmod
 1075 00a0 031C     		mov	r3, r0
 1076 00a2 0C1C     		mov	r4, r1
 1077 00a4 181C     		mov	r0, r3
 1078 00a6 211C     		mov	r1, r4
 1079 00a8 FFF7FEFF 		bl	__aeabi_l2f
 1080 00ac 031C     		add	r3, r0, #0
 1081 00ae BB60     		str	r3, [r7, #8]
 197:.\DSP_Class.c ****         
 198:.\DSP_Class.c ****         // Conversion to lux formula from datasheet
 199:.\DSP_Class.c ****         // Range = 128000, R_EXT = 100kOhm, n = 7 and DATA max 128
 200:.\DSP_Class.c ****         int32 lightInLux = ((128000*(100/100))/(128))*avg;
 1082              		.loc 1 200 0
 1083 00b0 B868     		ldr	r0, [r7, #8]
 1084 00b2 1A49     		ldr	r1, .L83+4
 1085 00b4 FFF7FEFF 		bl	__aeabi_fmul
 1086 00b8 031C     		add	r3, r0, #0
 1087 00ba 181C     		add	r0, r3, #0
 1088 00bc FFF7FEFF 		bl	__aeabi_f2iz
 1089 00c0 031C     		mov	r3, r0
 1090 00c2 7B60     		str	r3, [r7, #4]
 201:.\DSP_Class.c ****         
 202:.\DSP_Class.c ****         uint8 lightInUartVarSteps = lightInLux/1000;     // Conversion to UART ready value, 1 = 100
 1091              		.loc 1 202 0
 1092 00c4 7B68     		ldr	r3, [r7, #4]
 1093 00c6 181C     		mov	r0, r3
 1094 00c8 FA23     		mov	r3, #250
 1095 00ca 9900     		lsl	r1, r3, #2
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 24


 1096 00cc FFF7FEFF 		bl	__aeabi_idiv
 1097 00d0 031C     		mov	r3, r0
 1098 00d2 1A1C     		mov	r2, r3
 1099 00d4 3B1C     		mov	r3, r7
 1100 00d6 0E33     		add	r3, r3, #14
 1101 00d8 1A70     		strb	r2, [r3]
 203:.\DSP_Class.c ****         
 204:.\DSP_Class.c ****         // lightInLux is limited to 1 and 100 RH
 205:.\DSP_Class.c ****         if(lightInUartVarSteps <= 0){
 1102              		.loc 1 205 0
 1103 00da 3B1C     		mov	r3, r7
 1104 00dc 0E33     		add	r3, r3, #14
 1105 00de 1B78     		ldrb	r3, [r3]
 1106 00e0 002B     		cmp	r3, #0
 1107 00e2 04D1     		bne	.L80
 206:.\DSP_Class.c ****             lightInUartVarSteps = 1;
 1108              		.loc 1 206 0
 1109 00e4 3B1C     		mov	r3, r7
 1110 00e6 0E33     		add	r3, r3, #14
 1111 00e8 0122     		mov	r2, #1
 1112 00ea 1A70     		strb	r2, [r3]
 1113 00ec 08E0     		b	.L81
 1114              	.L80:
 207:.\DSP_Class.c ****         }
 208:.\DSP_Class.c ****         else if(lightInUartVarSteps > 100){
 1115              		.loc 1 208 0
 1116 00ee 3B1C     		mov	r3, r7
 1117 00f0 0E33     		add	r3, r3, #14
 1118 00f2 1B78     		ldrb	r3, [r3]
 1119 00f4 642B     		cmp	r3, #100
 1120 00f6 03D9     		bls	.L81
 209:.\DSP_Class.c ****             lightInUartVarSteps = 100;
 1121              		.loc 1 209 0
 1122 00f8 3B1C     		mov	r3, r7
 1123 00fa 0E33     		add	r3, r3, #14
 1124 00fc 6422     		mov	r2, #100
 1125 00fe 1A70     		strb	r2, [r3]
 1126              	.L81:
 210:.\DSP_Class.c ****         }
 211:.\DSP_Class.c ****         light = lightInUartVarSteps;
 1127              		.loc 1 211 0 discriminator 1
 1128 0100 074B     		ldr	r3, .L83+8
 1129 0102 3A1C     		mov	r2, r7
 1130 0104 0E32     		add	r2, r2, #14
 1131 0106 1278     		ldrb	r2, [r2]
 1132 0108 1A70     		strb	r2, [r3]
 1133              	.LBE12:
 1134 010a 02E0     		b	.L74
 1135              	.L79:
 212:.\DSP_Class.c ****     }
 213:.\DSP_Class.c ****     else{
 214:.\DSP_Class.c ****     light = 0;
 1136              		.loc 1 214 0
 1137 010c 044B     		ldr	r3, .L83+8
 1138 010e 0022     		mov	r2, #0
 1139 0110 1A70     		strb	r2, [r3]
 1140              	.L74:
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 25


 215:.\DSP_Class.c ****     }
 216:.\DSP_Class.c ****   }
 1141              		.loc 1 216 0
 1142 0112 BD46     		mov	sp, r7
 1143 0114 09B0     		add	sp, sp, #36
 1144              		@ sp needed
 1145 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1146              	.L84:
 1147              		.align	2
 1148              	.L83:
 1149 0118 00000000 		.word	lightArray
 1150 011c 00007A44 		.word	1148846080
 1151 0120 00000000 		.word	light
 1152              		.cfi_endproc
 1153              	.LFE41:
 1154              		.size	avgLight, .-avgLight
 1155              		.section	.text.inputTemp,"ax",%progbits
 1156              		.align	2
 1157              		.global	inputTemp
 1158              		.code	16
 1159              		.thumb_func
 1160              		.type	inputTemp, %function
 1161              	inputTemp:
 1162              	.LFB42:
 217:.\DSP_Class.c **** 
 218:.\DSP_Class.c **** void inputTemp(int32* temp){
 1163              		.loc 1 218 0
 1164              		.cfi_startproc
 1165 0000 80B5     		push	{r7, lr}
 1166              		.cfi_def_cfa_offset 8
 1167              		.cfi_offset 7, -8
 1168              		.cfi_offset 14, -4
 1169 0002 82B0     		sub	sp, sp, #8
 1170              		.cfi_def_cfa_offset 16
 1171 0004 00AF     		add	r7, sp, #0
 1172              		.cfi_def_cfa_register 7
 1173 0006 7860     		str	r0, [r7, #4]
 219:.\DSP_Class.c ****     *tempArrayPtr = *temp;      // The input value is written to the array
 1174              		.loc 1 219 0
 1175 0008 0B4B     		ldr	r3, .L87
 1176 000a 1B68     		ldr	r3, [r3]
 1177 000c 7A68     		ldr	r2, [r7, #4]
 1178 000e 1268     		ldr	r2, [r2]
 1179 0010 1A60     		str	r2, [r3]
 220:.\DSP_Class.c ****     tempArrayPtr++;             // The pointer is moved to the next place in array
 1180              		.loc 1 220 0
 1181 0012 094B     		ldr	r3, .L87
 1182 0014 1B68     		ldr	r3, [r3]
 1183 0016 1A1D     		add	r2, r3, #4
 1184 0018 074B     		ldr	r3, .L87
 1185 001a 1A60     		str	r2, [r3]
 221:.\DSP_Class.c ****     if(tempArrayPtr > &tempArray[ARRAYSIZE-1]){
 1186              		.loc 1 221 0
 1187 001c 064B     		ldr	r3, .L87
 1188 001e 1A68     		ldr	r2, [r3]
 1189 0020 064B     		ldr	r3, .L87+4
 1190 0022 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 26


 1191 0024 02D9     		bls	.L86
 222:.\DSP_Class.c ****         tempArrayPtr = &tempArray[0];   // If the pointer is pointing past the end of the array it'
 1192              		.loc 1 222 0
 1193 0026 044B     		ldr	r3, .L87
 1194 0028 054A     		ldr	r2, .L87+8
 1195 002a 1A60     		str	r2, [r3]
 1196              	.L86:
 223:.\DSP_Class.c ****     }
 224:.\DSP_Class.c ****     
 225:.\DSP_Class.c ****     avgTemp();      // The average value is calculated and onverted into temp(globel) 
 1197              		.loc 1 225 0
 1198 002c FFF7FEFF 		bl	avgTemp
 226:.\DSP_Class.c **** }
 1199              		.loc 1 226 0
 1200 0030 BD46     		mov	sp, r7
 1201 0032 02B0     		add	sp, sp, #8
 1202              		@ sp needed
 1203 0034 80BD     		pop	{r7, pc}
 1204              	.L88:
 1205 0036 C046     		.align	2
 1206              	.L87:
 1207 0038 00000000 		.word	tempArrayPtr
 1208 003c 24000000 		.word	tempArray+36
 1209 0040 00000000 		.word	tempArray
 1210              		.cfi_endproc
 1211              	.LFE42:
 1212              		.size	inputTemp, .-inputTemp
 1213              		.section	.text.inputHum,"ax",%progbits
 1214              		.align	2
 1215              		.global	inputHum
 1216              		.code	16
 1217              		.thumb_func
 1218              		.type	inputHum, %function
 1219              	inputHum:
 1220              	.LFB43:
 227:.\DSP_Class.c **** 
 228:.\DSP_Class.c **** void inputHum(int32* hum){
 1221              		.loc 1 228 0
 1222              		.cfi_startproc
 1223 0000 80B5     		push	{r7, lr}
 1224              		.cfi_def_cfa_offset 8
 1225              		.cfi_offset 7, -8
 1226              		.cfi_offset 14, -4
 1227 0002 82B0     		sub	sp, sp, #8
 1228              		.cfi_def_cfa_offset 16
 1229 0004 00AF     		add	r7, sp, #0
 1230              		.cfi_def_cfa_register 7
 1231 0006 7860     		str	r0, [r7, #4]
 229:.\DSP_Class.c ****     *humArrayPtr = *hum;        // The input value is written to the array
 1232              		.loc 1 229 0
 1233 0008 0B4B     		ldr	r3, .L91
 1234 000a 1B68     		ldr	r3, [r3]
 1235 000c 7A68     		ldr	r2, [r7, #4]
 1236 000e 1268     		ldr	r2, [r2]
 1237 0010 1A60     		str	r2, [r3]
 230:.\DSP_Class.c ****     humArrayPtr++;              // The pointer is moved to the next place in array
 1238              		.loc 1 230 0
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 27


 1239 0012 094B     		ldr	r3, .L91
 1240 0014 1B68     		ldr	r3, [r3]
 1241 0016 1A1D     		add	r2, r3, #4
 1242 0018 074B     		ldr	r3, .L91
 1243 001a 1A60     		str	r2, [r3]
 231:.\DSP_Class.c ****     if(humArrayPtr > &humArray[ARRAYSIZE-1]){
 1244              		.loc 1 231 0
 1245 001c 064B     		ldr	r3, .L91
 1246 001e 1A68     		ldr	r2, [r3]
 1247 0020 064B     		ldr	r3, .L91+4
 1248 0022 9A42     		cmp	r2, r3
 1249 0024 02D9     		bls	.L90
 232:.\DSP_Class.c ****         humArrayPtr = &humArray[0];     // If the pointer is pointing past the end of the array it'
 1250              		.loc 1 232 0
 1251 0026 044B     		ldr	r3, .L91
 1252 0028 054A     		ldr	r2, .L91+8
 1253 002a 1A60     		str	r2, [r3]
 1254              	.L90:
 233:.\DSP_Class.c ****     }
 234:.\DSP_Class.c ****     
 235:.\DSP_Class.c ****     avgHum();      // The average value is calculated and onverted into hum(globel)
 1255              		.loc 1 235 0
 1256 002c FFF7FEFF 		bl	avgHum
 236:.\DSP_Class.c **** }
 1257              		.loc 1 236 0
 1258 0030 BD46     		mov	sp, r7
 1259 0032 02B0     		add	sp, sp, #8
 1260              		@ sp needed
 1261 0034 80BD     		pop	{r7, pc}
 1262              	.L92:
 1263 0036 C046     		.align	2
 1264              	.L91:
 1265 0038 00000000 		.word	humArrayPtr
 1266 003c 24000000 		.word	humArray+36
 1267 0040 00000000 		.word	humArray
 1268              		.cfi_endproc
 1269              	.LFE43:
 1270              		.size	inputHum, .-inputHum
 1271              		.section	.text.inputSoilHum,"ax",%progbits
 1272              		.align	2
 1273              		.global	inputSoilHum
 1274              		.code	16
 1275              		.thumb_func
 1276              		.type	inputSoilHum, %function
 1277              	inputSoilHum:
 1278              	.LFB44:
 237:.\DSP_Class.c **** 
 238:.\DSP_Class.c **** void inputSoilHum(uint8 index, int16* soilHum){
 1279              		.loc 1 238 0
 1280              		.cfi_startproc
 1281 0000 80B5     		push	{r7, lr}
 1282              		.cfi_def_cfa_offset 8
 1283              		.cfi_offset 7, -8
 1284              		.cfi_offset 14, -4
 1285 0002 82B0     		sub	sp, sp, #8
 1286              		.cfi_def_cfa_offset 16
 1287 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 28


 1288              		.cfi_def_cfa_register 7
 1289 0006 021C     		mov	r2, r0
 1290 0008 3960     		str	r1, [r7]
 1291 000a FB1D     		add	r3, r7, #7
 1292 000c 1A70     		strb	r2, [r3]
 239:.\DSP_Class.c ****     *soilHumPtr[index] = *soilHum;          // The input value is written to the array
 1293              		.loc 1 239 0
 1294 000e FB1D     		add	r3, r7, #7
 1295 0010 1A78     		ldrb	r2, [r3]
 1296 0012 1A4B     		ldr	r3, .L95
 1297 0014 9200     		lsl	r2, r2, #2
 1298 0016 D358     		ldr	r3, [r2, r3]
 1299 0018 3A68     		ldr	r2, [r7]
 1300 001a 1288     		ldrh	r2, [r2]
 1301 001c 1A80     		strh	r2, [r3]
 240:.\DSP_Class.c ****     soilHumPtr[index]++;                    // The pointer is moved to the next place in array
 1302              		.loc 1 240 0
 1303 001e FB1D     		add	r3, r7, #7
 1304 0020 1B78     		ldrb	r3, [r3]
 1305 0022 164A     		ldr	r2, .L95
 1306 0024 9900     		lsl	r1, r3, #2
 1307 0026 8A58     		ldr	r2, [r1, r2]
 1308 0028 911C     		add	r1, r2, #2
 1309 002a 144A     		ldr	r2, .L95
 1310 002c 9B00     		lsl	r3, r3, #2
 1311 002e 9950     		str	r1, [r3, r2]
 241:.\DSP_Class.c ****     if(soilHumPtr[index] > &soilHumArray[index][ARRAYSIZE-1]){
 1312              		.loc 1 241 0
 1313 0030 FB1D     		add	r3, r7, #7
 1314 0032 1A78     		ldrb	r2, [r3]
 1315 0034 114B     		ldr	r3, .L95
 1316 0036 9200     		lsl	r2, r2, #2
 1317 0038 D158     		ldr	r1, [r2, r3]
 1318 003a FB1D     		add	r3, r7, #7
 1319 003c 1A78     		ldrb	r2, [r3]
 1320 003e 131C     		mov	r3, r2
 1321 0040 9B00     		lsl	r3, r3, #2
 1322 0042 9B18     		add	r3, r3, r2
 1323 0044 9B00     		lsl	r3, r3, #2
 1324 0046 1A1C     		mov	r2, r3
 1325 0048 1232     		add	r2, r2, #18
 1326 004a 0D4B     		ldr	r3, .L95+4
 1327 004c D318     		add	r3, r2, r3
 1328 004e 9942     		cmp	r1, r3
 1329 0050 0CD9     		bls	.L94
 242:.\DSP_Class.c ****         soilHumPtr[index] = &soilHumArray[index][0];            // If the pointer is pointing past 
 1330              		.loc 1 242 0
 1331 0052 FB1D     		add	r3, r7, #7
 1332 0054 1878     		ldrb	r0, [r3]
 1333 0056 FB1D     		add	r3, r7, #7
 1334 0058 1A78     		ldrb	r2, [r3]
 1335 005a 131C     		mov	r3, r2
 1336 005c 9B00     		lsl	r3, r3, #2
 1337 005e 9B18     		add	r3, r3, r2
 1338 0060 9B00     		lsl	r3, r3, #2
 1339 0062 074A     		ldr	r2, .L95+4
 1340 0064 9918     		add	r1, r3, r2
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 29


 1341 0066 054B     		ldr	r3, .L95
 1342 0068 8200     		lsl	r2, r0, #2
 1343 006a D150     		str	r1, [r2, r3]
 1344              	.L94:
 243:.\DSP_Class.c ****     }
 244:.\DSP_Class.c ****     
 245:.\DSP_Class.c ****     avgSoilHum(index);          // The average value is calculated and onverted into soilHum(globel
 1345              		.loc 1 245 0
 1346 006c FB1D     		add	r3, r7, #7
 1347 006e 1B78     		ldrb	r3, [r3]
 1348 0070 181C     		mov	r0, r3
 1349 0072 FFF7FEFF 		bl	avgSoilHum
 246:.\DSP_Class.c **** }
 1350              		.loc 1 246 0
 1351 0076 BD46     		mov	sp, r7
 1352 0078 02B0     		add	sp, sp, #8
 1353              		@ sp needed
 1354 007a 80BD     		pop	{r7, pc}
 1355              	.L96:
 1356              		.align	2
 1357              	.L95:
 1358 007c 00000000 		.word	soilHumPtr
 1359 0080 00000000 		.word	soilHumArray
 1360              		.cfi_endproc
 1361              	.LFE44:
 1362              		.size	inputSoilHum, .-inputSoilHum
 1363              		.section	.text.inputLight,"ax",%progbits
 1364              		.align	2
 1365              		.global	inputLight
 1366              		.code	16
 1367              		.thumb_func
 1368              		.type	inputLight, %function
 1369              	inputLight:
 1370              	.LFB45:
 247:.\DSP_Class.c **** 
 248:.\DSP_Class.c **** void inputLight(int32* light){
 1371              		.loc 1 248 0
 1372              		.cfi_startproc
 1373 0000 80B5     		push	{r7, lr}
 1374              		.cfi_def_cfa_offset 8
 1375              		.cfi_offset 7, -8
 1376              		.cfi_offset 14, -4
 1377 0002 82B0     		sub	sp, sp, #8
 1378              		.cfi_def_cfa_offset 16
 1379 0004 00AF     		add	r7, sp, #0
 1380              		.cfi_def_cfa_register 7
 1381 0006 7860     		str	r0, [r7, #4]
 249:.\DSP_Class.c ****     *lightArrayPtr = *light;        // The input value is written to the array
 1382              		.loc 1 249 0
 1383 0008 0B4B     		ldr	r3, .L99
 1384 000a 1B68     		ldr	r3, [r3]
 1385 000c 7A68     		ldr	r2, [r7, #4]
 1386 000e 1268     		ldr	r2, [r2]
 1387 0010 1A60     		str	r2, [r3]
 250:.\DSP_Class.c ****     lightArrayPtr++;                // The pointer is moved to the next place in array
 1388              		.loc 1 250 0
 1389 0012 094B     		ldr	r3, .L99
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 30


 1390 0014 1B68     		ldr	r3, [r3]
 1391 0016 1A1D     		add	r2, r3, #4
 1392 0018 074B     		ldr	r3, .L99
 1393 001a 1A60     		str	r2, [r3]
 251:.\DSP_Class.c ****     if(lightArrayPtr > &lightArray[ARRAYSIZE-1]){
 1394              		.loc 1 251 0
 1395 001c 064B     		ldr	r3, .L99
 1396 001e 1A68     		ldr	r2, [r3]
 1397 0020 064B     		ldr	r3, .L99+4
 1398 0022 9A42     		cmp	r2, r3
 1399 0024 02D9     		bls	.L98
 252:.\DSP_Class.c ****         lightArrayPtr = &lightArray[0];     // If the pointer is pointing past the end of the array
 1400              		.loc 1 252 0
 1401 0026 044B     		ldr	r3, .L99
 1402 0028 054A     		ldr	r2, .L99+8
 1403 002a 1A60     		str	r2, [r3]
 1404              	.L98:
 253:.\DSP_Class.c ****     }
 254:.\DSP_Class.c ****     
 255:.\DSP_Class.c ****     avgLight();      // The average value is calculated and onverted into hum(globel)
 1405              		.loc 1 255 0
 1406 002c FFF7FEFF 		bl	avgLight
 256:.\DSP_Class.c **** }
 1407              		.loc 1 256 0
 1408 0030 BD46     		mov	sp, r7
 1409 0032 02B0     		add	sp, sp, #8
 1410              		@ sp needed
 1411 0034 80BD     		pop	{r7, pc}
 1412              	.L100:
 1413 0036 C046     		.align	2
 1414              	.L99:
 1415 0038 00000000 		.word	lightArrayPtr
 1416 003c 24000000 		.word	lightArray+36
 1417 0040 00000000 		.word	lightArray
 1418              		.cfi_endproc
 1419              	.LFE45:
 1420              		.size	inputLight, .-inputLight
 1421              		.text
 1422              	.Letext0:
 1423              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 1424              		.section	.debug_info,"",%progbits
 1425              	.Ldebug_info0:
 1426 0000 13050000 		.4byte	0x513
 1427 0004 0400     		.2byte	0x4
 1428 0006 00000000 		.4byte	.Ldebug_abbrev0
 1429 000a 04       		.byte	0x4
 1430 000b 01       		.uleb128 0x1
 1431 000c C3000000 		.4byte	.LASF48
 1432 0010 01       		.byte	0x1
 1433 0011 6C020000 		.4byte	.LASF49
 1434 0015 15000000 		.4byte	.LASF50
 1435 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1436 001d 00000000 		.4byte	0
 1437 0021 00000000 		.4byte	.Ldebug_line0
 1438 0025 02       		.uleb128 0x2
 1439 0026 01       		.byte	0x1
 1440 0027 06       		.byte	0x6
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 31


 1441 0028 A1020000 		.4byte	.LASF0
 1442 002c 02       		.uleb128 0x2
 1443 002d 01       		.byte	0x1
 1444 002e 08       		.byte	0x8
 1445 002f 3F010000 		.4byte	.LASF1
 1446 0033 02       		.uleb128 0x2
 1447 0034 02       		.byte	0x2
 1448 0035 05       		.byte	0x5
 1449 0036 7A020000 		.4byte	.LASF2
 1450 003a 02       		.uleb128 0x2
 1451 003b 02       		.byte	0x2
 1452 003c 07       		.byte	0x7
 1453 003d 87000000 		.4byte	.LASF3
 1454 0041 02       		.uleb128 0x2
 1455 0042 04       		.byte	0x4
 1456 0043 05       		.byte	0x5
 1457 0044 90020000 		.4byte	.LASF4
 1458 0048 02       		.uleb128 0x2
 1459 0049 04       		.byte	0x4
 1460 004a 07       		.byte	0x7
 1461 004b 57010000 		.4byte	.LASF5
 1462 004f 02       		.uleb128 0x2
 1463 0050 08       		.byte	0x8
 1464 0051 05       		.byte	0x5
 1465 0052 34020000 		.4byte	.LASF6
 1466 0056 02       		.uleb128 0x2
 1467 0057 08       		.byte	0x8
 1468 0058 07       		.byte	0x7
 1469 0059 E3010000 		.4byte	.LASF7
 1470 005d 03       		.uleb128 0x3
 1471 005e 04       		.byte	0x4
 1472 005f 05       		.byte	0x5
 1473 0060 696E7400 		.ascii	"int\000"
 1474 0064 02       		.uleb128 0x2
 1475 0065 04       		.byte	0x4
 1476 0066 07       		.byte	0x7
 1477 0067 C5010000 		.4byte	.LASF8
 1478 006b 04       		.uleb128 0x4
 1479 006c 84020000 		.4byte	.LASF9
 1480 0070 02       		.byte	0x2
 1481 0071 A1       		.byte	0xa1
 1482 0072 2C000000 		.4byte	0x2c
 1483 0076 04       		.uleb128 0x4
 1484 0077 05020000 		.4byte	.LASF10
 1485 007b 02       		.byte	0x2
 1486 007c A5       		.byte	0xa5
 1487 007d 33000000 		.4byte	0x33
 1488 0081 04       		.uleb128 0x4
 1489 0082 25020000 		.4byte	.LASF11
 1490 0086 02       		.byte	0x2
 1491 0087 A6       		.byte	0xa6
 1492 0088 41000000 		.4byte	0x41
 1493 008c 02       		.uleb128 0x2
 1494 008d 04       		.byte	0x4
 1495 008e 04       		.byte	0x4
 1496 008f BD000000 		.4byte	.LASF12
 1497 0093 02       		.uleb128 0x2
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 32


 1498 0094 08       		.byte	0x8
 1499 0095 04       		.byte	0x4
 1500 0096 9D010000 		.4byte	.LASF13
 1501 009a 04       		.uleb128 0x4
 1502 009b D1020000 		.4byte	.LASF14
 1503 009f 02       		.byte	0x2
 1504 00a0 AC       		.byte	0xac
 1505 00a1 4F000000 		.4byte	0x4f
 1506 00a5 02       		.uleb128 0x2
 1507 00a6 01       		.byte	0x1
 1508 00a7 08       		.byte	0x8
 1509 00a8 56020000 		.4byte	.LASF15
 1510 00ac 02       		.uleb128 0x2
 1511 00ad 04       		.byte	0x4
 1512 00ae 07       		.byte	0x7
 1513 00af 2B020000 		.4byte	.LASF16
 1514 00b3 05       		.uleb128 0x5
 1515 00b4 95010000 		.4byte	.LASF20
 1516 00b8 01       		.byte	0x1
 1517 00b9 21       		.byte	0x21
 1518 00ba 00000000 		.4byte	.LFB33
 1519 00be 18010000 		.4byte	.LFE33-.LFB33
 1520 00c2 01       		.uleb128 0x1
 1521 00c3 9C       		.byte	0x9c
 1522 00c4 0F010000 		.4byte	0x10f
 1523 00c8 06       		.uleb128 0x6
 1524 00c9 06000000 		.4byte	.LBB2
 1525 00cd 7A000000 		.4byte	.LBE2-.LBB2
 1526 00d1 F8000000 		.4byte	0xf8
 1527 00d5 07       		.uleb128 0x7
 1528 00d6 6900     		.ascii	"i\000"
 1529 00d8 01       		.byte	0x1
 1530 00d9 23       		.byte	0x23
 1531 00da 6B000000 		.4byte	0x6b
 1532 00de 02       		.uleb128 0x2
 1533 00df 91       		.byte	0x91
 1534 00e0 77       		.sleb128 -9
 1535 00e1 08       		.uleb128 0x8
 1536 00e2 2A000000 		.4byte	.LBB3
 1537 00e6 36000000 		.4byte	.LBE3-.LBB3
 1538 00ea 07       		.uleb128 0x7
 1539 00eb 6A00     		.ascii	"j\000"
 1540 00ed 01       		.byte	0x1
 1541 00ee 28       		.byte	0x28
 1542 00ef 6B000000 		.4byte	0x6b
 1543 00f3 02       		.uleb128 0x2
 1544 00f4 91       		.byte	0x91
 1545 00f5 76       		.sleb128 -10
 1546 00f6 00       		.byte	0
 1547 00f7 00       		.byte	0
 1548 00f8 08       		.uleb128 0x8
 1549 00f9 8C000000 		.4byte	.LBB4
 1550 00fd 3E000000 		.4byte	.LBE4-.LBB4
 1551 0101 07       		.uleb128 0x7
 1552 0102 6B00     		.ascii	"k\000"
 1553 0104 01       		.byte	0x1
 1554 0105 34       		.byte	0x34
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 33


 1555 0106 6B000000 		.4byte	0x6b
 1556 010a 02       		.uleb128 0x2
 1557 010b 91       		.byte	0x91
 1558 010c 75       		.sleb128 -11
 1559 010d 00       		.byte	0
 1560 010e 00       		.byte	0
 1561 010f 09       		.uleb128 0x9
 1562 0110 69010000 		.4byte	.LASF17
 1563 0114 01       		.byte	0x1
 1564 0115 40       		.byte	0x40
 1565 0116 6B000000 		.4byte	0x6b
 1566 011a 00000000 		.4byte	.LFB34
 1567 011e 14000000 		.4byte	.LFE34-.LFB34
 1568 0122 01       		.uleb128 0x1
 1569 0123 9C       		.byte	0x9c
 1570 0124 09       		.uleb128 0x9
 1571 0125 B5010000 		.4byte	.LASF18
 1572 0129 01       		.byte	0x1
 1573 012a 44       		.byte	0x44
 1574 012b 6B000000 		.4byte	0x6b
 1575 012f 00000000 		.4byte	.LFB35
 1576 0133 14000000 		.4byte	.LFE35-.LFB35
 1577 0137 01       		.uleb128 0x1
 1578 0138 9C       		.byte	0x9c
 1579 0139 0A       		.uleb128 0xa
 1580 013a 7D010000 		.4byte	.LASF51
 1581 013e 01       		.byte	0x1
 1582 013f 48       		.byte	0x48
 1583 0140 6B000000 		.4byte	0x6b
 1584 0144 00000000 		.4byte	.LFB36
 1585 0148 20000000 		.4byte	.LFE36-.LFB36
 1586 014c 01       		.uleb128 0x1
 1587 014d 9C       		.byte	0x9c
 1588 014e 61010000 		.4byte	0x161
 1589 0152 0B       		.uleb128 0xb
 1590 0153 66020000 		.4byte	.LASF28
 1591 0157 01       		.byte	0x1
 1592 0158 48       		.byte	0x48
 1593 0159 6B000000 		.4byte	0x6b
 1594 015d 02       		.uleb128 0x2
 1595 015e 91       		.byte	0x91
 1596 015f 77       		.sleb128 -9
 1597 0160 00       		.byte	0
 1598 0161 09       		.uleb128 0x9
 1599 0162 18020000 		.4byte	.LASF19
 1600 0166 01       		.byte	0x1
 1601 0167 4C       		.byte	0x4c
 1602 0168 6B000000 		.4byte	0x6b
 1603 016c 00000000 		.4byte	.LFB37
 1604 0170 14000000 		.4byte	.LFE37-.LFB37
 1605 0174 01       		.uleb128 0x1
 1606 0175 9C       		.byte	0x9c
 1607 0176 0C       		.uleb128 0xc
 1608 0177 99020000 		.4byte	.LASF21
 1609 017b 01       		.byte	0x1
 1610 017c 50       		.byte	0x50
 1611 017d 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 34


 1612 0181 48010000 		.4byte	.LFE38-.LFB38
 1613 0185 01       		.uleb128 0x1
 1614 0186 9C       		.byte	0x9c
 1615 0187 E8010000 		.4byte	0x1e8
 1616 018b 0D       		.uleb128 0xd
 1617 018c C0010000 		.4byte	.LASF22
 1618 0190 01       		.byte	0x1
 1619 0191 51       		.byte	0x51
 1620 0192 6B000000 		.4byte	0x6b
 1621 0196 02       		.uleb128 0x2
 1622 0197 91       		.byte	0x91
 1623 0198 67       		.sleb128 -25
 1624 0199 0D       		.uleb128 0xd
 1625 019a 8A020000 		.4byte	.LASF23
 1626 019e 01       		.byte	0x1
 1627 019f 52       		.byte	0x52
 1628 01a0 9A000000 		.4byte	0x9a
 1629 01a4 02       		.uleb128 0x2
 1630 01a5 91       		.byte	0x91
 1631 01a6 58       		.sleb128 -40
 1632 01a7 06       		.uleb128 0x6
 1633 01a8 16000000 		.4byte	.LBB5
 1634 01ac 60000000 		.4byte	.LBE5-.LBB5
 1635 01b0 C1010000 		.4byte	0x1c1
 1636 01b4 07       		.uleb128 0x7
 1637 01b5 6900     		.ascii	"i\000"
 1638 01b7 01       		.byte	0x1
 1639 01b8 54       		.byte	0x54
 1640 01b9 6B000000 		.4byte	0x6b
 1641 01bd 02       		.uleb128 0x2
 1642 01be 91       		.byte	0x91
 1643 01bf 57       		.sleb128 -41
 1644 01c0 00       		.byte	0
 1645 01c1 08       		.uleb128 0x8
 1646 01c2 84000000 		.4byte	.LBB6
 1647 01c6 94000000 		.4byte	.LBE6-.LBB6
 1648 01ca 07       		.uleb128 0x7
 1649 01cb 61766700 		.ascii	"avg\000"
 1650 01cf 01       		.byte	0x1
 1651 01d0 60       		.byte	0x60
 1652 01d1 8C000000 		.4byte	0x8c
 1653 01d5 02       		.uleb128 0x2
 1654 01d6 91       		.byte	0x91
 1655 01d7 4C       		.sleb128 -52
 1656 01d8 0D       		.uleb128 0xd
 1657 01d9 00000000 		.4byte	.LASF24
 1658 01dd 01       		.byte	0x1
 1659 01de 61       		.byte	0x61
 1660 01df 8C000000 		.4byte	0x8c
 1661 01e3 02       		.uleb128 0x2
 1662 01e4 91       		.byte	0x91
 1663 01e5 50       		.sleb128 -48
 1664 01e6 00       		.byte	0
 1665 01e7 00       		.byte	0
 1666 01e8 0C       		.uleb128 0xc
 1667 01e9 74000000 		.4byte	.LASF25
 1668 01ed 01       		.byte	0x1
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 35


 1669 01ee 72       		.byte	0x72
 1670 01ef 00000000 		.4byte	.LFB39
 1671 01f3 1C010000 		.4byte	.LFE39-.LFB39
 1672 01f7 01       		.uleb128 0x1
 1673 01f8 9C       		.byte	0x9c
 1674 01f9 5A020000 		.4byte	0x25a
 1675 01fd 0D       		.uleb128 0xd
 1676 01fe C0010000 		.4byte	.LASF22
 1677 0202 01       		.byte	0x1
 1678 0203 73       		.byte	0x73
 1679 0204 6B000000 		.4byte	0x6b
 1680 0208 02       		.uleb128 0x2
 1681 0209 91       		.byte	0x91
 1682 020a 67       		.sleb128 -25
 1683 020b 0D       		.uleb128 0xd
 1684 020c 8A020000 		.4byte	.LASF23
 1685 0210 01       		.byte	0x1
 1686 0211 74       		.byte	0x74
 1687 0212 9A000000 		.4byte	0x9a
 1688 0216 02       		.uleb128 0x2
 1689 0217 91       		.byte	0x91
 1690 0218 58       		.sleb128 -40
 1691 0219 06       		.uleb128 0x6
 1692 021a 16000000 		.4byte	.LBB7
 1693 021e 60000000 		.4byte	.LBE7-.LBB7
 1694 0222 33020000 		.4byte	0x233
 1695 0226 07       		.uleb128 0x7
 1696 0227 6900     		.ascii	"i\000"
 1697 0229 01       		.byte	0x1
 1698 022a 76       		.byte	0x76
 1699 022b 6B000000 		.4byte	0x6b
 1700 022f 02       		.uleb128 0x2
 1701 0230 91       		.byte	0x91
 1702 0231 57       		.sleb128 -41
 1703 0232 00       		.byte	0
 1704 0233 08       		.uleb128 0x8
 1705 0234 84000000 		.4byte	.LBB8
 1706 0238 78000000 		.4byte	.LBE8-.LBB8
 1707 023c 07       		.uleb128 0x7
 1708 023d 61766700 		.ascii	"avg\000"
 1709 0241 01       		.byte	0x1
 1710 0242 82       		.byte	0x82
 1711 0243 8C000000 		.4byte	0x8c
 1712 0247 02       		.uleb128 0x2
 1713 0248 91       		.byte	0x91
 1714 0249 4C       		.sleb128 -52
 1715 024a 0D       		.uleb128 0xd
 1716 024b 75010000 		.4byte	.LASF26
 1717 024f 01       		.byte	0x1
 1718 0250 83       		.byte	0x83
 1719 0251 8C000000 		.4byte	0x8c
 1720 0255 02       		.uleb128 0x2
 1721 0256 91       		.byte	0x91
 1722 0257 50       		.sleb128 -48
 1723 0258 00       		.byte	0
 1724 0259 00       		.byte	0
 1725 025a 0C       		.uleb128 0xc
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 36


 1726 025b 5B020000 		.4byte	.LASF27
 1727 025f 01       		.byte	0x1
 1728 0260 93       		.byte	0x93
 1729 0261 00000000 		.4byte	.LFB40
 1730 0265 58010000 		.4byte	.LFE40-.LFB40
 1731 0269 01       		.uleb128 0x1
 1732 026a 9C       		.byte	0x9c
 1733 026b DA020000 		.4byte	0x2da
 1734 026f 0B       		.uleb128 0xb
 1735 0270 66020000 		.4byte	.LASF28
 1736 0274 01       		.byte	0x1
 1737 0275 93       		.byte	0x93
 1738 0276 6B000000 		.4byte	0x6b
 1739 027a 02       		.uleb128 0x2
 1740 027b 91       		.byte	0x91
 1741 027c 47       		.sleb128 -57
 1742 027d 0D       		.uleb128 0xd
 1743 027e C0010000 		.4byte	.LASF22
 1744 0282 01       		.byte	0x1
 1745 0283 94       		.byte	0x94
 1746 0284 6B000000 		.4byte	0x6b
 1747 0288 02       		.uleb128 0x2
 1748 0289 91       		.byte	0x91
 1749 028a 67       		.sleb128 -25
 1750 028b 0D       		.uleb128 0xd
 1751 028c 8A020000 		.4byte	.LASF23
 1752 0290 01       		.byte	0x1
 1753 0291 95       		.byte	0x95
 1754 0292 9A000000 		.4byte	0x9a
 1755 0296 02       		.uleb128 0x2
 1756 0297 91       		.byte	0x91
 1757 0298 58       		.sleb128 -40
 1758 0299 06       		.uleb128 0x6
 1759 029a 24000000 		.4byte	.LBB9
 1760 029e 98000000 		.4byte	.LBE9-.LBB9
 1761 02a2 B3020000 		.4byte	0x2b3
 1762 02a6 07       		.uleb128 0x7
 1763 02a7 6900     		.ascii	"i\000"
 1764 02a9 01       		.byte	0x1
 1765 02aa 97       		.byte	0x97
 1766 02ab 6B000000 		.4byte	0x6b
 1767 02af 02       		.uleb128 0x2
 1768 02b0 91       		.byte	0x91
 1769 02b1 57       		.sleb128 -41
 1770 02b2 00       		.byte	0
 1771 02b3 08       		.uleb128 0x8
 1772 02b4 CA000000 		.4byte	.LBB10
 1773 02b8 6C000000 		.4byte	.LBE10-.LBB10
 1774 02bc 07       		.uleb128 0x7
 1775 02bd 61766700 		.ascii	"avg\000"
 1776 02c1 01       		.byte	0x1
 1777 02c2 A3       		.byte	0xa3
 1778 02c3 8C000000 		.4byte	0x8c
 1779 02c7 02       		.uleb128 0x2
 1780 02c8 91       		.byte	0x91
 1781 02c9 4C       		.sleb128 -52
 1782 02ca 0D       		.uleb128 0xd
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 37


 1783 02cb D7010000 		.4byte	.LASF29
 1784 02cf 01       		.byte	0x1
 1785 02d0 A4       		.byte	0xa4
 1786 02d1 8C000000 		.4byte	0x8c
 1787 02d5 02       		.uleb128 0x2
 1788 02d6 91       		.byte	0x91
 1789 02d7 50       		.sleb128 -48
 1790 02d8 00       		.byte	0
 1791 02d9 00       		.byte	0
 1792 02da 0C       		.uleb128 0xc
 1793 02db 8C010000 		.4byte	.LASF30
 1794 02df 01       		.byte	0x1
 1795 02e0 B4       		.byte	0xb4
 1796 02e1 00000000 		.4byte	.LFB41
 1797 02e5 24010000 		.4byte	.LFE41-.LFB41
 1798 02e9 01       		.uleb128 0x1
 1799 02ea 9C       		.byte	0x9c
 1800 02eb 5A030000 		.4byte	0x35a
 1801 02ef 0D       		.uleb128 0xd
 1802 02f0 C0010000 		.4byte	.LASF22
 1803 02f4 01       		.byte	0x1
 1804 02f5 B5       		.byte	0xb5
 1805 02f6 6B000000 		.4byte	0x6b
 1806 02fa 02       		.uleb128 0x2
 1807 02fb 91       		.byte	0x91
 1808 02fc 67       		.sleb128 -25
 1809 02fd 0D       		.uleb128 0xd
 1810 02fe 8A020000 		.4byte	.LASF23
 1811 0302 01       		.byte	0x1
 1812 0303 B6       		.byte	0xb6
 1813 0304 9A000000 		.4byte	0x9a
 1814 0308 02       		.uleb128 0x2
 1815 0309 91       		.byte	0x91
 1816 030a 58       		.sleb128 -40
 1817 030b 06       		.uleb128 0x6
 1818 030c 16000000 		.4byte	.LBB11
 1819 0310 60000000 		.4byte	.LBE11-.LBB11
 1820 0314 25030000 		.4byte	0x325
 1821 0318 07       		.uleb128 0x7
 1822 0319 6900     		.ascii	"i\000"
 1823 031b 01       		.byte	0x1
 1824 031c B8       		.byte	0xb8
 1825 031d 6B000000 		.4byte	0x6b
 1826 0321 02       		.uleb128 0x2
 1827 0322 91       		.byte	0x91
 1828 0323 57       		.sleb128 -41
 1829 0324 00       		.byte	0
 1830 0325 08       		.uleb128 0x8
 1831 0326 84000000 		.4byte	.LBB12
 1832 032a 86000000 		.4byte	.LBE12-.LBB12
 1833 032e 07       		.uleb128 0x7
 1834 032f 61766700 		.ascii	"avg\000"
 1835 0333 01       		.byte	0x1
 1836 0334 C4       		.byte	0xc4
 1837 0335 8C000000 		.4byte	0x8c
 1838 0339 02       		.uleb128 0x2
 1839 033a 91       		.byte	0x91
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 38


 1840 033b 50       		.sleb128 -48
 1841 033c 0D       		.uleb128 0xd
 1842 033d B2000000 		.4byte	.LASF31
 1843 0341 01       		.byte	0x1
 1844 0342 C8       		.byte	0xc8
 1845 0343 81000000 		.4byte	0x81
 1846 0347 02       		.uleb128 0x2
 1847 0348 91       		.byte	0x91
 1848 0349 4C       		.sleb128 -52
 1849 034a 0D       		.uleb128 0xd
 1850 034b 42020000 		.4byte	.LASF32
 1851 034f 01       		.byte	0x1
 1852 0350 CA       		.byte	0xca
 1853 0351 6B000000 		.4byte	0x6b
 1854 0355 02       		.uleb128 0x2
 1855 0356 91       		.byte	0x91
 1856 0357 56       		.sleb128 -42
 1857 0358 00       		.byte	0
 1858 0359 00       		.byte	0
 1859 035a 0C       		.uleb128 0xc
 1860 035b 5F000000 		.4byte	.LASF33
 1861 035f 01       		.byte	0x1
 1862 0360 DA       		.byte	0xda
 1863 0361 00000000 		.4byte	.LFB42
 1864 0365 44000000 		.4byte	.LFE42-.LFB42
 1865 0369 01       		.uleb128 0x1
 1866 036a 9C       		.byte	0x9c
 1867 036b 7E030000 		.4byte	0x37e
 1868 036f 0B       		.uleb128 0xb
 1869 0370 D2010000 		.4byte	.LASF34
 1870 0374 01       		.byte	0x1
 1871 0375 DA       		.byte	0xda
 1872 0376 7E030000 		.4byte	0x37e
 1873 037a 02       		.uleb128 0x2
 1874 037b 91       		.byte	0x91
 1875 037c 74       		.sleb128 -12
 1876 037d 00       		.byte	0
 1877 037e 0E       		.uleb128 0xe
 1878 037f 04       		.byte	0x4
 1879 0380 81000000 		.4byte	0x81
 1880 0384 0C       		.uleb128 0xc
 1881 0385 AC010000 		.4byte	.LASF35
 1882 0389 01       		.byte	0x1
 1883 038a E4       		.byte	0xe4
 1884 038b 00000000 		.4byte	.LFB43
 1885 038f 44000000 		.4byte	.LFE43-.LFB43
 1886 0393 01       		.uleb128 0x1
 1887 0394 9C       		.byte	0x9c
 1888 0395 A8030000 		.4byte	0x3a8
 1889 0399 0F       		.uleb128 0xf
 1890 039a 68756D00 		.ascii	"hum\000"
 1891 039e 01       		.byte	0x1
 1892 039f E4       		.byte	0xe4
 1893 03a0 7E030000 		.4byte	0x37e
 1894 03a4 02       		.uleb128 0x2
 1895 03a5 91       		.byte	0x91
 1896 03a6 74       		.sleb128 -12
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 39


 1897 03a7 00       		.byte	0
 1898 03a8 0C       		.uleb128 0xc
 1899 03a9 A5000000 		.4byte	.LASF36
 1900 03ad 01       		.byte	0x1
 1901 03ae EE       		.byte	0xee
 1902 03af 00000000 		.4byte	.LFB44
 1903 03b3 84000000 		.4byte	.LFE44-.LFB44
 1904 03b7 01       		.uleb128 0x1
 1905 03b8 9C       		.byte	0x9c
 1906 03b9 DA030000 		.4byte	0x3da
 1907 03bd 0B       		.uleb128 0xb
 1908 03be 66020000 		.4byte	.LASF28
 1909 03c2 01       		.byte	0x1
 1910 03c3 EE       		.byte	0xee
 1911 03c4 6B000000 		.4byte	0x6b
 1912 03c8 02       		.uleb128 0x2
 1913 03c9 91       		.byte	0x91
 1914 03ca 77       		.sleb128 -9
 1915 03cb 0B       		.uleb128 0xb
 1916 03cc A4010000 		.4byte	.LASF37
 1917 03d0 01       		.byte	0x1
 1918 03d1 EE       		.byte	0xee
 1919 03d2 DA030000 		.4byte	0x3da
 1920 03d6 02       		.uleb128 0x2
 1921 03d7 91       		.byte	0x91
 1922 03d8 70       		.sleb128 -16
 1923 03d9 00       		.byte	0
 1924 03da 0E       		.uleb128 0xe
 1925 03db 04       		.byte	0x4
 1926 03dc 76000000 		.4byte	0x76
 1927 03e0 0C       		.uleb128 0xc
 1928 03e1 FA010000 		.4byte	.LASF38
 1929 03e5 01       		.byte	0x1
 1930 03e6 F8       		.byte	0xf8
 1931 03e7 00000000 		.4byte	.LFB45
 1932 03eb 44000000 		.4byte	.LFE45-.LFB45
 1933 03ef 01       		.uleb128 0x1
 1934 03f0 9C       		.byte	0x9c
 1935 03f1 04040000 		.4byte	0x404
 1936 03f5 0B       		.uleb128 0xb
 1937 03f6 0F000000 		.4byte	.LASF39
 1938 03fa 01       		.byte	0x1
 1939 03fb F8       		.byte	0xf8
 1940 03fc 7E030000 		.4byte	0x37e
 1941 0400 02       		.uleb128 0x2
 1942 0401 91       		.byte	0x91
 1943 0402 74       		.sleb128 -12
 1944 0403 00       		.byte	0
 1945 0404 10       		.uleb128 0x10
 1946 0405 81000000 		.4byte	0x81
 1947 0409 14040000 		.4byte	0x414
 1948 040d 11       		.uleb128 0x11
 1949 040e AC000000 		.4byte	0xac
 1950 0412 09       		.byte	0x9
 1951 0413 00       		.byte	0
 1952 0414 12       		.uleb128 0x12
 1953 0415 4D010000 		.4byte	.LASF40
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 40


 1954 0419 01       		.byte	0x1
 1955 041a 10       		.byte	0x10
 1956 041b 04040000 		.4byte	0x404
 1957 041f 05       		.uleb128 0x5
 1958 0420 03       		.byte	0x3
 1959 0421 00000000 		.4byte	tempArray
 1960 0425 12       		.uleb128 0x12
 1961 0426 0B020000 		.4byte	.LASF41
 1962 042a 01       		.byte	0x1
 1963 042b 11       		.byte	0x11
 1964 042c 7E030000 		.4byte	0x37e
 1965 0430 05       		.uleb128 0x5
 1966 0431 03       		.byte	0x3
 1967 0432 00000000 		.4byte	tempArrayPtr
 1968 0436 12       		.uleb128 0x12
 1969 0437 C8020000 		.4byte	.LASF42
 1970 043b 01       		.byte	0x1
 1971 043c 12       		.byte	0x12
 1972 043d 04040000 		.4byte	0x404
 1973 0441 05       		.uleb128 0x5
 1974 0442 03       		.byte	0x3
 1975 0443 00000000 		.4byte	humArray
 1976 0447 12       		.uleb128 0x12
 1977 0448 7B000000 		.4byte	.LASF43
 1978 044c 01       		.byte	0x1
 1979 044d 13       		.byte	0x13
 1980 044e 7E030000 		.4byte	0x37e
 1981 0452 05       		.uleb128 0x5
 1982 0453 03       		.byte	0x3
 1983 0454 00000000 		.4byte	humArrayPtr
 1984 0458 10       		.uleb128 0x10
 1985 0459 76000000 		.4byte	0x76
 1986 045d 6E040000 		.4byte	0x46e
 1987 0461 11       		.uleb128 0x11
 1988 0462 AC000000 		.4byte	0xac
 1989 0466 05       		.byte	0x5
 1990 0467 11       		.uleb128 0x11
 1991 0468 AC000000 		.4byte	0xac
 1992 046c 09       		.byte	0x9
 1993 046d 00       		.byte	0
 1994 046e 12       		.uleb128 0x12
 1995 046f AD020000 		.4byte	.LASF44
 1996 0473 01       		.byte	0x1
 1997 0474 14       		.byte	0x14
 1998 0475 58040000 		.4byte	0x458
 1999 0479 05       		.uleb128 0x5
 2000 047a 03       		.byte	0x3
 2001 047b 00000000 		.4byte	soilHumArray
 2002 047f 10       		.uleb128 0x10
 2003 0480 DA030000 		.4byte	0x3da
 2004 0484 8F040000 		.4byte	0x48f
 2005 0488 11       		.uleb128 0x11
 2006 0489 AC000000 		.4byte	0xac
 2007 048d 05       		.byte	0x5
 2008 048e 00       		.byte	0
 2009 048f 12       		.uleb128 0x12
 2010 0490 69000000 		.4byte	.LASF45
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 41


 2011 0494 01       		.byte	0x1
 2012 0495 15       		.byte	0x15
 2013 0496 7F040000 		.4byte	0x47f
 2014 049a 05       		.uleb128 0x5
 2015 049b 03       		.byte	0x3
 2016 049c 00000000 		.4byte	soilHumPtr
 2017 04a0 12       		.uleb128 0x12
 2018 04a1 9A000000 		.4byte	.LASF46
 2019 04a5 01       		.byte	0x1
 2020 04a6 16       		.byte	0x16
 2021 04a7 04040000 		.4byte	0x404
 2022 04ab 05       		.uleb128 0x5
 2023 04ac 03       		.byte	0x3
 2024 04ad 00000000 		.4byte	lightArray
 2025 04b1 12       		.uleb128 0x12
 2026 04b2 BA020000 		.4byte	.LASF47
 2027 04b6 01       		.byte	0x1
 2028 04b7 17       		.byte	0x17
 2029 04b8 7E030000 		.4byte	0x37e
 2030 04bc 05       		.uleb128 0x5
 2031 04bd 03       		.byte	0x3
 2032 04be 00000000 		.4byte	lightArrayPtr
 2033 04c2 12       		.uleb128 0x12
 2034 04c3 D2010000 		.4byte	.LASF34
 2035 04c7 01       		.byte	0x1
 2036 04c8 18       		.byte	0x18
 2037 04c9 6B000000 		.4byte	0x6b
 2038 04cd 05       		.uleb128 0x5
 2039 04ce 03       		.byte	0x3
 2040 04cf 00000000 		.4byte	temp
 2041 04d3 13       		.uleb128 0x13
 2042 04d4 68756D00 		.ascii	"hum\000"
 2043 04d8 01       		.byte	0x1
 2044 04d9 18       		.byte	0x18
 2045 04da 6B000000 		.4byte	0x6b
 2046 04de 05       		.uleb128 0x5
 2047 04df 03       		.byte	0x3
 2048 04e0 00000000 		.4byte	hum
 2049 04e4 10       		.uleb128 0x10
 2050 04e5 6B000000 		.4byte	0x6b
 2051 04e9 F4040000 		.4byte	0x4f4
 2052 04ed 11       		.uleb128 0x11
 2053 04ee AC000000 		.4byte	0xac
 2054 04f2 05       		.byte	0x5
 2055 04f3 00       		.byte	0
 2056 04f4 12       		.uleb128 0x12
 2057 04f5 A4010000 		.4byte	.LASF37
 2058 04f9 01       		.byte	0x1
 2059 04fa 18       		.byte	0x18
 2060 04fb E4040000 		.4byte	0x4e4
 2061 04ff 05       		.uleb128 0x5
 2062 0500 03       		.byte	0x3
 2063 0501 00000000 		.4byte	soilHum
 2064 0505 12       		.uleb128 0x12
 2065 0506 0F000000 		.4byte	.LASF39
 2066 050a 01       		.byte	0x1
 2067 050b 18       		.byte	0x18
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 42


 2068 050c 6B000000 		.4byte	0x6b
 2069 0510 05       		.uleb128 0x5
 2070 0511 03       		.byte	0x3
 2071 0512 00000000 		.4byte	light
 2072 0516 00       		.byte	0
 2073              		.section	.debug_abbrev,"",%progbits
 2074              	.Ldebug_abbrev0:
 2075 0000 01       		.uleb128 0x1
 2076 0001 11       		.uleb128 0x11
 2077 0002 01       		.byte	0x1
 2078 0003 25       		.uleb128 0x25
 2079 0004 0E       		.uleb128 0xe
 2080 0005 13       		.uleb128 0x13
 2081 0006 0B       		.uleb128 0xb
 2082 0007 03       		.uleb128 0x3
 2083 0008 0E       		.uleb128 0xe
 2084 0009 1B       		.uleb128 0x1b
 2085 000a 0E       		.uleb128 0xe
 2086 000b 55       		.uleb128 0x55
 2087 000c 17       		.uleb128 0x17
 2088 000d 11       		.uleb128 0x11
 2089 000e 01       		.uleb128 0x1
 2090 000f 10       		.uleb128 0x10
 2091 0010 17       		.uleb128 0x17
 2092 0011 00       		.byte	0
 2093 0012 00       		.byte	0
 2094 0013 02       		.uleb128 0x2
 2095 0014 24       		.uleb128 0x24
 2096 0015 00       		.byte	0
 2097 0016 0B       		.uleb128 0xb
 2098 0017 0B       		.uleb128 0xb
 2099 0018 3E       		.uleb128 0x3e
 2100 0019 0B       		.uleb128 0xb
 2101 001a 03       		.uleb128 0x3
 2102 001b 0E       		.uleb128 0xe
 2103 001c 00       		.byte	0
 2104 001d 00       		.byte	0
 2105 001e 03       		.uleb128 0x3
 2106 001f 24       		.uleb128 0x24
 2107 0020 00       		.byte	0
 2108 0021 0B       		.uleb128 0xb
 2109 0022 0B       		.uleb128 0xb
 2110 0023 3E       		.uleb128 0x3e
 2111 0024 0B       		.uleb128 0xb
 2112 0025 03       		.uleb128 0x3
 2113 0026 08       		.uleb128 0x8
 2114 0027 00       		.byte	0
 2115 0028 00       		.byte	0
 2116 0029 04       		.uleb128 0x4
 2117 002a 16       		.uleb128 0x16
 2118 002b 00       		.byte	0
 2119 002c 03       		.uleb128 0x3
 2120 002d 0E       		.uleb128 0xe
 2121 002e 3A       		.uleb128 0x3a
 2122 002f 0B       		.uleb128 0xb
 2123 0030 3B       		.uleb128 0x3b
 2124 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 43


 2125 0032 49       		.uleb128 0x49
 2126 0033 13       		.uleb128 0x13
 2127 0034 00       		.byte	0
 2128 0035 00       		.byte	0
 2129 0036 05       		.uleb128 0x5
 2130 0037 2E       		.uleb128 0x2e
 2131 0038 01       		.byte	0x1
 2132 0039 3F       		.uleb128 0x3f
 2133 003a 19       		.uleb128 0x19
 2134 003b 03       		.uleb128 0x3
 2135 003c 0E       		.uleb128 0xe
 2136 003d 3A       		.uleb128 0x3a
 2137 003e 0B       		.uleb128 0xb
 2138 003f 3B       		.uleb128 0x3b
 2139 0040 0B       		.uleb128 0xb
 2140 0041 27       		.uleb128 0x27
 2141 0042 19       		.uleb128 0x19
 2142 0043 11       		.uleb128 0x11
 2143 0044 01       		.uleb128 0x1
 2144 0045 12       		.uleb128 0x12
 2145 0046 06       		.uleb128 0x6
 2146 0047 40       		.uleb128 0x40
 2147 0048 18       		.uleb128 0x18
 2148 0049 9742     		.uleb128 0x2117
 2149 004b 19       		.uleb128 0x19
 2150 004c 01       		.uleb128 0x1
 2151 004d 13       		.uleb128 0x13
 2152 004e 00       		.byte	0
 2153 004f 00       		.byte	0
 2154 0050 06       		.uleb128 0x6
 2155 0051 0B       		.uleb128 0xb
 2156 0052 01       		.byte	0x1
 2157 0053 11       		.uleb128 0x11
 2158 0054 01       		.uleb128 0x1
 2159 0055 12       		.uleb128 0x12
 2160 0056 06       		.uleb128 0x6
 2161 0057 01       		.uleb128 0x1
 2162 0058 13       		.uleb128 0x13
 2163 0059 00       		.byte	0
 2164 005a 00       		.byte	0
 2165 005b 07       		.uleb128 0x7
 2166 005c 34       		.uleb128 0x34
 2167 005d 00       		.byte	0
 2168 005e 03       		.uleb128 0x3
 2169 005f 08       		.uleb128 0x8
 2170 0060 3A       		.uleb128 0x3a
 2171 0061 0B       		.uleb128 0xb
 2172 0062 3B       		.uleb128 0x3b
 2173 0063 0B       		.uleb128 0xb
 2174 0064 49       		.uleb128 0x49
 2175 0065 13       		.uleb128 0x13
 2176 0066 02       		.uleb128 0x2
 2177 0067 18       		.uleb128 0x18
 2178 0068 00       		.byte	0
 2179 0069 00       		.byte	0
 2180 006a 08       		.uleb128 0x8
 2181 006b 0B       		.uleb128 0xb
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 44


 2182 006c 01       		.byte	0x1
 2183 006d 11       		.uleb128 0x11
 2184 006e 01       		.uleb128 0x1
 2185 006f 12       		.uleb128 0x12
 2186 0070 06       		.uleb128 0x6
 2187 0071 00       		.byte	0
 2188 0072 00       		.byte	0
 2189 0073 09       		.uleb128 0x9
 2190 0074 2E       		.uleb128 0x2e
 2191 0075 00       		.byte	0
 2192 0076 3F       		.uleb128 0x3f
 2193 0077 19       		.uleb128 0x19
 2194 0078 03       		.uleb128 0x3
 2195 0079 0E       		.uleb128 0xe
 2196 007a 3A       		.uleb128 0x3a
 2197 007b 0B       		.uleb128 0xb
 2198 007c 3B       		.uleb128 0x3b
 2199 007d 0B       		.uleb128 0xb
 2200 007e 27       		.uleb128 0x27
 2201 007f 19       		.uleb128 0x19
 2202 0080 49       		.uleb128 0x49
 2203 0081 13       		.uleb128 0x13
 2204 0082 11       		.uleb128 0x11
 2205 0083 01       		.uleb128 0x1
 2206 0084 12       		.uleb128 0x12
 2207 0085 06       		.uleb128 0x6
 2208 0086 40       		.uleb128 0x40
 2209 0087 18       		.uleb128 0x18
 2210 0088 9742     		.uleb128 0x2117
 2211 008a 19       		.uleb128 0x19
 2212 008b 00       		.byte	0
 2213 008c 00       		.byte	0
 2214 008d 0A       		.uleb128 0xa
 2215 008e 2E       		.uleb128 0x2e
 2216 008f 01       		.byte	0x1
 2217 0090 3F       		.uleb128 0x3f
 2218 0091 19       		.uleb128 0x19
 2219 0092 03       		.uleb128 0x3
 2220 0093 0E       		.uleb128 0xe
 2221 0094 3A       		.uleb128 0x3a
 2222 0095 0B       		.uleb128 0xb
 2223 0096 3B       		.uleb128 0x3b
 2224 0097 0B       		.uleb128 0xb
 2225 0098 27       		.uleb128 0x27
 2226 0099 19       		.uleb128 0x19
 2227 009a 49       		.uleb128 0x49
 2228 009b 13       		.uleb128 0x13
 2229 009c 11       		.uleb128 0x11
 2230 009d 01       		.uleb128 0x1
 2231 009e 12       		.uleb128 0x12
 2232 009f 06       		.uleb128 0x6
 2233 00a0 40       		.uleb128 0x40
 2234 00a1 18       		.uleb128 0x18
 2235 00a2 9742     		.uleb128 0x2117
 2236 00a4 19       		.uleb128 0x19
 2237 00a5 01       		.uleb128 0x1
 2238 00a6 13       		.uleb128 0x13
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 45


 2239 00a7 00       		.byte	0
 2240 00a8 00       		.byte	0
 2241 00a9 0B       		.uleb128 0xb
 2242 00aa 05       		.uleb128 0x5
 2243 00ab 00       		.byte	0
 2244 00ac 03       		.uleb128 0x3
 2245 00ad 0E       		.uleb128 0xe
 2246 00ae 3A       		.uleb128 0x3a
 2247 00af 0B       		.uleb128 0xb
 2248 00b0 3B       		.uleb128 0x3b
 2249 00b1 0B       		.uleb128 0xb
 2250 00b2 49       		.uleb128 0x49
 2251 00b3 13       		.uleb128 0x13
 2252 00b4 02       		.uleb128 0x2
 2253 00b5 18       		.uleb128 0x18
 2254 00b6 00       		.byte	0
 2255 00b7 00       		.byte	0
 2256 00b8 0C       		.uleb128 0xc
 2257 00b9 2E       		.uleb128 0x2e
 2258 00ba 01       		.byte	0x1
 2259 00bb 3F       		.uleb128 0x3f
 2260 00bc 19       		.uleb128 0x19
 2261 00bd 03       		.uleb128 0x3
 2262 00be 0E       		.uleb128 0xe
 2263 00bf 3A       		.uleb128 0x3a
 2264 00c0 0B       		.uleb128 0xb
 2265 00c1 3B       		.uleb128 0x3b
 2266 00c2 0B       		.uleb128 0xb
 2267 00c3 27       		.uleb128 0x27
 2268 00c4 19       		.uleb128 0x19
 2269 00c5 11       		.uleb128 0x11
 2270 00c6 01       		.uleb128 0x1
 2271 00c7 12       		.uleb128 0x12
 2272 00c8 06       		.uleb128 0x6
 2273 00c9 40       		.uleb128 0x40
 2274 00ca 18       		.uleb128 0x18
 2275 00cb 9642     		.uleb128 0x2116
 2276 00cd 19       		.uleb128 0x19
 2277 00ce 01       		.uleb128 0x1
 2278 00cf 13       		.uleb128 0x13
 2279 00d0 00       		.byte	0
 2280 00d1 00       		.byte	0
 2281 00d2 0D       		.uleb128 0xd
 2282 00d3 34       		.uleb128 0x34
 2283 00d4 00       		.byte	0
 2284 00d5 03       		.uleb128 0x3
 2285 00d6 0E       		.uleb128 0xe
 2286 00d7 3A       		.uleb128 0x3a
 2287 00d8 0B       		.uleb128 0xb
 2288 00d9 3B       		.uleb128 0x3b
 2289 00da 0B       		.uleb128 0xb
 2290 00db 49       		.uleb128 0x49
 2291 00dc 13       		.uleb128 0x13
 2292 00dd 02       		.uleb128 0x2
 2293 00de 18       		.uleb128 0x18
 2294 00df 00       		.byte	0
 2295 00e0 00       		.byte	0
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 46


 2296 00e1 0E       		.uleb128 0xe
 2297 00e2 0F       		.uleb128 0xf
 2298 00e3 00       		.byte	0
 2299 00e4 0B       		.uleb128 0xb
 2300 00e5 0B       		.uleb128 0xb
 2301 00e6 49       		.uleb128 0x49
 2302 00e7 13       		.uleb128 0x13
 2303 00e8 00       		.byte	0
 2304 00e9 00       		.byte	0
 2305 00ea 0F       		.uleb128 0xf
 2306 00eb 05       		.uleb128 0x5
 2307 00ec 00       		.byte	0
 2308 00ed 03       		.uleb128 0x3
 2309 00ee 08       		.uleb128 0x8
 2310 00ef 3A       		.uleb128 0x3a
 2311 00f0 0B       		.uleb128 0xb
 2312 00f1 3B       		.uleb128 0x3b
 2313 00f2 0B       		.uleb128 0xb
 2314 00f3 49       		.uleb128 0x49
 2315 00f4 13       		.uleb128 0x13
 2316 00f5 02       		.uleb128 0x2
 2317 00f6 18       		.uleb128 0x18
 2318 00f7 00       		.byte	0
 2319 00f8 00       		.byte	0
 2320 00f9 10       		.uleb128 0x10
 2321 00fa 01       		.uleb128 0x1
 2322 00fb 01       		.byte	0x1
 2323 00fc 49       		.uleb128 0x49
 2324 00fd 13       		.uleb128 0x13
 2325 00fe 01       		.uleb128 0x1
 2326 00ff 13       		.uleb128 0x13
 2327 0100 00       		.byte	0
 2328 0101 00       		.byte	0
 2329 0102 11       		.uleb128 0x11
 2330 0103 21       		.uleb128 0x21
 2331 0104 00       		.byte	0
 2332 0105 49       		.uleb128 0x49
 2333 0106 13       		.uleb128 0x13
 2334 0107 2F       		.uleb128 0x2f
 2335 0108 0B       		.uleb128 0xb
 2336 0109 00       		.byte	0
 2337 010a 00       		.byte	0
 2338 010b 12       		.uleb128 0x12
 2339 010c 34       		.uleb128 0x34
 2340 010d 00       		.byte	0
 2341 010e 03       		.uleb128 0x3
 2342 010f 0E       		.uleb128 0xe
 2343 0110 3A       		.uleb128 0x3a
 2344 0111 0B       		.uleb128 0xb
 2345 0112 3B       		.uleb128 0x3b
 2346 0113 0B       		.uleb128 0xb
 2347 0114 49       		.uleb128 0x49
 2348 0115 13       		.uleb128 0x13
 2349 0116 3F       		.uleb128 0x3f
 2350 0117 19       		.uleb128 0x19
 2351 0118 02       		.uleb128 0x2
 2352 0119 18       		.uleb128 0x18
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 47


 2353 011a 00       		.byte	0
 2354 011b 00       		.byte	0
 2355 011c 13       		.uleb128 0x13
 2356 011d 34       		.uleb128 0x34
 2357 011e 00       		.byte	0
 2358 011f 03       		.uleb128 0x3
 2359 0120 08       		.uleb128 0x8
 2360 0121 3A       		.uleb128 0x3a
 2361 0122 0B       		.uleb128 0xb
 2362 0123 3B       		.uleb128 0x3b
 2363 0124 0B       		.uleb128 0xb
 2364 0125 49       		.uleb128 0x49
 2365 0126 13       		.uleb128 0x13
 2366 0127 3F       		.uleb128 0x3f
 2367 0128 19       		.uleb128 0x19
 2368 0129 02       		.uleb128 0x2
 2369 012a 18       		.uleb128 0x18
 2370 012b 00       		.byte	0
 2371 012c 00       		.byte	0
 2372 012d 00       		.byte	0
 2373              		.section	.debug_aranges,"",%progbits
 2374 0000 7C000000 		.4byte	0x7c
 2375 0004 0200     		.2byte	0x2
 2376 0006 00000000 		.4byte	.Ldebug_info0
 2377 000a 04       		.byte	0x4
 2378 000b 00       		.byte	0
 2379 000c 0000     		.2byte	0
 2380 000e 0000     		.2byte	0
 2381 0010 00000000 		.4byte	.LFB33
 2382 0014 18010000 		.4byte	.LFE33-.LFB33
 2383 0018 00000000 		.4byte	.LFB34
 2384 001c 14000000 		.4byte	.LFE34-.LFB34
 2385 0020 00000000 		.4byte	.LFB35
 2386 0024 14000000 		.4byte	.LFE35-.LFB35
 2387 0028 00000000 		.4byte	.LFB36
 2388 002c 20000000 		.4byte	.LFE36-.LFB36
 2389 0030 00000000 		.4byte	.LFB37
 2390 0034 14000000 		.4byte	.LFE37-.LFB37
 2391 0038 00000000 		.4byte	.LFB38
 2392 003c 48010000 		.4byte	.LFE38-.LFB38
 2393 0040 00000000 		.4byte	.LFB39
 2394 0044 1C010000 		.4byte	.LFE39-.LFB39
 2395 0048 00000000 		.4byte	.LFB40
 2396 004c 58010000 		.4byte	.LFE40-.LFB40
 2397 0050 00000000 		.4byte	.LFB41
 2398 0054 24010000 		.4byte	.LFE41-.LFB41
 2399 0058 00000000 		.4byte	.LFB42
 2400 005c 44000000 		.4byte	.LFE42-.LFB42
 2401 0060 00000000 		.4byte	.LFB43
 2402 0064 44000000 		.4byte	.LFE43-.LFB43
 2403 0068 00000000 		.4byte	.LFB44
 2404 006c 84000000 		.4byte	.LFE44-.LFB44
 2405 0070 00000000 		.4byte	.LFB45
 2406 0074 44000000 		.4byte	.LFE45-.LFB45
 2407 0078 00000000 		.4byte	0
 2408 007c 00000000 		.4byte	0
 2409              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 48


 2410              	.Ldebug_ranges0:
 2411 0000 00000000 		.4byte	.LFB33
 2412 0004 18010000 		.4byte	.LFE33
 2413 0008 00000000 		.4byte	.LFB34
 2414 000c 14000000 		.4byte	.LFE34
 2415 0010 00000000 		.4byte	.LFB35
 2416 0014 14000000 		.4byte	.LFE35
 2417 0018 00000000 		.4byte	.LFB36
 2418 001c 20000000 		.4byte	.LFE36
 2419 0020 00000000 		.4byte	.LFB37
 2420 0024 14000000 		.4byte	.LFE37
 2421 0028 00000000 		.4byte	.LFB38
 2422 002c 48010000 		.4byte	.LFE38
 2423 0030 00000000 		.4byte	.LFB39
 2424 0034 1C010000 		.4byte	.LFE39
 2425 0038 00000000 		.4byte	.LFB40
 2426 003c 58010000 		.4byte	.LFE40
 2427 0040 00000000 		.4byte	.LFB41
 2428 0044 24010000 		.4byte	.LFE41
 2429 0048 00000000 		.4byte	.LFB42
 2430 004c 44000000 		.4byte	.LFE42
 2431 0050 00000000 		.4byte	.LFB43
 2432 0054 44000000 		.4byte	.LFE43
 2433 0058 00000000 		.4byte	.LFB44
 2434 005c 84000000 		.4byte	.LFE44
 2435 0060 00000000 		.4byte	.LFB45
 2436 0064 44000000 		.4byte	.LFE45
 2437 0068 00000000 		.4byte	0
 2438 006c 00000000 		.4byte	0
 2439              		.section	.debug_line,"",%progbits
 2440              	.Ldebug_line0:
 2441 0000 00020000 		.section	.debug_str,"MS",%progbits,1
 2441      02004A00 
 2441      00000201 
 2441      FB0E0D00 
 2441      01010101 
 2442              	.LASF24:
 2443 0000 74656D70 		.ascii	"tempInDegreesC\000"
 2443      496E4465 
 2443      67726565 
 2443      734300
 2444              	.LASF39:
 2445 000f 6C696768 		.ascii	"light\000"
 2445      7400
 2446              	.LASF50:
 2447 0015 433A5C55 		.ascii	"C:\\Users\\Lasse\\Documents\\GitHub\\PSoC_Master\\P"
 2447      73657273 
 2447      5C4C6173 
 2447      73655C44 
 2447      6F63756D 
 2448 0042 536F435F 		.ascii	"SoC_Master\\PSoC_Master.cydsn\000"
 2448      4D617374 
 2448      65725C50 
 2448      536F435F 
 2448      4D617374 
 2449              	.LASF33:
 2450 005f 696E7075 		.ascii	"inputTemp\000"
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 49


 2450      7454656D 
 2450      7000
 2451              	.LASF45:
 2452 0069 736F696C 		.ascii	"soilHumPtr\000"
 2452      48756D50 
 2452      747200
 2453              	.LASF25:
 2454 0074 61766748 		.ascii	"avgHum\000"
 2454      756D00
 2455              	.LASF43:
 2456 007b 68756D41 		.ascii	"humArrayPtr\000"
 2456      72726179 
 2456      50747200 
 2457              	.LASF3:
 2458 0087 73686F72 		.ascii	"short unsigned int\000"
 2458      7420756E 
 2458      7369676E 
 2458      65642069 
 2458      6E7400
 2459              	.LASF46:
 2460 009a 6C696768 		.ascii	"lightArray\000"
 2460      74417272 
 2460      617900
 2461              	.LASF36:
 2462 00a5 696E7075 		.ascii	"inputSoilHum\000"
 2462      74536F69 
 2462      6C48756D 
 2462      00
 2463              	.LASF31:
 2464 00b2 6C696768 		.ascii	"lightInLux\000"
 2464      74496E4C 
 2464      757800
 2465              	.LASF12:
 2466 00bd 666C6F61 		.ascii	"float\000"
 2466      7400
 2467              	.LASF48:
 2468 00c3 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2468      4320342E 
 2468      382E3420 
 2468      32303134 
 2468      30353236 
 2469 00f6 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2469      20726576 
 2469      6973696F 
 2469      6E203231 
 2469      31333538 
 2470 0129 30202D66 		.ascii	"0 -ffunction-sections\000"
 2470      66756E63 
 2470      74696F6E 
 2470      2D736563 
 2470      74696F6E 
 2471              	.LASF1:
 2472 013f 756E7369 		.ascii	"unsigned char\000"
 2472      676E6564 
 2472      20636861 
 2472      7200
 2473              	.LASF40:
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 50


 2474 014d 74656D70 		.ascii	"tempArray\000"
 2474      41727261 
 2474      7900
 2475              	.LASF5:
 2476 0157 6C6F6E67 		.ascii	"long unsigned int\000"
 2476      20756E73 
 2476      69676E65 
 2476      6420696E 
 2476      7400
 2477              	.LASF17:
 2478 0169 67657454 		.ascii	"getTemp_DSP\000"
 2478      656D705F 
 2478      44535000 
 2479              	.LASF26:
 2480 0175 68756D49 		.ascii	"humInRH\000"
 2480      6E524800 
 2481              	.LASF51:
 2482 017d 67657453 		.ascii	"getSoilHum_DSP\000"
 2482      6F696C48 
 2482      756D5F44 
 2482      535000
 2483              	.LASF30:
 2484 018c 6176674C 		.ascii	"avgLight\000"
 2484      69676874 
 2484      00
 2485              	.LASF20:
 2486 0195 696E6974 		.ascii	"initDSP\000"
 2486      44535000 
 2487              	.LASF13:
 2488 019d 646F7562 		.ascii	"double\000"
 2488      6C6500
 2489              	.LASF37:
 2490 01a4 736F696C 		.ascii	"soilHum\000"
 2490      48756D00 
 2491              	.LASF35:
 2492 01ac 696E7075 		.ascii	"inputHum\000"
 2492      7448756D 
 2492      00
 2493              	.LASF18:
 2494 01b5 67657448 		.ascii	"getHum_DSP\000"
 2494      756D5F44 
 2494      535000
 2495              	.LASF22:
 2496 01c0 736B6970 		.ascii	"skip\000"
 2496      00
 2497              	.LASF8:
 2498 01c5 756E7369 		.ascii	"unsigned int\000"
 2498      676E6564 
 2498      20696E74 
 2498      00
 2499              	.LASF34:
 2500 01d2 74656D70 		.ascii	"temp\000"
 2500      00
 2501              	.LASF29:
 2502 01d7 736F696C 		.ascii	"soilHumInRH\000"
 2502      48756D49 
 2502      6E524800 
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 51


 2503              	.LASF7:
 2504 01e3 6C6F6E67 		.ascii	"long long unsigned int\000"
 2504      206C6F6E 
 2504      6720756E 
 2504      7369676E 
 2504      65642069 
 2505              	.LASF38:
 2506 01fa 696E7075 		.ascii	"inputLight\000"
 2506      744C6967 
 2506      687400
 2507              	.LASF10:
 2508 0205 696E7431 		.ascii	"int16\000"
 2508      3600
 2509              	.LASF41:
 2510 020b 74656D70 		.ascii	"tempArrayPtr\000"
 2510      41727261 
 2510      79507472 
 2510      00
 2511              	.LASF19:
 2512 0218 6765744C 		.ascii	"getLight_DSP\000"
 2512      69676874 
 2512      5F445350 
 2512      00
 2513              	.LASF11:
 2514 0225 696E7433 		.ascii	"int32\000"
 2514      3200
 2515              	.LASF16:
 2516 022b 73697A65 		.ascii	"sizetype\000"
 2516      74797065 
 2516      00
 2517              	.LASF6:
 2518 0234 6C6F6E67 		.ascii	"long long int\000"
 2518      206C6F6E 
 2518      6720696E 
 2518      7400
 2519              	.LASF32:
 2520 0242 6C696768 		.ascii	"lightInUartVarSteps\000"
 2520      74496E55 
 2520      61727456 
 2520      61725374 
 2520      65707300 
 2521              	.LASF15:
 2522 0256 63686172 		.ascii	"char\000"
 2522      00
 2523              	.LASF27:
 2524 025b 61766753 		.ascii	"avgSoilHum\000"
 2524      6F696C48 
 2524      756D00
 2525              	.LASF28:
 2526 0266 696E6465 		.ascii	"index\000"
 2526      7800
 2527              	.LASF49:
 2528 026c 2E5C4453 		.ascii	".\\DSP_Class.c\000"
 2528      505F436C 
 2528      6173732E 
 2528      6300
 2529              	.LASF2:
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccTcb8j9.s 			page 52


 2530 027a 73686F72 		.ascii	"short int\000"
 2530      7420696E 
 2530      7400
 2531              	.LASF9:
 2532 0284 75696E74 		.ascii	"uint8\000"
 2532      3800
 2533              	.LASF23:
 2534 028a 746F7461 		.ascii	"total\000"
 2534      6C00
 2535              	.LASF4:
 2536 0290 6C6F6E67 		.ascii	"long int\000"
 2536      20696E74 
 2536      00
 2537              	.LASF21:
 2538 0299 61766754 		.ascii	"avgTemp\000"
 2538      656D7000 
 2539              	.LASF0:
 2540 02a1 7369676E 		.ascii	"signed char\000"
 2540      65642063 
 2540      68617200 
 2541              	.LASF44:
 2542 02ad 736F696C 		.ascii	"soilHumArray\000"
 2542      48756D41 
 2542      72726179 
 2542      00
 2543              	.LASF47:
 2544 02ba 6C696768 		.ascii	"lightArrayPtr\000"
 2544      74417272 
 2544      61795074 
 2544      7200
 2545              	.LASF42:
 2546 02c8 68756D41 		.ascii	"humArray\000"
 2546      72726179 
 2546      00
 2547              	.LASF14:
 2548 02d1 696E7436 		.ascii	"int64\000"
 2548      3400
 2549              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
