ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"I2C_Class.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.data
  18              		.type	irrigationStatus, %object
  19              		.size	irrigationStatus, 1
  20              	irrigationStatus:
  21 0000 C0       		.byte	-64
  22 0001 000000   		.align	2
  23              		.type	size, %object
  24              		.size	size, 4
  25              	size:
  26 0004 01000000 		.word	1
  27              		.section	.text.initI2C,"ax",%progbits
  28              		.align	2
  29              		.global	initI2C
  30              		.code	16
  31              		.thumb_func
  32              		.type	initI2C, %function
  33              	initI2C:
  34              	.LFB33:
  35              		.file 1 ".\\I2C_Class.c"
   1:.\I2C_Class.c **** /* ========================================
   2:.\I2C_Class.c ****  * 
   3:.\I2C_Class.c ****  * AutoGreen - PSoC_Master
   4:.\I2C_Class.c ****  * I2C_Class.c
   5:.\I2C_Class.c ****  * (Description)
   6:.\I2C_Class.c ****  * PRJ3 - GRP9
   7:.\I2C_Class.c ****  * 2015-04-15
   8:.\I2C_Class.c ****  *
   9:.\I2C_Class.c ****  * ========================================
  10:.\I2C_Class.c **** */
  11:.\I2C_Class.c **** 
  12:.\I2C_Class.c **** // Include files
  13:.\I2C_Class.c **** #include "I2C_Class.h"
  14:.\I2C_Class.c **** 
  15:.\I2C_Class.c **** // Definitions
  16:.\I2C_Class.c **** //#define TEMP_AND_HUM_SENSOR_ADDRESS 0x27             // TODO This is old
  17:.\I2C_Class.c **** #define TEMP_SENSOR_ADDRESS 0x48                       // For LM75 temp sensor with A0 = 0, A1 = 0 
  18:.\I2C_Class.c **** #define ACTUATOR_ADRESS 0x42
  19:.\I2C_Class.c **** #define LIGHT_SENSOR_COMMAND_ADDRESS 0x00
  20:.\I2C_Class.c **** #define LIGHT_SENSOR_CONTROL_ADDRESS 0x01
  21:.\I2C_Class.c **** #define LIGHT_SENSOR_LSB 0x04  
  22:.\I2C_Class.c **** #define LIGHT_SENSOR_MSB 0x05
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 2


  23:.\I2C_Class.c **** 
  24:.\I2C_Class.c **** //Uncomment to enable debugging
  25:.\I2C_Class.c **** //#define debugging 
  26:.\I2C_Class.c **** 
  27:.\I2C_Class.c **** // Private data members
  28:.\I2C_Class.c **** static uint8 irrigationStatus = 0b11000000;
  29:.\I2C_Class.c **** static int size = 1;
  30:.\I2C_Class.c **** 
  31:.\I2C_Class.c **** // Private prototypes
  32:.\I2C_Class.c **** 
  33:.\I2C_Class.c **** void initI2C(void){
  36              		.loc 1 33 0
  37              		.cfi_startproc
  38 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  39              		.cfi_def_cfa_offset 20
  40              		.cfi_offset 4, -20
  41              		.cfi_offset 5, -16
  42              		.cfi_offset 6, -12
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 95B0     		sub	sp, sp, #84
  46              		.cfi_def_cfa_offset 104
  47 0004 00AF     		add	r7, sp, #0
  48              		.cfi_def_cfa_register 7
  49 0006 6B46     		mov	r3, sp
  50 0008 1E1C     		mov	r6, r3
  34:.\I2C_Class.c ****     I2C_Start();                    // Starts I2C component
  51              		.loc 1 34 0
  52 000a FFF7FEFF 		bl	I2C_Start
  35:.\I2C_Class.c ****     I2C_I2CMasterClearStatus();     // Clear status flags
  53              		.loc 1 35 0
  54 000e FFF7FEFF 		bl	I2C_I2CMasterClearStatus
  36:.\I2C_Class.c ****     CyGlobalIntEnable;
  55              		.loc 1 36 0
  56              	@ 36 ".\I2C_Class.c" 1
  57 0012 62B6     		CPSIE   i
  58              	@ 0 "" 2
  37:.\I2C_Class.c ****     
  38:.\I2C_Class.c ****     // Light sensor init.
  39:.\I2C_Class.c ****     /*sensor is set up to internal integration timing, light count data in signed and 2^(8) clock c
  40:.\I2C_Class.c ****     uint8 lightCommand[size], lightControl[size];
  59              		.loc 1 40 0
  60              		.code	16
  61 0014 3C4B     		ldr	r3, .L3
  62 0016 1A68     		ldr	r2, [r3]
  63 0018 531E     		sub	r3, r2, #1
  64 001a FB64     		str	r3, [r7, #76]
  65 001c 131C     		mov	r3, r2
  66 001e 1C1C     		mov	r4, r3
  67 0020 0023     		mov	r3, #0
  68 0022 1D1C     		mov	r5, r3
  69 0024 630F     		lsr	r3, r4, #29
  70 0026 E900     		lsl	r1, r5, #3
  71 0028 7963     		str	r1, [r7, #52]
  72 002a 796B     		ldr	r1, [r7, #52]
  73 002c 1943     		orr	r1, r3
  74 002e 7963     		str	r1, [r7, #52]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 3


  75 0030 E300     		lsl	r3, r4, #3
  76 0032 131C     		mov	r3, r2
  77 0034 BB62     		str	r3, [r7, #40]
  78 0036 0023     		mov	r3, #0
  79 0038 FB62     		str	r3, [r7, #44]
  80 003a B96A     		ldr	r1, [r7, #40]
  81 003c 4B0F     		lsr	r3, r1, #29
  82 003e F96A     		ldr	r1, [r7, #44]
  83 0040 C900     		lsl	r1, r1, #3
  84 0042 7962     		str	r1, [r7, #36]
  85 0044 796A     		ldr	r1, [r7, #36]
  86 0046 1943     		orr	r1, r3
  87 0048 7962     		str	r1, [r7, #36]
  88 004a BB6A     		ldr	r3, [r7, #40]
  89 004c DB00     		lsl	r3, r3, #3
  90 004e 131C     		mov	r3, r2
  91 0050 0733     		add	r3, r3, #7
  92 0052 DB08     		lsr	r3, r3, #3
  93 0054 DB00     		lsl	r3, r3, #3
  94 0056 6946     		mov	r1, sp
  95 0058 C91A     		sub	r1, r1, r3
  96 005a 8D46     		mov	sp, r1
  97 005c 6B46     		mov	r3, sp
  98 005e 0033     		add	r3, r3, #0
  99 0060 BB64     		str	r3, [r7, #72]
 100 0062 294B     		ldr	r3, .L3
 101 0064 1B68     		ldr	r3, [r3]
 102 0066 5A1E     		sub	r2, r3, #1
 103 0068 7A64     		str	r2, [r7, #68]
 104 006a 1A1C     		mov	r2, r3
 105 006c BA61     		str	r2, [r7, #24]
 106 006e 0022     		mov	r2, #0
 107 0070 FA61     		str	r2, [r7, #28]
 108 0072 B969     		ldr	r1, [r7, #24]
 109 0074 4A0F     		lsr	r2, r1, #29
 110 0076 F969     		ldr	r1, [r7, #28]
 111 0078 C900     		lsl	r1, r1, #3
 112 007a 7961     		str	r1, [r7, #20]
 113 007c 7969     		ldr	r1, [r7, #20]
 114 007e 1143     		orr	r1, r2
 115 0080 7961     		str	r1, [r7, #20]
 116 0082 BA69     		ldr	r2, [r7, #24]
 117 0084 D200     		lsl	r2, r2, #3
 118 0086 1A1C     		mov	r2, r3
 119 0088 BA60     		str	r2, [r7, #8]
 120 008a 0022     		mov	r2, #0
 121 008c FA60     		str	r2, [r7, #12]
 122 008e B968     		ldr	r1, [r7, #8]
 123 0090 4A0F     		lsr	r2, r1, #29
 124 0092 F968     		ldr	r1, [r7, #12]
 125 0094 C900     		lsl	r1, r1, #3
 126 0096 7960     		str	r1, [r7, #4]
 127 0098 7968     		ldr	r1, [r7, #4]
 128 009a 1143     		orr	r1, r2
 129 009c 7960     		str	r1, [r7, #4]
 130 009e BA68     		ldr	r2, [r7, #8]
 131 00a0 D200     		lsl	r2, r2, #3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 4


 132 00a2 0733     		add	r3, r3, #7
 133 00a4 DB08     		lsr	r3, r3, #3
 134 00a6 DB00     		lsl	r3, r3, #3
 135 00a8 6946     		mov	r1, sp
 136 00aa C91A     		sub	r1, r1, r3
 137 00ac 8D46     		mov	sp, r1
 138 00ae 6B46     		mov	r3, sp
 139 00b0 0033     		add	r3, r3, #0
 140 00b2 3B64     		str	r3, [r7, #64]
  41:.\I2C_Class.c ****     lightCommand[0] = 0b10001010;       //ADC-normal, Normal operation, Internal timing, signed out
 141              		.loc 1 41 0
 142 00b4 BB6C     		ldr	r3, [r7, #72]
 143 00b6 8A22     		mov	r2, #138
 144 00b8 1A70     		strb	r2, [r3]
  42:.\I2C_Class.c ****     lightControl[0] = 0b00001100;       // Lux-range = 128000. Calculation: ((range(k)?*(100k/100k)
 145              		.loc 1 42 0
 146 00ba 3B6C     		ldr	r3, [r7, #64]
 147 00bc 0C22     		mov	r2, #12
 148 00be 1A70     		strb	r2, [r3]
  43:.\I2C_Class.c **** 	uint8 result;
  44:.\I2C_Class.c ****     // lux range is set to 128.000 lux if REXT is set up to 50K resistor.
  45:.\I2C_Class.c ****     //uint8 lightControl = 0b00001100;
  46:.\I2C_Class.c ****     
  47:.\I2C_Class.c ****     result = I2C_I2CMasterWriteBuf(LIGHT_SENSOR_COMMAND_ADDRESS, lightCommand, size, I2C_I2C_MODE_C
 149              		.loc 1 47 0
 150 00c0 BA6C     		ldr	r2, [r7, #72]
 151 00c2 114B     		ldr	r3, .L3
 152 00c4 1B68     		ldr	r3, [r3]
 153 00c6 0020     		mov	r0, #0
 154 00c8 111C     		mov	r1, r2
 155 00ca 1A1C     		mov	r2, r3
 156 00cc 0023     		mov	r3, #0
 157 00ce FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 158 00d2 021C     		mov	r2, r0
 159 00d4 3B1C     		mov	r3, r7
 160 00d6 3F33     		add	r3, r3, #63
 161 00d8 1A70     		strb	r2, [r3]
  48:.\I2C_Class.c ****     
  49:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 162              		.loc 1 49 0
 163 00da 3B1C     		mov	r3, r7
 164 00dc 3F33     		add	r3, r3, #63
 165 00de 1B78     		ldrb	r3, [r3]
 166 00e0 002B     		cmp	r3, #0
 167 00e2 0CD1     		bne	.L2
  50:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(LIGHT_SENSOR_CONTROL_ADDRESS, lightControl, size, I2C_I2C_MO
 168              		.loc 1 50 0
 169 00e4 3A6C     		ldr	r2, [r7, #64]
 170 00e6 084B     		ldr	r3, .L3
 171 00e8 1B68     		ldr	r3, [r3]
 172 00ea 0120     		mov	r0, #1
 173 00ec 111C     		mov	r1, r2
 174 00ee 1A1C     		mov	r2, r3
 175 00f0 0023     		mov	r3, #0
 176 00f2 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 177 00f6 021C     		mov	r2, r0
 178 00f8 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 5


 179 00fa 3F33     		add	r3, r3, #63
 180 00fc 1A70     		strb	r2, [r3]
 181              	.L2:
 182 00fe B546     		mov	sp, r6
  51:.\I2C_Class.c ****     }
  52:.\I2C_Class.c **** }
 183              		.loc 1 52 0
 184 0100 BD46     		mov	sp, r7
 185 0102 15B0     		add	sp, sp, #84
 186              		@ sp needed
 187 0104 F0BD     		pop	{r4, r5, r6, r7, pc}
 188              	.L4:
 189 0106 C046     		.align	2
 190              	.L3:
 191 0108 04000000 		.word	size
 192              		.cfi_endproc
 193              	.LFE33:
 194              		.size	initI2C, .-initI2C
 195              		.section	.text.adjustWindow,"ax",%progbits
 196              		.align	2
 197              		.global	adjustWindow
 198              		.code	16
 199              		.thumb_func
 200              		.type	adjustWindow, %function
 201              	adjustWindow:
 202              	.LFB34:
  53:.\I2C_Class.c **** 
  54:.\I2C_Class.c **** int8 adjustWindow(uint8 pos){
 203              		.loc 1 54 0
 204              		.cfi_startproc
 205 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 206              		.cfi_def_cfa_offset 20
 207              		.cfi_offset 4, -20
 208              		.cfi_offset 5, -16
 209              		.cfi_offset 6, -12
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 97B0     		sub	sp, sp, #92
 213              		.cfi_def_cfa_offset 112
 214 0004 00AF     		add	r7, sp, #0
 215              		.cfi_def_cfa_register 7
 216 0006 031C     		mov	r3, r0
 217 0008 3A1C     		mov	r2, r7
 218 000a 3F32     		add	r2, r2, #63
 219 000c 1370     		strb	r3, [r2]
 220 000e 6B46     		mov	r3, sp
 221 0010 1E1C     		mov	r6, r3
  55:.\I2C_Class.c ****     uint8 openWindow[size], closeWindow[size];
 222              		.loc 1 55 0
 223 0012 544B     		ldr	r3, .L12
 224 0014 1A68     		ldr	r2, [r3]
 225 0016 531E     		sub	r3, r2, #1
 226 0018 3B65     		str	r3, [r7, #80]
 227 001a 131C     		mov	r3, r2
 228 001c 1C1C     		mov	r4, r3
 229 001e 0023     		mov	r3, #0
 230 0020 1D1C     		mov	r5, r3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 6


 231 0022 630F     		lsr	r3, r4, #29
 232 0024 E900     		lsl	r1, r5, #3
 233 0026 7963     		str	r1, [r7, #52]
 234 0028 796B     		ldr	r1, [r7, #52]
 235 002a 1943     		orr	r1, r3
 236 002c 7963     		str	r1, [r7, #52]
 237 002e E300     		lsl	r3, r4, #3
 238 0030 131C     		mov	r3, r2
 239 0032 BB62     		str	r3, [r7, #40]
 240 0034 0023     		mov	r3, #0
 241 0036 FB62     		str	r3, [r7, #44]
 242 0038 B96A     		ldr	r1, [r7, #40]
 243 003a 4B0F     		lsr	r3, r1, #29
 244 003c F96A     		ldr	r1, [r7, #44]
 245 003e C900     		lsl	r1, r1, #3
 246 0040 7962     		str	r1, [r7, #36]
 247 0042 796A     		ldr	r1, [r7, #36]
 248 0044 1943     		orr	r1, r3
 249 0046 7962     		str	r1, [r7, #36]
 250 0048 BB6A     		ldr	r3, [r7, #40]
 251 004a DB00     		lsl	r3, r3, #3
 252 004c 131C     		mov	r3, r2
 253 004e 0733     		add	r3, r3, #7
 254 0050 DB08     		lsr	r3, r3, #3
 255 0052 DB00     		lsl	r3, r3, #3
 256 0054 6946     		mov	r1, sp
 257 0056 C91A     		sub	r1, r1, r3
 258 0058 8D46     		mov	sp, r1
 259 005a 6B46     		mov	r3, sp
 260 005c 0033     		add	r3, r3, #0
 261 005e FB64     		str	r3, [r7, #76]
 262 0060 404B     		ldr	r3, .L12
 263 0062 1B68     		ldr	r3, [r3]
 264 0064 5A1E     		sub	r2, r3, #1
 265 0066 BA64     		str	r2, [r7, #72]
 266 0068 1A1C     		mov	r2, r3
 267 006a BA61     		str	r2, [r7, #24]
 268 006c 0022     		mov	r2, #0
 269 006e FA61     		str	r2, [r7, #28]
 270 0070 B969     		ldr	r1, [r7, #24]
 271 0072 4A0F     		lsr	r2, r1, #29
 272 0074 F969     		ldr	r1, [r7, #28]
 273 0076 C900     		lsl	r1, r1, #3
 274 0078 7961     		str	r1, [r7, #20]
 275 007a 7969     		ldr	r1, [r7, #20]
 276 007c 1143     		orr	r1, r2
 277 007e 7961     		str	r1, [r7, #20]
 278 0080 BA69     		ldr	r2, [r7, #24]
 279 0082 D200     		lsl	r2, r2, #3
 280 0084 1A1C     		mov	r2, r3
 281 0086 BA60     		str	r2, [r7, #8]
 282 0088 0022     		mov	r2, #0
 283 008a FA60     		str	r2, [r7, #12]
 284 008c B968     		ldr	r1, [r7, #8]
 285 008e 4A0F     		lsr	r2, r1, #29
 286 0090 F968     		ldr	r1, [r7, #12]
 287 0092 C900     		lsl	r1, r1, #3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 7


 288 0094 7960     		str	r1, [r7, #4]
 289 0096 7968     		ldr	r1, [r7, #4]
 290 0098 1143     		orr	r1, r2
 291 009a 7960     		str	r1, [r7, #4]
 292 009c BA68     		ldr	r2, [r7, #8]
 293 009e D200     		lsl	r2, r2, #3
 294 00a0 0733     		add	r3, r3, #7
 295 00a2 DB08     		lsr	r3, r3, #3
 296 00a4 DB00     		lsl	r3, r3, #3
 297 00a6 6946     		mov	r1, sp
 298 00a8 C91A     		sub	r1, r1, r3
 299 00aa 8D46     		mov	sp, r1
 300 00ac 6B46     		mov	r3, sp
 301 00ae 0033     		add	r3, r3, #0
 302 00b0 7B64     		str	r3, [r7, #68]
  56:.\I2C_Class.c ****     openWindow[0] = 0xF;
 303              		.loc 1 56 0
 304 00b2 FB6C     		ldr	r3, [r7, #76]
 305 00b4 0F22     		mov	r2, #15
 306 00b6 1A70     		strb	r2, [r3]
  57:.\I2C_Class.c ****     closeWindow[0] = 0x0;
 307              		.loc 1 57 0
 308 00b8 7B6C     		ldr	r3, [r7, #68]
 309 00ba 0022     		mov	r2, #0
 310 00bc 1A70     		strb	r2, [r3]
  58:.\I2C_Class.c ****     uint8 result = 0;
 311              		.loc 1 58 0
 312 00be 3B1C     		mov	r3, r7
 313 00c0 5733     		add	r3, r3, #87
 314 00c2 0022     		mov	r2, #0
 315 00c4 1A70     		strb	r2, [r3]
  59:.\I2C_Class.c ****     uint8 tempWindow = 0;
 316              		.loc 1 59 0
 317 00c6 3B1C     		mov	r3, r7
 318 00c8 4333     		add	r3, r3, #67
 319 00ca 0022     		mov	r2, #0
 320 00cc 1A70     		strb	r2, [r3]
  60:.\I2C_Class.c ****         
  61:.\I2C_Class.c ****     if(pos == 0xFF){
 321              		.loc 1 61 0
 322 00ce 3B1C     		mov	r3, r7
 323 00d0 3F33     		add	r3, r3, #63
 324 00d2 1B78     		ldrb	r3, [r3]
 325 00d4 FF2B     		cmp	r3, #255
 326 00d6 0DD1     		bne	.L6
  62:.\I2C_Class.c ****         // Open window     -                write function  (adress,      dataToSend, NumberOfBytes
  63:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,openWindow,size,I2C_I2C_MODE_COMPLETE_XFER);
 327              		.loc 1 63 0
 328 00d8 FA6C     		ldr	r2, [r7, #76]
 329 00da 224B     		ldr	r3, .L12
 330 00dc 1B68     		ldr	r3, [r3]
 331 00de 4220     		mov	r0, #66
 332 00e0 111C     		mov	r1, r2
 333 00e2 1A1C     		mov	r2, r3
 334 00e4 0023     		mov	r3, #0
 335 00e6 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 336 00ea 021C     		mov	r2, r0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 8


 337 00ec 3B1C     		mov	r3, r7
 338 00ee 5733     		add	r3, r3, #87
 339 00f0 1A70     		strb	r2, [r3]
 340 00f2 11E0     		b	.L7
 341              	.L6:
  64:.\I2C_Class.c ****     }
  65:.\I2C_Class.c ****     else if(pos == 0x0){
 342              		.loc 1 65 0
 343 00f4 3B1C     		mov	r3, r7
 344 00f6 3F33     		add	r3, r3, #63
 345 00f8 1B78     		ldrb	r3, [r3]
 346 00fa 002B     		cmp	r3, #0
 347 00fc 0CD1     		bne	.L7
  66:.\I2C_Class.c ****         // Close window
  67:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,closeWindow,size,I2C_I2C_MODE_COMPLETE_XFER)
 348              		.loc 1 67 0
 349 00fe 7A6C     		ldr	r2, [r7, #68]
 350 0100 184B     		ldr	r3, .L12
 351 0102 1B68     		ldr	r3, [r3]
 352 0104 4220     		mov	r0, #66
 353 0106 111C     		mov	r1, r2
 354 0108 1A1C     		mov	r2, r3
 355 010a 0023     		mov	r3, #0
 356 010c FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 357 0110 021C     		mov	r2, r0
 358 0112 3B1C     		mov	r3, r7
 359 0114 5733     		add	r3, r3, #87
 360 0116 1A70     		strb	r2, [r3]
 361              	.L7:
  68:.\I2C_Class.c ****     }
  69:.\I2C_Class.c ****     
  70:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(&tempWindow, NULL, NULL, NULL))){
 362              		.loc 1 70 0
 363 0118 3B1C     		mov	r3, r7
 364 011a 5733     		add	r3, r3, #87
 365 011c 1B78     		ldrb	r3, [r3]
 366 011e 002B     		cmp	r3, #0
 367 0120 18D1     		bne	.L8
 368              		.loc 1 70 0 is_stmt 0 discriminator 1
 369 0122 3B1C     		mov	r3, r7
 370 0124 4333     		add	r3, r3, #67
 371 0126 181C     		mov	r0, r3
 372 0128 0021     		mov	r1, #0
 373 012a 0022     		mov	r2, #0
 374 012c 0023     		mov	r3, #0
 375 012e FFF7FEFF 		bl	getActuatorStatus
 376 0132 031C     		mov	r3, r0
 377 0134 002B     		cmp	r3, #0
 378 0136 0DD1     		bne	.L8
  71:.\I2C_Class.c ****         if (tempWindow == pos >> 4 ){  //hacky solution when dealing with fully open/closed window
 379              		.loc 1 71 0 is_stmt 1
 380 0138 3B1C     		mov	r3, r7
 381 013a 3F33     		add	r3, r3, #63
 382 013c 1B78     		ldrb	r3, [r3]
 383 013e 1B09     		lsr	r3, r3, #4
 384 0140 DAB2     		uxtb	r2, r3
 385 0142 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 9


 386 0144 4333     		add	r3, r3, #67
 387 0146 1B78     		ldrb	r3, [r3]
 388 0148 9A42     		cmp	r2, r3
 389 014a 01D1     		bne	.L9
  72:.\I2C_Class.c ****             return 0;	
 390              		.loc 1 72 0
 391 014c 0023     		mov	r3, #0
 392 014e 02E0     		b	.L10
 393              	.L9:
  73:.\I2C_Class.c ****         }
  74:.\I2C_Class.c ****         else {
  75:.\I2C_Class.c ****             return -1;
 394              		.loc 1 75 0
 395 0150 FF23     		mov	r3, #255
 396 0152 00E0     		b	.L10
 397              	.L8:
  76:.\I2C_Class.c ****         }
  77:.\I2C_Class.c ****     }
  78:.\I2C_Class.c ****     else {
  79:.\I2C_Class.c ****         return -1;
 398              		.loc 1 79 0
 399 0154 FF23     		mov	r3, #255
 400              	.L10:
 401 0156 B546     		mov	sp, r6
 402 0158 5BB2     		sxtb	r3, r3
  80:.\I2C_Class.c ****     }
  81:.\I2C_Class.c **** }
 403              		.loc 1 81 0
 404 015a 181C     		mov	r0, r3
 405 015c BD46     		mov	sp, r7
 406 015e 17B0     		add	sp, sp, #92
 407              		@ sp needed
 408 0160 F0BD     		pop	{r4, r5, r6, r7, pc}
 409              	.L13:
 410 0162 C046     		.align	2
 411              	.L12:
 412 0164 04000000 		.word	size
 413              		.cfi_endproc
 414              	.LFE34:
 415              		.size	adjustWindow, .-adjustWindow
 416              		.section	.text.adjustHeat,"ax",%progbits
 417              		.align	2
 418              		.global	adjustHeat
 419              		.code	16
 420              		.thumb_func
 421              		.type	adjustHeat, %function
 422              	adjustHeat:
 423              	.LFB35:
  82:.\I2C_Class.c **** 
  83:.\I2C_Class.c **** int8 adjustHeat(uint8 heat){
 424              		.loc 1 83 0
 425              		.cfi_startproc
 426 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 427              		.cfi_def_cfa_offset 20
 428              		.cfi_offset 4, -20
 429              		.cfi_offset 5, -16
 430              		.cfi_offset 6, -12
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 10


 431              		.cfi_offset 7, -8
 432              		.cfi_offset 14, -4
 433 0002 97B0     		sub	sp, sp, #92
 434              		.cfi_def_cfa_offset 112
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 437 0006 031C     		mov	r3, r0
 438 0008 3A1C     		mov	r2, r7
 439 000a 3F32     		add	r2, r2, #63
 440 000c 1370     		strb	r3, [r2]
 441 000e 6B46     		mov	r3, sp
 442 0010 1E1C     		mov	r6, r3
  84:.\I2C_Class.c ****     uint8 turnHeatOn[size], turnOffHeat[size];
 443              		.loc 1 84 0
 444 0012 544B     		ldr	r3, .L21
 445 0014 1A68     		ldr	r2, [r3]
 446 0016 531E     		sub	r3, r2, #1
 447 0018 3B65     		str	r3, [r7, #80]
 448 001a 131C     		mov	r3, r2
 449 001c 1C1C     		mov	r4, r3
 450 001e 0023     		mov	r3, #0
 451 0020 1D1C     		mov	r5, r3
 452 0022 630F     		lsr	r3, r4, #29
 453 0024 E900     		lsl	r1, r5, #3
 454 0026 7963     		str	r1, [r7, #52]
 455 0028 796B     		ldr	r1, [r7, #52]
 456 002a 1943     		orr	r1, r3
 457 002c 7963     		str	r1, [r7, #52]
 458 002e E300     		lsl	r3, r4, #3
 459 0030 131C     		mov	r3, r2
 460 0032 BB62     		str	r3, [r7, #40]
 461 0034 0023     		mov	r3, #0
 462 0036 FB62     		str	r3, [r7, #44]
 463 0038 B96A     		ldr	r1, [r7, #40]
 464 003a 4B0F     		lsr	r3, r1, #29
 465 003c F96A     		ldr	r1, [r7, #44]
 466 003e C900     		lsl	r1, r1, #3
 467 0040 7962     		str	r1, [r7, #36]
 468 0042 796A     		ldr	r1, [r7, #36]
 469 0044 1943     		orr	r1, r3
 470 0046 7962     		str	r1, [r7, #36]
 471 0048 BB6A     		ldr	r3, [r7, #40]
 472 004a DB00     		lsl	r3, r3, #3
 473 004c 131C     		mov	r3, r2
 474 004e 0733     		add	r3, r3, #7
 475 0050 DB08     		lsr	r3, r3, #3
 476 0052 DB00     		lsl	r3, r3, #3
 477 0054 6946     		mov	r1, sp
 478 0056 C91A     		sub	r1, r1, r3
 479 0058 8D46     		mov	sp, r1
 480 005a 6B46     		mov	r3, sp
 481 005c 0033     		add	r3, r3, #0
 482 005e FB64     		str	r3, [r7, #76]
 483 0060 404B     		ldr	r3, .L21
 484 0062 1B68     		ldr	r3, [r3]
 485 0064 5A1E     		sub	r2, r3, #1
 486 0066 BA64     		str	r2, [r7, #72]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 11


 487 0068 1A1C     		mov	r2, r3
 488 006a BA61     		str	r2, [r7, #24]
 489 006c 0022     		mov	r2, #0
 490 006e FA61     		str	r2, [r7, #28]
 491 0070 B969     		ldr	r1, [r7, #24]
 492 0072 4A0F     		lsr	r2, r1, #29
 493 0074 F969     		ldr	r1, [r7, #28]
 494 0076 C900     		lsl	r1, r1, #3
 495 0078 7961     		str	r1, [r7, #20]
 496 007a 7969     		ldr	r1, [r7, #20]
 497 007c 1143     		orr	r1, r2
 498 007e 7961     		str	r1, [r7, #20]
 499 0080 BA69     		ldr	r2, [r7, #24]
 500 0082 D200     		lsl	r2, r2, #3
 501 0084 1A1C     		mov	r2, r3
 502 0086 BA60     		str	r2, [r7, #8]
 503 0088 0022     		mov	r2, #0
 504 008a FA60     		str	r2, [r7, #12]
 505 008c B968     		ldr	r1, [r7, #8]
 506 008e 4A0F     		lsr	r2, r1, #29
 507 0090 F968     		ldr	r1, [r7, #12]
 508 0092 C900     		lsl	r1, r1, #3
 509 0094 7960     		str	r1, [r7, #4]
 510 0096 7968     		ldr	r1, [r7, #4]
 511 0098 1143     		orr	r1, r2
 512 009a 7960     		str	r1, [r7, #4]
 513 009c BA68     		ldr	r2, [r7, #8]
 514 009e D200     		lsl	r2, r2, #3
 515 00a0 0733     		add	r3, r3, #7
 516 00a2 DB08     		lsr	r3, r3, #3
 517 00a4 DB00     		lsl	r3, r3, #3
 518 00a6 6946     		mov	r1, sp
 519 00a8 C91A     		sub	r1, r1, r3
 520 00aa 8D46     		mov	sp, r1
 521 00ac 6B46     		mov	r3, sp
 522 00ae 0033     		add	r3, r3, #0
 523 00b0 7B64     		str	r3, [r7, #68]
  85:.\I2C_Class.c ****     turnHeatOn[0] = 0b01000111;
 524              		.loc 1 85 0
 525 00b2 FB6C     		ldr	r3, [r7, #76]
 526 00b4 4722     		mov	r2, #71
 527 00b6 1A70     		strb	r2, [r3]
  86:.\I2C_Class.c ****     turnOffHeat[0] = 0b01000000;
 528              		.loc 1 86 0
 529 00b8 7B6C     		ldr	r3, [r7, #68]
 530 00ba 4022     		mov	r2, #64
 531 00bc 1A70     		strb	r2, [r3]
  87:.\I2C_Class.c ****     uint8 result = 0;
 532              		.loc 1 87 0
 533 00be 3B1C     		mov	r3, r7
 534 00c0 5733     		add	r3, r3, #87
 535 00c2 0022     		mov	r2, #0
 536 00c4 1A70     		strb	r2, [r3]
  88:.\I2C_Class.c ****     uint8 temp = 0xFF;
 537              		.loc 1 88 0
 538 00c6 3B1C     		mov	r3, r7
 539 00c8 4333     		add	r3, r3, #67
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 12


 540 00ca FF22     		mov	r2, #255
 541 00cc 1A70     		strb	r2, [r3]
  89:.\I2C_Class.c ****     
  90:.\I2C_Class.c ****     I2C_I2CMasterClearStatus();
 542              		.loc 1 90 0
 543 00ce FFF7FEFF 		bl	I2C_I2CMasterClearStatus
  91:.\I2C_Class.c ****     
  92:.\I2C_Class.c ****     if(heat == 0b111){
 544              		.loc 1 92 0
 545 00d2 3B1C     		mov	r3, r7
 546 00d4 3F33     		add	r3, r3, #63
 547 00d6 1B78     		ldrb	r3, [r3]
 548 00d8 072B     		cmp	r3, #7
 549 00da 0DD1     		bne	.L15
  93:.\I2C_Class.c ****         // Turn on heat
  94:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnHeatOn,size,I2C_I2C_MODE_COMPLETE_XFER);
 550              		.loc 1 94 0
 551 00dc FA6C     		ldr	r2, [r7, #76]
 552 00de 214B     		ldr	r3, .L21
 553 00e0 1B68     		ldr	r3, [r3]
 554 00e2 4220     		mov	r0, #66
 555 00e4 111C     		mov	r1, r2
 556 00e6 1A1C     		mov	r2, r3
 557 00e8 0023     		mov	r3, #0
 558 00ea FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 559 00ee 021C     		mov	r2, r0
 560 00f0 3B1C     		mov	r3, r7
 561 00f2 5733     		add	r3, r3, #87
 562 00f4 1A70     		strb	r2, [r3]
 563 00f6 11E0     		b	.L16
 564              	.L15:
  95:.\I2C_Class.c ****     }
  96:.\I2C_Class.c ****     else if(heat == 0b0){
 565              		.loc 1 96 0
 566 00f8 3B1C     		mov	r3, r7
 567 00fa 3F33     		add	r3, r3, #63
 568 00fc 1B78     		ldrb	r3, [r3]
 569 00fe 002B     		cmp	r3, #0
 570 0100 0CD1     		bne	.L16
  97:.\I2C_Class.c ****         // Turn off heat
  98:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOffHeat,size,I2C_I2C_MODE_COMPLETE_XFER)
 571              		.loc 1 98 0
 572 0102 7A6C     		ldr	r2, [r7, #68]
 573 0104 174B     		ldr	r3, .L21
 574 0106 1B68     		ldr	r3, [r3]
 575 0108 4220     		mov	r0, #66
 576 010a 111C     		mov	r1, r2
 577 010c 1A1C     		mov	r2, r3
 578 010e 0023     		mov	r3, #0
 579 0110 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 580 0114 021C     		mov	r2, r0
 581 0116 3B1C     		mov	r3, r7
 582 0118 5733     		add	r3, r3, #87
 583 011a 1A70     		strb	r2, [r3]
 584              	.L16:
  99:.\I2C_Class.c ****     }
 100:.\I2C_Class.c **** 
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 13


 101:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(NULL, &temp, NULL, NULL))){
 585              		.loc 1 101 0
 586 011c 3B1C     		mov	r3, r7
 587 011e 5733     		add	r3, r3, #87
 588 0120 1B78     		ldrb	r3, [r3]
 589 0122 002B     		cmp	r3, #0
 590 0124 16D1     		bne	.L17
 591              		.loc 1 101 0 is_stmt 0 discriminator 1
 592 0126 3B1C     		mov	r3, r7
 593 0128 4333     		add	r3, r3, #67
 594 012a 0020     		mov	r0, #0
 595 012c 191C     		mov	r1, r3
 596 012e 0022     		mov	r2, #0
 597 0130 0023     		mov	r3, #0
 598 0132 FFF7FEFF 		bl	getActuatorStatus
 599 0136 031C     		mov	r3, r0
 600 0138 002B     		cmp	r3, #0
 601 013a 0BD1     		bne	.L17
 102:.\I2C_Class.c ****         if (temp == heat){
 602              		.loc 1 102 0 is_stmt 1
 603 013c 3B1C     		mov	r3, r7
 604 013e 4333     		add	r3, r3, #67
 605 0140 1B78     		ldrb	r3, [r3]
 606 0142 3A1C     		mov	r2, r7
 607 0144 3F32     		add	r2, r2, #63
 608 0146 1278     		ldrb	r2, [r2]
 609 0148 9A42     		cmp	r2, r3
 610 014a 01D1     		bne	.L18
 103:.\I2C_Class.c ****             return 0;
 611              		.loc 1 103 0
 612 014c 0023     		mov	r3, #0
 613 014e 02E0     		b	.L19
 614              	.L18:
 104:.\I2C_Class.c ****         }
 105:.\I2C_Class.c ****         else {
 106:.\I2C_Class.c ****             return -1;   
 615              		.loc 1 106 0
 616 0150 FF23     		mov	r3, #255
 617 0152 00E0     		b	.L19
 618              	.L17:
 107:.\I2C_Class.c ****         }
 108:.\I2C_Class.c ****     }
 109:.\I2C_Class.c ****     else {
 110:.\I2C_Class.c ****         return -1;
 619              		.loc 1 110 0
 620 0154 FF23     		mov	r3, #255
 621              	.L19:
 622 0156 B546     		mov	sp, r6
 623 0158 5BB2     		sxtb	r3, r3
 111:.\I2C_Class.c ****     }
 112:.\I2C_Class.c **** }
 624              		.loc 1 112 0
 625 015a 181C     		mov	r0, r3
 626 015c BD46     		mov	sp, r7
 627 015e 17B0     		add	sp, sp, #92
 628              		@ sp needed
 629 0160 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 14


 630              	.L22:
 631 0162 C046     		.align	2
 632              	.L21:
 633 0164 04000000 		.word	size
 634              		.cfi_endproc
 635              	.LFE35:
 636              		.size	adjustHeat, .-adjustHeat
 637              		.section	.text.adjustVentilation,"ax",%progbits
 638              		.align	2
 639              		.global	adjustVentilation
 640              		.code	16
 641              		.thumb_func
 642              		.type	adjustVentilation, %function
 643              	adjustVentilation:
 644              	.LFB36:
 113:.\I2C_Class.c **** 
 114:.\I2C_Class.c **** int8 adjustVentilation(uint8 speed){
 645              		.loc 1 114 0
 646              		.cfi_startproc
 647 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 648              		.cfi_def_cfa_offset 20
 649              		.cfi_offset 4, -20
 650              		.cfi_offset 5, -16
 651              		.cfi_offset 6, -12
 652              		.cfi_offset 7, -8
 653              		.cfi_offset 14, -4
 654 0002 97B0     		sub	sp, sp, #92
 655              		.cfi_def_cfa_offset 112
 656 0004 00AF     		add	r7, sp, #0
 657              		.cfi_def_cfa_register 7
 658 0006 031C     		mov	r3, r0
 659 0008 3A1C     		mov	r2, r7
 660 000a 3F32     		add	r2, r2, #63
 661 000c 1370     		strb	r3, [r2]
 662 000e 6B46     		mov	r3, sp
 663 0010 1E1C     		mov	r6, r3
 115:.\I2C_Class.c ****     uint8 turnOnVent[size], turnOffVent[size];
 664              		.loc 1 115 0
 665 0012 544B     		ldr	r3, .L30
 666 0014 1A68     		ldr	r2, [r3]
 667 0016 531E     		sub	r3, r2, #1
 668 0018 3B65     		str	r3, [r7, #80]
 669 001a 131C     		mov	r3, r2
 670 001c 1C1C     		mov	r4, r3
 671 001e 0023     		mov	r3, #0
 672 0020 1D1C     		mov	r5, r3
 673 0022 630F     		lsr	r3, r4, #29
 674 0024 E900     		lsl	r1, r5, #3
 675 0026 7963     		str	r1, [r7, #52]
 676 0028 796B     		ldr	r1, [r7, #52]
 677 002a 1943     		orr	r1, r3
 678 002c 7963     		str	r1, [r7, #52]
 679 002e E300     		lsl	r3, r4, #3
 680 0030 131C     		mov	r3, r2
 681 0032 BB62     		str	r3, [r7, #40]
 682 0034 0023     		mov	r3, #0
 683 0036 FB62     		str	r3, [r7, #44]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 15


 684 0038 B96A     		ldr	r1, [r7, #40]
 685 003a 4B0F     		lsr	r3, r1, #29
 686 003c F96A     		ldr	r1, [r7, #44]
 687 003e C900     		lsl	r1, r1, #3
 688 0040 7962     		str	r1, [r7, #36]
 689 0042 796A     		ldr	r1, [r7, #36]
 690 0044 1943     		orr	r1, r3
 691 0046 7962     		str	r1, [r7, #36]
 692 0048 BB6A     		ldr	r3, [r7, #40]
 693 004a DB00     		lsl	r3, r3, #3
 694 004c 131C     		mov	r3, r2
 695 004e 0733     		add	r3, r3, #7
 696 0050 DB08     		lsr	r3, r3, #3
 697 0052 DB00     		lsl	r3, r3, #3
 698 0054 6946     		mov	r1, sp
 699 0056 C91A     		sub	r1, r1, r3
 700 0058 8D46     		mov	sp, r1
 701 005a 6B46     		mov	r3, sp
 702 005c 0033     		add	r3, r3, #0
 703 005e FB64     		str	r3, [r7, #76]
 704 0060 404B     		ldr	r3, .L30
 705 0062 1B68     		ldr	r3, [r3]
 706 0064 5A1E     		sub	r2, r3, #1
 707 0066 BA64     		str	r2, [r7, #72]
 708 0068 1A1C     		mov	r2, r3
 709 006a BA61     		str	r2, [r7, #24]
 710 006c 0022     		mov	r2, #0
 711 006e FA61     		str	r2, [r7, #28]
 712 0070 B969     		ldr	r1, [r7, #24]
 713 0072 4A0F     		lsr	r2, r1, #29
 714 0074 F969     		ldr	r1, [r7, #28]
 715 0076 C900     		lsl	r1, r1, #3
 716 0078 7961     		str	r1, [r7, #20]
 717 007a 7969     		ldr	r1, [r7, #20]
 718 007c 1143     		orr	r1, r2
 719 007e 7961     		str	r1, [r7, #20]
 720 0080 BA69     		ldr	r2, [r7, #24]
 721 0082 D200     		lsl	r2, r2, #3
 722 0084 1A1C     		mov	r2, r3
 723 0086 BA60     		str	r2, [r7, #8]
 724 0088 0022     		mov	r2, #0
 725 008a FA60     		str	r2, [r7, #12]
 726 008c B968     		ldr	r1, [r7, #8]
 727 008e 4A0F     		lsr	r2, r1, #29
 728 0090 F968     		ldr	r1, [r7, #12]
 729 0092 C900     		lsl	r1, r1, #3
 730 0094 7960     		str	r1, [r7, #4]
 731 0096 7968     		ldr	r1, [r7, #4]
 732 0098 1143     		orr	r1, r2
 733 009a 7960     		str	r1, [r7, #4]
 734 009c BA68     		ldr	r2, [r7, #8]
 735 009e D200     		lsl	r2, r2, #3
 736 00a0 0733     		add	r3, r3, #7
 737 00a2 DB08     		lsr	r3, r3, #3
 738 00a4 DB00     		lsl	r3, r3, #3
 739 00a6 6946     		mov	r1, sp
 740 00a8 C91A     		sub	r1, r1, r3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 16


 741 00aa 8D46     		mov	sp, r1
 742 00ac 6B46     		mov	r3, sp
 743 00ae 0033     		add	r3, r3, #0
 744 00b0 7B64     		str	r3, [r7, #68]
 116:.\I2C_Class.c ****     turnOnVent[0] = 0b10000111;
 745              		.loc 1 116 0
 746 00b2 FB6C     		ldr	r3, [r7, #76]
 747 00b4 8722     		mov	r2, #135
 748 00b6 1A70     		strb	r2, [r3]
 117:.\I2C_Class.c ****     turnOffVent[0] = 0b10000000;
 749              		.loc 1 117 0
 750 00b8 7B6C     		ldr	r3, [r7, #68]
 751 00ba 8022     		mov	r2, #128
 752 00bc 1A70     		strb	r2, [r3]
 118:.\I2C_Class.c ****     uint8 result = 0;
 753              		.loc 1 118 0
 754 00be 3B1C     		mov	r3, r7
 755 00c0 5733     		add	r3, r3, #87
 756 00c2 0022     		mov	r2, #0
 757 00c4 1A70     		strb	r2, [r3]
 119:.\I2C_Class.c ****     uint8 temp = 0xFF;
 758              		.loc 1 119 0
 759 00c6 3B1C     		mov	r3, r7
 760 00c8 4333     		add	r3, r3, #67
 761 00ca FF22     		mov	r2, #255
 762 00cc 1A70     		strb	r2, [r3]
 120:.\I2C_Class.c ****         
 121:.\I2C_Class.c ****     if(speed == 0xFF){
 763              		.loc 1 121 0
 764 00ce 3B1C     		mov	r3, r7
 765 00d0 3F33     		add	r3, r3, #63
 766 00d2 1B78     		ldrb	r3, [r3]
 767 00d4 FF2B     		cmp	r3, #255
 768 00d6 0DD1     		bne	.L24
 122:.\I2C_Class.c ****         // Turn vent on
 123:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOnVent,size,I2C_I2C_MODE_COMPLETE_XFER);
 769              		.loc 1 123 0
 770 00d8 FA6C     		ldr	r2, [r7, #76]
 771 00da 224B     		ldr	r3, .L30
 772 00dc 1B68     		ldr	r3, [r3]
 773 00de 4220     		mov	r0, #66
 774 00e0 111C     		mov	r1, r2
 775 00e2 1A1C     		mov	r2, r3
 776 00e4 0023     		mov	r3, #0
 777 00e6 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 778 00ea 021C     		mov	r2, r0
 779 00ec 3B1C     		mov	r3, r7
 780 00ee 5733     		add	r3, r3, #87
 781 00f0 1A70     		strb	r2, [r3]
 782 00f2 11E0     		b	.L25
 783              	.L24:
 124:.\I2C_Class.c ****     }
 125:.\I2C_Class.c ****     else if(speed == 0b0){
 784              		.loc 1 125 0
 785 00f4 3B1C     		mov	r3, r7
 786 00f6 3F33     		add	r3, r3, #63
 787 00f8 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 17


 788 00fa 002B     		cmp	r3, #0
 789 00fc 0CD1     		bne	.L25
 126:.\I2C_Class.c ****         // Turn vent off
 127:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOffVent,size,I2C_I2C_MODE_COMPLETE_XFER)
 790              		.loc 1 127 0
 791 00fe 7A6C     		ldr	r2, [r7, #68]
 792 0100 184B     		ldr	r3, .L30
 793 0102 1B68     		ldr	r3, [r3]
 794 0104 4220     		mov	r0, #66
 795 0106 111C     		mov	r1, r2
 796 0108 1A1C     		mov	r2, r3
 797 010a 0023     		mov	r3, #0
 798 010c FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 799 0110 021C     		mov	r2, r0
 800 0112 3B1C     		mov	r3, r7
 801 0114 5733     		add	r3, r3, #87
 802 0116 1A70     		strb	r2, [r3]
 803              	.L25:
 128:.\I2C_Class.c ****     }
 129:.\I2C_Class.c ****     
 130:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(NULL, NULL, &temp, NULL))){
 804              		.loc 1 130 0
 805 0118 3B1C     		mov	r3, r7
 806 011a 5733     		add	r3, r3, #87
 807 011c 1B78     		ldrb	r3, [r3]
 808 011e 002B     		cmp	r3, #0
 809 0120 18D1     		bne	.L26
 810              		.loc 1 130 0 is_stmt 0 discriminator 1
 811 0122 3B1C     		mov	r3, r7
 812 0124 4333     		add	r3, r3, #67
 813 0126 0020     		mov	r0, #0
 814 0128 0021     		mov	r1, #0
 815 012a 1A1C     		mov	r2, r3
 816 012c 0023     		mov	r3, #0
 817 012e FFF7FEFF 		bl	getActuatorStatus
 818 0132 031C     		mov	r3, r0
 819 0134 002B     		cmp	r3, #0
 820 0136 0DD1     		bne	.L26
 131:.\I2C_Class.c ****         if (temp == speed >> 5){ //Hacky solution when not dealing with more than 2 steps
 821              		.loc 1 131 0 is_stmt 1
 822 0138 3B1C     		mov	r3, r7
 823 013a 3F33     		add	r3, r3, #63
 824 013c 1B78     		ldrb	r3, [r3]
 825 013e 5B09     		lsr	r3, r3, #5
 826 0140 DAB2     		uxtb	r2, r3
 827 0142 3B1C     		mov	r3, r7
 828 0144 4333     		add	r3, r3, #67
 829 0146 1B78     		ldrb	r3, [r3]
 830 0148 9A42     		cmp	r2, r3
 831 014a 01D1     		bne	.L27
 132:.\I2C_Class.c ****             return 0;
 832              		.loc 1 132 0
 833 014c 0023     		mov	r3, #0
 834 014e 02E0     		b	.L28
 835              	.L27:
 133:.\I2C_Class.c ****             }
 134:.\I2C_Class.c ****         else {
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 18


 135:.\I2C_Class.c ****             return -1;       
 836              		.loc 1 135 0
 837 0150 FF23     		mov	r3, #255
 838 0152 00E0     		b	.L28
 839              	.L26:
 136:.\I2C_Class.c ****         }
 137:.\I2C_Class.c ****     }
 138:.\I2C_Class.c ****     else {
 139:.\I2C_Class.c ****         return -1;
 840              		.loc 1 139 0
 841 0154 FF23     		mov	r3, #255
 842              	.L28:
 843 0156 B546     		mov	sp, r6
 844 0158 5BB2     		sxtb	r3, r3
 140:.\I2C_Class.c ****     }
 141:.\I2C_Class.c **** }
 845              		.loc 1 141 0
 846 015a 181C     		mov	r0, r3
 847 015c BD46     		mov	sp, r7
 848 015e 17B0     		add	sp, sp, #92
 849              		@ sp needed
 850 0160 F0BD     		pop	{r4, r5, r6, r7, pc}
 851              	.L31:
 852 0162 C046     		.align	2
 853              	.L30:
 854 0164 04000000 		.word	size
 855              		.cfi_endproc
 856              	.LFE36:
 857              		.size	adjustVentilation, .-adjustVentilation
 858              		.section	.text.adjustIrrigation,"ax",%progbits
 859              		.align	2
 860              		.global	adjustIrrigation
 861              		.code	16
 862              		.thumb_func
 863              		.type	adjustIrrigation, %function
 864              	adjustIrrigation:
 865              	.LFB37:
 142:.\I2C_Class.c **** 
 143:.\I2C_Class.c **** int8 adjustIrrigation(uint8 index, uint8 onOff){
 866              		.loc 1 143 0
 867              		.cfi_startproc
 868 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 869              		.cfi_def_cfa_offset 20
 870              		.cfi_offset 4, -20
 871              		.cfi_offset 5, -16
 872              		.cfi_offset 6, -12
 873              		.cfi_offset 7, -8
 874              		.cfi_offset 14, -4
 875 0002 4746     		mov	r7, r8
 876 0004 80B4     		push	{r7}
 877              		.cfi_def_cfa_offset 24
 878              		.cfi_offset 8, -24
 879 0006 8AB0     		sub	sp, sp, #40
 880              		.cfi_def_cfa_offset 64
 881 0008 00AF     		add	r7, sp, #0
 882              		.cfi_def_cfa_register 7
 883 000a 3A1C     		mov	r2, r7
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 19


 884 000c 1732     		add	r2, r2, #23
 885 000e 1070     		strb	r0, [r2]
 886 0010 3A1C     		mov	r2, r7
 887 0012 1632     		add	r2, r2, #22
 888 0014 1170     		strb	r1, [r2]
 889 0016 6A46     		mov	r2, sp
 890 0018 9046     		mov	r8, r2
 144:.\I2C_Class.c ****     uint8 irriTransfer[size];
 891              		.loc 1 144 0
 892 001a 4C4A     		ldr	r2, .L40
 893 001c 1268     		ldr	r2, [r2]
 894 001e 511E     		sub	r1, r2, #1
 895 0020 7962     		str	r1, [r7, #36]
 896 0022 111C     		mov	r1, r2
 897 0024 0D1C     		mov	r5, r1
 898 0026 0021     		mov	r1, #0
 899 0028 0E1C     		mov	r6, r1
 900 002a 690F     		lsr	r1, r5, #29
 901 002c F000     		lsl	r0, r6, #3
 902 002e F860     		str	r0, [r7, #12]
 903 0030 FB68     		ldr	r3, [r7, #12]
 904 0032 0B43     		orr	r3, r1
 905 0034 FB60     		str	r3, [r7, #12]
 906 0036 E800     		lsl	r0, r5, #3
 907 0038 111C     		mov	r1, r2
 908 003a 0B1C     		mov	r3, r1
 909 003c 0021     		mov	r1, #0
 910 003e 0C1C     		mov	r4, r1
 911 0040 590F     		lsr	r1, r3, #29
 912 0042 E000     		lsl	r0, r4, #3
 913 0044 7860     		str	r0, [r7, #4]
 914 0046 7868     		ldr	r0, [r7, #4]
 915 0048 0843     		orr	r0, r1
 916 004a 7860     		str	r0, [r7, #4]
 917 004c D900     		lsl	r1, r3, #3
 918 004e 131C     		mov	r3, r2
 919 0050 0733     		add	r3, r3, #7
 920 0052 DB08     		lsr	r3, r3, #3
 921 0054 DB00     		lsl	r3, r3, #3
 922 0056 6A46     		mov	r2, sp
 923 0058 D21A     		sub	r2, r2, r3
 924 005a 9546     		mov	sp, r2
 925 005c 6B46     		mov	r3, sp
 926 005e 0033     		add	r3, r3, #0
 927 0060 3B62     		str	r3, [r7, #32]
 145:.\I2C_Class.c ****     uint8 temp = 0xFF;
 928              		.loc 1 145 0
 929 0062 3B1C     		mov	r3, r7
 930 0064 1E33     		add	r3, r3, #30
 931 0066 FF22     		mov	r2, #255
 932 0068 1A70     		strb	r2, [r3]
 146:.\I2C_Class.c ****     uint8 result = 0;
 933              		.loc 1 146 0
 934 006a 3B1C     		mov	r3, r7
 935 006c 1F33     		add	r3, r3, #31
 936 006e 0022     		mov	r2, #0
 937 0070 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 20


 147:.\I2C_Class.c **** 
 148:.\I2C_Class.c ****         /* In order for this code to function properly, the static int "irrigation" 
 149:.\I2C_Class.c ****         has to get updated each time this function is called. */
 150:.\I2C_Class.c ****     if (onOff == 1){    // Irrigation turn on
 938              		.loc 1 150 0
 939 0072 3B1C     		mov	r3, r7
 940 0074 1633     		add	r3, r3, #22
 941 0076 1B78     		ldrb	r3, [r3]
 942 0078 012B     		cmp	r3, #1
 943 007a 18D1     		bne	.L33
 151:.\I2C_Class.c ****         irriTransfer[0] = (irrigationStatus |= (1 << index));
 944              		.loc 1 151 0
 945 007c 3B1C     		mov	r3, r7
 946 007e 1733     		add	r3, r3, #23
 947 0080 1B78     		ldrb	r3, [r3]
 948 0082 0122     		mov	r2, #1
 949 0084 101C     		mov	r0, r2
 950 0086 9840     		lsl	r0, r0, r3
 951 0088 031C     		mov	r3, r0
 952 008a DAB2     		uxtb	r2, r3
 953 008c 304B     		ldr	r3, .L40+4
 954 008e 1B78     		ldrb	r3, [r3]
 955 0090 DBB2     		uxtb	r3, r3
 956 0092 1343     		orr	r3, r2
 957 0094 DBB2     		uxtb	r3, r3
 958 0096 DAB2     		uxtb	r2, r3
 959 0098 2D4B     		ldr	r3, .L40+4
 960 009a 1A70     		strb	r2, [r3]
 961 009c 2C4B     		ldr	r3, .L40+4
 962 009e 1A78     		ldrb	r2, [r3]
 963 00a0 3B6A     		ldr	r3, [r7, #32]
 964 00a2 1A70     		strb	r2, [r3]
 152:.\I2C_Class.c ****         irrigationStatus = irriTransfer[0];
 965              		.loc 1 152 0
 966 00a4 3B6A     		ldr	r3, [r7, #32]
 967 00a6 1A78     		ldrb	r2, [r3]
 968 00a8 294B     		ldr	r3, .L40+4
 969 00aa 1A70     		strb	r2, [r3]
 970 00ac 21E0     		b	.L34
 971              	.L33:
 153:.\I2C_Class.c ****     }
 154:.\I2C_Class.c ****     else if (onOff == 0){   // Irrigation turn off
 972              		.loc 1 154 0
 973 00ae 3B1C     		mov	r3, r7
 974 00b0 1633     		add	r3, r3, #22
 975 00b2 1B78     		ldrb	r3, [r3]
 976 00b4 002B     		cmp	r3, #0
 977 00b6 1AD1     		bne	.L35
 155:.\I2C_Class.c ****         irriTransfer[0] = (irrigationStatus &= ~(1 << index));
 978              		.loc 1 155 0
 979 00b8 3B1C     		mov	r3, r7
 980 00ba 1733     		add	r3, r3, #23
 981 00bc 1B78     		ldrb	r3, [r3]
 982 00be 0122     		mov	r2, #1
 983 00c0 111C     		mov	r1, r2
 984 00c2 9940     		lsl	r1, r1, r3
 985 00c4 0B1C     		mov	r3, r1
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 21


 986 00c6 DBB2     		uxtb	r3, r3
 987 00c8 DB43     		mvn	r3, r3
 988 00ca DBB2     		uxtb	r3, r3
 989 00cc 204A     		ldr	r2, .L40+4
 990 00ce 1278     		ldrb	r2, [r2]
 991 00d0 D2B2     		uxtb	r2, r2
 992 00d2 1340     		and	r3, r2
 993 00d4 DBB2     		uxtb	r3, r3
 994 00d6 DAB2     		uxtb	r2, r3
 995 00d8 1D4B     		ldr	r3, .L40+4
 996 00da 1A70     		strb	r2, [r3]
 997 00dc 1C4B     		ldr	r3, .L40+4
 998 00de 1A78     		ldrb	r2, [r3]
 999 00e0 3B6A     		ldr	r3, [r7, #32]
 1000 00e2 1A70     		strb	r2, [r3]
 156:.\I2C_Class.c ****         irrigationStatus = irriTransfer[0];
 1001              		.loc 1 156 0
 1002 00e4 3B6A     		ldr	r3, [r7, #32]
 1003 00e6 1A78     		ldrb	r2, [r3]
 1004 00e8 194B     		ldr	r3, .L40+4
 1005 00ea 1A70     		strb	r2, [r3]
 1006 00ec 01E0     		b	.L34
 1007              	.L35:
 157:.\I2C_Class.c ****     }
 158:.\I2C_Class.c ****     else{
 159:.\I2C_Class.c ****     // Bad argument.
 160:.\I2C_Class.c ****     return -1;
 1008              		.loc 1 160 0
 1009 00ee FF23     		mov	r3, #255
 1010 00f0 24E0     		b	.L36
 1011              	.L34:
 161:.\I2C_Class.c ****     }
 162:.\I2C_Class.c ****     
 163:.\I2C_Class.c ****     result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS, irriTransfer,size,I2C_I2C_MODE_COMPLETE_XFER);
 1012              		.loc 1 163 0
 1013 00f2 3A6A     		ldr	r2, [r7, #32]
 1014 00f4 154B     		ldr	r3, .L40
 1015 00f6 1B68     		ldr	r3, [r3]
 1016 00f8 4220     		mov	r0, #66
 1017 00fa 111C     		mov	r1, r2
 1018 00fc 1A1C     		mov	r2, r3
 1019 00fe 0023     		mov	r3, #0
 1020 0100 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 1021 0104 021C     		mov	r2, r0
 1022 0106 3B1C     		mov	r3, r7
 1023 0108 1F33     		add	r3, r3, #31
 1024 010a 1A70     		strb	r2, [r3]
 164:.\I2C_Class.c ****  
 165:.\I2C_Class.c ****     getActuatorStatus(NULL, NULL, NULL, &temp);
 1025              		.loc 1 165 0
 1026 010c 3B1C     		mov	r3, r7
 1027 010e 1E33     		add	r3, r3, #30
 1028 0110 0020     		mov	r0, #0
 1029 0112 0021     		mov	r1, #0
 1030 0114 0022     		mov	r2, #0
 1031 0116 FFF7FEFF 		bl	getActuatorStatus
 166:.\I2C_Class.c ****     
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 22


 167:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 1032              		.loc 1 167 0
 1033 011a 3B1C     		mov	r3, r7
 1034 011c 1F33     		add	r3, r3, #31
 1035 011e 1B78     		ldrb	r3, [r3]
 1036 0120 002B     		cmp	r3, #0
 1037 0122 0AD1     		bne	.L37
 168:.\I2C_Class.c ****         if(temp == irrigationStatus){
 1038              		.loc 1 168 0
 1039 0124 3B1C     		mov	r3, r7
 1040 0126 1E33     		add	r3, r3, #30
 1041 0128 1A78     		ldrb	r2, [r3]
 1042 012a 094B     		ldr	r3, .L40+4
 1043 012c 1B78     		ldrb	r3, [r3]
 1044 012e 9A42     		cmp	r2, r3
 1045 0130 01D1     		bne	.L38
 169:.\I2C_Class.c ****             return 0;
 1046              		.loc 1 169 0
 1047 0132 0023     		mov	r3, #0
 1048 0134 02E0     		b	.L36
 1049              	.L38:
 170:.\I2C_Class.c ****         }
 171:.\I2C_Class.c ****         else {
 172:.\I2C_Class.c ****             return -1;
 1050              		.loc 1 172 0
 1051 0136 FF23     		mov	r3, #255
 1052 0138 00E0     		b	.L36
 1053              	.L37:
 173:.\I2C_Class.c ****         }
 174:.\I2C_Class.c ****     }
 175:.\I2C_Class.c ****     else {
 176:.\I2C_Class.c ****         return -1;
 1054              		.loc 1 176 0
 1055 013a FF23     		mov	r3, #255
 1056              	.L36:
 1057 013c C546     		mov	sp, r8
 1058 013e 5BB2     		sxtb	r3, r3
 177:.\I2C_Class.c ****     }
 178:.\I2C_Class.c **** }
 1059              		.loc 1 178 0
 1060 0140 181C     		mov	r0, r3
 1061 0142 BD46     		mov	sp, r7
 1062 0144 0AB0     		add	sp, sp, #40
 1063              		@ sp needed
 1064 0146 04BC     		pop	{r2}
 1065 0148 9046     		mov	r8, r2
 1066 014a F0BD     		pop	{r4, r5, r6, r7, pc}
 1067              	.L41:
 1068              		.align	2
 1069              	.L40:
 1070 014c 04000000 		.word	size
 1071 0150 00000000 		.word	irrigationStatus
 1072              		.cfi_endproc
 1073              	.LFE37:
 1074              		.size	adjustIrrigation, .-adjustIrrigation
 1075              		.section	.text.getActuatorStatus,"ax",%progbits
 1076              		.align	2
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 23


 1077              		.global	getActuatorStatus
 1078              		.code	16
 1079              		.thumb_func
 1080              		.type	getActuatorStatus, %function
 1081              	getActuatorStatus:
 1082              	.LFB38:
 179:.\I2C_Class.c **** 
 180:.\I2C_Class.c **** int8 getActuatorStatus(uint8* window, uint8* heat, uint8* vent, uint8* irrigation){
 1083              		.loc 1 180 0
 1084              		.cfi_startproc
 1085 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1086              		.cfi_def_cfa_offset 20
 1087              		.cfi_offset 4, -20
 1088              		.cfi_offset 5, -16
 1089              		.cfi_offset 6, -12
 1090              		.cfi_offset 7, -8
 1091              		.cfi_offset 14, -4
 1092 0002 8FB0     		sub	sp, sp, #60
 1093              		.cfi_def_cfa_offset 80
 1094 0004 00AF     		add	r7, sp, #0
 1095              		.cfi_def_cfa_register 7
 1096 0006 7862     		str	r0, [r7, #36]
 1097 0008 3962     		str	r1, [r7, #32]
 1098 000a FA61     		str	r2, [r7, #28]
 1099 000c BB61     		str	r3, [r7, #24]
 1100 000e 6B46     		mov	r3, sp
 1101 0010 1E1C     		mov	r6, r3
 181:.\I2C_Class.c ****     uint8 result = 0;
 1102              		.loc 1 181 0
 1103 0012 3B1C     		mov	r3, r7
 1104 0014 3733     		add	r3, r3, #55
 1105 0016 0022     		mov	r2, #0
 1106 0018 1A70     		strb	r2, [r3]
 182:.\I2C_Class.c ****     int RDbuf = 2;
 1107              		.loc 1 182 0
 1108 001a 0223     		mov	r3, #2
 1109 001c 3B63     		str	r3, [r7, #48]
 183:.\I2C_Class.c ****     uint8 dataget[RDbuf];
 1110              		.loc 1 183 0
 1111 001e 3B6B     		ldr	r3, [r7, #48]
 1112 0020 5A1E     		sub	r2, r3, #1
 1113 0022 FA62     		str	r2, [r7, #44]
 1114 0024 1A1C     		mov	r2, r3
 1115 0026 3A61     		str	r2, [r7, #16]
 1116 0028 0022     		mov	r2, #0
 1117 002a 7A61     		str	r2, [r7, #20]
 1118 002c 3969     		ldr	r1, [r7, #16]
 1119 002e 4A0F     		lsr	r2, r1, #29
 1120 0030 7969     		ldr	r1, [r7, #20]
 1121 0032 C900     		lsl	r1, r1, #3
 1122 0034 F960     		str	r1, [r7, #12]
 1123 0036 F968     		ldr	r1, [r7, #12]
 1124 0038 1143     		orr	r1, r2
 1125 003a F960     		str	r1, [r7, #12]
 1126 003c 3A69     		ldr	r2, [r7, #16]
 1127 003e D200     		lsl	r2, r2, #3
 1128 0040 1A1C     		mov	r2, r3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 24


 1129 0042 141C     		mov	r4, r2
 1130 0044 0022     		mov	r2, #0
 1131 0046 151C     		mov	r5, r2
 1132 0048 620F     		lsr	r2, r4, #29
 1133 004a E900     		lsl	r1, r5, #3
 1134 004c 7960     		str	r1, [r7, #4]
 1135 004e 7968     		ldr	r1, [r7, #4]
 1136 0050 1143     		orr	r1, r2
 1137 0052 7960     		str	r1, [r7, #4]
 1138 0054 E200     		lsl	r2, r4, #3
 1139 0056 0733     		add	r3, r3, #7
 1140 0058 DB08     		lsr	r3, r3, #3
 1141 005a DB00     		lsl	r3, r3, #3
 1142 005c 6946     		mov	r1, sp
 1143 005e C91A     		sub	r1, r1, r3
 1144 0060 8D46     		mov	sp, r1
 1145 0062 6B46     		mov	r3, sp
 1146 0064 0033     		add	r3, r3, #0
 1147 0066 BB62     		str	r3, [r7, #40]
 184:.\I2C_Class.c ****     
 185:.\I2C_Class.c ****     //I2C_I2CMasterClearStatus();     // Clear status flags TODO test
 186:.\I2C_Class.c ****     
 187:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 1148              		.loc 1 187 0
 1149 0068 C046     		mov	r8, r8
 1150              	.L43:
 1151              		.loc 1 187 0 is_stmt 0 discriminator 1
 1152 006a FFF7FEFF 		bl	I2C_I2CMasterStatus
 1153 006e 021C     		mov	r2, r0
 1154 0070 0223     		mov	r3, #2
 1155 0072 1340     		and	r3, r2
 1156 0074 F9D0     		beq	.L43
 188:.\I2C_Class.c ****     
 189:.\I2C_Class.c ****     CyDelay(60);
 1157              		.loc 1 189 0 is_stmt 1
 1158 0076 3C20     		mov	r0, #60
 1159 0078 FFF7FEFF 		bl	CyDelay
 190:.\I2C_Class.c ****     
 191:.\I2C_Class.c ****     I2C_I2CMasterClearReadBuf();
 1160              		.loc 1 191 0
 1161 007c FFF7FEFF 		bl	I2C_I2CMasterClearReadBuf
 192:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(ACTUATOR_ADRESS, dataget, RDbuf, I2C_I2C_MODE_COMPLETE_XFER);
 1162              		.loc 1 192 0
 1163 0080 BA6A     		ldr	r2, [r7, #40]
 1164 0082 3B6B     		ldr	r3, [r7, #48]
 1165 0084 4220     		mov	r0, #66
 1166 0086 111C     		mov	r1, r2
 1167 0088 1A1C     		mov	r2, r3
 1168 008a 0023     		mov	r3, #0
 1169 008c FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1170 0090 021C     		mov	r2, r0
 1171 0092 3B1C     		mov	r3, r7
 1172 0094 3733     		add	r3, r3, #55
 1173 0096 1A70     		strb	r2, [r3]
 193:.\I2C_Class.c ****     
 194:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_RD_CMPLT)); //Wait for the dataget array to
 1174              		.loc 1 194 0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 25


 1175 0098 C046     		mov	r8, r8
 1176              	.L44:
 1177              		.loc 1 194 0 is_stmt 0 discriminator 1
 1178 009a FFF7FEFF 		bl	I2C_I2CMasterStatus
 1179 009e 021C     		mov	r2, r0
 1180 00a0 0123     		mov	r3, #1
 1181 00a2 1340     		and	r3, r2
 1182 00a4 F9D0     		beq	.L44
 195:.\I2C_Class.c ****     
 196:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (I2C_I2CMasterGetReadBufSize() != 0)){
 1183              		.loc 1 196 0 is_stmt 1
 1184 00a6 3B1C     		mov	r3, r7
 1185 00a8 3733     		add	r3, r3, #55
 1186 00aa 1B78     		ldrb	r3, [r3]
 1187 00ac 002B     		cmp	r3, #0
 1188 00ae 3ED1     		bne	.L45
 1189              		.loc 1 196 0 is_stmt 0 discriminator 1
 1190 00b0 FFF7FEFF 		bl	I2C_I2CMasterGetReadBufSize
 1191 00b4 031C     		mov	r3, r0
 1192 00b6 002B     		cmp	r3, #0
 1193 00b8 39D0     		beq	.L45
 197:.\I2C_Class.c ****         if (window){                                   // Expecting to receive MSB first 
 1194              		.loc 1 197 0 is_stmt 1
 1195 00ba 7B6A     		ldr	r3, [r7, #36]
 1196 00bc 002B     		cmp	r3, #0
 1197 00be 05D0     		beq	.L46
 198:.\I2C_Class.c ****             *window = (dataget[0] >> 4);      // Shifting out the 4 least significant bits.
 1198              		.loc 1 198 0
 1199 00c0 BB6A     		ldr	r3, [r7, #40]
 1200 00c2 1B78     		ldrb	r3, [r3]
 1201 00c4 1B09     		lsr	r3, r3, #4
 1202 00c6 DAB2     		uxtb	r2, r3
 1203 00c8 7B6A     		ldr	r3, [r7, #36]
 1204 00ca 1A70     		strb	r2, [r3]
 1205              	.L46:
 199:.\I2C_Class.c ****             #ifdef debugging
 200:.\I2C_Class.c ****                 UART_UartPutChar(*window+48);
 201:.\I2C_Class.c ****             #endif
 202:.\I2C_Class.c ****         }
 203:.\I2C_Class.c ****         if (heat){
 1206              		.loc 1 203 0
 1207 00cc 3B6A     		ldr	r3, [r7, #32]
 1208 00ce 002B     		cmp	r3, #0
 1209 00d0 08D0     		beq	.L47
 204:.\I2C_Class.c ****             *heat = ((dataget[0] & 0b00001110) >> 1);       // Ignoring everything but bit 1-3 and 
 1210              		.loc 1 204 0
 1211 00d2 BB6A     		ldr	r3, [r7, #40]
 1212 00d4 1B78     		ldrb	r3, [r3]
 1213 00d6 1A1C     		mov	r2, r3
 1214 00d8 0E23     		mov	r3, #14
 1215 00da 1340     		and	r3, r2
 1216 00dc 5B10     		asr	r3, r3, #1
 1217 00de DAB2     		uxtb	r2, r3
 1218 00e0 3B6A     		ldr	r3, [r7, #32]
 1219 00e2 1A70     		strb	r2, [r3]
 1220              	.L47:
 205:.\I2C_Class.c ****             #ifdef debugging
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 26


 206:.\I2C_Class.c ****                 UART_UartPutChar(*heat+48);
 207:.\I2C_Class.c ****             #endif
 208:.\I2C_Class.c ****         }
 209:.\I2C_Class.c ****         if (vent){
 1221              		.loc 1 209 0
 1222 00e4 FB69     		ldr	r3, [r7, #28]
 1223 00e6 002B     		cmp	r3, #0
 1224 00e8 15D0     		beq	.L48
 210:.\I2C_Class.c ****             if ((dataget[0] & 0b00000001) == 0b00000001){        // Maybe we can find a smarter way
 1225              		.loc 1 210 0
 1226 00ea BB6A     		ldr	r3, [r7, #40]
 1227 00ec 1B78     		ldrb	r3, [r3]
 1228 00ee 1A1C     		mov	r2, r3
 1229 00f0 0123     		mov	r3, #1
 1230 00f2 1340     		and	r3, r2
 1231 00f4 09D0     		beq	.L49
 211:.\I2C_Class.c ****                 *vent = (dataget[1] >> 6) | 0b00000100;          // The if statements checks if bit
 1232              		.loc 1 211 0
 1233 00f6 BB6A     		ldr	r3, [r7, #40]
 1234 00f8 5B78     		ldrb	r3, [r3, #1]
 1235 00fa 9B09     		lsr	r3, r3, #6
 1236 00fc DBB2     		uxtb	r3, r3
 1237 00fe 0422     		mov	r2, #4
 1238 0100 1343     		orr	r3, r2
 1239 0102 DAB2     		uxtb	r2, r3
 1240 0104 FB69     		ldr	r3, [r7, #28]
 1241 0106 1A70     		strb	r2, [r3]
 1242 0108 05E0     		b	.L48
 1243              	.L49:
 212:.\I2C_Class.c ****                 #ifdef debugging
 213:.\I2C_Class.c ****                     UART_UartPutChar(*vent+48);                         // Shifting 5 right so only
 214:.\I2C_Class.c ****                 #endif
 215:.\I2C_Class.c ****             }                                                    
 216:.\I2C_Class.c ****             else {
 217:.\I2C_Class.c ****                 *vent = (dataget[1] >> 6) | 0b00000000;          // shifting 5 right since only the
 1244              		.loc 1 217 0
 1245 010a BB6A     		ldr	r3, [r7, #40]
 1246 010c 5B78     		ldrb	r3, [r3, #1]
 1247 010e 9B09     		lsr	r3, r3, #6
 1248 0110 DAB2     		uxtb	r2, r3
 1249 0112 FB69     		ldr	r3, [r7, #28]
 1250 0114 1A70     		strb	r2, [r3]
 1251              	.L48:
 218:.\I2C_Class.c ****                 #ifdef debugging
 219:.\I2C_Class.c ****                     UART_UartPutChar(*vent+48);
 220:.\I2C_Class.c ****                 #endif
 221:.\I2C_Class.c ****             }
 222:.\I2C_Class.c ****         }
 223:.\I2C_Class.c ****         if (irrigation){
 1252              		.loc 1 223 0
 1253 0116 BB69     		ldr	r3, [r7, #24]
 1254 0118 002B     		cmp	r3, #0
 1255 011a 06D0     		beq	.L50
 224:.\I2C_Class.c ****             *irrigation = (dataget[1] & 0b00111111);             // Ignoring two most significant b
 1256              		.loc 1 224 0
 1257 011c BB6A     		ldr	r3, [r7, #40]
 1258 011e 5A78     		ldrb	r2, [r3, #1]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 27


 1259 0120 3F23     		mov	r3, #63
 1260 0122 1340     		and	r3, r2
 1261 0124 DAB2     		uxtb	r2, r3
 1262 0126 BB69     		ldr	r3, [r7, #24]
 1263 0128 1A70     		strb	r2, [r3]
 1264              	.L50:
 225:.\I2C_Class.c ****             #ifdef debugging
 226:.\I2C_Class.c ****                 UART_UartPutChar(*irrigation);
 227:.\I2C_Class.c ****             #endif
 228:.\I2C_Class.c ****         }   
 229:.\I2C_Class.c ****         return 0;
 1265              		.loc 1 229 0
 1266 012a 0023     		mov	r3, #0
 1267 012c 00E0     		b	.L51
 1268              	.L45:
 230:.\I2C_Class.c ****     }
 231:.\I2C_Class.c ****     else {
 232:.\I2C_Class.c ****         return -1;   
 1269              		.loc 1 232 0
 1270 012e FF23     		mov	r3, #255
 1271              	.L51:
 1272 0130 B546     		mov	sp, r6
 1273 0132 5BB2     		sxtb	r3, r3
 233:.\I2C_Class.c ****     }
 234:.\I2C_Class.c **** }
 1274              		.loc 1 234 0
 1275 0134 181C     		mov	r0, r3
 1276 0136 BD46     		mov	sp, r7
 1277 0138 0FB0     		add	sp, sp, #60
 1278              		@ sp needed
 1279 013a F0BD     		pop	{r4, r5, r6, r7, pc}
 1280              		.cfi_endproc
 1281              	.LFE38:
 1282              		.size	getActuatorStatus, .-getActuatorStatus
 1283              		.section	.rodata
 1284              		.align	2
 1285              	.LC0:
 1286 0000 09000000 		.word	9
 1287 0004 09000000 		.word	9
 1288              		.section	.text.getTemp,"ax",%progbits
 1289              		.align	2
 1290              		.global	getTemp
 1291              		.code	16
 1292              		.thumb_func
 1293              		.type	getTemp, %function
 1294              	getTemp:
 1295              	.LFB39:
 235:.\I2C_Class.c **** 
 236:.\I2C_Class.c **** /*
 237:.\I2C_Class.c **** int8 getTempAndHum(int32* temp, int32* hum){
 238:.\I2C_Class.c ****     int32 RDbuf = 4;
 239:.\I2C_Class.c ****     uint8 dataget[RDbuf];
 240:.\I2C_Class.c ****     uint8 result = 0;
 241:.\I2C_Class.c ****     
 242:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(TEMP_AND_HUM_SENSOR_ADDRESS, dataget, RDbuf, I2C_I2C_MODE_COMPLET
 243:.\I2C_Class.c ****     
 244:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 28


 245:.\I2C_Class.c ****         // Expecting to receive MSB first.
 246:.\I2C_Class.c ****         *hum = ((dataget[0] << 8) | dataget[1]);   
 247:.\I2C_Class.c ****         *temp = (((dataget[2] << 8) | dataget[3]) >> 2);
 248:.\I2C_Class.c ****         return 0;   // No error 
 249:.\I2C_Class.c ****     }
 250:.\I2C_Class.c ****     else {
 251:.\I2C_Class.c ****         return -1;
 252:.\I2C_Class.c ****     }
 253:.\I2C_Class.c **** }
 254:.\I2C_Class.c **** */
 255:.\I2C_Class.c **** 
 256:.\I2C_Class.c **** int8 getTemp(int32* temp){
 1296              		.loc 1 256 0
 1297              		.cfi_startproc
 1298 0000 80B5     		push	{r7, lr}
 1299              		.cfi_def_cfa_offset 8
 1300              		.cfi_offset 7, -8
 1301              		.cfi_offset 14, -4
 1302 0002 86B0     		sub	sp, sp, #24
 1303              		.cfi_def_cfa_offset 32
 1304 0004 00AF     		add	r7, sp, #0
 1305              		.cfi_def_cfa_register 7
 1306 0006 7860     		str	r0, [r7, #4]
 257:.\I2C_Class.c **** 
 258:.\I2C_Class.c ****     uint8 dataget[2] = {0,0};
 1307              		.loc 1 258 0
 1308 0008 3B1C     		mov	r3, r7
 1309 000a 1433     		add	r3, r3, #20
 1310 000c 0022     		mov	r2, #0
 1311 000e 1A70     		strb	r2, [r3]
 1312 0010 3B1C     		mov	r3, r7
 1313 0012 1433     		add	r3, r3, #20
 1314 0014 0022     		mov	r2, #0
 1315 0016 5A70     		strb	r2, [r3, #1]
 259:.\I2C_Class.c ****     uint32 errorStatus[2] = {9,9};      // For debugging and error handling
 1316              		.loc 1 259 0
 1317 0018 3B1C     		mov	r3, r7
 1318 001a 0C33     		add	r3, r3, #12
 1319 001c 1F4A     		ldr	r2, .L58
 1320 001e 03CA     		ldmia	r2!, {r0, r1}
 1321 0020 03C3     		stmia	r3!, {r0, r1}
 260:.\I2C_Class.c ****     
 261:.\I2C_Class.c ****     I2C_I2CMasterClearReadBuf();
 1322              		.loc 1 261 0
 1323 0022 FFF7FEFF 		bl	I2C_I2CMasterClearReadBuf
 262:.\I2C_Class.c ****     errorStatus[0] = I2C_I2CMasterSendStart(TEMP_SENSOR_ADDRESS, I2C_I2C_READ_XFER_MODE);
 1324              		.loc 1 262 0
 1325 0026 4820     		mov	r0, #72
 1326 0028 0121     		mov	r1, #1
 1327 002a FFF7FEFF 		bl	I2C_I2CMasterSendStart
 1328 002e 021C     		mov	r2, r0
 1329 0030 3B1C     		mov	r3, r7
 1330 0032 0C33     		add	r3, r3, #12
 1331 0034 1A60     		str	r2, [r3]
 263:.\I2C_Class.c ****     if (errorStatus[0] == I2C_I2C_MSTR_NO_ERROR){
 1332              		.loc 1 263 0
 1333 0036 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 29


 1334 0038 0C33     		add	r3, r3, #12
 1335 003a 1B68     		ldr	r3, [r3]
 1336 003c 002B     		cmp	r3, #0
 1337 003e 25D1     		bne	.L54
 264:.\I2C_Class.c ****         dataget[0] = I2C_I2CMasterReadByte(I2C_I2C_ACK_DATA);
 1338              		.loc 1 264 0
 1339 0040 0020     		mov	r0, #0
 1340 0042 FFF7FEFF 		bl	I2C_I2CMasterReadByte
 1341 0046 031C     		mov	r3, r0
 1342 0048 DAB2     		uxtb	r2, r3
 1343 004a 3B1C     		mov	r3, r7
 1344 004c 1433     		add	r3, r3, #20
 1345 004e 1A70     		strb	r2, [r3]
 265:.\I2C_Class.c ****         dataget[1] = I2C_I2CMasterReadByte(I2C_I2C_NAK_DATA);
 1346              		.loc 1 265 0
 1347 0050 0120     		mov	r0, #1
 1348 0052 FFF7FEFF 		bl	I2C_I2CMasterReadByte
 1349 0056 031C     		mov	r3, r0
 1350 0058 DAB2     		uxtb	r2, r3
 1351 005a 3B1C     		mov	r3, r7
 1352 005c 1433     		add	r3, r3, #20
 1353 005e 5A70     		strb	r2, [r3, #1]
 266:.\I2C_Class.c ****         errorStatus[1] = I2C_I2CMasterSendStop();
 1354              		.loc 1 266 0
 1355 0060 FFF7FEFF 		bl	I2C_I2CMasterSendStop
 1356 0064 021C     		mov	r2, r0
 1357 0066 3B1C     		mov	r3, r7
 1358 0068 0C33     		add	r3, r3, #12
 1359 006a 5A60     		str	r2, [r3, #4]
 267:.\I2C_Class.c ****     }
 268:.\I2C_Class.c ****     else{
 269:.\I2C_Class.c ****         I2C_I2CMasterSendStop();
 270:.\I2C_Class.c ****         return -1;
 271:.\I2C_Class.c ****     }
 272:.\I2C_Class.c **** 
 273:.\I2C_Class.c ****     // The data is converted directly to UART protocol because of the ,5 resolution
 274:.\I2C_Class.c ****     *temp = (dataget[0]*2)+(dataget[1] >> 7)+40;
 1360              		.loc 1 274 0
 1361 006c 3B1C     		mov	r3, r7
 1362 006e 1433     		add	r3, r3, #20
 1363 0070 1B78     		ldrb	r3, [r3]
 1364 0072 5A00     		lsl	r2, r3, #1
 1365 0074 3B1C     		mov	r3, r7
 1366 0076 1433     		add	r3, r3, #20
 1367 0078 5B78     		ldrb	r3, [r3, #1]
 1368 007a DB09     		lsr	r3, r3, #7
 1369 007c DBB2     		uxtb	r3, r3
 1370 007e D318     		add	r3, r2, r3
 1371 0080 1A1C     		mov	r2, r3
 1372 0082 2832     		add	r2, r2, #40
 1373 0084 7B68     		ldr	r3, [r7, #4]
 1374 0086 1A60     		str	r2, [r3]
 275:.\I2C_Class.c **** 
 276:.\I2C_Class.c ****     return 0;
 1375              		.loc 1 276 0
 1376 0088 0023     		mov	r3, #0
 1377 008a 02E0     		b	.L57
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 30


 1378              	.L54:
 269:.\I2C_Class.c ****         I2C_I2CMasterSendStop();
 1379              		.loc 1 269 0
 1380 008c FFF7FEFF 		bl	I2C_I2CMasterSendStop
 270:.\I2C_Class.c ****         return -1;
 1381              		.loc 1 270 0
 1382 0090 FF23     		mov	r3, #255
 1383              	.L57:
 1384 0092 5BB2     		sxtb	r3, r3
 277:.\I2C_Class.c **** }
 1385              		.loc 1 277 0
 1386 0094 181C     		mov	r0, r3
 1387 0096 BD46     		mov	sp, r7
 1388 0098 06B0     		add	sp, sp, #24
 1389              		@ sp needed
 1390 009a 80BD     		pop	{r7, pc}
 1391              	.L59:
 1392              		.align	2
 1393              	.L58:
 1394 009c 00000000 		.word	.LC0
 1395              		.cfi_endproc
 1396              	.LFE39:
 1397              		.size	getTemp, .-getTemp
 1398              		.section	.text.getLight,"ax",%progbits
 1399              		.align	2
 1400              		.global	getLight
 1401              		.code	16
 1402              		.thumb_func
 1403              		.type	getLight, %function
 1404              	getLight:
 1405              	.LFB40:
 278:.\I2C_Class.c **** 
 279:.\I2C_Class.c **** int8 getLight(int32* light){
 1406              		.loc 1 279 0
 1407              		.cfi_startproc
 1408 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1409              		.cfi_def_cfa_offset 20
 1410              		.cfi_offset 4, -20
 1411              		.cfi_offset 5, -16
 1412              		.cfi_offset 6, -12
 1413              		.cfi_offset 7, -8
 1414              		.cfi_offset 14, -4
 1415 0002 4746     		mov	r7, r8
 1416 0004 80B4     		push	{r7}
 1417              		.cfi_def_cfa_offset 24
 1418              		.cfi_offset 8, -24
 1419 0006 88B0     		sub	sp, sp, #32
 1420              		.cfi_def_cfa_offset 56
 1421 0008 00AF     		add	r7, sp, #0
 1422              		.cfi_def_cfa_register 7
 1423 000a F860     		str	r0, [r7, #12]
 1424 000c 6846     		mov	r0, sp
 1425 000e 8046     		mov	r8, r0
 280:.\I2C_Class.c ****     
 281:.\I2C_Class.c ****     /* 
 282:.\I2C_Class.c ****     Command register: Adress 0x00.
 283:.\I2C_Class.c ****     Bit 7: resets '0' or enables '1' ADC.
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 31


 284:.\I2C_Class.c ****     Bit 6: Power down mode. Normal operation '0' or power down mode '1'.
 285:.\I2C_Class.c ****     Bit 5: Decides whether integration time (ADC is of integration type) is done internally '0' or 
 286:.\I2C_Class.c ****     Bit 4: Has to be zero.
 287:.\I2C_Class.c ****     Bit 3-2: Photodiode select 0:0 and 0:1 = disable ADC. 1:0 = Light count DATA output in signed (
 288:.\I2C_Class.c ****     Bit 1-0: Prescaler or number of clockcycles 2^(n). 0:0 = 2^(16), 0:1 = 2^(12), 1:0 = 2^(8) and 
 289:.\I2C_Class.c ****     
 290:.\I2C_Class.c ****     RW Control register: Adress 0x01.
 291:.\I2C_Class.c ****     Bit 3-2: Set lux range. watch table in page 6.
 292:.\I2C_Class.c ****     All other bits has to be zero.
 293:.\I2C_Class.c ****     
 294:.\I2C_Class.c ****     I2C Sensor data reg: Adress 0x04(LSB) and 0x05()
 295:.\I2C_Class.c ****     The sensor sends a 15 bit value that can be acceMSBssed by the adresses 0x04 and 0x05
 296:.\I2C_Class.c ****     these registers are automatically refreshed each new integration period.
 297:.\I2C_Class.c ****     */
 298:.\I2C_Class.c ****     
 299:.\I2C_Class.c ****     uint8 dataget[size];
 1426              		.loc 1 299 0
 1427 0010 3B48     		ldr	r0, .L67
 1428 0012 0068     		ldr	r0, [r0]
 1429 0014 421E     		sub	r2, r0, #1
 1430 0016 9446     		mov	ip, r2
 1431 0018 6346     		mov	r3, ip
 1432 001a FB61     		str	r3, [r7, #28]
 1433 001c 8446     		mov	ip, r0
 1434 001e 6146     		mov	r1, ip
 1435 0020 0024     		mov	r4, #0
 1436 0022 A446     		mov	ip, r4
 1437 0024 6246     		mov	r2, ip
 1438 0026 4B0F     		lsr	r3, r1, #29
 1439 0028 9C46     		mov	ip, r3
 1440 002a D400     		lsl	r4, r2, #3
 1441 002c 7C60     		str	r4, [r7, #4]
 1442 002e 6346     		mov	r3, ip
 1443 0030 7C68     		ldr	r4, [r7, #4]
 1444 0032 2343     		orr	r3, r4
 1445 0034 7B60     		str	r3, [r7, #4]
 1446 0036 CB00     		lsl	r3, r1, #3
 1447 0038 021C     		mov	r2, r0
 1448 003a 131C     		mov	r3, r2
 1449 003c 0022     		mov	r2, #0
 1450 003e 141C     		mov	r4, r2
 1451 0040 5A0F     		lsr	r2, r3, #29
 1452 0042 E600     		lsl	r6, r4, #3
 1453 0044 1643     		orr	r6, r2
 1454 0046 DD00     		lsl	r5, r3, #3
 1455 0048 031C     		mov	r3, r0
 1456 004a 0733     		add	r3, r3, #7
 1457 004c DB08     		lsr	r3, r3, #3
 1458 004e DB00     		lsl	r3, r3, #3
 1459 0050 6C46     		mov	r4, sp
 1460 0052 E41A     		sub	r4, r4, r3
 1461 0054 A546     		mov	sp, r4
 1462 0056 6B46     		mov	r3, sp
 1463 0058 0033     		add	r3, r3, #0
 1464 005a BB61     		str	r3, [r7, #24]
 300:.\I2C_Class.c ****     uint8 result = 0;
 1465              		.loc 1 300 0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 32


 1466 005c 3B1C     		mov	r3, r7
 1467 005e 1733     		add	r3, r3, #23
 1468 0060 0022     		mov	r2, #0
 1469 0062 1A70     		strb	r2, [r3]
 301:.\I2C_Class.c ****     
 302:.\I2C_Class.c ****     I2C_I2CMasterClearReadBuf();
 1470              		.loc 1 302 0
 1471 0064 FFF7FEFF 		bl	I2C_I2CMasterClearReadBuf
 303:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(LIGHT_SENSOR_MSB, dataget, size, I2C_I2C_MODE_COMPLETE_XFER); 
 1472              		.loc 1 303 0
 1473 0068 BA69     		ldr	r2, [r7, #24]
 1474 006a 254B     		ldr	r3, .L67
 1475 006c 1B68     		ldr	r3, [r3]
 1476 006e 0520     		mov	r0, #5
 1477 0070 111C     		mov	r1, r2
 1478 0072 1A1C     		mov	r2, r3
 1479 0074 0023     		mov	r3, #0
 1480 0076 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1481 007a 021C     		mov	r2, r0
 1482 007c 3B1C     		mov	r3, r7
 1483 007e 1733     		add	r3, r3, #23
 1484 0080 1A70     		strb	r2, [r3]
 304:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_RD_CMPLT));
 1485              		.loc 1 304 0
 1486 0082 C046     		mov	r8, r8
 1487              	.L61:
 1488              		.loc 1 304 0 is_stmt 0 discriminator 1
 1489 0084 FFF7FEFF 		bl	I2C_I2CMasterStatus
 1490 0088 021C     		mov	r2, r0
 1491 008a 0123     		mov	r3, #1
 1492 008c 1340     		and	r3, r2
 1493 008e F9D0     		beq	.L61
 305:.\I2C_Class.c ****         
 306:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 1494              		.loc 1 306 0 is_stmt 1
 1495 0090 3B1C     		mov	r3, r7
 1496 0092 1733     		add	r3, r3, #23
 1497 0094 1B78     		ldrb	r3, [r3]
 1498 0096 002B     		cmp	r3, #0
 1499 0098 28D1     		bne	.L62
 307:.\I2C_Class.c ****         // Expecting to receive MSB first.
 308:.\I2C_Class.c ****         *light = (dataget[0] << 7);     // TODO: TEST THIS WITH THE PROPER SENSOR!!
 1500              		.loc 1 308 0
 1501 009a BB69     		ldr	r3, [r7, #24]
 1502 009c 1B78     		ldrb	r3, [r3]
 1503 009e DA01     		lsl	r2, r3, #7
 1504 00a0 FB68     		ldr	r3, [r7, #12]
 1505 00a2 1A60     		str	r2, [r3]
 309:.\I2C_Class.c ****         result = I2C_I2CMasterReadBuf(LIGHT_SENSOR_LSB, dataget, size, I2C_I2C_MODE_COMPLETE_XFER);
 1506              		.loc 1 309 0
 1507 00a4 BA69     		ldr	r2, [r7, #24]
 1508 00a6 164B     		ldr	r3, .L67
 1509 00a8 1B68     		ldr	r3, [r3]
 1510 00aa 0420     		mov	r0, #4
 1511 00ac 111C     		mov	r1, r2
 1512 00ae 1A1C     		mov	r2, r3
 1513 00b0 0023     		mov	r3, #0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 33


 1514 00b2 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1515 00b6 021C     		mov	r2, r0
 1516 00b8 3B1C     		mov	r3, r7
 1517 00ba 1733     		add	r3, r3, #23
 1518 00bc 1A70     		strb	r2, [r3]
 310:.\I2C_Class.c ****         while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_RD_CMPLT)); //Wait for the data to be r
 1519              		.loc 1 310 0
 1520 00be C046     		mov	r8, r8
 1521              	.L63:
 1522              		.loc 1 310 0 is_stmt 0 discriminator 1
 1523 00c0 FFF7FEFF 		bl	I2C_I2CMasterStatus
 1524 00c4 021C     		mov	r2, r0
 1525 00c6 0123     		mov	r3, #1
 1526 00c8 1340     		and	r3, r2
 1527 00ca F9D0     		beq	.L63
 311:.\I2C_Class.c ****         if (result == I2C_I2C_MSTR_NO_ERROR){
 1528              		.loc 1 311 0 is_stmt 1
 1529 00cc 3B1C     		mov	r3, r7
 1530 00ce 1733     		add	r3, r3, #23
 1531 00d0 1B78     		ldrb	r3, [r3]
 1532 00d2 002B     		cmp	r3, #0
 1533 00d4 08D1     		bne	.L64
 312:.\I2C_Class.c ****             *light |= dataget[0]; 
 1534              		.loc 1 312 0
 1535 00d6 FB68     		ldr	r3, [r7, #12]
 1536 00d8 1A68     		ldr	r2, [r3]
 1537 00da BB69     		ldr	r3, [r7, #24]
 1538 00dc 1B78     		ldrb	r3, [r3]
 1539 00de 1A43     		orr	r2, r3
 1540 00e0 FB68     		ldr	r3, [r7, #12]
 1541 00e2 1A60     		str	r2, [r3]
 313:.\I2C_Class.c ****             return 0;   // No error 
 1542              		.loc 1 313 0
 1543 00e4 0023     		mov	r3, #0
 1544 00e6 02E0     		b	.L65
 1545              	.L64:
 314:.\I2C_Class.c ****         }
 315:.\I2C_Class.c ****         else {
 316:.\I2C_Class.c ****             return -1;
 1546              		.loc 1 316 0
 1547 00e8 FF23     		mov	r3, #255
 1548 00ea 00E0     		b	.L65
 1549              	.L62:
 317:.\I2C_Class.c ****         }
 318:.\I2C_Class.c ****     }
 319:.\I2C_Class.c ****     else {
 320:.\I2C_Class.c ****         return -1;
 1550              		.loc 1 320 0
 1551 00ec FF23     		mov	r3, #255
 1552              	.L65:
 1553 00ee C546     		mov	sp, r8
 1554 00f0 5BB2     		sxtb	r3, r3
 321:.\I2C_Class.c ****     }
 322:.\I2C_Class.c **** }
 1555              		.loc 1 322 0
 1556 00f2 181C     		mov	r0, r3
 1557 00f4 BD46     		mov	sp, r7
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 34


 1558 00f6 08B0     		add	sp, sp, #32
 1559              		@ sp needed
 1560 00f8 04BC     		pop	{r2}
 1561 00fa 9046     		mov	r8, r2
 1562 00fc F0BD     		pop	{r4, r5, r6, r7, pc}
 1563              	.L68:
 1564 00fe C046     		.align	2
 1565              	.L67:
 1566 0100 04000000 		.word	size
 1567              		.cfi_endproc
 1568              	.LFE40:
 1569              		.size	getLight, .-getLight
 1570              		.section	.text.getSoilHum,"ax",%progbits
 1571              		.align	2
 1572              		.global	getSoilHum
 1573              		.code	16
 1574              		.thumb_func
 1575              		.type	getSoilHum, %function
 1576              	getSoilHum:
 1577              	.LFB41:
 323:.\I2C_Class.c **** 
 324:.\I2C_Class.c **** int8 getSoilHum(uint8 index, int16* soilHum){   // TODO: THIS HAS NOT BEEN IMPLEMENTED.
 1578              		.loc 1 324 0
 1579              		.cfi_startproc
 1580 0000 80B5     		push	{r7, lr}
 1581              		.cfi_def_cfa_offset 8
 1582              		.cfi_offset 7, -8
 1583              		.cfi_offset 14, -4
 1584 0002 84B0     		sub	sp, sp, #16
 1585              		.cfi_def_cfa_offset 24
 1586 0004 00AF     		add	r7, sp, #0
 1587              		.cfi_def_cfa_register 7
 1588 0006 021C     		mov	r2, r0
 1589 0008 3960     		str	r1, [r7]
 1590 000a FB1D     		add	r3, r7, #7
 1591 000c 1A70     		strb	r2, [r3]
 325:.\I2C_Class.c ****     index = 0;
 1592              		.loc 1 325 0
 1593 000e 3B1C     		mov	r3, r7
 1594 0010 0F33     		add	r3, r3, #15
 1595 0012 0022     		mov	r2, #0
 1596 0014 1A70     		strb	r2, [r3]
 326:.\I2C_Class.c ****     *soilHum = 0;
 1597              		.loc 1 326 0
 1598 0016 3B68     		ldr	r3, [r7]
 1599 0018 0022     		mov	r2, #0
 1600 001a 1A80     		strh	r2, [r3]
 327:.\I2C_Class.c ****     return 0;
 1601              		.loc 1 327 0
 1602 001c 0023     		mov	r3, #0
 1603 001e 5BB2     		sxtb	r3, r3
 328:.\I2C_Class.c **** }
 1604              		.loc 1 328 0
 1605 0020 181C     		mov	r0, r3
 1606 0022 BD46     		mov	sp, r7
 1607 0024 04B0     		add	sp, sp, #16
 1608              		@ sp needed
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 35


 1609 0026 80BD     		pop	{r7, pc}
 1610              		.cfi_endproc
 1611              	.LFE41:
 1612              		.size	getSoilHum, .-getSoilHum
 1613              		.text
 1614              	.Letext0:
 1615              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 1616              		.section	.debug_info,"",%progbits
 1617              	.Ldebug_info0:
 1618 0000 FB040000 		.4byte	0x4fb
 1619 0004 0400     		.2byte	0x4
 1620 0006 00000000 		.4byte	.Ldebug_abbrev0
 1621 000a 04       		.byte	0x4
 1622 000b 01       		.uleb128 0x1
 1623 000c 90000000 		.4byte	.LASF53
 1624 0010 01       		.byte	0x1
 1625 0011 3E000000 		.4byte	.LASF54
 1626 0015 D9010000 		.4byte	.LASF55
 1627 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1628 001d 00000000 		.4byte	0
 1629 0021 00000000 		.4byte	.Ldebug_line0
 1630 0025 02       		.uleb128 0x2
 1631 0026 01       		.byte	0x1
 1632 0027 06       		.byte	0x6
 1633 0028 57010000 		.4byte	.LASF0
 1634 002c 02       		.uleb128 0x2
 1635 002d 01       		.byte	0x1
 1636 002e 08       		.byte	0x8
 1637 002f 6B010000 		.4byte	.LASF1
 1638 0033 02       		.uleb128 0x2
 1639 0034 02       		.byte	0x2
 1640 0035 05       		.byte	0x5
 1641 0036 8A020000 		.4byte	.LASF2
 1642 003a 02       		.uleb128 0x2
 1643 003b 02       		.byte	0x2
 1644 003c 07       		.byte	0x7
 1645 003d 4C000000 		.4byte	.LASF3
 1646 0041 02       		.uleb128 0x2
 1647 0042 04       		.byte	0x4
 1648 0043 05       		.byte	0x5
 1649 0044 AD020000 		.4byte	.LASF4
 1650 0048 02       		.uleb128 0x2
 1651 0049 04       		.byte	0x4
 1652 004a 07       		.byte	0x7
 1653 004b 2D010000 		.4byte	.LASF5
 1654 004f 02       		.uleb128 0x2
 1655 0050 08       		.byte	0x8
 1656 0051 05       		.byte	0x5
 1657 0052 5E020000 		.4byte	.LASF6
 1658 0056 02       		.uleb128 0x2
 1659 0057 08       		.byte	0x8
 1660 0058 07       		.byte	0x7
 1661 0059 C2010000 		.4byte	.LASF7
 1662 005d 03       		.uleb128 0x3
 1663 005e 04       		.byte	0x4
 1664 005f 05       		.byte	0x5
 1665 0060 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 36


 1666 0064 02       		.uleb128 0x2
 1667 0065 04       		.byte	0x4
 1668 0066 07       		.byte	0x7
 1669 0067 B0010000 		.4byte	.LASF8
 1670 006b 04       		.uleb128 0x4
 1671 006c 84000000 		.4byte	.LASF9
 1672 0070 02       		.byte	0x2
 1673 0071 A1       		.byte	0xa1
 1674 0072 2C000000 		.4byte	0x2c
 1675 0076 04       		.uleb128 0x4
 1676 0077 9D010000 		.4byte	.LASF10
 1677 007b 02       		.byte	0x2
 1678 007c A2       		.byte	0xa2
 1679 007d 3A000000 		.4byte	0x3a
 1680 0081 04       		.uleb128 0x4
 1681 0082 A9010000 		.4byte	.LASF11
 1682 0086 02       		.byte	0x2
 1683 0087 A3       		.byte	0xa3
 1684 0088 48000000 		.4byte	0x48
 1685 008c 04       		.uleb128 0x4
 1686 008d A4010000 		.4byte	.LASF12
 1687 0091 02       		.byte	0x2
 1688 0092 A4       		.byte	0xa4
 1689 0093 25000000 		.4byte	0x25
 1690 0097 04       		.uleb128 0x4
 1691 0098 27010000 		.4byte	.LASF13
 1692 009c 02       		.byte	0x2
 1693 009d A5       		.byte	0xa5
 1694 009e 33000000 		.4byte	0x33
 1695 00a2 04       		.uleb128 0x4
 1696 00a3 51010000 		.4byte	.LASF14
 1697 00a7 02       		.byte	0x2
 1698 00a8 A6       		.byte	0xa6
 1699 00a9 41000000 		.4byte	0x41
 1700 00ad 02       		.uleb128 0x2
 1701 00ae 04       		.byte	0x4
 1702 00af 04       		.byte	0x4
 1703 00b0 8A000000 		.4byte	.LASF15
 1704 00b4 02       		.uleb128 0x2
 1705 00b5 08       		.byte	0x8
 1706 00b6 04       		.byte	0x4
 1707 00b7 79010000 		.4byte	.LASF16
 1708 00bb 02       		.uleb128 0x2
 1709 00bc 01       		.byte	0x1
 1710 00bd 08       		.byte	0x8
 1711 00be 74020000 		.4byte	.LASF17
 1712 00c2 02       		.uleb128 0x2
 1713 00c3 04       		.byte	0x4
 1714 00c4 07       		.byte	0x7
 1715 00c5 4A020000 		.4byte	.LASF18
 1716 00c9 05       		.uleb128 0x5
 1717 00ca 04       		.byte	0x4
 1718 00cb 6B000000 		.4byte	0x6b
 1719 00cf 06       		.uleb128 0x6
 1720 00d0 3C020000 		.4byte	.LASF56
 1721 00d4 01       		.byte	0x1
 1722 00d5 21       		.byte	0x21
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 37


 1723 00d6 00000000 		.4byte	.LFB33
 1724 00da 0C010000 		.4byte	.LFE33-.LFB33
 1725 00de 01       		.uleb128 0x1
 1726 00df 9C       		.byte	0x9c
 1727 00e0 11010000 		.4byte	0x111
 1728 00e4 07       		.uleb128 0x7
 1729 00e5 E4020000 		.4byte	.LASF19
 1730 00e9 01       		.byte	0x1
 1731 00ea 28       		.byte	0x28
 1732 00eb 11010000 		.4byte	0x111
 1733 00ef 03       		.uleb128 0x3
 1734 00f0 91       		.byte	0x91
 1735 00f1 60       		.sleb128 -32
 1736 00f2 06       		.byte	0x6
 1737 00f3 07       		.uleb128 0x7
 1738 00f4 5F000000 		.4byte	.LASF20
 1739 00f8 01       		.byte	0x1
 1740 00f9 28       		.byte	0x28
 1741 00fa 24010000 		.4byte	0x124
 1742 00fe 03       		.uleb128 0x3
 1743 00ff 91       		.byte	0x91
 1744 0100 58       		.sleb128 -40
 1745 0101 06       		.byte	0x6
 1746 0102 07       		.uleb128 0x7
 1747 0103 25020000 		.4byte	.LASF21
 1748 0107 01       		.byte	0x1
 1749 0108 2B       		.byte	0x2b
 1750 0109 6B000000 		.4byte	0x6b
 1751 010d 02       		.uleb128 0x2
 1752 010e 91       		.byte	0x91
 1753 010f 57       		.sleb128 -41
 1754 0110 00       		.byte	0
 1755 0111 08       		.uleb128 0x8
 1756 0112 6B000000 		.4byte	0x6b
 1757 0116 24010000 		.4byte	0x124
 1758 011a 09       		.uleb128 0x9
 1759 011b C2000000 		.4byte	0xc2
 1760 011f 03       		.uleb128 0x3
 1761 0120 91       		.byte	0x91
 1762 0121 64       		.sleb128 -28
 1763 0122 06       		.byte	0x6
 1764 0123 00       		.byte	0
 1765 0124 08       		.uleb128 0x8
 1766 0125 6B000000 		.4byte	0x6b
 1767 0129 37010000 		.4byte	0x137
 1768 012d 09       		.uleb128 0x9
 1769 012e C2000000 		.4byte	0xc2
 1770 0132 03       		.uleb128 0x3
 1771 0133 91       		.byte	0x91
 1772 0134 5C       		.sleb128 -36
 1773 0135 06       		.byte	0x6
 1774 0136 00       		.byte	0
 1775 0137 0A       		.uleb128 0xa
 1776 0138 12000000 		.4byte	.LASF25
 1777 013c 01       		.byte	0x1
 1778 013d 36       		.byte	0x36
 1779 013e 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 38


 1780 0142 00000000 		.4byte	.LFB34
 1781 0146 68010000 		.4byte	.LFE34-.LFB34
 1782 014a 01       		.uleb128 0x1
 1783 014b 9C       		.byte	0x9c
 1784 014c 99010000 		.4byte	0x199
 1785 0150 0B       		.uleb128 0xb
 1786 0151 706F7300 		.ascii	"pos\000"
 1787 0155 01       		.byte	0x1
 1788 0156 36       		.byte	0x36
 1789 0157 6B000000 		.4byte	0x6b
 1790 015b 02       		.uleb128 0x2
 1791 015c 91       		.byte	0x91
 1792 015d 4F       		.sleb128 -49
 1793 015e 07       		.uleb128 0x7
 1794 015f 31020000 		.4byte	.LASF22
 1795 0163 01       		.byte	0x1
 1796 0164 37       		.byte	0x37
 1797 0165 99010000 		.4byte	0x199
 1798 0169 03       		.uleb128 0x3
 1799 016a 91       		.byte	0x91
 1800 016b 5C       		.sleb128 -36
 1801 016c 06       		.byte	0x6
 1802 016d 07       		.uleb128 0x7
 1803 016e 91010000 		.4byte	.LASF23
 1804 0172 01       		.byte	0x1
 1805 0173 37       		.byte	0x37
 1806 0174 AC010000 		.4byte	0x1ac
 1807 0178 03       		.uleb128 0x3
 1808 0179 91       		.byte	0x91
 1809 017a 54       		.sleb128 -44
 1810 017b 06       		.byte	0x6
 1811 017c 07       		.uleb128 0x7
 1812 017d 25020000 		.4byte	.LASF21
 1813 0181 01       		.byte	0x1
 1814 0182 3A       		.byte	0x3a
 1815 0183 6B000000 		.4byte	0x6b
 1816 0187 02       		.uleb128 0x2
 1817 0188 91       		.byte	0x91
 1818 0189 67       		.sleb128 -25
 1819 018a 07       		.uleb128 0x7
 1820 018b 1C010000 		.4byte	.LASF24
 1821 018f 01       		.byte	0x1
 1822 0190 3B       		.byte	0x3b
 1823 0191 6B000000 		.4byte	0x6b
 1824 0195 02       		.uleb128 0x2
 1825 0196 91       		.byte	0x91
 1826 0197 53       		.sleb128 -45
 1827 0198 00       		.byte	0
 1828 0199 08       		.uleb128 0x8
 1829 019a 6B000000 		.4byte	0x6b
 1830 019e AC010000 		.4byte	0x1ac
 1831 01a2 09       		.uleb128 0x9
 1832 01a3 C2000000 		.4byte	0xc2
 1833 01a7 03       		.uleb128 0x3
 1834 01a8 91       		.byte	0x91
 1835 01a9 60       		.sleb128 -32
 1836 01aa 06       		.byte	0x6
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 39


 1837 01ab 00       		.byte	0
 1838 01ac 08       		.uleb128 0x8
 1839 01ad 6B000000 		.4byte	0x6b
 1840 01b1 BF010000 		.4byte	0x1bf
 1841 01b5 09       		.uleb128 0x9
 1842 01b6 C2000000 		.4byte	0xc2
 1843 01ba 03       		.uleb128 0x3
 1844 01bb 91       		.byte	0x91
 1845 01bc 58       		.sleb128 -40
 1846 01bd 06       		.byte	0x6
 1847 01be 00       		.byte	0
 1848 01bf 0A       		.uleb128 0xa
 1849 01c0 53020000 		.4byte	.LASF26
 1850 01c4 01       		.byte	0x1
 1851 01c5 53       		.byte	0x53
 1852 01c6 8C000000 		.4byte	0x8c
 1853 01ca 00000000 		.4byte	.LFB35
 1854 01ce 68010000 		.4byte	.LFE35-.LFB35
 1855 01d2 01       		.uleb128 0x1
 1856 01d3 9C       		.byte	0x9c
 1857 01d4 21020000 		.4byte	0x221
 1858 01d8 0C       		.uleb128 0xc
 1859 01d9 2C020000 		.4byte	.LASF27
 1860 01dd 01       		.byte	0x1
 1861 01de 53       		.byte	0x53
 1862 01df 6B000000 		.4byte	0x6b
 1863 01e3 02       		.uleb128 0x2
 1864 01e4 91       		.byte	0x91
 1865 01e5 4F       		.sleb128 -49
 1866 01e6 07       		.uleb128 0x7
 1867 01e7 7F020000 		.4byte	.LASF28
 1868 01eb 01       		.byte	0x1
 1869 01ec 54       		.byte	0x54
 1870 01ed 21020000 		.4byte	0x221
 1871 01f1 03       		.uleb128 0x3
 1872 01f2 91       		.byte	0x91
 1873 01f3 5C       		.sleb128 -36
 1874 01f4 06       		.byte	0x6
 1875 01f5 07       		.uleb128 0x7
 1876 01f6 6C000000 		.4byte	.LASF29
 1877 01fa 01       		.byte	0x1
 1878 01fb 54       		.byte	0x54
 1879 01fc 34020000 		.4byte	0x234
 1880 0200 03       		.uleb128 0x3
 1881 0201 91       		.byte	0x91
 1882 0202 54       		.sleb128 -44
 1883 0203 06       		.byte	0x6
 1884 0204 07       		.uleb128 0x7
 1885 0205 25020000 		.4byte	.LASF21
 1886 0209 01       		.byte	0x1
 1887 020a 57       		.byte	0x57
 1888 020b 6B000000 		.4byte	0x6b
 1889 020f 02       		.uleb128 0x2
 1890 0210 91       		.byte	0x91
 1891 0211 67       		.sleb128 -25
 1892 0212 07       		.uleb128 0x7
 1893 0213 BD010000 		.4byte	.LASF30
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 40


 1894 0217 01       		.byte	0x1
 1895 0218 58       		.byte	0x58
 1896 0219 6B000000 		.4byte	0x6b
 1897 021d 02       		.uleb128 0x2
 1898 021e 91       		.byte	0x91
 1899 021f 53       		.sleb128 -45
 1900 0220 00       		.byte	0
 1901 0221 08       		.uleb128 0x8
 1902 0222 6B000000 		.4byte	0x6b
 1903 0226 34020000 		.4byte	0x234
 1904 022a 09       		.uleb128 0x9
 1905 022b C2000000 		.4byte	0xc2
 1906 022f 03       		.uleb128 0x3
 1907 0230 91       		.byte	0x91
 1908 0231 60       		.sleb128 -32
 1909 0232 06       		.byte	0x6
 1910 0233 00       		.byte	0
 1911 0234 08       		.uleb128 0x8
 1912 0235 6B000000 		.4byte	0x6b
 1913 0239 47020000 		.4byte	0x247
 1914 023d 09       		.uleb128 0x9
 1915 023e C2000000 		.4byte	0xc2
 1916 0242 03       		.uleb128 0x3
 1917 0243 91       		.byte	0x91
 1918 0244 58       		.sleb128 -40
 1919 0245 06       		.byte	0x6
 1920 0246 00       		.byte	0
 1921 0247 0A       		.uleb128 0xa
 1922 0248 2C000000 		.4byte	.LASF31
 1923 024c 01       		.byte	0x1
 1924 024d 72       		.byte	0x72
 1925 024e 8C000000 		.4byte	0x8c
 1926 0252 00000000 		.4byte	.LFB36
 1927 0256 68010000 		.4byte	.LFE36-.LFB36
 1928 025a 01       		.uleb128 0x1
 1929 025b 9C       		.byte	0x9c
 1930 025c A9020000 		.4byte	0x2a9
 1931 0260 0C       		.uleb128 0xc
 1932 0261 44020000 		.4byte	.LASF32
 1933 0265 01       		.byte	0x1
 1934 0266 72       		.byte	0x72
 1935 0267 6B000000 		.4byte	0x6b
 1936 026b 02       		.uleb128 0x2
 1937 026c 91       		.byte	0x91
 1938 026d 4F       		.sleb128 -49
 1939 026e 07       		.uleb128 0x7
 1940 026f B6020000 		.4byte	.LASF33
 1941 0273 01       		.byte	0x1
 1942 0274 73       		.byte	0x73
 1943 0275 A9020000 		.4byte	0x2a9
 1944 0279 03       		.uleb128 0x3
 1945 027a 91       		.byte	0x91
 1946 027b 5C       		.sleb128 -36
 1947 027c 06       		.byte	0x6
 1948 027d 07       		.uleb128 0x7
 1949 027e 00000000 		.4byte	.LASF34
 1950 0282 01       		.byte	0x1
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 41


 1951 0283 73       		.byte	0x73
 1952 0284 BC020000 		.4byte	0x2bc
 1953 0288 03       		.uleb128 0x3
 1954 0289 91       		.byte	0x91
 1955 028a 54       		.sleb128 -44
 1956 028b 06       		.byte	0x6
 1957 028c 07       		.uleb128 0x7
 1958 028d 25020000 		.4byte	.LASF21
 1959 0291 01       		.byte	0x1
 1960 0292 76       		.byte	0x76
 1961 0293 6B000000 		.4byte	0x6b
 1962 0297 02       		.uleb128 0x2
 1963 0298 91       		.byte	0x91
 1964 0299 67       		.sleb128 -25
 1965 029a 07       		.uleb128 0x7
 1966 029b BD010000 		.4byte	.LASF30
 1967 029f 01       		.byte	0x1
 1968 02a0 77       		.byte	0x77
 1969 02a1 6B000000 		.4byte	0x6b
 1970 02a5 02       		.uleb128 0x2
 1971 02a6 91       		.byte	0x91
 1972 02a7 53       		.sleb128 -45
 1973 02a8 00       		.byte	0
 1974 02a9 08       		.uleb128 0x8
 1975 02aa 6B000000 		.4byte	0x6b
 1976 02ae BC020000 		.4byte	0x2bc
 1977 02b2 09       		.uleb128 0x9
 1978 02b3 C2000000 		.4byte	0xc2
 1979 02b7 03       		.uleb128 0x3
 1980 02b8 91       		.byte	0x91
 1981 02b9 60       		.sleb128 -32
 1982 02ba 06       		.byte	0x6
 1983 02bb 00       		.byte	0
 1984 02bc 08       		.uleb128 0x8
 1985 02bd 6B000000 		.4byte	0x6b
 1986 02c1 CF020000 		.4byte	0x2cf
 1987 02c5 09       		.uleb128 0x9
 1988 02c6 C2000000 		.4byte	0xc2
 1989 02ca 03       		.uleb128 0x3
 1990 02cb 91       		.byte	0x91
 1991 02cc 58       		.sleb128 -40
 1992 02cd 06       		.byte	0x6
 1993 02ce 00       		.byte	0
 1994 02cf 0A       		.uleb128 0xa
 1995 02d0 D3020000 		.4byte	.LASF35
 1996 02d4 01       		.byte	0x1
 1997 02d5 8F       		.byte	0x8f
 1998 02d6 8C000000 		.4byte	0x8c
 1999 02da 00000000 		.4byte	.LFB37
 2000 02de 54010000 		.4byte	.LFE37-.LFB37
 2001 02e2 01       		.uleb128 0x1
 2002 02e3 9C       		.byte	0x9c
 2003 02e4 30030000 		.4byte	0x330
 2004 02e8 0C       		.uleb128 0xc
 2005 02e9 79020000 		.4byte	.LASF36
 2006 02ed 01       		.byte	0x1
 2007 02ee 8F       		.byte	0x8f
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 42


 2008 02ef 6B000000 		.4byte	0x6b
 2009 02f3 02       		.uleb128 0x2
 2010 02f4 91       		.byte	0x91
 2011 02f5 57       		.sleb128 -41
 2012 02f6 0C       		.uleb128 0xc
 2013 02f7 16010000 		.4byte	.LASF37
 2014 02fb 01       		.byte	0x1
 2015 02fc 8F       		.byte	0x8f
 2016 02fd 6B000000 		.4byte	0x6b
 2017 0301 02       		.uleb128 0x2
 2018 0302 91       		.byte	0x91
 2019 0303 56       		.sleb128 -42
 2020 0304 07       		.uleb128 0x7
 2021 0305 1F000000 		.4byte	.LASF38
 2022 0309 01       		.byte	0x1
 2023 030a 90       		.byte	0x90
 2024 030b 30030000 		.4byte	0x330
 2025 030f 03       		.uleb128 0x3
 2026 0310 91       		.byte	0x91
 2027 0311 60       		.sleb128 -32
 2028 0312 06       		.byte	0x6
 2029 0313 07       		.uleb128 0x7
 2030 0314 BD010000 		.4byte	.LASF30
 2031 0318 01       		.byte	0x1
 2032 0319 91       		.byte	0x91
 2033 031a 6B000000 		.4byte	0x6b
 2034 031e 02       		.uleb128 0x2
 2035 031f 91       		.byte	0x91
 2036 0320 5E       		.sleb128 -34
 2037 0321 07       		.uleb128 0x7
 2038 0322 25020000 		.4byte	.LASF21
 2039 0326 01       		.byte	0x1
 2040 0327 92       		.byte	0x92
 2041 0328 6B000000 		.4byte	0x6b
 2042 032c 02       		.uleb128 0x2
 2043 032d 91       		.byte	0x91
 2044 032e 5F       		.sleb128 -33
 2045 032f 00       		.byte	0
 2046 0330 08       		.uleb128 0x8
 2047 0331 6B000000 		.4byte	0x6b
 2048 0335 43030000 		.4byte	0x343
 2049 0339 09       		.uleb128 0x9
 2050 033a C2000000 		.4byte	0xc2
 2051 033e 03       		.uleb128 0x3
 2052 033f 91       		.byte	0x91
 2053 0340 64       		.sleb128 -28
 2054 0341 06       		.byte	0x6
 2055 0342 00       		.byte	0
 2056 0343 0A       		.uleb128 0xa
 2057 0344 3F010000 		.4byte	.LASF39
 2058 0348 01       		.byte	0x1
 2059 0349 B4       		.byte	0xb4
 2060 034a 8C000000 		.4byte	0x8c
 2061 034e 00000000 		.4byte	.LFB38
 2062 0352 3C010000 		.4byte	.LFE38-.LFB38
 2063 0356 01       		.uleb128 0x1
 2064 0357 9C       		.byte	0x9c
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 43


 2065 0358 C0030000 		.4byte	0x3c0
 2066 035c 0C       		.uleb128 0xc
 2067 035d C1020000 		.4byte	.LASF40
 2068 0361 01       		.byte	0x1
 2069 0362 B4       		.byte	0xb4
 2070 0363 C9000000 		.4byte	0xc9
 2071 0367 02       		.uleb128 0x2
 2072 0368 91       		.byte	0x91
 2073 0369 54       		.sleb128 -44
 2074 036a 0C       		.uleb128 0xc
 2075 036b 2C020000 		.4byte	.LASF27
 2076 036f 01       		.byte	0x1
 2077 0370 B4       		.byte	0xb4
 2078 0371 C9000000 		.4byte	0xc9
 2079 0375 02       		.uleb128 0x2
 2080 0376 91       		.byte	0x91
 2081 0377 50       		.sleb128 -48
 2082 0378 0C       		.uleb128 0xc
 2083 0379 11010000 		.4byte	.LASF41
 2084 037d 01       		.byte	0x1
 2085 037e B4       		.byte	0xb4
 2086 037f C9000000 		.4byte	0xc9
 2087 0383 02       		.uleb128 0x2
 2088 0384 91       		.byte	0x91
 2089 0385 4C       		.sleb128 -52
 2090 0386 0C       		.uleb128 0xc
 2091 0387 94020000 		.4byte	.LASF42
 2092 038b 01       		.byte	0x1
 2093 038c B4       		.byte	0xb4
 2094 038d C9000000 		.4byte	0xc9
 2095 0391 02       		.uleb128 0x2
 2096 0392 91       		.byte	0x91
 2097 0393 48       		.sleb128 -56
 2098 0394 07       		.uleb128 0x7
 2099 0395 25020000 		.4byte	.LASF21
 2100 0399 01       		.byte	0x1
 2101 039a B5       		.byte	0xb5
 2102 039b 6B000000 		.4byte	0x6b
 2103 039f 02       		.uleb128 0x2
 2104 03a0 91       		.byte	0x91
 2105 03a1 67       		.sleb128 -25
 2106 03a2 07       		.uleb128 0x7
 2107 03a3 9F020000 		.4byte	.LASF43
 2108 03a7 01       		.byte	0x1
 2109 03a8 B6       		.byte	0xb6
 2110 03a9 5D000000 		.4byte	0x5d
 2111 03ad 02       		.uleb128 0x2
 2112 03ae 91       		.byte	0x91
 2113 03af 60       		.sleb128 -32
 2114 03b0 07       		.uleb128 0x7
 2115 03b1 63010000 		.4byte	.LASF44
 2116 03b5 01       		.byte	0x1
 2117 03b6 B7       		.byte	0xb7
 2118 03b7 C0030000 		.4byte	0x3c0
 2119 03bb 03       		.uleb128 0x3
 2120 03bc 91       		.byte	0x91
 2121 03bd 58       		.sleb128 -40
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 44


 2122 03be 06       		.byte	0x6
 2123 03bf 00       		.byte	0
 2124 03c0 08       		.uleb128 0x8
 2125 03c1 6B000000 		.4byte	0x6b
 2126 03c5 D3030000 		.4byte	0x3d3
 2127 03c9 09       		.uleb128 0x9
 2128 03ca C2000000 		.4byte	0xc2
 2129 03ce 03       		.uleb128 0x3
 2130 03cf 91       		.byte	0x91
 2131 03d0 5C       		.sleb128 -36
 2132 03d1 06       		.byte	0x6
 2133 03d2 00       		.byte	0
 2134 03d3 0D       		.uleb128 0xd
 2135 03d4 6C020000 		.4byte	.LASF45
 2136 03d8 01       		.byte	0x1
 2137 03d9 0001     		.2byte	0x100
 2138 03db 8C000000 		.4byte	0x8c
 2139 03df 00000000 		.4byte	.LFB39
 2140 03e3 A0000000 		.4byte	.LFE39-.LFB39
 2141 03e7 01       		.uleb128 0x1
 2142 03e8 9C       		.byte	0x9c
 2143 03e9 1B040000 		.4byte	0x41b
 2144 03ed 0E       		.uleb128 0xe
 2145 03ee BD010000 		.4byte	.LASF30
 2146 03f2 01       		.byte	0x1
 2147 03f3 0001     		.2byte	0x100
 2148 03f5 1B040000 		.4byte	0x41b
 2149 03f9 02       		.uleb128 0x2
 2150 03fa 91       		.byte	0x91
 2151 03fb 64       		.sleb128 -28
 2152 03fc 0F       		.uleb128 0xf
 2153 03fd 63010000 		.4byte	.LASF44
 2154 0401 01       		.byte	0x1
 2155 0402 0201     		.2byte	0x102
 2156 0404 21040000 		.4byte	0x421
 2157 0408 02       		.uleb128 0x2
 2158 0409 91       		.byte	0x91
 2159 040a 74       		.sleb128 -12
 2160 040b 0F       		.uleb128 0xf
 2161 040c 78000000 		.4byte	.LASF46
 2162 0410 01       		.byte	0x1
 2163 0411 0301     		.2byte	0x103
 2164 0413 31040000 		.4byte	0x431
 2165 0417 02       		.uleb128 0x2
 2166 0418 91       		.byte	0x91
 2167 0419 6C       		.sleb128 -20
 2168 041a 00       		.byte	0
 2169 041b 05       		.uleb128 0x5
 2170 041c 04       		.byte	0x4
 2171 041d A2000000 		.4byte	0xa2
 2172 0421 08       		.uleb128 0x8
 2173 0422 6B000000 		.4byte	0x6b
 2174 0426 31040000 		.4byte	0x431
 2175 042a 10       		.uleb128 0x10
 2176 042b C2000000 		.4byte	0xc2
 2177 042f 01       		.byte	0x1
 2178 0430 00       		.byte	0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 45


 2179 0431 08       		.uleb128 0x8
 2180 0432 81000000 		.4byte	0x81
 2181 0436 41040000 		.4byte	0x441
 2182 043a 10       		.uleb128 0x10
 2183 043b C2000000 		.4byte	0xc2
 2184 043f 01       		.byte	0x1
 2185 0440 00       		.byte	0
 2186 0441 0D       		.uleb128 0xd
 2187 0442 F1020000 		.4byte	.LASF47
 2188 0446 01       		.byte	0x1
 2189 0447 1701     		.2byte	0x117
 2190 0449 8C000000 		.4byte	0x8c
 2191 044d 00000000 		.4byte	.LFB40
 2192 0451 04010000 		.4byte	.LFE40-.LFB40
 2193 0455 01       		.uleb128 0x1
 2194 0456 9C       		.byte	0x9c
 2195 0457 8A040000 		.4byte	0x48a
 2196 045b 0E       		.uleb128 0xe
 2197 045c 0C000000 		.4byte	.LASF48
 2198 0460 01       		.byte	0x1
 2199 0461 1701     		.2byte	0x117
 2200 0463 1B040000 		.4byte	0x41b
 2201 0467 02       		.uleb128 0x2
 2202 0468 91       		.byte	0x91
 2203 0469 54       		.sleb128 -44
 2204 046a 0F       		.uleb128 0xf
 2205 046b 63010000 		.4byte	.LASF44
 2206 046f 01       		.byte	0x1
 2207 0470 2B01     		.2byte	0x12b
 2208 0472 8A040000 		.4byte	0x48a
 2209 0476 03       		.uleb128 0x3
 2210 0477 91       		.byte	0x91
 2211 0478 60       		.sleb128 -32
 2212 0479 06       		.byte	0x6
 2213 047a 0F       		.uleb128 0xf
 2214 047b 25020000 		.4byte	.LASF21
 2215 047f 01       		.byte	0x1
 2216 0480 2C01     		.2byte	0x12c
 2217 0482 6B000000 		.4byte	0x6b
 2218 0486 02       		.uleb128 0x2
 2219 0487 91       		.byte	0x91
 2220 0488 5F       		.sleb128 -33
 2221 0489 00       		.byte	0
 2222 048a 08       		.uleb128 0x8
 2223 048b 6B000000 		.4byte	0x6b
 2224 048f 9D040000 		.4byte	0x49d
 2225 0493 09       		.uleb128 0x9
 2226 0494 C2000000 		.4byte	0xc2
 2227 0498 03       		.uleb128 0x3
 2228 0499 91       		.byte	0x91
 2229 049a 64       		.sleb128 -28
 2230 049b 06       		.byte	0x6
 2231 049c 00       		.byte	0
 2232 049d 11       		.uleb128 0x11
 2233 049e C8020000 		.4byte	.LASF49
 2234 04a2 01       		.byte	0x1
 2235 04a3 4401     		.2byte	0x144
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 46


 2236 04a5 8C000000 		.4byte	0x8c
 2237 04a9 00000000 		.4byte	.LFB41
 2238 04ad 28000000 		.4byte	.LFE41-.LFB41
 2239 04b1 01       		.uleb128 0x1
 2240 04b2 9C       		.byte	0x9c
 2241 04b3 D6040000 		.4byte	0x4d6
 2242 04b7 0E       		.uleb128 0xe
 2243 04b8 79020000 		.4byte	.LASF36
 2244 04bc 01       		.byte	0x1
 2245 04bd 4401     		.2byte	0x144
 2246 04bf 6B000000 		.4byte	0x6b
 2247 04c3 02       		.uleb128 0x2
 2248 04c4 91       		.byte	0x91
 2249 04c5 6F       		.sleb128 -17
 2250 04c6 0E       		.uleb128 0xe
 2251 04c7 A5020000 		.4byte	.LASF50
 2252 04cb 01       		.byte	0x1
 2253 04cc 4401     		.2byte	0x144
 2254 04ce D6040000 		.4byte	0x4d6
 2255 04d2 02       		.uleb128 0x2
 2256 04d3 91       		.byte	0x91
 2257 04d4 68       		.sleb128 -24
 2258 04d5 00       		.byte	0
 2259 04d6 05       		.uleb128 0x5
 2260 04d7 04       		.byte	0x4
 2261 04d8 97000000 		.4byte	0x97
 2262 04dc 07       		.uleb128 0x7
 2263 04dd 80010000 		.4byte	.LASF51
 2264 04e1 01       		.byte	0x1
 2265 04e2 1C       		.byte	0x1c
 2266 04e3 6B000000 		.4byte	0x6b
 2267 04e7 05       		.uleb128 0x5
 2268 04e8 03       		.byte	0x3
 2269 04e9 00000000 		.4byte	irrigationStatus
 2270 04ed 07       		.uleb128 0x7
 2271 04ee 0C010000 		.4byte	.LASF52
 2272 04f2 01       		.byte	0x1
 2273 04f3 1D       		.byte	0x1d
 2274 04f4 5D000000 		.4byte	0x5d
 2275 04f8 05       		.uleb128 0x5
 2276 04f9 03       		.byte	0x3
 2277 04fa 04000000 		.4byte	size
 2278 04fe 00       		.byte	0
 2279              		.section	.debug_abbrev,"",%progbits
 2280              	.Ldebug_abbrev0:
 2281 0000 01       		.uleb128 0x1
 2282 0001 11       		.uleb128 0x11
 2283 0002 01       		.byte	0x1
 2284 0003 25       		.uleb128 0x25
 2285 0004 0E       		.uleb128 0xe
 2286 0005 13       		.uleb128 0x13
 2287 0006 0B       		.uleb128 0xb
 2288 0007 03       		.uleb128 0x3
 2289 0008 0E       		.uleb128 0xe
 2290 0009 1B       		.uleb128 0x1b
 2291 000a 0E       		.uleb128 0xe
 2292 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 47


 2293 000c 17       		.uleb128 0x17
 2294 000d 11       		.uleb128 0x11
 2295 000e 01       		.uleb128 0x1
 2296 000f 10       		.uleb128 0x10
 2297 0010 17       		.uleb128 0x17
 2298 0011 00       		.byte	0
 2299 0012 00       		.byte	0
 2300 0013 02       		.uleb128 0x2
 2301 0014 24       		.uleb128 0x24
 2302 0015 00       		.byte	0
 2303 0016 0B       		.uleb128 0xb
 2304 0017 0B       		.uleb128 0xb
 2305 0018 3E       		.uleb128 0x3e
 2306 0019 0B       		.uleb128 0xb
 2307 001a 03       		.uleb128 0x3
 2308 001b 0E       		.uleb128 0xe
 2309 001c 00       		.byte	0
 2310 001d 00       		.byte	0
 2311 001e 03       		.uleb128 0x3
 2312 001f 24       		.uleb128 0x24
 2313 0020 00       		.byte	0
 2314 0021 0B       		.uleb128 0xb
 2315 0022 0B       		.uleb128 0xb
 2316 0023 3E       		.uleb128 0x3e
 2317 0024 0B       		.uleb128 0xb
 2318 0025 03       		.uleb128 0x3
 2319 0026 08       		.uleb128 0x8
 2320 0027 00       		.byte	0
 2321 0028 00       		.byte	0
 2322 0029 04       		.uleb128 0x4
 2323 002a 16       		.uleb128 0x16
 2324 002b 00       		.byte	0
 2325 002c 03       		.uleb128 0x3
 2326 002d 0E       		.uleb128 0xe
 2327 002e 3A       		.uleb128 0x3a
 2328 002f 0B       		.uleb128 0xb
 2329 0030 3B       		.uleb128 0x3b
 2330 0031 0B       		.uleb128 0xb
 2331 0032 49       		.uleb128 0x49
 2332 0033 13       		.uleb128 0x13
 2333 0034 00       		.byte	0
 2334 0035 00       		.byte	0
 2335 0036 05       		.uleb128 0x5
 2336 0037 0F       		.uleb128 0xf
 2337 0038 00       		.byte	0
 2338 0039 0B       		.uleb128 0xb
 2339 003a 0B       		.uleb128 0xb
 2340 003b 49       		.uleb128 0x49
 2341 003c 13       		.uleb128 0x13
 2342 003d 00       		.byte	0
 2343 003e 00       		.byte	0
 2344 003f 06       		.uleb128 0x6
 2345 0040 2E       		.uleb128 0x2e
 2346 0041 01       		.byte	0x1
 2347 0042 3F       		.uleb128 0x3f
 2348 0043 19       		.uleb128 0x19
 2349 0044 03       		.uleb128 0x3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 48


 2350 0045 0E       		.uleb128 0xe
 2351 0046 3A       		.uleb128 0x3a
 2352 0047 0B       		.uleb128 0xb
 2353 0048 3B       		.uleb128 0x3b
 2354 0049 0B       		.uleb128 0xb
 2355 004a 27       		.uleb128 0x27
 2356 004b 19       		.uleb128 0x19
 2357 004c 11       		.uleb128 0x11
 2358 004d 01       		.uleb128 0x1
 2359 004e 12       		.uleb128 0x12
 2360 004f 06       		.uleb128 0x6
 2361 0050 40       		.uleb128 0x40
 2362 0051 18       		.uleb128 0x18
 2363 0052 9642     		.uleb128 0x2116
 2364 0054 19       		.uleb128 0x19
 2365 0055 01       		.uleb128 0x1
 2366 0056 13       		.uleb128 0x13
 2367 0057 00       		.byte	0
 2368 0058 00       		.byte	0
 2369 0059 07       		.uleb128 0x7
 2370 005a 34       		.uleb128 0x34
 2371 005b 00       		.byte	0
 2372 005c 03       		.uleb128 0x3
 2373 005d 0E       		.uleb128 0xe
 2374 005e 3A       		.uleb128 0x3a
 2375 005f 0B       		.uleb128 0xb
 2376 0060 3B       		.uleb128 0x3b
 2377 0061 0B       		.uleb128 0xb
 2378 0062 49       		.uleb128 0x49
 2379 0063 13       		.uleb128 0x13
 2380 0064 02       		.uleb128 0x2
 2381 0065 18       		.uleb128 0x18
 2382 0066 00       		.byte	0
 2383 0067 00       		.byte	0
 2384 0068 08       		.uleb128 0x8
 2385 0069 01       		.uleb128 0x1
 2386 006a 01       		.byte	0x1
 2387 006b 49       		.uleb128 0x49
 2388 006c 13       		.uleb128 0x13
 2389 006d 01       		.uleb128 0x1
 2390 006e 13       		.uleb128 0x13
 2391 006f 00       		.byte	0
 2392 0070 00       		.byte	0
 2393 0071 09       		.uleb128 0x9
 2394 0072 21       		.uleb128 0x21
 2395 0073 00       		.byte	0
 2396 0074 49       		.uleb128 0x49
 2397 0075 13       		.uleb128 0x13
 2398 0076 2F       		.uleb128 0x2f
 2399 0077 18       		.uleb128 0x18
 2400 0078 00       		.byte	0
 2401 0079 00       		.byte	0
 2402 007a 0A       		.uleb128 0xa
 2403 007b 2E       		.uleb128 0x2e
 2404 007c 01       		.byte	0x1
 2405 007d 3F       		.uleb128 0x3f
 2406 007e 19       		.uleb128 0x19
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 49


 2407 007f 03       		.uleb128 0x3
 2408 0080 0E       		.uleb128 0xe
 2409 0081 3A       		.uleb128 0x3a
 2410 0082 0B       		.uleb128 0xb
 2411 0083 3B       		.uleb128 0x3b
 2412 0084 0B       		.uleb128 0xb
 2413 0085 27       		.uleb128 0x27
 2414 0086 19       		.uleb128 0x19
 2415 0087 49       		.uleb128 0x49
 2416 0088 13       		.uleb128 0x13
 2417 0089 11       		.uleb128 0x11
 2418 008a 01       		.uleb128 0x1
 2419 008b 12       		.uleb128 0x12
 2420 008c 06       		.uleb128 0x6
 2421 008d 40       		.uleb128 0x40
 2422 008e 18       		.uleb128 0x18
 2423 008f 9642     		.uleb128 0x2116
 2424 0091 19       		.uleb128 0x19
 2425 0092 01       		.uleb128 0x1
 2426 0093 13       		.uleb128 0x13
 2427 0094 00       		.byte	0
 2428 0095 00       		.byte	0
 2429 0096 0B       		.uleb128 0xb
 2430 0097 05       		.uleb128 0x5
 2431 0098 00       		.byte	0
 2432 0099 03       		.uleb128 0x3
 2433 009a 08       		.uleb128 0x8
 2434 009b 3A       		.uleb128 0x3a
 2435 009c 0B       		.uleb128 0xb
 2436 009d 3B       		.uleb128 0x3b
 2437 009e 0B       		.uleb128 0xb
 2438 009f 49       		.uleb128 0x49
 2439 00a0 13       		.uleb128 0x13
 2440 00a1 02       		.uleb128 0x2
 2441 00a2 18       		.uleb128 0x18
 2442 00a3 00       		.byte	0
 2443 00a4 00       		.byte	0
 2444 00a5 0C       		.uleb128 0xc
 2445 00a6 05       		.uleb128 0x5
 2446 00a7 00       		.byte	0
 2447 00a8 03       		.uleb128 0x3
 2448 00a9 0E       		.uleb128 0xe
 2449 00aa 3A       		.uleb128 0x3a
 2450 00ab 0B       		.uleb128 0xb
 2451 00ac 3B       		.uleb128 0x3b
 2452 00ad 0B       		.uleb128 0xb
 2453 00ae 49       		.uleb128 0x49
 2454 00af 13       		.uleb128 0x13
 2455 00b0 02       		.uleb128 0x2
 2456 00b1 18       		.uleb128 0x18
 2457 00b2 00       		.byte	0
 2458 00b3 00       		.byte	0
 2459 00b4 0D       		.uleb128 0xd
 2460 00b5 2E       		.uleb128 0x2e
 2461 00b6 01       		.byte	0x1
 2462 00b7 3F       		.uleb128 0x3f
 2463 00b8 19       		.uleb128 0x19
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 50


 2464 00b9 03       		.uleb128 0x3
 2465 00ba 0E       		.uleb128 0xe
 2466 00bb 3A       		.uleb128 0x3a
 2467 00bc 0B       		.uleb128 0xb
 2468 00bd 3B       		.uleb128 0x3b
 2469 00be 05       		.uleb128 0x5
 2470 00bf 27       		.uleb128 0x27
 2471 00c0 19       		.uleb128 0x19
 2472 00c1 49       		.uleb128 0x49
 2473 00c2 13       		.uleb128 0x13
 2474 00c3 11       		.uleb128 0x11
 2475 00c4 01       		.uleb128 0x1
 2476 00c5 12       		.uleb128 0x12
 2477 00c6 06       		.uleb128 0x6
 2478 00c7 40       		.uleb128 0x40
 2479 00c8 18       		.uleb128 0x18
 2480 00c9 9642     		.uleb128 0x2116
 2481 00cb 19       		.uleb128 0x19
 2482 00cc 01       		.uleb128 0x1
 2483 00cd 13       		.uleb128 0x13
 2484 00ce 00       		.byte	0
 2485 00cf 00       		.byte	0
 2486 00d0 0E       		.uleb128 0xe
 2487 00d1 05       		.uleb128 0x5
 2488 00d2 00       		.byte	0
 2489 00d3 03       		.uleb128 0x3
 2490 00d4 0E       		.uleb128 0xe
 2491 00d5 3A       		.uleb128 0x3a
 2492 00d6 0B       		.uleb128 0xb
 2493 00d7 3B       		.uleb128 0x3b
 2494 00d8 05       		.uleb128 0x5
 2495 00d9 49       		.uleb128 0x49
 2496 00da 13       		.uleb128 0x13
 2497 00db 02       		.uleb128 0x2
 2498 00dc 18       		.uleb128 0x18
 2499 00dd 00       		.byte	0
 2500 00de 00       		.byte	0
 2501 00df 0F       		.uleb128 0xf
 2502 00e0 34       		.uleb128 0x34
 2503 00e1 00       		.byte	0
 2504 00e2 03       		.uleb128 0x3
 2505 00e3 0E       		.uleb128 0xe
 2506 00e4 3A       		.uleb128 0x3a
 2507 00e5 0B       		.uleb128 0xb
 2508 00e6 3B       		.uleb128 0x3b
 2509 00e7 05       		.uleb128 0x5
 2510 00e8 49       		.uleb128 0x49
 2511 00e9 13       		.uleb128 0x13
 2512 00ea 02       		.uleb128 0x2
 2513 00eb 18       		.uleb128 0x18
 2514 00ec 00       		.byte	0
 2515 00ed 00       		.byte	0
 2516 00ee 10       		.uleb128 0x10
 2517 00ef 21       		.uleb128 0x21
 2518 00f0 00       		.byte	0
 2519 00f1 49       		.uleb128 0x49
 2520 00f2 13       		.uleb128 0x13
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 51


 2521 00f3 2F       		.uleb128 0x2f
 2522 00f4 0B       		.uleb128 0xb
 2523 00f5 00       		.byte	0
 2524 00f6 00       		.byte	0
 2525 00f7 11       		.uleb128 0x11
 2526 00f8 2E       		.uleb128 0x2e
 2527 00f9 01       		.byte	0x1
 2528 00fa 3F       		.uleb128 0x3f
 2529 00fb 19       		.uleb128 0x19
 2530 00fc 03       		.uleb128 0x3
 2531 00fd 0E       		.uleb128 0xe
 2532 00fe 3A       		.uleb128 0x3a
 2533 00ff 0B       		.uleb128 0xb
 2534 0100 3B       		.uleb128 0x3b
 2535 0101 05       		.uleb128 0x5
 2536 0102 27       		.uleb128 0x27
 2537 0103 19       		.uleb128 0x19
 2538 0104 49       		.uleb128 0x49
 2539 0105 13       		.uleb128 0x13
 2540 0106 11       		.uleb128 0x11
 2541 0107 01       		.uleb128 0x1
 2542 0108 12       		.uleb128 0x12
 2543 0109 06       		.uleb128 0x6
 2544 010a 40       		.uleb128 0x40
 2545 010b 18       		.uleb128 0x18
 2546 010c 9742     		.uleb128 0x2117
 2547 010e 19       		.uleb128 0x19
 2548 010f 01       		.uleb128 0x1
 2549 0110 13       		.uleb128 0x13
 2550 0111 00       		.byte	0
 2551 0112 00       		.byte	0
 2552 0113 00       		.byte	0
 2553              		.section	.debug_aranges,"",%progbits
 2554 0000 5C000000 		.4byte	0x5c
 2555 0004 0200     		.2byte	0x2
 2556 0006 00000000 		.4byte	.Ldebug_info0
 2557 000a 04       		.byte	0x4
 2558 000b 00       		.byte	0
 2559 000c 0000     		.2byte	0
 2560 000e 0000     		.2byte	0
 2561 0010 00000000 		.4byte	.LFB33
 2562 0014 0C010000 		.4byte	.LFE33-.LFB33
 2563 0018 00000000 		.4byte	.LFB34
 2564 001c 68010000 		.4byte	.LFE34-.LFB34
 2565 0020 00000000 		.4byte	.LFB35
 2566 0024 68010000 		.4byte	.LFE35-.LFB35
 2567 0028 00000000 		.4byte	.LFB36
 2568 002c 68010000 		.4byte	.LFE36-.LFB36
 2569 0030 00000000 		.4byte	.LFB37
 2570 0034 54010000 		.4byte	.LFE37-.LFB37
 2571 0038 00000000 		.4byte	.LFB38
 2572 003c 3C010000 		.4byte	.LFE38-.LFB38
 2573 0040 00000000 		.4byte	.LFB39
 2574 0044 A0000000 		.4byte	.LFE39-.LFB39
 2575 0048 00000000 		.4byte	.LFB40
 2576 004c 04010000 		.4byte	.LFE40-.LFB40
 2577 0050 00000000 		.4byte	.LFB41
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 52


 2578 0054 28000000 		.4byte	.LFE41-.LFB41
 2579 0058 00000000 		.4byte	0
 2580 005c 00000000 		.4byte	0
 2581              		.section	.debug_ranges,"",%progbits
 2582              	.Ldebug_ranges0:
 2583 0000 00000000 		.4byte	.LFB33
 2584 0004 0C010000 		.4byte	.LFE33
 2585 0008 00000000 		.4byte	.LFB34
 2586 000c 68010000 		.4byte	.LFE34
 2587 0010 00000000 		.4byte	.LFB35
 2588 0014 68010000 		.4byte	.LFE35
 2589 0018 00000000 		.4byte	.LFB36
 2590 001c 68010000 		.4byte	.LFE36
 2591 0020 00000000 		.4byte	.LFB37
 2592 0024 54010000 		.4byte	.LFE37
 2593 0028 00000000 		.4byte	.LFB38
 2594 002c 3C010000 		.4byte	.LFE38
 2595 0030 00000000 		.4byte	.LFB39
 2596 0034 A0000000 		.4byte	.LFE39
 2597 0038 00000000 		.4byte	.LFB40
 2598 003c 04010000 		.4byte	.LFE40
 2599 0040 00000000 		.4byte	.LFB41
 2600 0044 28000000 		.4byte	.LFE41
 2601 0048 00000000 		.4byte	0
 2602 004c 00000000 		.4byte	0
 2603              		.section	.debug_line,"",%progbits
 2604              	.Ldebug_line0:
 2605 0000 AA010000 		.section	.debug_str,"MS",%progbits,1
 2605      02004A00 
 2605      00000201 
 2605      FB0E0D00 
 2605      01010101 
 2606              	.LASF34:
 2607 0000 7475726E 		.ascii	"turnOffVent\000"
 2607      4F666656 
 2607      656E7400 
 2608              	.LASF48:
 2609 000c 6C696768 		.ascii	"light\000"
 2609      7400
 2610              	.LASF25:
 2611 0012 61646A75 		.ascii	"adjustWindow\000"
 2611      73745769 
 2611      6E646F77 
 2611      00
 2612              	.LASF38:
 2613 001f 69727269 		.ascii	"irriTransfer\000"
 2613      5472616E 
 2613      73666572 
 2613      00
 2614              	.LASF31:
 2615 002c 61646A75 		.ascii	"adjustVentilation\000"
 2615      73745665 
 2615      6E74696C 
 2615      6174696F 
 2615      6E00
 2616              	.LASF54:
 2617 003e 2E5C4932 		.ascii	".\\I2C_Class.c\000"
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 53


 2617      435F436C 
 2617      6173732E 
 2617      6300
 2618              	.LASF3:
 2619 004c 73686F72 		.ascii	"short unsigned int\000"
 2619      7420756E 
 2619      7369676E 
 2619      65642069 
 2619      6E7400
 2620              	.LASF20:
 2621 005f 6C696768 		.ascii	"lightControl\000"
 2621      74436F6E 
 2621      74726F6C 
 2621      00
 2622              	.LASF29:
 2623 006c 7475726E 		.ascii	"turnOffHeat\000"
 2623      4F666648 
 2623      65617400 
 2624              	.LASF46:
 2625 0078 6572726F 		.ascii	"errorStatus\000"
 2625      72537461 
 2625      74757300 
 2626              	.LASF9:
 2627 0084 75696E74 		.ascii	"uint8\000"
 2627      3800
 2628              	.LASF15:
 2629 008a 666C6F61 		.ascii	"float\000"
 2629      7400
 2630              	.LASF53:
 2631 0090 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2631      4320342E 
 2631      382E3420 
 2631      32303134 
 2631      30353236 
 2632 00c3 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2632      20726576 
 2632      6973696F 
 2632      6E203231 
 2632      31333538 
 2633 00f6 30202D66 		.ascii	"0 -ffunction-sections\000"
 2633      66756E63 
 2633      74696F6E 
 2633      2D736563 
 2633      74696F6E 
 2634              	.LASF52:
 2635 010c 73697A65 		.ascii	"size\000"
 2635      00
 2636              	.LASF41:
 2637 0111 76656E74 		.ascii	"vent\000"
 2637      00
 2638              	.LASF37:
 2639 0116 6F6E4F66 		.ascii	"onOff\000"
 2639      6600
 2640              	.LASF24:
 2641 011c 74656D70 		.ascii	"tempWindow\000"
 2641      57696E64 
 2641      6F7700
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 54


 2642              	.LASF13:
 2643 0127 696E7431 		.ascii	"int16\000"
 2643      3600
 2644              	.LASF5:
 2645 012d 6C6F6E67 		.ascii	"long unsigned int\000"
 2645      20756E73 
 2645      69676E65 
 2645      6420696E 
 2645      7400
 2646              	.LASF39:
 2647 013f 67657441 		.ascii	"getActuatorStatus\000"
 2647      63747561 
 2647      746F7253 
 2647      74617475 
 2647      7300
 2648              	.LASF14:
 2649 0151 696E7433 		.ascii	"int32\000"
 2649      3200
 2650              	.LASF0:
 2651 0157 7369676E 		.ascii	"signed char\000"
 2651      65642063 
 2651      68617200 
 2652              	.LASF44:
 2653 0163 64617461 		.ascii	"dataget\000"
 2653      67657400 
 2654              	.LASF1:
 2655 016b 756E7369 		.ascii	"unsigned char\000"
 2655      676E6564 
 2655      20636861 
 2655      7200
 2656              	.LASF16:
 2657 0179 646F7562 		.ascii	"double\000"
 2657      6C6500
 2658              	.LASF51:
 2659 0180 69727269 		.ascii	"irrigationStatus\000"
 2659      67617469 
 2659      6F6E5374 
 2659      61747573 
 2659      00
 2660              	.LASF23:
 2661 0191 636C6F73 		.ascii	"closeWindow\000"
 2661      6557696E 
 2661      646F7700 
 2662              	.LASF10:
 2663 019d 75696E74 		.ascii	"uint16\000"
 2663      313600
 2664              	.LASF12:
 2665 01a4 696E7438 		.ascii	"int8\000"
 2665      00
 2666              	.LASF11:
 2667 01a9 75696E74 		.ascii	"uint32\000"
 2667      333200
 2668              	.LASF8:
 2669 01b0 756E7369 		.ascii	"unsigned int\000"
 2669      676E6564 
 2669      20696E74 
 2669      00
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 55


 2670              	.LASF30:
 2671 01bd 74656D70 		.ascii	"temp\000"
 2671      00
 2672              	.LASF7:
 2673 01c2 6C6F6E67 		.ascii	"long long unsigned int\000"
 2673      206C6F6E 
 2673      6720756E 
 2673      7369676E 
 2673      65642069 
 2674              	.LASF55:
 2675 01d9 433A5C55 		.ascii	"C:\\Users\\Snufkin\\Documents\\GitHub\\PSoC_Master\\"
 2675      73657273 
 2675      5C536E75 
 2675      666B696E 
 2675      5C446F63 
 2676 0207 50536F43 		.ascii	"PSoC_Master\\PSoC_Master.cydsn\000"
 2676      5F4D6173 
 2676      7465725C 
 2676      50536F43 
 2676      5F4D6173 
 2677              	.LASF21:
 2678 0225 72657375 		.ascii	"result\000"
 2678      6C7400
 2679              	.LASF27:
 2680 022c 68656174 		.ascii	"heat\000"
 2680      00
 2681              	.LASF22:
 2682 0231 6F70656E 		.ascii	"openWindow\000"
 2682      57696E64 
 2682      6F7700
 2683              	.LASF56:
 2684 023c 696E6974 		.ascii	"initI2C\000"
 2684      49324300 
 2685              	.LASF32:
 2686 0244 73706565 		.ascii	"speed\000"
 2686      6400
 2687              	.LASF18:
 2688 024a 73697A65 		.ascii	"sizetype\000"
 2688      74797065 
 2688      00
 2689              	.LASF26:
 2690 0253 61646A75 		.ascii	"adjustHeat\000"
 2690      73744865 
 2690      617400
 2691              	.LASF6:
 2692 025e 6C6F6E67 		.ascii	"long long int\000"
 2692      206C6F6E 
 2692      6720696E 
 2692      7400
 2693              	.LASF45:
 2694 026c 67657454 		.ascii	"getTemp\000"
 2694      656D7000 
 2695              	.LASF17:
 2696 0274 63686172 		.ascii	"char\000"
 2696      00
 2697              	.LASF36:
 2698 0279 696E6465 		.ascii	"index\000"
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccHrM7ag.s 			page 56


 2698      7800
 2699              	.LASF28:
 2700 027f 7475726E 		.ascii	"turnHeatOn\000"
 2700      48656174 
 2700      4F6E00
 2701              	.LASF2:
 2702 028a 73686F72 		.ascii	"short int\000"
 2702      7420696E 
 2702      7400
 2703              	.LASF42:
 2704 0294 69727269 		.ascii	"irrigation\000"
 2704      67617469 
 2704      6F6E00
 2705              	.LASF43:
 2706 029f 52446275 		.ascii	"RDbuf\000"
 2706      6600
 2707              	.LASF50:
 2708 02a5 736F696C 		.ascii	"soilHum\000"
 2708      48756D00 
 2709              	.LASF4:
 2710 02ad 6C6F6E67 		.ascii	"long int\000"
 2710      20696E74 
 2710      00
 2711              	.LASF33:
 2712 02b6 7475726E 		.ascii	"turnOnVent\000"
 2712      4F6E5665 
 2712      6E7400
 2713              	.LASF40:
 2714 02c1 77696E64 		.ascii	"window\000"
 2714      6F7700
 2715              	.LASF49:
 2716 02c8 67657453 		.ascii	"getSoilHum\000"
 2716      6F696C48 
 2716      756D00
 2717              	.LASF35:
 2718 02d3 61646A75 		.ascii	"adjustIrrigation\000"
 2718      73744972 
 2718      72696761 
 2718      74696F6E 
 2718      00
 2719              	.LASF19:
 2720 02e4 6C696768 		.ascii	"lightCommand\000"
 2720      74436F6D 
 2720      6D616E64 
 2720      00
 2721              	.LASF47:
 2722 02f1 6765744C 		.ascii	"getLight\000"
 2722      69676874 
 2722      00
 2723              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
