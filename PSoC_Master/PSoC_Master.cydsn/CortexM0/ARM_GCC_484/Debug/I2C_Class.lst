ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"I2C_Class.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.data
  18              		.type	irrigationStatus, %object
  19              		.size	irrigationStatus, 1
  20              	irrigationStatus:
  21 0000 C0       		.byte	-64
  22 0001 000000   		.align	2
  23              		.type	size, %object
  24              		.size	size, 4
  25              	size:
  26 0004 01000000 		.word	1
  27              		.section	.text.initI2C,"ax",%progbits
  28              		.align	2
  29              		.global	initI2C
  30              		.code	16
  31              		.thumb_func
  32              		.type	initI2C, %function
  33              	initI2C:
  34              	.LFB33:
  35              		.file 1 ".\\I2C_Class.c"
   1:.\I2C_Class.c **** /* ========================================
   2:.\I2C_Class.c ****  * 
   3:.\I2C_Class.c ****  * AutoGreen - PSoC_Master
   4:.\I2C_Class.c ****  * I2C_Class.c
   5:.\I2C_Class.c ****  * (Description)
   6:.\I2C_Class.c ****  * PRJ3 - GRP9
   7:.\I2C_Class.c ****  * 2015-04-15
   8:.\I2C_Class.c ****  *
   9:.\I2C_Class.c ****  * ========================================
  10:.\I2C_Class.c **** */
  11:.\I2C_Class.c **** 
  12:.\I2C_Class.c **** // Include files
  13:.\I2C_Class.c **** #include "I2C_Class.h"
  14:.\I2C_Class.c **** 
  15:.\I2C_Class.c **** // Definitions
  16:.\I2C_Class.c **** #define TEMP_AND_HUM_SENSOR_ADDRESS 0x27
  17:.\I2C_Class.c **** #define ACTUATOR_ADRESS 0x42
  18:.\I2C_Class.c **** #define LIGHT_SENSOR_COMMAND_ADDRESS 0x00
  19:.\I2C_Class.c **** #define LIGHT_SENSOR_CONTROL_ADDRESS 0x01
  20:.\I2C_Class.c **** #define LIGHT_SENSOR_LSB 0x04  
  21:.\I2C_Class.c **** #define LIGHT_SENSOR_MSB 0x05
  22:.\I2C_Class.c **** 
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 2


  23:.\I2C_Class.c **** //Uncomment to enable debugging
  24:.\I2C_Class.c **** //#define debugging 
  25:.\I2C_Class.c **** 
  26:.\I2C_Class.c **** // Private data members
  27:.\I2C_Class.c **** static uint8 irrigationStatus = 0b11000000;
  28:.\I2C_Class.c **** static int size = 1;
  29:.\I2C_Class.c **** 
  30:.\I2C_Class.c **** // Private prototypes
  31:.\I2C_Class.c **** 
  32:.\I2C_Class.c **** void initI2C(void){
  36              		.loc 1 32 0
  37              		.cfi_startproc
  38 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  39              		.cfi_def_cfa_offset 20
  40              		.cfi_offset 4, -20
  41              		.cfi_offset 5, -16
  42              		.cfi_offset 6, -12
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 95B0     		sub	sp, sp, #84
  46              		.cfi_def_cfa_offset 104
  47 0004 00AF     		add	r7, sp, #0
  48              		.cfi_def_cfa_register 7
  49 0006 6B46     		mov	r3, sp
  50 0008 1E1C     		mov	r6, r3
  33:.\I2C_Class.c ****     I2C_Start();                    // Starts I2C component
  51              		.loc 1 33 0
  52 000a FFF7FEFF 		bl	I2C_Start
  34:.\I2C_Class.c ****     I2C_I2CMasterClearStatus();     // Clear status flags
  53              		.loc 1 34 0
  54 000e FFF7FEFF 		bl	I2C_I2CMasterClearStatus
  35:.\I2C_Class.c ****     CyGlobalIntEnable;
  55              		.loc 1 35 0
  56              	@ 35 ".\I2C_Class.c" 1
  57 0012 62B6     		CPSIE   i
  58              	@ 0 "" 2
  36:.\I2C_Class.c ****     
  37:.\I2C_Class.c ****     // Light sensor init.
  38:.\I2C_Class.c ****     /*sensor is set up to internal integration timing, light count data in signed and 2^(8) clock c
  39:.\I2C_Class.c ****     uint8 lightCommand[size], lightControl[size];
  59              		.loc 1 39 0
  60              		.code	16
  61 0014 3C4B     		ldr	r3, .L3
  62 0016 1A68     		ldr	r2, [r3]
  63 0018 531E     		sub	r3, r2, #1
  64 001a FB64     		str	r3, [r7, #76]
  65 001c 131C     		mov	r3, r2
  66 001e 1C1C     		mov	r4, r3
  67 0020 0023     		mov	r3, #0
  68 0022 1D1C     		mov	r5, r3
  69 0024 630F     		lsr	r3, r4, #29
  70 0026 E900     		lsl	r1, r5, #3
  71 0028 7963     		str	r1, [r7, #52]
  72 002a 796B     		ldr	r1, [r7, #52]
  73 002c 1943     		orr	r1, r3
  74 002e 7963     		str	r1, [r7, #52]
  75 0030 E300     		lsl	r3, r4, #3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 3


  76 0032 131C     		mov	r3, r2
  77 0034 BB62     		str	r3, [r7, #40]
  78 0036 0023     		mov	r3, #0
  79 0038 FB62     		str	r3, [r7, #44]
  80 003a B96A     		ldr	r1, [r7, #40]
  81 003c 4B0F     		lsr	r3, r1, #29
  82 003e F96A     		ldr	r1, [r7, #44]
  83 0040 C900     		lsl	r1, r1, #3
  84 0042 7962     		str	r1, [r7, #36]
  85 0044 796A     		ldr	r1, [r7, #36]
  86 0046 1943     		orr	r1, r3
  87 0048 7962     		str	r1, [r7, #36]
  88 004a BB6A     		ldr	r3, [r7, #40]
  89 004c DB00     		lsl	r3, r3, #3
  90 004e 131C     		mov	r3, r2
  91 0050 0733     		add	r3, r3, #7
  92 0052 DB08     		lsr	r3, r3, #3
  93 0054 DB00     		lsl	r3, r3, #3
  94 0056 6946     		mov	r1, sp
  95 0058 C91A     		sub	r1, r1, r3
  96 005a 8D46     		mov	sp, r1
  97 005c 6B46     		mov	r3, sp
  98 005e 0033     		add	r3, r3, #0
  99 0060 BB64     		str	r3, [r7, #72]
 100 0062 294B     		ldr	r3, .L3
 101 0064 1B68     		ldr	r3, [r3]
 102 0066 5A1E     		sub	r2, r3, #1
 103 0068 7A64     		str	r2, [r7, #68]
 104 006a 1A1C     		mov	r2, r3
 105 006c BA61     		str	r2, [r7, #24]
 106 006e 0022     		mov	r2, #0
 107 0070 FA61     		str	r2, [r7, #28]
 108 0072 B969     		ldr	r1, [r7, #24]
 109 0074 4A0F     		lsr	r2, r1, #29
 110 0076 F969     		ldr	r1, [r7, #28]
 111 0078 C900     		lsl	r1, r1, #3
 112 007a 7961     		str	r1, [r7, #20]
 113 007c 7969     		ldr	r1, [r7, #20]
 114 007e 1143     		orr	r1, r2
 115 0080 7961     		str	r1, [r7, #20]
 116 0082 BA69     		ldr	r2, [r7, #24]
 117 0084 D200     		lsl	r2, r2, #3
 118 0086 1A1C     		mov	r2, r3
 119 0088 BA60     		str	r2, [r7, #8]
 120 008a 0022     		mov	r2, #0
 121 008c FA60     		str	r2, [r7, #12]
 122 008e B968     		ldr	r1, [r7, #8]
 123 0090 4A0F     		lsr	r2, r1, #29
 124 0092 F968     		ldr	r1, [r7, #12]
 125 0094 C900     		lsl	r1, r1, #3
 126 0096 7960     		str	r1, [r7, #4]
 127 0098 7968     		ldr	r1, [r7, #4]
 128 009a 1143     		orr	r1, r2
 129 009c 7960     		str	r1, [r7, #4]
 130 009e BA68     		ldr	r2, [r7, #8]
 131 00a0 D200     		lsl	r2, r2, #3
 132 00a2 0733     		add	r3, r3, #7
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 4


 133 00a4 DB08     		lsr	r3, r3, #3
 134 00a6 DB00     		lsl	r3, r3, #3
 135 00a8 6946     		mov	r1, sp
 136 00aa C91A     		sub	r1, r1, r3
 137 00ac 8D46     		mov	sp, r1
 138 00ae 6B46     		mov	r3, sp
 139 00b0 0033     		add	r3, r3, #0
 140 00b2 3B64     		str	r3, [r7, #64]
  40:.\I2C_Class.c ****     lightCommand[0] = 0b10001010;       //ADC-normal, Normal operation, Internal timing, signed out
 141              		.loc 1 40 0
 142 00b4 BB6C     		ldr	r3, [r7, #72]
 143 00b6 8A22     		mov	r2, #138
 144 00b8 1A70     		strb	r2, [r3]
  41:.\I2C_Class.c ****     lightControl[0] = 0b00001100;       // Lux-range = 128000. Calculation: ((range(k)?*(100k/100k)
 145              		.loc 1 41 0
 146 00ba 3B6C     		ldr	r3, [r7, #64]
 147 00bc 0C22     		mov	r2, #12
 148 00be 1A70     		strb	r2, [r3]
  42:.\I2C_Class.c **** 	uint8 result;
  43:.\I2C_Class.c ****     // lux range is set to 128.000 lux if REXT is set up to 50K resistor.
  44:.\I2C_Class.c ****     //uint8 lightControl = 0b00001100;
  45:.\I2C_Class.c ****     
  46:.\I2C_Class.c ****     result = I2C_I2CMasterWriteBuf(LIGHT_SENSOR_COMMAND_ADDRESS, lightCommand, size, I2C_I2C_MODE_C
 149              		.loc 1 46 0
 150 00c0 BA6C     		ldr	r2, [r7, #72]
 151 00c2 114B     		ldr	r3, .L3
 152 00c4 1B68     		ldr	r3, [r3]
 153 00c6 0020     		mov	r0, #0
 154 00c8 111C     		mov	r1, r2
 155 00ca 1A1C     		mov	r2, r3
 156 00cc 0023     		mov	r3, #0
 157 00ce FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 158 00d2 021C     		mov	r2, r0
 159 00d4 3B1C     		mov	r3, r7
 160 00d6 3F33     		add	r3, r3, #63
 161 00d8 1A70     		strb	r2, [r3]
  47:.\I2C_Class.c ****     
  48:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 162              		.loc 1 48 0
 163 00da 3B1C     		mov	r3, r7
 164 00dc 3F33     		add	r3, r3, #63
 165 00de 1B78     		ldrb	r3, [r3]
 166 00e0 002B     		cmp	r3, #0
 167 00e2 0CD1     		bne	.L2
  49:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(LIGHT_SENSOR_CONTROL_ADDRESS, lightControl, size, I2C_I2C_MO
 168              		.loc 1 49 0
 169 00e4 3A6C     		ldr	r2, [r7, #64]
 170 00e6 084B     		ldr	r3, .L3
 171 00e8 1B68     		ldr	r3, [r3]
 172 00ea 0120     		mov	r0, #1
 173 00ec 111C     		mov	r1, r2
 174 00ee 1A1C     		mov	r2, r3
 175 00f0 0023     		mov	r3, #0
 176 00f2 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 177 00f6 021C     		mov	r2, r0
 178 00f8 3B1C     		mov	r3, r7
 179 00fa 3F33     		add	r3, r3, #63
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 5


 180 00fc 1A70     		strb	r2, [r3]
 181              	.L2:
 182 00fe B546     		mov	sp, r6
  50:.\I2C_Class.c ****     }
  51:.\I2C_Class.c **** }
 183              		.loc 1 51 0
 184 0100 BD46     		mov	sp, r7
 185 0102 15B0     		add	sp, sp, #84
 186              		@ sp needed
 187 0104 F0BD     		pop	{r4, r5, r6, r7, pc}
 188              	.L4:
 189 0106 C046     		.align	2
 190              	.L3:
 191 0108 04000000 		.word	size
 192              		.cfi_endproc
 193              	.LFE33:
 194              		.size	initI2C, .-initI2C
 195              		.section	.text.adjustWindow,"ax",%progbits
 196              		.align	2
 197              		.global	adjustWindow
 198              		.code	16
 199              		.thumb_func
 200              		.type	adjustWindow, %function
 201              	adjustWindow:
 202              	.LFB34:
  52:.\I2C_Class.c **** 
  53:.\I2C_Class.c **** int8 adjustWindow(uint8 pos){
 203              		.loc 1 53 0
 204              		.cfi_startproc
 205 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 206              		.cfi_def_cfa_offset 20
 207              		.cfi_offset 4, -20
 208              		.cfi_offset 5, -16
 209              		.cfi_offset 6, -12
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 97B0     		sub	sp, sp, #92
 213              		.cfi_def_cfa_offset 112
 214 0004 00AF     		add	r7, sp, #0
 215              		.cfi_def_cfa_register 7
 216 0006 031C     		mov	r3, r0
 217 0008 3A1C     		mov	r2, r7
 218 000a 3F32     		add	r2, r2, #63
 219 000c 1370     		strb	r3, [r2]
 220 000e 6B46     		mov	r3, sp
 221 0010 1E1C     		mov	r6, r3
  54:.\I2C_Class.c ****     uint8 openWindow[size], closeWindow[size];
 222              		.loc 1 54 0
 223 0012 544B     		ldr	r3, .L12
 224 0014 1A68     		ldr	r2, [r3]
 225 0016 531E     		sub	r3, r2, #1
 226 0018 3B65     		str	r3, [r7, #80]
 227 001a 131C     		mov	r3, r2
 228 001c 1C1C     		mov	r4, r3
 229 001e 0023     		mov	r3, #0
 230 0020 1D1C     		mov	r5, r3
 231 0022 630F     		lsr	r3, r4, #29
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 6


 232 0024 E900     		lsl	r1, r5, #3
 233 0026 7963     		str	r1, [r7, #52]
 234 0028 796B     		ldr	r1, [r7, #52]
 235 002a 1943     		orr	r1, r3
 236 002c 7963     		str	r1, [r7, #52]
 237 002e E300     		lsl	r3, r4, #3
 238 0030 131C     		mov	r3, r2
 239 0032 BB62     		str	r3, [r7, #40]
 240 0034 0023     		mov	r3, #0
 241 0036 FB62     		str	r3, [r7, #44]
 242 0038 B96A     		ldr	r1, [r7, #40]
 243 003a 4B0F     		lsr	r3, r1, #29
 244 003c F96A     		ldr	r1, [r7, #44]
 245 003e C900     		lsl	r1, r1, #3
 246 0040 7962     		str	r1, [r7, #36]
 247 0042 796A     		ldr	r1, [r7, #36]
 248 0044 1943     		orr	r1, r3
 249 0046 7962     		str	r1, [r7, #36]
 250 0048 BB6A     		ldr	r3, [r7, #40]
 251 004a DB00     		lsl	r3, r3, #3
 252 004c 131C     		mov	r3, r2
 253 004e 0733     		add	r3, r3, #7
 254 0050 DB08     		lsr	r3, r3, #3
 255 0052 DB00     		lsl	r3, r3, #3
 256 0054 6946     		mov	r1, sp
 257 0056 C91A     		sub	r1, r1, r3
 258 0058 8D46     		mov	sp, r1
 259 005a 6B46     		mov	r3, sp
 260 005c 0033     		add	r3, r3, #0
 261 005e FB64     		str	r3, [r7, #76]
 262 0060 404B     		ldr	r3, .L12
 263 0062 1B68     		ldr	r3, [r3]
 264 0064 5A1E     		sub	r2, r3, #1
 265 0066 BA64     		str	r2, [r7, #72]
 266 0068 1A1C     		mov	r2, r3
 267 006a BA61     		str	r2, [r7, #24]
 268 006c 0022     		mov	r2, #0
 269 006e FA61     		str	r2, [r7, #28]
 270 0070 B969     		ldr	r1, [r7, #24]
 271 0072 4A0F     		lsr	r2, r1, #29
 272 0074 F969     		ldr	r1, [r7, #28]
 273 0076 C900     		lsl	r1, r1, #3
 274 0078 7961     		str	r1, [r7, #20]
 275 007a 7969     		ldr	r1, [r7, #20]
 276 007c 1143     		orr	r1, r2
 277 007e 7961     		str	r1, [r7, #20]
 278 0080 BA69     		ldr	r2, [r7, #24]
 279 0082 D200     		lsl	r2, r2, #3
 280 0084 1A1C     		mov	r2, r3
 281 0086 BA60     		str	r2, [r7, #8]
 282 0088 0022     		mov	r2, #0
 283 008a FA60     		str	r2, [r7, #12]
 284 008c B968     		ldr	r1, [r7, #8]
 285 008e 4A0F     		lsr	r2, r1, #29
 286 0090 F968     		ldr	r1, [r7, #12]
 287 0092 C900     		lsl	r1, r1, #3
 288 0094 7960     		str	r1, [r7, #4]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 7


 289 0096 7968     		ldr	r1, [r7, #4]
 290 0098 1143     		orr	r1, r2
 291 009a 7960     		str	r1, [r7, #4]
 292 009c BA68     		ldr	r2, [r7, #8]
 293 009e D200     		lsl	r2, r2, #3
 294 00a0 0733     		add	r3, r3, #7
 295 00a2 DB08     		lsr	r3, r3, #3
 296 00a4 DB00     		lsl	r3, r3, #3
 297 00a6 6946     		mov	r1, sp
 298 00a8 C91A     		sub	r1, r1, r3
 299 00aa 8D46     		mov	sp, r1
 300 00ac 6B46     		mov	r3, sp
 301 00ae 0033     		add	r3, r3, #0
 302 00b0 7B64     		str	r3, [r7, #68]
  55:.\I2C_Class.c ****     openWindow[0] = 0xF;
 303              		.loc 1 55 0
 304 00b2 FB6C     		ldr	r3, [r7, #76]
 305 00b4 0F22     		mov	r2, #15
 306 00b6 1A70     		strb	r2, [r3]
  56:.\I2C_Class.c ****     closeWindow[0] = 0x0;
 307              		.loc 1 56 0
 308 00b8 7B6C     		ldr	r3, [r7, #68]
 309 00ba 0022     		mov	r2, #0
 310 00bc 1A70     		strb	r2, [r3]
  57:.\I2C_Class.c ****     uint8 result = 0;
 311              		.loc 1 57 0
 312 00be 3B1C     		mov	r3, r7
 313 00c0 5733     		add	r3, r3, #87
 314 00c2 0022     		mov	r2, #0
 315 00c4 1A70     		strb	r2, [r3]
  58:.\I2C_Class.c ****     uint8 tempWindow = 0;
 316              		.loc 1 58 0
 317 00c6 3B1C     		mov	r3, r7
 318 00c8 4333     		add	r3, r3, #67
 319 00ca 0022     		mov	r2, #0
 320 00cc 1A70     		strb	r2, [r3]
  59:.\I2C_Class.c ****         
  60:.\I2C_Class.c ****     if(pos == 0xFF){
 321              		.loc 1 60 0
 322 00ce 3B1C     		mov	r3, r7
 323 00d0 3F33     		add	r3, r3, #63
 324 00d2 1B78     		ldrb	r3, [r3]
 325 00d4 FF2B     		cmp	r3, #255
 326 00d6 0DD1     		bne	.L6
  61:.\I2C_Class.c ****         // Open window     -                write function  (adress,      dataToSend, NumberOfBytes
  62:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,openWindow,size,I2C_I2C_MODE_COMPLETE_XFER);
 327              		.loc 1 62 0
 328 00d8 FA6C     		ldr	r2, [r7, #76]
 329 00da 224B     		ldr	r3, .L12
 330 00dc 1B68     		ldr	r3, [r3]
 331 00de 4220     		mov	r0, #66
 332 00e0 111C     		mov	r1, r2
 333 00e2 1A1C     		mov	r2, r3
 334 00e4 0023     		mov	r3, #0
 335 00e6 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 336 00ea 021C     		mov	r2, r0
 337 00ec 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 8


 338 00ee 5733     		add	r3, r3, #87
 339 00f0 1A70     		strb	r2, [r3]
 340 00f2 11E0     		b	.L7
 341              	.L6:
  63:.\I2C_Class.c ****     }
  64:.\I2C_Class.c ****     else if(pos == 0x0){
 342              		.loc 1 64 0
 343 00f4 3B1C     		mov	r3, r7
 344 00f6 3F33     		add	r3, r3, #63
 345 00f8 1B78     		ldrb	r3, [r3]
 346 00fa 002B     		cmp	r3, #0
 347 00fc 0CD1     		bne	.L7
  65:.\I2C_Class.c ****         // Close window
  66:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,closeWindow,size,I2C_I2C_MODE_COMPLETE_XFER)
 348              		.loc 1 66 0
 349 00fe 7A6C     		ldr	r2, [r7, #68]
 350 0100 184B     		ldr	r3, .L12
 351 0102 1B68     		ldr	r3, [r3]
 352 0104 4220     		mov	r0, #66
 353 0106 111C     		mov	r1, r2
 354 0108 1A1C     		mov	r2, r3
 355 010a 0023     		mov	r3, #0
 356 010c FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 357 0110 021C     		mov	r2, r0
 358 0112 3B1C     		mov	r3, r7
 359 0114 5733     		add	r3, r3, #87
 360 0116 1A70     		strb	r2, [r3]
 361              	.L7:
  67:.\I2C_Class.c ****     }
  68:.\I2C_Class.c ****     
  69:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(&tempWindow, NULL, NULL, NULL))){
 362              		.loc 1 69 0
 363 0118 3B1C     		mov	r3, r7
 364 011a 5733     		add	r3, r3, #87
 365 011c 1B78     		ldrb	r3, [r3]
 366 011e 002B     		cmp	r3, #0
 367 0120 18D1     		bne	.L8
 368              		.loc 1 69 0 is_stmt 0 discriminator 1
 369 0122 3B1C     		mov	r3, r7
 370 0124 4333     		add	r3, r3, #67
 371 0126 181C     		mov	r0, r3
 372 0128 0021     		mov	r1, #0
 373 012a 0022     		mov	r2, #0
 374 012c 0023     		mov	r3, #0
 375 012e FFF7FEFF 		bl	getActuatorStatus
 376 0132 031C     		mov	r3, r0
 377 0134 002B     		cmp	r3, #0
 378 0136 0DD1     		bne	.L8
  70:.\I2C_Class.c ****         if (tempWindow == pos >> 4 ){  //hacky solution when dealing with fully open/closed window
 379              		.loc 1 70 0 is_stmt 1
 380 0138 3B1C     		mov	r3, r7
 381 013a 3F33     		add	r3, r3, #63
 382 013c 1B78     		ldrb	r3, [r3]
 383 013e 1B09     		lsr	r3, r3, #4
 384 0140 DAB2     		uxtb	r2, r3
 385 0142 3B1C     		mov	r3, r7
 386 0144 4333     		add	r3, r3, #67
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 9


 387 0146 1B78     		ldrb	r3, [r3]
 388 0148 9A42     		cmp	r2, r3
 389 014a 01D1     		bne	.L9
  71:.\I2C_Class.c ****             return 0;	
 390              		.loc 1 71 0
 391 014c 0023     		mov	r3, #0
 392 014e 02E0     		b	.L10
 393              	.L9:
  72:.\I2C_Class.c ****         }
  73:.\I2C_Class.c ****         else {
  74:.\I2C_Class.c ****             return -1;
 394              		.loc 1 74 0
 395 0150 FF23     		mov	r3, #255
 396 0152 00E0     		b	.L10
 397              	.L8:
  75:.\I2C_Class.c ****         }
  76:.\I2C_Class.c ****     }
  77:.\I2C_Class.c ****     else {
  78:.\I2C_Class.c ****         return -1;
 398              		.loc 1 78 0
 399 0154 FF23     		mov	r3, #255
 400              	.L10:
 401 0156 B546     		mov	sp, r6
 402 0158 5BB2     		sxtb	r3, r3
  79:.\I2C_Class.c ****     }
  80:.\I2C_Class.c **** }
 403              		.loc 1 80 0
 404 015a 181C     		mov	r0, r3
 405 015c BD46     		mov	sp, r7
 406 015e 17B0     		add	sp, sp, #92
 407              		@ sp needed
 408 0160 F0BD     		pop	{r4, r5, r6, r7, pc}
 409              	.L13:
 410 0162 C046     		.align	2
 411              	.L12:
 412 0164 04000000 		.word	size
 413              		.cfi_endproc
 414              	.LFE34:
 415              		.size	adjustWindow, .-adjustWindow
 416              		.section	.text.adjustHeat,"ax",%progbits
 417              		.align	2
 418              		.global	adjustHeat
 419              		.code	16
 420              		.thumb_func
 421              		.type	adjustHeat, %function
 422              	adjustHeat:
 423              	.LFB35:
  81:.\I2C_Class.c **** 
  82:.\I2C_Class.c **** int8 adjustHeat(uint8 heat){
 424              		.loc 1 82 0
 425              		.cfi_startproc
 426 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 427              		.cfi_def_cfa_offset 20
 428              		.cfi_offset 4, -20
 429              		.cfi_offset 5, -16
 430              		.cfi_offset 6, -12
 431              		.cfi_offset 7, -8
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 10


 432              		.cfi_offset 14, -4
 433 0002 97B0     		sub	sp, sp, #92
 434              		.cfi_def_cfa_offset 112
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 437 0006 031C     		mov	r3, r0
 438 0008 3A1C     		mov	r2, r7
 439 000a 3F32     		add	r2, r2, #63
 440 000c 1370     		strb	r3, [r2]
 441 000e 6B46     		mov	r3, sp
 442 0010 1E1C     		mov	r6, r3
  83:.\I2C_Class.c ****     uint8 turnHeatOn[size], turnOffHeat[size];
 443              		.loc 1 83 0
 444 0012 544B     		ldr	r3, .L21
 445 0014 1A68     		ldr	r2, [r3]
 446 0016 531E     		sub	r3, r2, #1
 447 0018 3B65     		str	r3, [r7, #80]
 448 001a 131C     		mov	r3, r2
 449 001c 1C1C     		mov	r4, r3
 450 001e 0023     		mov	r3, #0
 451 0020 1D1C     		mov	r5, r3
 452 0022 630F     		lsr	r3, r4, #29
 453 0024 E900     		lsl	r1, r5, #3
 454 0026 7963     		str	r1, [r7, #52]
 455 0028 796B     		ldr	r1, [r7, #52]
 456 002a 1943     		orr	r1, r3
 457 002c 7963     		str	r1, [r7, #52]
 458 002e E300     		lsl	r3, r4, #3
 459 0030 131C     		mov	r3, r2
 460 0032 BB62     		str	r3, [r7, #40]
 461 0034 0023     		mov	r3, #0
 462 0036 FB62     		str	r3, [r7, #44]
 463 0038 B96A     		ldr	r1, [r7, #40]
 464 003a 4B0F     		lsr	r3, r1, #29
 465 003c F96A     		ldr	r1, [r7, #44]
 466 003e C900     		lsl	r1, r1, #3
 467 0040 7962     		str	r1, [r7, #36]
 468 0042 796A     		ldr	r1, [r7, #36]
 469 0044 1943     		orr	r1, r3
 470 0046 7962     		str	r1, [r7, #36]
 471 0048 BB6A     		ldr	r3, [r7, #40]
 472 004a DB00     		lsl	r3, r3, #3
 473 004c 131C     		mov	r3, r2
 474 004e 0733     		add	r3, r3, #7
 475 0050 DB08     		lsr	r3, r3, #3
 476 0052 DB00     		lsl	r3, r3, #3
 477 0054 6946     		mov	r1, sp
 478 0056 C91A     		sub	r1, r1, r3
 479 0058 8D46     		mov	sp, r1
 480 005a 6B46     		mov	r3, sp
 481 005c 0033     		add	r3, r3, #0
 482 005e FB64     		str	r3, [r7, #76]
 483 0060 404B     		ldr	r3, .L21
 484 0062 1B68     		ldr	r3, [r3]
 485 0064 5A1E     		sub	r2, r3, #1
 486 0066 BA64     		str	r2, [r7, #72]
 487 0068 1A1C     		mov	r2, r3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 11


 488 006a BA61     		str	r2, [r7, #24]
 489 006c 0022     		mov	r2, #0
 490 006e FA61     		str	r2, [r7, #28]
 491 0070 B969     		ldr	r1, [r7, #24]
 492 0072 4A0F     		lsr	r2, r1, #29
 493 0074 F969     		ldr	r1, [r7, #28]
 494 0076 C900     		lsl	r1, r1, #3
 495 0078 7961     		str	r1, [r7, #20]
 496 007a 7969     		ldr	r1, [r7, #20]
 497 007c 1143     		orr	r1, r2
 498 007e 7961     		str	r1, [r7, #20]
 499 0080 BA69     		ldr	r2, [r7, #24]
 500 0082 D200     		lsl	r2, r2, #3
 501 0084 1A1C     		mov	r2, r3
 502 0086 BA60     		str	r2, [r7, #8]
 503 0088 0022     		mov	r2, #0
 504 008a FA60     		str	r2, [r7, #12]
 505 008c B968     		ldr	r1, [r7, #8]
 506 008e 4A0F     		lsr	r2, r1, #29
 507 0090 F968     		ldr	r1, [r7, #12]
 508 0092 C900     		lsl	r1, r1, #3
 509 0094 7960     		str	r1, [r7, #4]
 510 0096 7968     		ldr	r1, [r7, #4]
 511 0098 1143     		orr	r1, r2
 512 009a 7960     		str	r1, [r7, #4]
 513 009c BA68     		ldr	r2, [r7, #8]
 514 009e D200     		lsl	r2, r2, #3
 515 00a0 0733     		add	r3, r3, #7
 516 00a2 DB08     		lsr	r3, r3, #3
 517 00a4 DB00     		lsl	r3, r3, #3
 518 00a6 6946     		mov	r1, sp
 519 00a8 C91A     		sub	r1, r1, r3
 520 00aa 8D46     		mov	sp, r1
 521 00ac 6B46     		mov	r3, sp
 522 00ae 0033     		add	r3, r3, #0
 523 00b0 7B64     		str	r3, [r7, #68]
  84:.\I2C_Class.c ****     turnHeatOn[0] = 0b01000111;
 524              		.loc 1 84 0
 525 00b2 FB6C     		ldr	r3, [r7, #76]
 526 00b4 4722     		mov	r2, #71
 527 00b6 1A70     		strb	r2, [r3]
  85:.\I2C_Class.c ****     turnOffHeat[0] = 0b01000000;
 528              		.loc 1 85 0
 529 00b8 7B6C     		ldr	r3, [r7, #68]
 530 00ba 4022     		mov	r2, #64
 531 00bc 1A70     		strb	r2, [r3]
  86:.\I2C_Class.c ****     uint8 result = 0;
 532              		.loc 1 86 0
 533 00be 3B1C     		mov	r3, r7
 534 00c0 5733     		add	r3, r3, #87
 535 00c2 0022     		mov	r2, #0
 536 00c4 1A70     		strb	r2, [r3]
  87:.\I2C_Class.c ****     uint8 temp = 0xFF;
 537              		.loc 1 87 0
 538 00c6 3B1C     		mov	r3, r7
 539 00c8 4333     		add	r3, r3, #67
 540 00ca FF22     		mov	r2, #255
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 12


 541 00cc 1A70     		strb	r2, [r3]
  88:.\I2C_Class.c ****     
  89:.\I2C_Class.c ****     I2C_I2CMasterClearStatus();
 542              		.loc 1 89 0
 543 00ce FFF7FEFF 		bl	I2C_I2CMasterClearStatus
  90:.\I2C_Class.c ****     
  91:.\I2C_Class.c ****     if(heat == 0b111){
 544              		.loc 1 91 0
 545 00d2 3B1C     		mov	r3, r7
 546 00d4 3F33     		add	r3, r3, #63
 547 00d6 1B78     		ldrb	r3, [r3]
 548 00d8 072B     		cmp	r3, #7
 549 00da 0DD1     		bne	.L15
  92:.\I2C_Class.c ****         // Turn on heat
  93:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnHeatOn,size,I2C_I2C_MODE_COMPLETE_XFER);
 550              		.loc 1 93 0
 551 00dc FA6C     		ldr	r2, [r7, #76]
 552 00de 214B     		ldr	r3, .L21
 553 00e0 1B68     		ldr	r3, [r3]
 554 00e2 4220     		mov	r0, #66
 555 00e4 111C     		mov	r1, r2
 556 00e6 1A1C     		mov	r2, r3
 557 00e8 0023     		mov	r3, #0
 558 00ea FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 559 00ee 021C     		mov	r2, r0
 560 00f0 3B1C     		mov	r3, r7
 561 00f2 5733     		add	r3, r3, #87
 562 00f4 1A70     		strb	r2, [r3]
 563 00f6 11E0     		b	.L16
 564              	.L15:
  94:.\I2C_Class.c ****     }
  95:.\I2C_Class.c ****     else if(heat == 0b0){
 565              		.loc 1 95 0
 566 00f8 3B1C     		mov	r3, r7
 567 00fa 3F33     		add	r3, r3, #63
 568 00fc 1B78     		ldrb	r3, [r3]
 569 00fe 002B     		cmp	r3, #0
 570 0100 0CD1     		bne	.L16
  96:.\I2C_Class.c ****         // Turn off heat
  97:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOffHeat,size,I2C_I2C_MODE_COMPLETE_XFER)
 571              		.loc 1 97 0
 572 0102 7A6C     		ldr	r2, [r7, #68]
 573 0104 174B     		ldr	r3, .L21
 574 0106 1B68     		ldr	r3, [r3]
 575 0108 4220     		mov	r0, #66
 576 010a 111C     		mov	r1, r2
 577 010c 1A1C     		mov	r2, r3
 578 010e 0023     		mov	r3, #0
 579 0110 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 580 0114 021C     		mov	r2, r0
 581 0116 3B1C     		mov	r3, r7
 582 0118 5733     		add	r3, r3, #87
 583 011a 1A70     		strb	r2, [r3]
 584              	.L16:
  98:.\I2C_Class.c ****     }
  99:.\I2C_Class.c **** 
 100:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(NULL, &temp, NULL, NULL))){
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 13


 585              		.loc 1 100 0
 586 011c 3B1C     		mov	r3, r7
 587 011e 5733     		add	r3, r3, #87
 588 0120 1B78     		ldrb	r3, [r3]
 589 0122 002B     		cmp	r3, #0
 590 0124 16D1     		bne	.L17
 591              		.loc 1 100 0 is_stmt 0 discriminator 1
 592 0126 3B1C     		mov	r3, r7
 593 0128 4333     		add	r3, r3, #67
 594 012a 0020     		mov	r0, #0
 595 012c 191C     		mov	r1, r3
 596 012e 0022     		mov	r2, #0
 597 0130 0023     		mov	r3, #0
 598 0132 FFF7FEFF 		bl	getActuatorStatus
 599 0136 031C     		mov	r3, r0
 600 0138 002B     		cmp	r3, #0
 601 013a 0BD1     		bne	.L17
 101:.\I2C_Class.c ****         if (temp == heat){
 602              		.loc 1 101 0 is_stmt 1
 603 013c 3B1C     		mov	r3, r7
 604 013e 4333     		add	r3, r3, #67
 605 0140 1B78     		ldrb	r3, [r3]
 606 0142 3A1C     		mov	r2, r7
 607 0144 3F32     		add	r2, r2, #63
 608 0146 1278     		ldrb	r2, [r2]
 609 0148 9A42     		cmp	r2, r3
 610 014a 01D1     		bne	.L18
 102:.\I2C_Class.c ****             return 0;
 611              		.loc 1 102 0
 612 014c 0023     		mov	r3, #0
 613 014e 02E0     		b	.L19
 614              	.L18:
 103:.\I2C_Class.c ****         }
 104:.\I2C_Class.c ****         else {
 105:.\I2C_Class.c ****             return -1;   
 615              		.loc 1 105 0
 616 0150 FF23     		mov	r3, #255
 617 0152 00E0     		b	.L19
 618              	.L17:
 106:.\I2C_Class.c ****         }
 107:.\I2C_Class.c ****     }
 108:.\I2C_Class.c ****     else {
 109:.\I2C_Class.c ****         return -1;
 619              		.loc 1 109 0
 620 0154 FF23     		mov	r3, #255
 621              	.L19:
 622 0156 B546     		mov	sp, r6
 623 0158 5BB2     		sxtb	r3, r3
 110:.\I2C_Class.c ****     }
 111:.\I2C_Class.c **** }
 624              		.loc 1 111 0
 625 015a 181C     		mov	r0, r3
 626 015c BD46     		mov	sp, r7
 627 015e 17B0     		add	sp, sp, #92
 628              		@ sp needed
 629 0160 F0BD     		pop	{r4, r5, r6, r7, pc}
 630              	.L22:
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 14


 631 0162 C046     		.align	2
 632              	.L21:
 633 0164 04000000 		.word	size
 634              		.cfi_endproc
 635              	.LFE35:
 636              		.size	adjustHeat, .-adjustHeat
 637              		.section	.text.adjustVentilation,"ax",%progbits
 638              		.align	2
 639              		.global	adjustVentilation
 640              		.code	16
 641              		.thumb_func
 642              		.type	adjustVentilation, %function
 643              	adjustVentilation:
 644              	.LFB36:
 112:.\I2C_Class.c **** 
 113:.\I2C_Class.c **** int8 adjustVentilation(uint8 speed){
 645              		.loc 1 113 0
 646              		.cfi_startproc
 647 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 648              		.cfi_def_cfa_offset 20
 649              		.cfi_offset 4, -20
 650              		.cfi_offset 5, -16
 651              		.cfi_offset 6, -12
 652              		.cfi_offset 7, -8
 653              		.cfi_offset 14, -4
 654 0002 97B0     		sub	sp, sp, #92
 655              		.cfi_def_cfa_offset 112
 656 0004 00AF     		add	r7, sp, #0
 657              		.cfi_def_cfa_register 7
 658 0006 031C     		mov	r3, r0
 659 0008 3A1C     		mov	r2, r7
 660 000a 3F32     		add	r2, r2, #63
 661 000c 1370     		strb	r3, [r2]
 662 000e 6B46     		mov	r3, sp
 663 0010 1E1C     		mov	r6, r3
 114:.\I2C_Class.c ****     uint8 turnOnVent[size], turnOffVent[size];
 664              		.loc 1 114 0
 665 0012 544B     		ldr	r3, .L30
 666 0014 1A68     		ldr	r2, [r3]
 667 0016 531E     		sub	r3, r2, #1
 668 0018 3B65     		str	r3, [r7, #80]
 669 001a 131C     		mov	r3, r2
 670 001c 1C1C     		mov	r4, r3
 671 001e 0023     		mov	r3, #0
 672 0020 1D1C     		mov	r5, r3
 673 0022 630F     		lsr	r3, r4, #29
 674 0024 E900     		lsl	r1, r5, #3
 675 0026 7963     		str	r1, [r7, #52]
 676 0028 796B     		ldr	r1, [r7, #52]
 677 002a 1943     		orr	r1, r3
 678 002c 7963     		str	r1, [r7, #52]
 679 002e E300     		lsl	r3, r4, #3
 680 0030 131C     		mov	r3, r2
 681 0032 BB62     		str	r3, [r7, #40]
 682 0034 0023     		mov	r3, #0
 683 0036 FB62     		str	r3, [r7, #44]
 684 0038 B96A     		ldr	r1, [r7, #40]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 15


 685 003a 4B0F     		lsr	r3, r1, #29
 686 003c F96A     		ldr	r1, [r7, #44]
 687 003e C900     		lsl	r1, r1, #3
 688 0040 7962     		str	r1, [r7, #36]
 689 0042 796A     		ldr	r1, [r7, #36]
 690 0044 1943     		orr	r1, r3
 691 0046 7962     		str	r1, [r7, #36]
 692 0048 BB6A     		ldr	r3, [r7, #40]
 693 004a DB00     		lsl	r3, r3, #3
 694 004c 131C     		mov	r3, r2
 695 004e 0733     		add	r3, r3, #7
 696 0050 DB08     		lsr	r3, r3, #3
 697 0052 DB00     		lsl	r3, r3, #3
 698 0054 6946     		mov	r1, sp
 699 0056 C91A     		sub	r1, r1, r3
 700 0058 8D46     		mov	sp, r1
 701 005a 6B46     		mov	r3, sp
 702 005c 0033     		add	r3, r3, #0
 703 005e FB64     		str	r3, [r7, #76]
 704 0060 404B     		ldr	r3, .L30
 705 0062 1B68     		ldr	r3, [r3]
 706 0064 5A1E     		sub	r2, r3, #1
 707 0066 BA64     		str	r2, [r7, #72]
 708 0068 1A1C     		mov	r2, r3
 709 006a BA61     		str	r2, [r7, #24]
 710 006c 0022     		mov	r2, #0
 711 006e FA61     		str	r2, [r7, #28]
 712 0070 B969     		ldr	r1, [r7, #24]
 713 0072 4A0F     		lsr	r2, r1, #29
 714 0074 F969     		ldr	r1, [r7, #28]
 715 0076 C900     		lsl	r1, r1, #3
 716 0078 7961     		str	r1, [r7, #20]
 717 007a 7969     		ldr	r1, [r7, #20]
 718 007c 1143     		orr	r1, r2
 719 007e 7961     		str	r1, [r7, #20]
 720 0080 BA69     		ldr	r2, [r7, #24]
 721 0082 D200     		lsl	r2, r2, #3
 722 0084 1A1C     		mov	r2, r3
 723 0086 BA60     		str	r2, [r7, #8]
 724 0088 0022     		mov	r2, #0
 725 008a FA60     		str	r2, [r7, #12]
 726 008c B968     		ldr	r1, [r7, #8]
 727 008e 4A0F     		lsr	r2, r1, #29
 728 0090 F968     		ldr	r1, [r7, #12]
 729 0092 C900     		lsl	r1, r1, #3
 730 0094 7960     		str	r1, [r7, #4]
 731 0096 7968     		ldr	r1, [r7, #4]
 732 0098 1143     		orr	r1, r2
 733 009a 7960     		str	r1, [r7, #4]
 734 009c BA68     		ldr	r2, [r7, #8]
 735 009e D200     		lsl	r2, r2, #3
 736 00a0 0733     		add	r3, r3, #7
 737 00a2 DB08     		lsr	r3, r3, #3
 738 00a4 DB00     		lsl	r3, r3, #3
 739 00a6 6946     		mov	r1, sp
 740 00a8 C91A     		sub	r1, r1, r3
 741 00aa 8D46     		mov	sp, r1
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 16


 742 00ac 6B46     		mov	r3, sp
 743 00ae 0033     		add	r3, r3, #0
 744 00b0 7B64     		str	r3, [r7, #68]
 115:.\I2C_Class.c ****     turnOnVent[0] = 0b10000111;
 745              		.loc 1 115 0
 746 00b2 FB6C     		ldr	r3, [r7, #76]
 747 00b4 8722     		mov	r2, #135
 748 00b6 1A70     		strb	r2, [r3]
 116:.\I2C_Class.c ****     turnOffVent[0] = 0b10000000;
 749              		.loc 1 116 0
 750 00b8 7B6C     		ldr	r3, [r7, #68]
 751 00ba 8022     		mov	r2, #128
 752 00bc 1A70     		strb	r2, [r3]
 117:.\I2C_Class.c ****     uint8 result = 0;
 753              		.loc 1 117 0
 754 00be 3B1C     		mov	r3, r7
 755 00c0 5733     		add	r3, r3, #87
 756 00c2 0022     		mov	r2, #0
 757 00c4 1A70     		strb	r2, [r3]
 118:.\I2C_Class.c ****     uint8 temp = 0xFF;
 758              		.loc 1 118 0
 759 00c6 3B1C     		mov	r3, r7
 760 00c8 4333     		add	r3, r3, #67
 761 00ca FF22     		mov	r2, #255
 762 00cc 1A70     		strb	r2, [r3]
 119:.\I2C_Class.c ****         
 120:.\I2C_Class.c ****     if(speed == 0xFF){
 763              		.loc 1 120 0
 764 00ce 3B1C     		mov	r3, r7
 765 00d0 3F33     		add	r3, r3, #63
 766 00d2 1B78     		ldrb	r3, [r3]
 767 00d4 FF2B     		cmp	r3, #255
 768 00d6 0DD1     		bne	.L24
 121:.\I2C_Class.c ****         // Turn vent on
 122:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOnVent,size,I2C_I2C_MODE_COMPLETE_XFER);
 769              		.loc 1 122 0
 770 00d8 FA6C     		ldr	r2, [r7, #76]
 771 00da 224B     		ldr	r3, .L30
 772 00dc 1B68     		ldr	r3, [r3]
 773 00de 4220     		mov	r0, #66
 774 00e0 111C     		mov	r1, r2
 775 00e2 1A1C     		mov	r2, r3
 776 00e4 0023     		mov	r3, #0
 777 00e6 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 778 00ea 021C     		mov	r2, r0
 779 00ec 3B1C     		mov	r3, r7
 780 00ee 5733     		add	r3, r3, #87
 781 00f0 1A70     		strb	r2, [r3]
 782 00f2 11E0     		b	.L25
 783              	.L24:
 123:.\I2C_Class.c ****     }
 124:.\I2C_Class.c ****     else if(speed == 0b0){
 784              		.loc 1 124 0
 785 00f4 3B1C     		mov	r3, r7
 786 00f6 3F33     		add	r3, r3, #63
 787 00f8 1B78     		ldrb	r3, [r3]
 788 00fa 002B     		cmp	r3, #0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 17


 789 00fc 0CD1     		bne	.L25
 125:.\I2C_Class.c ****         // Turn vent off
 126:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOffVent,size,I2C_I2C_MODE_COMPLETE_XFER)
 790              		.loc 1 126 0
 791 00fe 7A6C     		ldr	r2, [r7, #68]
 792 0100 184B     		ldr	r3, .L30
 793 0102 1B68     		ldr	r3, [r3]
 794 0104 4220     		mov	r0, #66
 795 0106 111C     		mov	r1, r2
 796 0108 1A1C     		mov	r2, r3
 797 010a 0023     		mov	r3, #0
 798 010c FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 799 0110 021C     		mov	r2, r0
 800 0112 3B1C     		mov	r3, r7
 801 0114 5733     		add	r3, r3, #87
 802 0116 1A70     		strb	r2, [r3]
 803              	.L25:
 127:.\I2C_Class.c ****     }
 128:.\I2C_Class.c ****     
 129:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(NULL, NULL, &temp, NULL))){
 804              		.loc 1 129 0
 805 0118 3B1C     		mov	r3, r7
 806 011a 5733     		add	r3, r3, #87
 807 011c 1B78     		ldrb	r3, [r3]
 808 011e 002B     		cmp	r3, #0
 809 0120 18D1     		bne	.L26
 810              		.loc 1 129 0 is_stmt 0 discriminator 1
 811 0122 3B1C     		mov	r3, r7
 812 0124 4333     		add	r3, r3, #67
 813 0126 0020     		mov	r0, #0
 814 0128 0021     		mov	r1, #0
 815 012a 1A1C     		mov	r2, r3
 816 012c 0023     		mov	r3, #0
 817 012e FFF7FEFF 		bl	getActuatorStatus
 818 0132 031C     		mov	r3, r0
 819 0134 002B     		cmp	r3, #0
 820 0136 0DD1     		bne	.L26
 130:.\I2C_Class.c ****         if (temp == speed >> 5){ //Hacky solution when not dealing with more than 2 steps
 821              		.loc 1 130 0 is_stmt 1
 822 0138 3B1C     		mov	r3, r7
 823 013a 3F33     		add	r3, r3, #63
 824 013c 1B78     		ldrb	r3, [r3]
 825 013e 5B09     		lsr	r3, r3, #5
 826 0140 DAB2     		uxtb	r2, r3
 827 0142 3B1C     		mov	r3, r7
 828 0144 4333     		add	r3, r3, #67
 829 0146 1B78     		ldrb	r3, [r3]
 830 0148 9A42     		cmp	r2, r3
 831 014a 01D1     		bne	.L27
 131:.\I2C_Class.c ****             return 0;
 832              		.loc 1 131 0
 833 014c 0023     		mov	r3, #0
 834 014e 02E0     		b	.L28
 835              	.L27:
 132:.\I2C_Class.c ****             }
 133:.\I2C_Class.c ****         else {
 134:.\I2C_Class.c ****             return -1;       
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 18


 836              		.loc 1 134 0
 837 0150 FF23     		mov	r3, #255
 838 0152 00E0     		b	.L28
 839              	.L26:
 135:.\I2C_Class.c ****         }
 136:.\I2C_Class.c ****     }
 137:.\I2C_Class.c ****     else {
 138:.\I2C_Class.c ****         return -1;
 840              		.loc 1 138 0
 841 0154 FF23     		mov	r3, #255
 842              	.L28:
 843 0156 B546     		mov	sp, r6
 844 0158 5BB2     		sxtb	r3, r3
 139:.\I2C_Class.c ****     }
 140:.\I2C_Class.c **** }
 845              		.loc 1 140 0
 846 015a 181C     		mov	r0, r3
 847 015c BD46     		mov	sp, r7
 848 015e 17B0     		add	sp, sp, #92
 849              		@ sp needed
 850 0160 F0BD     		pop	{r4, r5, r6, r7, pc}
 851              	.L31:
 852 0162 C046     		.align	2
 853              	.L30:
 854 0164 04000000 		.word	size
 855              		.cfi_endproc
 856              	.LFE36:
 857              		.size	adjustVentilation, .-adjustVentilation
 858              		.section	.text.adjustIrrigation,"ax",%progbits
 859              		.align	2
 860              		.global	adjustIrrigation
 861              		.code	16
 862              		.thumb_func
 863              		.type	adjustIrrigation, %function
 864              	adjustIrrigation:
 865              	.LFB37:
 141:.\I2C_Class.c **** 
 142:.\I2C_Class.c **** int8 adjustIrrigation(uint8 index, uint8 onOff){
 866              		.loc 1 142 0
 867              		.cfi_startproc
 868 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 869              		.cfi_def_cfa_offset 20
 870              		.cfi_offset 4, -20
 871              		.cfi_offset 5, -16
 872              		.cfi_offset 6, -12
 873              		.cfi_offset 7, -8
 874              		.cfi_offset 14, -4
 875 0002 4746     		mov	r7, r8
 876 0004 80B4     		push	{r7}
 877              		.cfi_def_cfa_offset 24
 878              		.cfi_offset 8, -24
 879 0006 8AB0     		sub	sp, sp, #40
 880              		.cfi_def_cfa_offset 64
 881 0008 00AF     		add	r7, sp, #0
 882              		.cfi_def_cfa_register 7
 883 000a 3A1C     		mov	r2, r7
 884 000c 1732     		add	r2, r2, #23
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 19


 885 000e 1070     		strb	r0, [r2]
 886 0010 3A1C     		mov	r2, r7
 887 0012 1632     		add	r2, r2, #22
 888 0014 1170     		strb	r1, [r2]
 889 0016 6A46     		mov	r2, sp
 890 0018 9046     		mov	r8, r2
 143:.\I2C_Class.c ****     uint8 irriTransfer[size];
 891              		.loc 1 143 0
 892 001a 4C4A     		ldr	r2, .L40
 893 001c 1268     		ldr	r2, [r2]
 894 001e 511E     		sub	r1, r2, #1
 895 0020 7962     		str	r1, [r7, #36]
 896 0022 111C     		mov	r1, r2
 897 0024 0D1C     		mov	r5, r1
 898 0026 0021     		mov	r1, #0
 899 0028 0E1C     		mov	r6, r1
 900 002a 690F     		lsr	r1, r5, #29
 901 002c F000     		lsl	r0, r6, #3
 902 002e F860     		str	r0, [r7, #12]
 903 0030 FB68     		ldr	r3, [r7, #12]
 904 0032 0B43     		orr	r3, r1
 905 0034 FB60     		str	r3, [r7, #12]
 906 0036 E800     		lsl	r0, r5, #3
 907 0038 111C     		mov	r1, r2
 908 003a 0B1C     		mov	r3, r1
 909 003c 0021     		mov	r1, #0
 910 003e 0C1C     		mov	r4, r1
 911 0040 590F     		lsr	r1, r3, #29
 912 0042 E000     		lsl	r0, r4, #3
 913 0044 7860     		str	r0, [r7, #4]
 914 0046 7868     		ldr	r0, [r7, #4]
 915 0048 0843     		orr	r0, r1
 916 004a 7860     		str	r0, [r7, #4]
 917 004c D900     		lsl	r1, r3, #3
 918 004e 131C     		mov	r3, r2
 919 0050 0733     		add	r3, r3, #7
 920 0052 DB08     		lsr	r3, r3, #3
 921 0054 DB00     		lsl	r3, r3, #3
 922 0056 6A46     		mov	r2, sp
 923 0058 D21A     		sub	r2, r2, r3
 924 005a 9546     		mov	sp, r2
 925 005c 6B46     		mov	r3, sp
 926 005e 0033     		add	r3, r3, #0
 927 0060 3B62     		str	r3, [r7, #32]
 144:.\I2C_Class.c ****     uint8 temp = 0xFF;
 928              		.loc 1 144 0
 929 0062 3B1C     		mov	r3, r7
 930 0064 1E33     		add	r3, r3, #30
 931 0066 FF22     		mov	r2, #255
 932 0068 1A70     		strb	r2, [r3]
 145:.\I2C_Class.c ****     uint8 result = 0;
 933              		.loc 1 145 0
 934 006a 3B1C     		mov	r3, r7
 935 006c 1F33     		add	r3, r3, #31
 936 006e 0022     		mov	r2, #0
 937 0070 1A70     		strb	r2, [r3]
 146:.\I2C_Class.c **** 
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 20


 147:.\I2C_Class.c ****         /* In order for this code to function properly, the static int "irrigation" 
 148:.\I2C_Class.c ****         has to get updated each time this function is called. */
 149:.\I2C_Class.c ****     if (onOff == 1){    // Irrigation turn on
 938              		.loc 1 149 0
 939 0072 3B1C     		mov	r3, r7
 940 0074 1633     		add	r3, r3, #22
 941 0076 1B78     		ldrb	r3, [r3]
 942 0078 012B     		cmp	r3, #1
 943 007a 18D1     		bne	.L33
 150:.\I2C_Class.c ****         irriTransfer[0] = (irrigationStatus |= (1 << index));
 944              		.loc 1 150 0
 945 007c 3B1C     		mov	r3, r7
 946 007e 1733     		add	r3, r3, #23
 947 0080 1B78     		ldrb	r3, [r3]
 948 0082 0122     		mov	r2, #1
 949 0084 101C     		mov	r0, r2
 950 0086 9840     		lsl	r0, r0, r3
 951 0088 031C     		mov	r3, r0
 952 008a DAB2     		uxtb	r2, r3
 953 008c 304B     		ldr	r3, .L40+4
 954 008e 1B78     		ldrb	r3, [r3]
 955 0090 DBB2     		uxtb	r3, r3
 956 0092 1343     		orr	r3, r2
 957 0094 DBB2     		uxtb	r3, r3
 958 0096 DAB2     		uxtb	r2, r3
 959 0098 2D4B     		ldr	r3, .L40+4
 960 009a 1A70     		strb	r2, [r3]
 961 009c 2C4B     		ldr	r3, .L40+4
 962 009e 1A78     		ldrb	r2, [r3]
 963 00a0 3B6A     		ldr	r3, [r7, #32]
 964 00a2 1A70     		strb	r2, [r3]
 151:.\I2C_Class.c ****         irrigationStatus = irriTransfer[0];
 965              		.loc 1 151 0
 966 00a4 3B6A     		ldr	r3, [r7, #32]
 967 00a6 1A78     		ldrb	r2, [r3]
 968 00a8 294B     		ldr	r3, .L40+4
 969 00aa 1A70     		strb	r2, [r3]
 970 00ac 21E0     		b	.L34
 971              	.L33:
 152:.\I2C_Class.c ****     }
 153:.\I2C_Class.c ****     else if (onOff == 0){   // Irrigation turn off
 972              		.loc 1 153 0
 973 00ae 3B1C     		mov	r3, r7
 974 00b0 1633     		add	r3, r3, #22
 975 00b2 1B78     		ldrb	r3, [r3]
 976 00b4 002B     		cmp	r3, #0
 977 00b6 1AD1     		bne	.L35
 154:.\I2C_Class.c ****         irriTransfer[0] = (irrigationStatus &= ~(1 << index));
 978              		.loc 1 154 0
 979 00b8 3B1C     		mov	r3, r7
 980 00ba 1733     		add	r3, r3, #23
 981 00bc 1B78     		ldrb	r3, [r3]
 982 00be 0122     		mov	r2, #1
 983 00c0 111C     		mov	r1, r2
 984 00c2 9940     		lsl	r1, r1, r3
 985 00c4 0B1C     		mov	r3, r1
 986 00c6 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 21


 987 00c8 DB43     		mvn	r3, r3
 988 00ca DBB2     		uxtb	r3, r3
 989 00cc 204A     		ldr	r2, .L40+4
 990 00ce 1278     		ldrb	r2, [r2]
 991 00d0 D2B2     		uxtb	r2, r2
 992 00d2 1340     		and	r3, r2
 993 00d4 DBB2     		uxtb	r3, r3
 994 00d6 DAB2     		uxtb	r2, r3
 995 00d8 1D4B     		ldr	r3, .L40+4
 996 00da 1A70     		strb	r2, [r3]
 997 00dc 1C4B     		ldr	r3, .L40+4
 998 00de 1A78     		ldrb	r2, [r3]
 999 00e0 3B6A     		ldr	r3, [r7, #32]
 1000 00e2 1A70     		strb	r2, [r3]
 155:.\I2C_Class.c ****         irrigationStatus = irriTransfer[0];
 1001              		.loc 1 155 0
 1002 00e4 3B6A     		ldr	r3, [r7, #32]
 1003 00e6 1A78     		ldrb	r2, [r3]
 1004 00e8 194B     		ldr	r3, .L40+4
 1005 00ea 1A70     		strb	r2, [r3]
 1006 00ec 01E0     		b	.L34
 1007              	.L35:
 156:.\I2C_Class.c ****     }
 157:.\I2C_Class.c ****     else{
 158:.\I2C_Class.c ****     // Bad argument.
 159:.\I2C_Class.c ****     return -1;
 1008              		.loc 1 159 0
 1009 00ee FF23     		mov	r3, #255
 1010 00f0 24E0     		b	.L36
 1011              	.L34:
 160:.\I2C_Class.c ****     }
 161:.\I2C_Class.c ****     
 162:.\I2C_Class.c ****     result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS, irriTransfer,size,I2C_I2C_MODE_COMPLETE_XFER);
 1012              		.loc 1 162 0
 1013 00f2 3A6A     		ldr	r2, [r7, #32]
 1014 00f4 154B     		ldr	r3, .L40
 1015 00f6 1B68     		ldr	r3, [r3]
 1016 00f8 4220     		mov	r0, #66
 1017 00fa 111C     		mov	r1, r2
 1018 00fc 1A1C     		mov	r2, r3
 1019 00fe 0023     		mov	r3, #0
 1020 0100 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 1021 0104 021C     		mov	r2, r0
 1022 0106 3B1C     		mov	r3, r7
 1023 0108 1F33     		add	r3, r3, #31
 1024 010a 1A70     		strb	r2, [r3]
 163:.\I2C_Class.c ****  
 164:.\I2C_Class.c ****     getActuatorStatus(NULL, NULL, NULL, &temp);
 1025              		.loc 1 164 0
 1026 010c 3B1C     		mov	r3, r7
 1027 010e 1E33     		add	r3, r3, #30
 1028 0110 0020     		mov	r0, #0
 1029 0112 0021     		mov	r1, #0
 1030 0114 0022     		mov	r2, #0
 1031 0116 FFF7FEFF 		bl	getActuatorStatus
 165:.\I2C_Class.c ****     
 166:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 22


 1032              		.loc 1 166 0
 1033 011a 3B1C     		mov	r3, r7
 1034 011c 1F33     		add	r3, r3, #31
 1035 011e 1B78     		ldrb	r3, [r3]
 1036 0120 002B     		cmp	r3, #0
 1037 0122 0AD1     		bne	.L37
 167:.\I2C_Class.c ****         if(temp == irrigationStatus){
 1038              		.loc 1 167 0
 1039 0124 3B1C     		mov	r3, r7
 1040 0126 1E33     		add	r3, r3, #30
 1041 0128 1A78     		ldrb	r2, [r3]
 1042 012a 094B     		ldr	r3, .L40+4
 1043 012c 1B78     		ldrb	r3, [r3]
 1044 012e 9A42     		cmp	r2, r3
 1045 0130 01D1     		bne	.L38
 168:.\I2C_Class.c ****             return 0;
 1046              		.loc 1 168 0
 1047 0132 0023     		mov	r3, #0
 1048 0134 02E0     		b	.L36
 1049              	.L38:
 169:.\I2C_Class.c ****         }
 170:.\I2C_Class.c ****         else {
 171:.\I2C_Class.c ****             return -1;
 1050              		.loc 1 171 0
 1051 0136 FF23     		mov	r3, #255
 1052 0138 00E0     		b	.L36
 1053              	.L37:
 172:.\I2C_Class.c ****         }
 173:.\I2C_Class.c ****     }
 174:.\I2C_Class.c ****     else {
 175:.\I2C_Class.c ****         return -1;
 1054              		.loc 1 175 0
 1055 013a FF23     		mov	r3, #255
 1056              	.L36:
 1057 013c C546     		mov	sp, r8
 1058 013e 5BB2     		sxtb	r3, r3
 176:.\I2C_Class.c ****     }
 177:.\I2C_Class.c **** }
 1059              		.loc 1 177 0
 1060 0140 181C     		mov	r0, r3
 1061 0142 BD46     		mov	sp, r7
 1062 0144 0AB0     		add	sp, sp, #40
 1063              		@ sp needed
 1064 0146 04BC     		pop	{r2}
 1065 0148 9046     		mov	r8, r2
 1066 014a F0BD     		pop	{r4, r5, r6, r7, pc}
 1067              	.L41:
 1068              		.align	2
 1069              	.L40:
 1070 014c 04000000 		.word	size
 1071 0150 00000000 		.word	irrigationStatus
 1072              		.cfi_endproc
 1073              	.LFE37:
 1074              		.size	adjustIrrigation, .-adjustIrrigation
 1075              		.section	.text.getActuatorStatus,"ax",%progbits
 1076              		.align	2
 1077              		.global	getActuatorStatus
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 23


 1078              		.code	16
 1079              		.thumb_func
 1080              		.type	getActuatorStatus, %function
 1081              	getActuatorStatus:
 1082              	.LFB38:
 178:.\I2C_Class.c **** 
 179:.\I2C_Class.c **** int8 getActuatorStatus(uint8* window, uint8* heat, uint8* vent, uint8* irrigation){
 1083              		.loc 1 179 0
 1084              		.cfi_startproc
 1085 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1086              		.cfi_def_cfa_offset 20
 1087              		.cfi_offset 4, -20
 1088              		.cfi_offset 5, -16
 1089              		.cfi_offset 6, -12
 1090              		.cfi_offset 7, -8
 1091              		.cfi_offset 14, -4
 1092 0002 8FB0     		sub	sp, sp, #60
 1093              		.cfi_def_cfa_offset 80
 1094 0004 00AF     		add	r7, sp, #0
 1095              		.cfi_def_cfa_register 7
 1096 0006 7862     		str	r0, [r7, #36]
 1097 0008 3962     		str	r1, [r7, #32]
 1098 000a FA61     		str	r2, [r7, #28]
 1099 000c BB61     		str	r3, [r7, #24]
 1100 000e 6B46     		mov	r3, sp
 1101 0010 1E1C     		mov	r6, r3
 180:.\I2C_Class.c ****     uint8 result = 0;
 1102              		.loc 1 180 0
 1103 0012 3B1C     		mov	r3, r7
 1104 0014 3733     		add	r3, r3, #55
 1105 0016 0022     		mov	r2, #0
 1106 0018 1A70     		strb	r2, [r3]
 181:.\I2C_Class.c ****     int RDbuf = 2;
 1107              		.loc 1 181 0
 1108 001a 0223     		mov	r3, #2
 1109 001c 3B63     		str	r3, [r7, #48]
 182:.\I2C_Class.c ****     uint8 dataget[RDbuf];
 1110              		.loc 1 182 0
 1111 001e 3B6B     		ldr	r3, [r7, #48]
 1112 0020 5A1E     		sub	r2, r3, #1
 1113 0022 FA62     		str	r2, [r7, #44]
 1114 0024 1A1C     		mov	r2, r3
 1115 0026 3A61     		str	r2, [r7, #16]
 1116 0028 0022     		mov	r2, #0
 1117 002a 7A61     		str	r2, [r7, #20]
 1118 002c 3969     		ldr	r1, [r7, #16]
 1119 002e 4A0F     		lsr	r2, r1, #29
 1120 0030 7969     		ldr	r1, [r7, #20]
 1121 0032 C900     		lsl	r1, r1, #3
 1122 0034 F960     		str	r1, [r7, #12]
 1123 0036 F968     		ldr	r1, [r7, #12]
 1124 0038 1143     		orr	r1, r2
 1125 003a F960     		str	r1, [r7, #12]
 1126 003c 3A69     		ldr	r2, [r7, #16]
 1127 003e D200     		lsl	r2, r2, #3
 1128 0040 1A1C     		mov	r2, r3
 1129 0042 141C     		mov	r4, r2
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 24


 1130 0044 0022     		mov	r2, #0
 1131 0046 151C     		mov	r5, r2
 1132 0048 620F     		lsr	r2, r4, #29
 1133 004a E900     		lsl	r1, r5, #3
 1134 004c 7960     		str	r1, [r7, #4]
 1135 004e 7968     		ldr	r1, [r7, #4]
 1136 0050 1143     		orr	r1, r2
 1137 0052 7960     		str	r1, [r7, #4]
 1138 0054 E200     		lsl	r2, r4, #3
 1139 0056 0733     		add	r3, r3, #7
 1140 0058 DB08     		lsr	r3, r3, #3
 1141 005a DB00     		lsl	r3, r3, #3
 1142 005c 6946     		mov	r1, sp
 1143 005e C91A     		sub	r1, r1, r3
 1144 0060 8D46     		mov	sp, r1
 1145 0062 6B46     		mov	r3, sp
 1146 0064 0033     		add	r3, r3, #0
 1147 0066 BB62     		str	r3, [r7, #40]
 183:.\I2C_Class.c ****     
 184:.\I2C_Class.c ****     //I2C_I2CMasterClearStatus();     // Clear status flags TODO test
 185:.\I2C_Class.c ****     
 186:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 1148              		.loc 1 186 0
 1149 0068 C046     		mov	r8, r8
 1150              	.L43:
 1151              		.loc 1 186 0 is_stmt 0 discriminator 1
 1152 006a FFF7FEFF 		bl	I2C_I2CMasterStatus
 1153 006e 021C     		mov	r2, r0
 1154 0070 0223     		mov	r3, #2
 1155 0072 1340     		and	r3, r2
 1156 0074 F9D0     		beq	.L43
 187:.\I2C_Class.c ****     
 188:.\I2C_Class.c ****     I2C_I2CMasterClearReadBuf();
 1157              		.loc 1 188 0 is_stmt 1
 1158 0076 FFF7FEFF 		bl	I2C_I2CMasterClearReadBuf
 189:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(ACTUATOR_ADRESS, dataget, RDbuf, I2C_I2C_MODE_COMPLETE_XFER);
 1159              		.loc 1 189 0
 1160 007a BA6A     		ldr	r2, [r7, #40]
 1161 007c 3B6B     		ldr	r3, [r7, #48]
 1162 007e 4220     		mov	r0, #66
 1163 0080 111C     		mov	r1, r2
 1164 0082 1A1C     		mov	r2, r3
 1165 0084 0023     		mov	r3, #0
 1166 0086 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1167 008a 021C     		mov	r2, r0
 1168 008c 3B1C     		mov	r3, r7
 1169 008e 3733     		add	r3, r3, #55
 1170 0090 1A70     		strb	r2, [r3]
 190:.\I2C_Class.c ****     
 191:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_RD_CMPLT)); //Wait for the dataget array to
 1171              		.loc 1 191 0
 1172 0092 C046     		mov	r8, r8
 1173              	.L44:
 1174              		.loc 1 191 0 is_stmt 0 discriminator 1
 1175 0094 FFF7FEFF 		bl	I2C_I2CMasterStatus
 1176 0098 021C     		mov	r2, r0
 1177 009a 0123     		mov	r3, #1
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 25


 1178 009c 1340     		and	r3, r2
 1179 009e F9D0     		beq	.L44
 192:.\I2C_Class.c ****     
 193:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (I2C_I2CMasterGetReadBufSize() != 0)){
 1180              		.loc 1 193 0 is_stmt 1
 1181 00a0 3B1C     		mov	r3, r7
 1182 00a2 3733     		add	r3, r3, #55
 1183 00a4 1B78     		ldrb	r3, [r3]
 1184 00a6 002B     		cmp	r3, #0
 1185 00a8 3ED1     		bne	.L45
 1186              		.loc 1 193 0 is_stmt 0 discriminator 1
 1187 00aa FFF7FEFF 		bl	I2C_I2CMasterGetReadBufSize
 1188 00ae 031C     		mov	r3, r0
 1189 00b0 002B     		cmp	r3, #0
 1190 00b2 39D0     		beq	.L45
 194:.\I2C_Class.c ****         if (window){                                   // Expecting to receive MSB first 
 1191              		.loc 1 194 0 is_stmt 1
 1192 00b4 7B6A     		ldr	r3, [r7, #36]
 1193 00b6 002B     		cmp	r3, #0
 1194 00b8 05D0     		beq	.L46
 195:.\I2C_Class.c ****             *window = (dataget[0] >> 4);      // Shifting out the 4 least significant bits.
 1195              		.loc 1 195 0
 1196 00ba BB6A     		ldr	r3, [r7, #40]
 1197 00bc 1B78     		ldrb	r3, [r3]
 1198 00be 1B09     		lsr	r3, r3, #4
 1199 00c0 DAB2     		uxtb	r2, r3
 1200 00c2 7B6A     		ldr	r3, [r7, #36]
 1201 00c4 1A70     		strb	r2, [r3]
 1202              	.L46:
 196:.\I2C_Class.c ****             #ifdef debugging
 197:.\I2C_Class.c ****                 UART_UartPutChar(*window+48);
 198:.\I2C_Class.c ****             #endif
 199:.\I2C_Class.c ****         }
 200:.\I2C_Class.c ****         if (heat){
 1203              		.loc 1 200 0
 1204 00c6 3B6A     		ldr	r3, [r7, #32]
 1205 00c8 002B     		cmp	r3, #0
 1206 00ca 08D0     		beq	.L47
 201:.\I2C_Class.c ****             *heat = ((dataget[0] & 0b00001110) >> 1);       // Ignoring everything but bit 1-3 and 
 1207              		.loc 1 201 0
 1208 00cc BB6A     		ldr	r3, [r7, #40]
 1209 00ce 1B78     		ldrb	r3, [r3]
 1210 00d0 1A1C     		mov	r2, r3
 1211 00d2 0E23     		mov	r3, #14
 1212 00d4 1340     		and	r3, r2
 1213 00d6 5B10     		asr	r3, r3, #1
 1214 00d8 DAB2     		uxtb	r2, r3
 1215 00da 3B6A     		ldr	r3, [r7, #32]
 1216 00dc 1A70     		strb	r2, [r3]
 1217              	.L47:
 202:.\I2C_Class.c ****             #ifdef debugging
 203:.\I2C_Class.c ****                 UART_UartPutChar(*heat+48);
 204:.\I2C_Class.c ****             #endif
 205:.\I2C_Class.c ****         }
 206:.\I2C_Class.c ****         if (vent){
 1218              		.loc 1 206 0
 1219 00de FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 26


 1220 00e0 002B     		cmp	r3, #0
 1221 00e2 15D0     		beq	.L48
 207:.\I2C_Class.c ****             if ((dataget[0] & 0b00000001) == 0b00000001){        // Maybe we can find a smarter way
 1222              		.loc 1 207 0
 1223 00e4 BB6A     		ldr	r3, [r7, #40]
 1224 00e6 1B78     		ldrb	r3, [r3]
 1225 00e8 1A1C     		mov	r2, r3
 1226 00ea 0123     		mov	r3, #1
 1227 00ec 1340     		and	r3, r2
 1228 00ee 09D0     		beq	.L49
 208:.\I2C_Class.c ****                 *vent = (dataget[1] >> 6) | 0b00000100;          // The if statements checks if bit
 1229              		.loc 1 208 0
 1230 00f0 BB6A     		ldr	r3, [r7, #40]
 1231 00f2 5B78     		ldrb	r3, [r3, #1]
 1232 00f4 9B09     		lsr	r3, r3, #6
 1233 00f6 DBB2     		uxtb	r3, r3
 1234 00f8 0422     		mov	r2, #4
 1235 00fa 1343     		orr	r3, r2
 1236 00fc DAB2     		uxtb	r2, r3
 1237 00fe FB69     		ldr	r3, [r7, #28]
 1238 0100 1A70     		strb	r2, [r3]
 1239 0102 05E0     		b	.L48
 1240              	.L49:
 209:.\I2C_Class.c ****                 #ifdef debugging
 210:.\I2C_Class.c ****                     UART_UartPutChar(*vent+48);                         // Shifting 5 right so only
 211:.\I2C_Class.c ****                 #endif
 212:.\I2C_Class.c ****             }                                                    
 213:.\I2C_Class.c ****             else {
 214:.\I2C_Class.c ****                 *vent = (dataget[1] >> 6) | 0b00000000;          // shifting 5 right since only the
 1241              		.loc 1 214 0
 1242 0104 BB6A     		ldr	r3, [r7, #40]
 1243 0106 5B78     		ldrb	r3, [r3, #1]
 1244 0108 9B09     		lsr	r3, r3, #6
 1245 010a DAB2     		uxtb	r2, r3
 1246 010c FB69     		ldr	r3, [r7, #28]
 1247 010e 1A70     		strb	r2, [r3]
 1248              	.L48:
 215:.\I2C_Class.c ****                 #ifdef debugging
 216:.\I2C_Class.c ****                     UART_UartPutChar(*vent+48);
 217:.\I2C_Class.c ****                 #endif
 218:.\I2C_Class.c ****             }
 219:.\I2C_Class.c ****         }
 220:.\I2C_Class.c ****         if (irrigation){
 1249              		.loc 1 220 0
 1250 0110 BB69     		ldr	r3, [r7, #24]
 1251 0112 002B     		cmp	r3, #0
 1252 0114 06D0     		beq	.L50
 221:.\I2C_Class.c ****             *irrigation = (dataget[1] & 0b00111111);             // Ignoring two most significant b
 1253              		.loc 1 221 0
 1254 0116 BB6A     		ldr	r3, [r7, #40]
 1255 0118 5A78     		ldrb	r2, [r3, #1]
 1256 011a 3F23     		mov	r3, #63
 1257 011c 1340     		and	r3, r2
 1258 011e DAB2     		uxtb	r2, r3
 1259 0120 BB69     		ldr	r3, [r7, #24]
 1260 0122 1A70     		strb	r2, [r3]
 1261              	.L50:
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 27


 222:.\I2C_Class.c ****             #ifdef debugging
 223:.\I2C_Class.c ****                 UART_UartPutChar(*irrigation);
 224:.\I2C_Class.c ****             #endif
 225:.\I2C_Class.c ****         }   
 226:.\I2C_Class.c ****         return 0;
 1262              		.loc 1 226 0
 1263 0124 0023     		mov	r3, #0
 1264 0126 00E0     		b	.L51
 1265              	.L45:
 227:.\I2C_Class.c ****     }
 228:.\I2C_Class.c ****     else {
 229:.\I2C_Class.c ****         return -1;   
 1266              		.loc 1 229 0
 1267 0128 FF23     		mov	r3, #255
 1268              	.L51:
 1269 012a B546     		mov	sp, r6
 1270 012c 5BB2     		sxtb	r3, r3
 230:.\I2C_Class.c ****     }
 231:.\I2C_Class.c **** }
 1271              		.loc 1 231 0
 1272 012e 181C     		mov	r0, r3
 1273 0130 BD46     		mov	sp, r7
 1274 0132 0FB0     		add	sp, sp, #60
 1275              		@ sp needed
 1276 0134 F0BD     		pop	{r4, r5, r6, r7, pc}
 1277              		.cfi_endproc
 1278              	.LFE38:
 1279              		.size	getActuatorStatus, .-getActuatorStatus
 1280 0136 C046     		.section	.text.getTempAndHum,"ax",%progbits
 1281              		.align	2
 1282              		.global	getTempAndHum
 1283              		.code	16
 1284              		.thumb_func
 1285              		.type	getTempAndHum, %function
 1286              	getTempAndHum:
 1287              	.LFB39:
 232:.\I2C_Class.c **** 
 233:.\I2C_Class.c **** int8 getTempAndHum(int32* temp, int32* hum){
 1288              		.loc 1 233 0
 1289              		.cfi_startproc
 1290 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1291              		.cfi_def_cfa_offset 20
 1292              		.cfi_offset 4, -20
 1293              		.cfi_offset 5, -16
 1294              		.cfi_offset 6, -12
 1295              		.cfi_offset 7, -8
 1296              		.cfi_offset 14, -4
 1297 0002 4746     		mov	r7, r8
 1298 0004 80B4     		push	{r7}
 1299              		.cfi_def_cfa_offset 24
 1300              		.cfi_offset 8, -24
 1301 0006 8AB0     		sub	sp, sp, #40
 1302              		.cfi_def_cfa_offset 64
 1303 0008 00AF     		add	r7, sp, #0
 1304              		.cfi_def_cfa_register 7
 1305 000a 7861     		str	r0, [r7, #20]
 1306 000c 3961     		str	r1, [r7, #16]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 28


 1307 000e 6A46     		mov	r2, sp
 1308 0010 9046     		mov	r8, r2
 234:.\I2C_Class.c ****     int32 RDbuf = 4;
 1309              		.loc 1 234 0
 1310 0012 0422     		mov	r2, #4
 1311 0014 7A62     		str	r2, [r7, #36]
 235:.\I2C_Class.c ****     uint8 dataget[RDbuf];
 1312              		.loc 1 235 0
 1313 0016 7A6A     		ldr	r2, [r7, #36]
 1314 0018 511E     		sub	r1, r2, #1
 1315 001a 3962     		str	r1, [r7, #32]
 1316 001c 111C     		mov	r1, r2
 1317 001e 0D1C     		mov	r5, r1
 1318 0020 0021     		mov	r1, #0
 1319 0022 0E1C     		mov	r6, r1
 1320 0024 690F     		lsr	r1, r5, #29
 1321 0026 F000     		lsl	r0, r6, #3
 1322 0028 F860     		str	r0, [r7, #12]
 1323 002a FB68     		ldr	r3, [r7, #12]
 1324 002c 0B43     		orr	r3, r1
 1325 002e FB60     		str	r3, [r7, #12]
 1326 0030 E800     		lsl	r0, r5, #3
 1327 0032 111C     		mov	r1, r2
 1328 0034 0B1C     		mov	r3, r1
 1329 0036 0021     		mov	r1, #0
 1330 0038 0C1C     		mov	r4, r1
 1331 003a 590F     		lsr	r1, r3, #29
 1332 003c E000     		lsl	r0, r4, #3
 1333 003e 7860     		str	r0, [r7, #4]
 1334 0040 7868     		ldr	r0, [r7, #4]
 1335 0042 0843     		orr	r0, r1
 1336 0044 7860     		str	r0, [r7, #4]
 1337 0046 D900     		lsl	r1, r3, #3
 1338 0048 131C     		mov	r3, r2
 1339 004a 0733     		add	r3, r3, #7
 1340 004c DB08     		lsr	r3, r3, #3
 1341 004e DB00     		lsl	r3, r3, #3
 1342 0050 6A46     		mov	r2, sp
 1343 0052 D21A     		sub	r2, r2, r3
 1344 0054 9546     		mov	sp, r2
 1345 0056 6B46     		mov	r3, sp
 1346 0058 0033     		add	r3, r3, #0
 1347 005a FB61     		str	r3, [r7, #28]
 236:.\I2C_Class.c ****     uint8 result = 0;
 1348              		.loc 1 236 0
 1349 005c 3B1C     		mov	r3, r7
 1350 005e 1B33     		add	r3, r3, #27
 1351 0060 0022     		mov	r2, #0
 1352 0062 1A70     		strb	r2, [r3]
 237:.\I2C_Class.c ****     
 238:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(TEMP_AND_HUM_SENSOR_ADDRESS, dataget, RDbuf, I2C_I2C_MODE_COMPLET
 1353              		.loc 1 238 0
 1354 0064 FA69     		ldr	r2, [r7, #28]
 1355 0066 7B6A     		ldr	r3, [r7, #36]
 1356 0068 2720     		mov	r0, #39
 1357 006a 111C     		mov	r1, r2
 1358 006c 1A1C     		mov	r2, r3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 29


 1359 006e 0023     		mov	r3, #0
 1360 0070 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1361 0074 021C     		mov	r2, r0
 1362 0076 3B1C     		mov	r3, r7
 1363 0078 1B33     		add	r3, r3, #27
 1364 007a 1A70     		strb	r2, [r3]
 239:.\I2C_Class.c ****     
 240:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 1365              		.loc 1 240 0
 1366 007c 3B1C     		mov	r3, r7
 1367 007e 1B33     		add	r3, r3, #27
 1368 0080 1B78     		ldrb	r3, [r3]
 1369 0082 002B     		cmp	r3, #0
 1370 0084 12D1     		bne	.L54
 241:.\I2C_Class.c ****         // Expecting to receive MSB first.
 242:.\I2C_Class.c ****         *hum = ((dataget[0] << 8) | dataget[1]);   
 1371              		.loc 1 242 0
 1372 0086 FB69     		ldr	r3, [r7, #28]
 1373 0088 1B78     		ldrb	r3, [r3]
 1374 008a 1A02     		lsl	r2, r3, #8
 1375 008c FB69     		ldr	r3, [r7, #28]
 1376 008e 5B78     		ldrb	r3, [r3, #1]
 1377 0090 1A43     		orr	r2, r3
 1378 0092 3B69     		ldr	r3, [r7, #16]
 1379 0094 1A60     		str	r2, [r3]
 243:.\I2C_Class.c ****         *temp = (((dataget[2] << 8) | dataget[3]) >> 2);
 1380              		.loc 1 243 0
 1381 0096 FB69     		ldr	r3, [r7, #28]
 1382 0098 9B78     		ldrb	r3, [r3, #2]
 1383 009a 1A02     		lsl	r2, r3, #8
 1384 009c FB69     		ldr	r3, [r7, #28]
 1385 009e DB78     		ldrb	r3, [r3, #3]
 1386 00a0 1343     		orr	r3, r2
 1387 00a2 9A10     		asr	r2, r3, #2
 1388 00a4 7B69     		ldr	r3, [r7, #20]
 1389 00a6 1A60     		str	r2, [r3]
 244:.\I2C_Class.c ****         return 0;   // No error 
 1390              		.loc 1 244 0
 1391 00a8 0023     		mov	r3, #0
 1392 00aa 00E0     		b	.L55
 1393              	.L54:
 245:.\I2C_Class.c ****     }
 246:.\I2C_Class.c ****     else {
 247:.\I2C_Class.c ****         return -1;
 1394              		.loc 1 247 0
 1395 00ac FF23     		mov	r3, #255
 1396              	.L55:
 1397 00ae C546     		mov	sp, r8
 1398 00b0 5BB2     		sxtb	r3, r3
 248:.\I2C_Class.c ****     }
 249:.\I2C_Class.c **** }
 1399              		.loc 1 249 0
 1400 00b2 181C     		mov	r0, r3
 1401 00b4 BD46     		mov	sp, r7
 1402 00b6 0AB0     		add	sp, sp, #40
 1403              		@ sp needed
 1404 00b8 04BC     		pop	{r2}
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 30


 1405 00ba 9046     		mov	r8, r2
 1406 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 1407              		.cfi_endproc
 1408              	.LFE39:
 1409              		.size	getTempAndHum, .-getTempAndHum
 1410 00be C046     		.section	.text.getLight,"ax",%progbits
 1411              		.align	2
 1412              		.global	getLight
 1413              		.code	16
 1414              		.thumb_func
 1415              		.type	getLight, %function
 1416              	getLight:
 1417              	.LFB40:
 250:.\I2C_Class.c **** 
 251:.\I2C_Class.c **** int8 getLight(int32* light){
 1418              		.loc 1 251 0
 1419              		.cfi_startproc
 1420 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1421              		.cfi_def_cfa_offset 20
 1422              		.cfi_offset 4, -20
 1423              		.cfi_offset 5, -16
 1424              		.cfi_offset 6, -12
 1425              		.cfi_offset 7, -8
 1426              		.cfi_offset 14, -4
 1427 0002 4746     		mov	r7, r8
 1428 0004 80B4     		push	{r7}
 1429              		.cfi_def_cfa_offset 24
 1430              		.cfi_offset 8, -24
 1431 0006 88B0     		sub	sp, sp, #32
 1432              		.cfi_def_cfa_offset 56
 1433 0008 00AF     		add	r7, sp, #0
 1434              		.cfi_def_cfa_register 7
 1435 000a F860     		str	r0, [r7, #12]
 1436 000c 6846     		mov	r0, sp
 1437 000e 8046     		mov	r8, r0
 252:.\I2C_Class.c ****     
 253:.\I2C_Class.c ****     /* 
 254:.\I2C_Class.c ****     Command register: Adress 0x00.
 255:.\I2C_Class.c ****     Bit 7: resets '0' or enables '1' ADC.
 256:.\I2C_Class.c ****     Bit 6: Power down mode. Normal operation '0' or power down mode '1'.
 257:.\I2C_Class.c ****     Bit 5: Decides whether integration time (ADC is of integration type) is done internally '0' or 
 258:.\I2C_Class.c ****     Bit 4: Has to be zero.
 259:.\I2C_Class.c ****     Bit 3-2: Photodiode select 0:0 and 0:1 = disable ADC. 1:0 = Light count DATA output in signed (
 260:.\I2C_Class.c ****     Bit 1-0: Prescaler or number of clockcycles 2^(n). 0:0 = 2^(16), 0:1 = 2^(12), 1:0 = 2^(8) and 
 261:.\I2C_Class.c ****     
 262:.\I2C_Class.c ****     RW Control register: Adress 0x01.
 263:.\I2C_Class.c ****     Bit 3-2: Set lux range. watch table in page 6.
 264:.\I2C_Class.c ****     All other bits has to be zero.
 265:.\I2C_Class.c ****     
 266:.\I2C_Class.c ****     I2C Sensor data reg: Adress 0x04(LSB) and 0x05()
 267:.\I2C_Class.c ****     The sensor sends a 15 bit value that can be acceMSBssed by the adresses 0x04 and 0x05
 268:.\I2C_Class.c ****     these registers are automatically refreshed each new integration period.
 269:.\I2C_Class.c ****     */
 270:.\I2C_Class.c ****     
 271:.\I2C_Class.c ****     uint8 dataget[size];
 1438              		.loc 1 271 0
 1439 0010 3348     		ldr	r0, .L62
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 31


 1440 0012 0068     		ldr	r0, [r0]
 1441 0014 421E     		sub	r2, r0, #1
 1442 0016 9446     		mov	ip, r2
 1443 0018 6346     		mov	r3, ip
 1444 001a FB61     		str	r3, [r7, #28]
 1445 001c 8446     		mov	ip, r0
 1446 001e 6146     		mov	r1, ip
 1447 0020 0024     		mov	r4, #0
 1448 0022 A446     		mov	ip, r4
 1449 0024 6246     		mov	r2, ip
 1450 0026 4B0F     		lsr	r3, r1, #29
 1451 0028 9C46     		mov	ip, r3
 1452 002a D400     		lsl	r4, r2, #3
 1453 002c 7C60     		str	r4, [r7, #4]
 1454 002e 6346     		mov	r3, ip
 1455 0030 7C68     		ldr	r4, [r7, #4]
 1456 0032 2343     		orr	r3, r4
 1457 0034 7B60     		str	r3, [r7, #4]
 1458 0036 CB00     		lsl	r3, r1, #3
 1459 0038 021C     		mov	r2, r0
 1460 003a 131C     		mov	r3, r2
 1461 003c 0022     		mov	r2, #0
 1462 003e 141C     		mov	r4, r2
 1463 0040 5A0F     		lsr	r2, r3, #29
 1464 0042 E600     		lsl	r6, r4, #3
 1465 0044 1643     		orr	r6, r2
 1466 0046 DD00     		lsl	r5, r3, #3
 1467 0048 031C     		mov	r3, r0
 1468 004a 0733     		add	r3, r3, #7
 1469 004c DB08     		lsr	r3, r3, #3
 1470 004e DB00     		lsl	r3, r3, #3
 1471 0050 6C46     		mov	r4, sp
 1472 0052 E41A     		sub	r4, r4, r3
 1473 0054 A546     		mov	sp, r4
 1474 0056 6B46     		mov	r3, sp
 1475 0058 0033     		add	r3, r3, #0
 1476 005a BB61     		str	r3, [r7, #24]
 272:.\I2C_Class.c ****     uint8 result = 0;
 1477              		.loc 1 272 0
 1478 005c 3B1C     		mov	r3, r7
 1479 005e 1733     		add	r3, r3, #23
 1480 0060 0022     		mov	r2, #0
 1481 0062 1A70     		strb	r2, [r3]
 273:.\I2C_Class.c ****     
 274:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(LIGHT_SENSOR_MSB, dataget, size, I2C_I2C_MODE_COMPLETE_XFER); 
 1482              		.loc 1 274 0
 1483 0064 BA69     		ldr	r2, [r7, #24]
 1484 0066 1E4B     		ldr	r3, .L62
 1485 0068 1B68     		ldr	r3, [r3]
 1486 006a 0520     		mov	r0, #5
 1487 006c 111C     		mov	r1, r2
 1488 006e 1A1C     		mov	r2, r3
 1489 0070 0023     		mov	r3, #0
 1490 0072 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1491 0076 021C     		mov	r2, r0
 1492 0078 3B1C     		mov	r3, r7
 1493 007a 1733     		add	r3, r3, #23
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 32


 1494 007c 1A70     		strb	r2, [r3]
 275:.\I2C_Class.c ****         
 276:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 1495              		.loc 1 276 0
 1496 007e 3B1C     		mov	r3, r7
 1497 0080 1733     		add	r3, r3, #23
 1498 0082 1B78     		ldrb	r3, [r3]
 1499 0084 002B     		cmp	r3, #0
 1500 0086 21D1     		bne	.L58
 277:.\I2C_Class.c ****         // Expecting to receive MSB first.
 278:.\I2C_Class.c ****         *light = (dataget[0] << 7);     // TODO: TEST THIS WITH THE PROPER SENSOR!!
 1501              		.loc 1 278 0
 1502 0088 BB69     		ldr	r3, [r7, #24]
 1503 008a 1B78     		ldrb	r3, [r3]
 1504 008c DA01     		lsl	r2, r3, #7
 1505 008e FB68     		ldr	r3, [r7, #12]
 1506 0090 1A60     		str	r2, [r3]
 279:.\I2C_Class.c ****         result = I2C_I2CMasterReadBuf(LIGHT_SENSOR_LSB, dataget, size, I2C_I2C_MODE_COMPLETE_XFER);
 1507              		.loc 1 279 0
 1508 0092 BA69     		ldr	r2, [r7, #24]
 1509 0094 124B     		ldr	r3, .L62
 1510 0096 1B68     		ldr	r3, [r3]
 1511 0098 0420     		mov	r0, #4
 1512 009a 111C     		mov	r1, r2
 1513 009c 1A1C     		mov	r2, r3
 1514 009e 0023     		mov	r3, #0
 1515 00a0 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1516 00a4 021C     		mov	r2, r0
 1517 00a6 3B1C     		mov	r3, r7
 1518 00a8 1733     		add	r3, r3, #23
 1519 00aa 1A70     		strb	r2, [r3]
 280:.\I2C_Class.c ****             if (result == I2C_I2C_MSTR_NO_ERROR){
 1520              		.loc 1 280 0
 1521 00ac 3B1C     		mov	r3, r7
 1522 00ae 1733     		add	r3, r3, #23
 1523 00b0 1B78     		ldrb	r3, [r3]
 1524 00b2 002B     		cmp	r3, #0
 1525 00b4 08D1     		bne	.L59
 281:.\I2C_Class.c ****                 *light |= dataget[0]; 
 1526              		.loc 1 281 0
 1527 00b6 FB68     		ldr	r3, [r7, #12]
 1528 00b8 1A68     		ldr	r2, [r3]
 1529 00ba BB69     		ldr	r3, [r7, #24]
 1530 00bc 1B78     		ldrb	r3, [r3]
 1531 00be 1A43     		orr	r2, r3
 1532 00c0 FB68     		ldr	r3, [r7, #12]
 1533 00c2 1A60     		str	r2, [r3]
 282:.\I2C_Class.c ****                 return 0;   // No error 
 1534              		.loc 1 282 0
 1535 00c4 0023     		mov	r3, #0
 1536 00c6 02E0     		b	.L60
 1537              	.L59:
 283:.\I2C_Class.c **** 	        }
 284:.\I2C_Class.c ****             else {
 285:.\I2C_Class.c ****                 return -1;
 1538              		.loc 1 285 0
 1539 00c8 FF23     		mov	r3, #255
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 33


 1540 00ca 00E0     		b	.L60
 1541              	.L58:
 286:.\I2C_Class.c ****             }
 287:.\I2C_Class.c ****     }
 288:.\I2C_Class.c ****     else {
 289:.\I2C_Class.c ****         return -1;
 1542              		.loc 1 289 0
 1543 00cc FF23     		mov	r3, #255
 1544              	.L60:
 1545 00ce C546     		mov	sp, r8
 1546 00d0 5BB2     		sxtb	r3, r3
 290:.\I2C_Class.c ****     }
 291:.\I2C_Class.c **** }
 1547              		.loc 1 291 0
 1548 00d2 181C     		mov	r0, r3
 1549 00d4 BD46     		mov	sp, r7
 1550 00d6 08B0     		add	sp, sp, #32
 1551              		@ sp needed
 1552 00d8 04BC     		pop	{r2}
 1553 00da 9046     		mov	r8, r2
 1554 00dc F0BD     		pop	{r4, r5, r6, r7, pc}
 1555              	.L63:
 1556 00de C046     		.align	2
 1557              	.L62:
 1558 00e0 04000000 		.word	size
 1559              		.cfi_endproc
 1560              	.LFE40:
 1561              		.size	getLight, .-getLight
 1562              		.section	.text.getSoilHum,"ax",%progbits
 1563              		.align	2
 1564              		.global	getSoilHum
 1565              		.code	16
 1566              		.thumb_func
 1567              		.type	getSoilHum, %function
 1568              	getSoilHum:
 1569              	.LFB41:
 292:.\I2C_Class.c **** 
 293:.\I2C_Class.c **** int8 getSoilHum(uint8 index, int16* soilHum){   // TODO: THIS HAS NOT BEEN IMPLEMENTED.
 1570              		.loc 1 293 0
 1571              		.cfi_startproc
 1572 0000 80B5     		push	{r7, lr}
 1573              		.cfi_def_cfa_offset 8
 1574              		.cfi_offset 7, -8
 1575              		.cfi_offset 14, -4
 1576 0002 84B0     		sub	sp, sp, #16
 1577              		.cfi_def_cfa_offset 24
 1578 0004 00AF     		add	r7, sp, #0
 1579              		.cfi_def_cfa_register 7
 1580 0006 021C     		mov	r2, r0
 1581 0008 3960     		str	r1, [r7]
 1582 000a FB1D     		add	r3, r7, #7
 1583 000c 1A70     		strb	r2, [r3]
 294:.\I2C_Class.c ****     index = 0;
 1584              		.loc 1 294 0
 1585 000e 3B1C     		mov	r3, r7
 1586 0010 0F33     		add	r3, r3, #15
 1587 0012 0022     		mov	r2, #0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 34


 1588 0014 1A70     		strb	r2, [r3]
 295:.\I2C_Class.c ****     *soilHum = 0;
 1589              		.loc 1 295 0
 1590 0016 3B68     		ldr	r3, [r7]
 1591 0018 0022     		mov	r2, #0
 1592 001a 1A80     		strh	r2, [r3]
 296:.\I2C_Class.c ****     return 0;
 1593              		.loc 1 296 0
 1594 001c 0023     		mov	r3, #0
 1595 001e 5BB2     		sxtb	r3, r3
 297:.\I2C_Class.c **** }
 1596              		.loc 1 297 0
 1597 0020 181C     		mov	r0, r3
 1598 0022 BD46     		mov	sp, r7
 1599 0024 04B0     		add	sp, sp, #16
 1600              		@ sp needed
 1601 0026 80BD     		pop	{r7, pc}
 1602              		.cfi_endproc
 1603              	.LFE41:
 1604              		.size	getSoilHum, .-getSoilHum
 1605              		.text
 1606              	.Letext0:
 1607              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 1608              		.section	.debug_info,"",%progbits
 1609              	.Ldebug_info0:
 1610 0000 FA040000 		.4byte	0x4fa
 1611 0004 0400     		.2byte	0x4
 1612 0006 00000000 		.4byte	.Ldebug_abbrev0
 1613 000a 04       		.byte	0x4
 1614 000b 01       		.uleb128 0x1
 1615 000c 72000000 		.4byte	.LASF51
 1616 0010 01       		.byte	0x1
 1617 0011 2C000000 		.4byte	.LASF52
 1618 0015 D4010000 		.4byte	.LASF53
 1619 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1620 001d 00000000 		.4byte	0
 1621 0021 00000000 		.4byte	.Ldebug_line0
 1622 0025 02       		.uleb128 0x2
 1623 0026 01       		.byte	0x1
 1624 0027 06       		.byte	0x6
 1625 0028 47010000 		.4byte	.LASF0
 1626 002c 02       		.uleb128 0x2
 1627 002d 01       		.byte	0x1
 1628 002e 08       		.byte	0x8
 1629 002f 5B010000 		.4byte	.LASF1
 1630 0033 02       		.uleb128 0x2
 1631 0034 02       		.byte	0x2
 1632 0035 05       		.byte	0x5
 1633 0036 7D020000 		.4byte	.LASF2
 1634 003a 02       		.uleb128 0x2
 1635 003b 02       		.byte	0x2
 1636 003c 07       		.byte	0x7
 1637 003d 3A000000 		.4byte	.LASF3
 1638 0041 02       		.uleb128 0x2
 1639 0042 04       		.byte	0x4
 1640 0043 05       		.byte	0x5
 1641 0044 A0020000 		.4byte	.LASF4
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 35


 1642 0048 02       		.uleb128 0x2
 1643 0049 04       		.byte	0x4
 1644 004a 07       		.byte	0x7
 1645 004b 0F010000 		.4byte	.LASF5
 1646 004f 02       		.uleb128 0x2
 1647 0050 08       		.byte	0x8
 1648 0051 05       		.byte	0x5
 1649 0052 59020000 		.4byte	.LASF6
 1650 0056 02       		.uleb128 0x2
 1651 0057 08       		.byte	0x8
 1652 0058 07       		.byte	0x7
 1653 0059 BD010000 		.4byte	.LASF7
 1654 005d 03       		.uleb128 0x3
 1655 005e 04       		.byte	0x4
 1656 005f 05       		.byte	0x5
 1657 0060 696E7400 		.ascii	"int\000"
 1658 0064 02       		.uleb128 0x2
 1659 0065 04       		.byte	0x4
 1660 0066 07       		.byte	0x7
 1661 0067 99010000 		.4byte	.LASF8
 1662 006b 04       		.uleb128 0x4
 1663 006c 66000000 		.4byte	.LASF9
 1664 0070 02       		.byte	0x2
 1665 0071 A1       		.byte	0xa1
 1666 0072 2C000000 		.4byte	0x2c
 1667 0076 04       		.uleb128 0x4
 1668 0077 8D010000 		.4byte	.LASF10
 1669 007b 02       		.byte	0x2
 1670 007c A2       		.byte	0xa2
 1671 007d 3A000000 		.4byte	0x3a
 1672 0081 04       		.uleb128 0x4
 1673 0082 94010000 		.4byte	.LASF11
 1674 0086 02       		.byte	0x2
 1675 0087 A4       		.byte	0xa4
 1676 0088 25000000 		.4byte	0x25
 1677 008c 04       		.uleb128 0x4
 1678 008d 09010000 		.4byte	.LASF12
 1679 0091 02       		.byte	0x2
 1680 0092 A5       		.byte	0xa5
 1681 0093 33000000 		.4byte	0x33
 1682 0097 04       		.uleb128 0x4
 1683 0098 33010000 		.4byte	.LASF13
 1684 009c 02       		.byte	0x2
 1685 009d A6       		.byte	0xa6
 1686 009e 41000000 		.4byte	0x41
 1687 00a2 02       		.uleb128 0x2
 1688 00a3 04       		.byte	0x4
 1689 00a4 04       		.byte	0x4
 1690 00a5 6C000000 		.4byte	.LASF14
 1691 00a9 02       		.uleb128 0x2
 1692 00aa 08       		.byte	0x8
 1693 00ab 04       		.byte	0x4
 1694 00ac 69010000 		.4byte	.LASF15
 1695 00b0 02       		.uleb128 0x2
 1696 00b1 01       		.byte	0x1
 1697 00b2 08       		.byte	0x8
 1698 00b3 67020000 		.4byte	.LASF16
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 36


 1699 00b7 02       		.uleb128 0x2
 1700 00b8 04       		.byte	0x4
 1701 00b9 07       		.byte	0x7
 1702 00ba 45020000 		.4byte	.LASF17
 1703 00be 05       		.uleb128 0x5
 1704 00bf 04       		.byte	0x4
 1705 00c0 6B000000 		.4byte	0x6b
 1706 00c4 06       		.uleb128 0x6
 1707 00c5 37020000 		.4byte	.LASF54
 1708 00c9 01       		.byte	0x1
 1709 00ca 20       		.byte	0x20
 1710 00cb 00000000 		.4byte	.LFB33
 1711 00cf 0C010000 		.4byte	.LFE33-.LFB33
 1712 00d3 01       		.uleb128 0x1
 1713 00d4 9C       		.byte	0x9c
 1714 00d5 06010000 		.4byte	0x106
 1715 00d9 07       		.uleb128 0x7
 1716 00da D7020000 		.4byte	.LASF18
 1717 00de 01       		.byte	0x1
 1718 00df 27       		.byte	0x27
 1719 00e0 06010000 		.4byte	0x106
 1720 00e4 03       		.uleb128 0x3
 1721 00e5 91       		.byte	0x91
 1722 00e6 60       		.sleb128 -32
 1723 00e7 06       		.byte	0x6
 1724 00e8 07       		.uleb128 0x7
 1725 00e9 4D000000 		.4byte	.LASF19
 1726 00ed 01       		.byte	0x1
 1727 00ee 27       		.byte	0x27
 1728 00ef 19010000 		.4byte	0x119
 1729 00f3 03       		.uleb128 0x3
 1730 00f4 91       		.byte	0x91
 1731 00f5 58       		.sleb128 -40
 1732 00f6 06       		.byte	0x6
 1733 00f7 07       		.uleb128 0x7
 1734 00f8 20020000 		.4byte	.LASF20
 1735 00fc 01       		.byte	0x1
 1736 00fd 2A       		.byte	0x2a
 1737 00fe 6B000000 		.4byte	0x6b
 1738 0102 02       		.uleb128 0x2
 1739 0103 91       		.byte	0x91
 1740 0104 57       		.sleb128 -41
 1741 0105 00       		.byte	0
 1742 0106 08       		.uleb128 0x8
 1743 0107 6B000000 		.4byte	0x6b
 1744 010b 19010000 		.4byte	0x119
 1745 010f 09       		.uleb128 0x9
 1746 0110 B7000000 		.4byte	0xb7
 1747 0114 03       		.uleb128 0x3
 1748 0115 91       		.byte	0x91
 1749 0116 64       		.sleb128 -28
 1750 0117 06       		.byte	0x6
 1751 0118 00       		.byte	0
 1752 0119 08       		.uleb128 0x8
 1753 011a 6B000000 		.4byte	0x6b
 1754 011e 2C010000 		.4byte	0x12c
 1755 0122 09       		.uleb128 0x9
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 37


 1756 0123 B7000000 		.4byte	0xb7
 1757 0127 03       		.uleb128 0x3
 1758 0128 91       		.byte	0x91
 1759 0129 5C       		.sleb128 -36
 1760 012a 06       		.byte	0x6
 1761 012b 00       		.byte	0
 1762 012c 0A       		.uleb128 0xa
 1763 012d 12000000 		.4byte	.LASF24
 1764 0131 01       		.byte	0x1
 1765 0132 35       		.byte	0x35
 1766 0133 81000000 		.4byte	0x81
 1767 0137 00000000 		.4byte	.LFB34
 1768 013b 68010000 		.4byte	.LFE34-.LFB34
 1769 013f 01       		.uleb128 0x1
 1770 0140 9C       		.byte	0x9c
 1771 0141 8E010000 		.4byte	0x18e
 1772 0145 0B       		.uleb128 0xb
 1773 0146 706F7300 		.ascii	"pos\000"
 1774 014a 01       		.byte	0x1
 1775 014b 35       		.byte	0x35
 1776 014c 6B000000 		.4byte	0x6b
 1777 0150 02       		.uleb128 0x2
 1778 0151 91       		.byte	0x91
 1779 0152 4F       		.sleb128 -49
 1780 0153 07       		.uleb128 0x7
 1781 0154 2C020000 		.4byte	.LASF21
 1782 0158 01       		.byte	0x1
 1783 0159 36       		.byte	0x36
 1784 015a 8E010000 		.4byte	0x18e
 1785 015e 03       		.uleb128 0x3
 1786 015f 91       		.byte	0x91
 1787 0160 5C       		.sleb128 -36
 1788 0161 06       		.byte	0x6
 1789 0162 07       		.uleb128 0x7
 1790 0163 81010000 		.4byte	.LASF22
 1791 0167 01       		.byte	0x1
 1792 0168 36       		.byte	0x36
 1793 0169 A1010000 		.4byte	0x1a1
 1794 016d 03       		.uleb128 0x3
 1795 016e 91       		.byte	0x91
 1796 016f 54       		.sleb128 -44
 1797 0170 06       		.byte	0x6
 1798 0171 07       		.uleb128 0x7
 1799 0172 20020000 		.4byte	.LASF20
 1800 0176 01       		.byte	0x1
 1801 0177 39       		.byte	0x39
 1802 0178 6B000000 		.4byte	0x6b
 1803 017c 02       		.uleb128 0x2
 1804 017d 91       		.byte	0x91
 1805 017e 67       		.sleb128 -25
 1806 017f 07       		.uleb128 0x7
 1807 0180 FE000000 		.4byte	.LASF23
 1808 0184 01       		.byte	0x1
 1809 0185 3A       		.byte	0x3a
 1810 0186 6B000000 		.4byte	0x6b
 1811 018a 02       		.uleb128 0x2
 1812 018b 91       		.byte	0x91
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 38


 1813 018c 53       		.sleb128 -45
 1814 018d 00       		.byte	0
 1815 018e 08       		.uleb128 0x8
 1816 018f 6B000000 		.4byte	0x6b
 1817 0193 A1010000 		.4byte	0x1a1
 1818 0197 09       		.uleb128 0x9
 1819 0198 B7000000 		.4byte	0xb7
 1820 019c 03       		.uleb128 0x3
 1821 019d 91       		.byte	0x91
 1822 019e 60       		.sleb128 -32
 1823 019f 06       		.byte	0x6
 1824 01a0 00       		.byte	0
 1825 01a1 08       		.uleb128 0x8
 1826 01a2 6B000000 		.4byte	0x6b
 1827 01a6 B4010000 		.4byte	0x1b4
 1828 01aa 09       		.uleb128 0x9
 1829 01ab B7000000 		.4byte	0xb7
 1830 01af 03       		.uleb128 0x3
 1831 01b0 91       		.byte	0x91
 1832 01b1 58       		.sleb128 -40
 1833 01b2 06       		.byte	0x6
 1834 01b3 00       		.byte	0
 1835 01b4 0A       		.uleb128 0xa
 1836 01b5 4E020000 		.4byte	.LASF25
 1837 01b9 01       		.byte	0x1
 1838 01ba 52       		.byte	0x52
 1839 01bb 81000000 		.4byte	0x81
 1840 01bf 00000000 		.4byte	.LFB35
 1841 01c3 68010000 		.4byte	.LFE35-.LFB35
 1842 01c7 01       		.uleb128 0x1
 1843 01c8 9C       		.byte	0x9c
 1844 01c9 16020000 		.4byte	0x216
 1845 01cd 0C       		.uleb128 0xc
 1846 01ce 27020000 		.4byte	.LASF26
 1847 01d2 01       		.byte	0x1
 1848 01d3 52       		.byte	0x52
 1849 01d4 6B000000 		.4byte	0x6b
 1850 01d8 02       		.uleb128 0x2
 1851 01d9 91       		.byte	0x91
 1852 01da 4F       		.sleb128 -49
 1853 01db 07       		.uleb128 0x7
 1854 01dc 72020000 		.4byte	.LASF27
 1855 01e0 01       		.byte	0x1
 1856 01e1 53       		.byte	0x53
 1857 01e2 16020000 		.4byte	0x216
 1858 01e6 03       		.uleb128 0x3
 1859 01e7 91       		.byte	0x91
 1860 01e8 5C       		.sleb128 -36
 1861 01e9 06       		.byte	0x6
 1862 01ea 07       		.uleb128 0x7
 1863 01eb 5A000000 		.4byte	.LASF28
 1864 01ef 01       		.byte	0x1
 1865 01f0 53       		.byte	0x53
 1866 01f1 29020000 		.4byte	0x229
 1867 01f5 03       		.uleb128 0x3
 1868 01f6 91       		.byte	0x91
 1869 01f7 54       		.sleb128 -44
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 39


 1870 01f8 06       		.byte	0x6
 1871 01f9 07       		.uleb128 0x7
 1872 01fa 20020000 		.4byte	.LASF20
 1873 01fe 01       		.byte	0x1
 1874 01ff 56       		.byte	0x56
 1875 0200 6B000000 		.4byte	0x6b
 1876 0204 02       		.uleb128 0x2
 1877 0205 91       		.byte	0x91
 1878 0206 67       		.sleb128 -25
 1879 0207 07       		.uleb128 0x7
 1880 0208 A6010000 		.4byte	.LASF29
 1881 020c 01       		.byte	0x1
 1882 020d 57       		.byte	0x57
 1883 020e 6B000000 		.4byte	0x6b
 1884 0212 02       		.uleb128 0x2
 1885 0213 91       		.byte	0x91
 1886 0214 53       		.sleb128 -45
 1887 0215 00       		.byte	0
 1888 0216 08       		.uleb128 0x8
 1889 0217 6B000000 		.4byte	0x6b
 1890 021b 29020000 		.4byte	0x229
 1891 021f 09       		.uleb128 0x9
 1892 0220 B7000000 		.4byte	0xb7
 1893 0224 03       		.uleb128 0x3
 1894 0225 91       		.byte	0x91
 1895 0226 60       		.sleb128 -32
 1896 0227 06       		.byte	0x6
 1897 0228 00       		.byte	0
 1898 0229 08       		.uleb128 0x8
 1899 022a 6B000000 		.4byte	0x6b
 1900 022e 3C020000 		.4byte	0x23c
 1901 0232 09       		.uleb128 0x9
 1902 0233 B7000000 		.4byte	0xb7
 1903 0237 03       		.uleb128 0x3
 1904 0238 91       		.byte	0x91
 1905 0239 58       		.sleb128 -40
 1906 023a 06       		.byte	0x6
 1907 023b 00       		.byte	0
 1908 023c 0A       		.uleb128 0xa
 1909 023d AB010000 		.4byte	.LASF30
 1910 0241 01       		.byte	0x1
 1911 0242 71       		.byte	0x71
 1912 0243 81000000 		.4byte	0x81
 1913 0247 00000000 		.4byte	.LFB36
 1914 024b 68010000 		.4byte	.LFE36-.LFB36
 1915 024f 01       		.uleb128 0x1
 1916 0250 9C       		.byte	0x9c
 1917 0251 9E020000 		.4byte	0x29e
 1918 0255 0C       		.uleb128 0xc
 1919 0256 3F020000 		.4byte	.LASF31
 1920 025a 01       		.byte	0x1
 1921 025b 71       		.byte	0x71
 1922 025c 6B000000 		.4byte	0x6b
 1923 0260 02       		.uleb128 0x2
 1924 0261 91       		.byte	0x91
 1925 0262 4F       		.sleb128 -49
 1926 0263 07       		.uleb128 0x7
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 40


 1927 0264 A9020000 		.4byte	.LASF32
 1928 0268 01       		.byte	0x1
 1929 0269 72       		.byte	0x72
 1930 026a 9E020000 		.4byte	0x29e
 1931 026e 03       		.uleb128 0x3
 1932 026f 91       		.byte	0x91
 1933 0270 5C       		.sleb128 -36
 1934 0271 06       		.byte	0x6
 1935 0272 07       		.uleb128 0x7
 1936 0273 00000000 		.4byte	.LASF33
 1937 0277 01       		.byte	0x1
 1938 0278 72       		.byte	0x72
 1939 0279 B1020000 		.4byte	0x2b1
 1940 027d 03       		.uleb128 0x3
 1941 027e 91       		.byte	0x91
 1942 027f 54       		.sleb128 -44
 1943 0280 06       		.byte	0x6
 1944 0281 07       		.uleb128 0x7
 1945 0282 20020000 		.4byte	.LASF20
 1946 0286 01       		.byte	0x1
 1947 0287 75       		.byte	0x75
 1948 0288 6B000000 		.4byte	0x6b
 1949 028c 02       		.uleb128 0x2
 1950 028d 91       		.byte	0x91
 1951 028e 67       		.sleb128 -25
 1952 028f 07       		.uleb128 0x7
 1953 0290 A6010000 		.4byte	.LASF29
 1954 0294 01       		.byte	0x1
 1955 0295 76       		.byte	0x76
 1956 0296 6B000000 		.4byte	0x6b
 1957 029a 02       		.uleb128 0x2
 1958 029b 91       		.byte	0x91
 1959 029c 53       		.sleb128 -45
 1960 029d 00       		.byte	0
 1961 029e 08       		.uleb128 0x8
 1962 029f 6B000000 		.4byte	0x6b
 1963 02a3 B1020000 		.4byte	0x2b1
 1964 02a7 09       		.uleb128 0x9
 1965 02a8 B7000000 		.4byte	0xb7
 1966 02ac 03       		.uleb128 0x3
 1967 02ad 91       		.byte	0x91
 1968 02ae 60       		.sleb128 -32
 1969 02af 06       		.byte	0x6
 1970 02b0 00       		.byte	0
 1971 02b1 08       		.uleb128 0x8
 1972 02b2 6B000000 		.4byte	0x6b
 1973 02b6 C4020000 		.4byte	0x2c4
 1974 02ba 09       		.uleb128 0x9
 1975 02bb B7000000 		.4byte	0xb7
 1976 02bf 03       		.uleb128 0x3
 1977 02c0 91       		.byte	0x91
 1978 02c1 58       		.sleb128 -40
 1979 02c2 06       		.byte	0x6
 1980 02c3 00       		.byte	0
 1981 02c4 0A       		.uleb128 0xa
 1982 02c5 C6020000 		.4byte	.LASF34
 1983 02c9 01       		.byte	0x1
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 41


 1984 02ca 8E       		.byte	0x8e
 1985 02cb 81000000 		.4byte	0x81
 1986 02cf 00000000 		.4byte	.LFB37
 1987 02d3 54010000 		.4byte	.LFE37-.LFB37
 1988 02d7 01       		.uleb128 0x1
 1989 02d8 9C       		.byte	0x9c
 1990 02d9 25030000 		.4byte	0x325
 1991 02dd 0C       		.uleb128 0xc
 1992 02de 6C020000 		.4byte	.LASF35
 1993 02e2 01       		.byte	0x1
 1994 02e3 8E       		.byte	0x8e
 1995 02e4 6B000000 		.4byte	0x6b
 1996 02e8 02       		.uleb128 0x2
 1997 02e9 91       		.byte	0x91
 1998 02ea 57       		.sleb128 -41
 1999 02eb 0C       		.uleb128 0xc
 2000 02ec F8000000 		.4byte	.LASF36
 2001 02f0 01       		.byte	0x1
 2002 02f1 8E       		.byte	0x8e
 2003 02f2 6B000000 		.4byte	0x6b
 2004 02f6 02       		.uleb128 0x2
 2005 02f7 91       		.byte	0x91
 2006 02f8 56       		.sleb128 -42
 2007 02f9 07       		.uleb128 0x7
 2008 02fa 1F000000 		.4byte	.LASF37
 2009 02fe 01       		.byte	0x1
 2010 02ff 8F       		.byte	0x8f
 2011 0300 25030000 		.4byte	0x325
 2012 0304 03       		.uleb128 0x3
 2013 0305 91       		.byte	0x91
 2014 0306 60       		.sleb128 -32
 2015 0307 06       		.byte	0x6
 2016 0308 07       		.uleb128 0x7
 2017 0309 A6010000 		.4byte	.LASF29
 2018 030d 01       		.byte	0x1
 2019 030e 90       		.byte	0x90
 2020 030f 6B000000 		.4byte	0x6b
 2021 0313 02       		.uleb128 0x2
 2022 0314 91       		.byte	0x91
 2023 0315 5E       		.sleb128 -34
 2024 0316 07       		.uleb128 0x7
 2025 0317 20020000 		.4byte	.LASF20
 2026 031b 01       		.byte	0x1
 2027 031c 91       		.byte	0x91
 2028 031d 6B000000 		.4byte	0x6b
 2029 0321 02       		.uleb128 0x2
 2030 0322 91       		.byte	0x91
 2031 0323 5F       		.sleb128 -33
 2032 0324 00       		.byte	0
 2033 0325 08       		.uleb128 0x8
 2034 0326 6B000000 		.4byte	0x6b
 2035 032a 38030000 		.4byte	0x338
 2036 032e 09       		.uleb128 0x9
 2037 032f B7000000 		.4byte	0xb7
 2038 0333 03       		.uleb128 0x3
 2039 0334 91       		.byte	0x91
 2040 0335 64       		.sleb128 -28
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 42


 2041 0336 06       		.byte	0x6
 2042 0337 00       		.byte	0
 2043 0338 0A       		.uleb128 0xa
 2044 0339 21010000 		.4byte	.LASF38
 2045 033d 01       		.byte	0x1
 2046 033e B3       		.byte	0xb3
 2047 033f 81000000 		.4byte	0x81
 2048 0343 00000000 		.4byte	.LFB38
 2049 0347 36010000 		.4byte	.LFE38-.LFB38
 2050 034b 01       		.uleb128 0x1
 2051 034c 9C       		.byte	0x9c
 2052 034d B5030000 		.4byte	0x3b5
 2053 0351 0C       		.uleb128 0xc
 2054 0352 B4020000 		.4byte	.LASF39
 2055 0356 01       		.byte	0x1
 2056 0357 B3       		.byte	0xb3
 2057 0358 BE000000 		.4byte	0xbe
 2058 035c 02       		.uleb128 0x2
 2059 035d 91       		.byte	0x91
 2060 035e 54       		.sleb128 -44
 2061 035f 0C       		.uleb128 0xc
 2062 0360 27020000 		.4byte	.LASF26
 2063 0364 01       		.byte	0x1
 2064 0365 B3       		.byte	0xb3
 2065 0366 BE000000 		.4byte	0xbe
 2066 036a 02       		.uleb128 0x2
 2067 036b 91       		.byte	0x91
 2068 036c 50       		.sleb128 -48
 2069 036d 0C       		.uleb128 0xc
 2070 036e F3000000 		.4byte	.LASF40
 2071 0372 01       		.byte	0x1
 2072 0373 B3       		.byte	0xb3
 2073 0374 BE000000 		.4byte	0xbe
 2074 0378 02       		.uleb128 0x2
 2075 0379 91       		.byte	0x91
 2076 037a 4C       		.sleb128 -52
 2077 037b 0C       		.uleb128 0xc
 2078 037c 87020000 		.4byte	.LASF41
 2079 0380 01       		.byte	0x1
 2080 0381 B3       		.byte	0xb3
 2081 0382 BE000000 		.4byte	0xbe
 2082 0386 02       		.uleb128 0x2
 2083 0387 91       		.byte	0x91
 2084 0388 48       		.sleb128 -56
 2085 0389 07       		.uleb128 0x7
 2086 038a 20020000 		.4byte	.LASF20
 2087 038e 01       		.byte	0x1
 2088 038f B4       		.byte	0xb4
 2089 0390 6B000000 		.4byte	0x6b
 2090 0394 02       		.uleb128 0x2
 2091 0395 91       		.byte	0x91
 2092 0396 67       		.sleb128 -25
 2093 0397 07       		.uleb128 0x7
 2094 0398 92020000 		.4byte	.LASF42
 2095 039c 01       		.byte	0x1
 2096 039d B5       		.byte	0xb5
 2097 039e 5D000000 		.4byte	0x5d
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 43


 2098 03a2 02       		.uleb128 0x2
 2099 03a3 91       		.byte	0x91
 2100 03a4 60       		.sleb128 -32
 2101 03a5 07       		.uleb128 0x7
 2102 03a6 53010000 		.4byte	.LASF43
 2103 03aa 01       		.byte	0x1
 2104 03ab B6       		.byte	0xb6
 2105 03ac B5030000 		.4byte	0x3b5
 2106 03b0 03       		.uleb128 0x3
 2107 03b1 91       		.byte	0x91
 2108 03b2 58       		.sleb128 -40
 2109 03b3 06       		.byte	0x6
 2110 03b4 00       		.byte	0
 2111 03b5 08       		.uleb128 0x8
 2112 03b6 6B000000 		.4byte	0x6b
 2113 03ba C8030000 		.4byte	0x3c8
 2114 03be 09       		.uleb128 0x9
 2115 03bf B7000000 		.4byte	0xb7
 2116 03c3 03       		.uleb128 0x3
 2117 03c4 91       		.byte	0x91
 2118 03c5 5C       		.sleb128 -36
 2119 03c6 06       		.byte	0x6
 2120 03c7 00       		.byte	0
 2121 03c8 0A       		.uleb128 0xa
 2122 03c9 39010000 		.4byte	.LASF44
 2123 03cd 01       		.byte	0x1
 2124 03ce E9       		.byte	0xe9
 2125 03cf 81000000 		.4byte	0x81
 2126 03d3 00000000 		.4byte	.LFB39
 2127 03d7 BE000000 		.4byte	.LFE39-.LFB39
 2128 03db 01       		.uleb128 0x1
 2129 03dc 9C       		.byte	0x9c
 2130 03dd 29040000 		.4byte	0x429
 2131 03e1 0C       		.uleb128 0xc
 2132 03e2 A6010000 		.4byte	.LASF29
 2133 03e6 01       		.byte	0x1
 2134 03e7 E9       		.byte	0xe9
 2135 03e8 29040000 		.4byte	0x429
 2136 03ec 02       		.uleb128 0x2
 2137 03ed 91       		.byte	0x91
 2138 03ee 54       		.sleb128 -44
 2139 03ef 0B       		.uleb128 0xb
 2140 03f0 68756D00 		.ascii	"hum\000"
 2141 03f4 01       		.byte	0x1
 2142 03f5 E9       		.byte	0xe9
 2143 03f6 29040000 		.4byte	0x429
 2144 03fa 02       		.uleb128 0x2
 2145 03fb 91       		.byte	0x91
 2146 03fc 50       		.sleb128 -48
 2147 03fd 07       		.uleb128 0x7
 2148 03fe 92020000 		.4byte	.LASF42
 2149 0402 01       		.byte	0x1
 2150 0403 EA       		.byte	0xea
 2151 0404 97000000 		.4byte	0x97
 2152 0408 02       		.uleb128 0x2
 2153 0409 91       		.byte	0x91
 2154 040a 64       		.sleb128 -28
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 44


 2155 040b 07       		.uleb128 0x7
 2156 040c 53010000 		.4byte	.LASF43
 2157 0410 01       		.byte	0x1
 2158 0411 EB       		.byte	0xeb
 2159 0412 2F040000 		.4byte	0x42f
 2160 0416 03       		.uleb128 0x3
 2161 0417 91       		.byte	0x91
 2162 0418 5C       		.sleb128 -36
 2163 0419 06       		.byte	0x6
 2164 041a 07       		.uleb128 0x7
 2165 041b 20020000 		.4byte	.LASF20
 2166 041f 01       		.byte	0x1
 2167 0420 EC       		.byte	0xec
 2168 0421 6B000000 		.4byte	0x6b
 2169 0425 02       		.uleb128 0x2
 2170 0426 91       		.byte	0x91
 2171 0427 5B       		.sleb128 -37
 2172 0428 00       		.byte	0
 2173 0429 05       		.uleb128 0x5
 2174 042a 04       		.byte	0x4
 2175 042b 97000000 		.4byte	0x97
 2176 042f 08       		.uleb128 0x8
 2177 0430 6B000000 		.4byte	0x6b
 2178 0434 42040000 		.4byte	0x442
 2179 0438 09       		.uleb128 0x9
 2180 0439 B7000000 		.4byte	0xb7
 2181 043d 03       		.uleb128 0x3
 2182 043e 91       		.byte	0x91
 2183 043f 60       		.sleb128 -32
 2184 0440 06       		.byte	0x6
 2185 0441 00       		.byte	0
 2186 0442 0A       		.uleb128 0xa
 2187 0443 E4020000 		.4byte	.LASF45
 2188 0447 01       		.byte	0x1
 2189 0448 FB       		.byte	0xfb
 2190 0449 81000000 		.4byte	0x81
 2191 044d 00000000 		.4byte	.LFB40
 2192 0451 E4000000 		.4byte	.LFE40-.LFB40
 2193 0455 01       		.uleb128 0x1
 2194 0456 9C       		.byte	0x9c
 2195 0457 89040000 		.4byte	0x489
 2196 045b 0C       		.uleb128 0xc
 2197 045c 0C000000 		.4byte	.LASF46
 2198 0460 01       		.byte	0x1
 2199 0461 FB       		.byte	0xfb
 2200 0462 29040000 		.4byte	0x429
 2201 0466 02       		.uleb128 0x2
 2202 0467 91       		.byte	0x91
 2203 0468 54       		.sleb128 -44
 2204 0469 0D       		.uleb128 0xd
 2205 046a 53010000 		.4byte	.LASF43
 2206 046e 01       		.byte	0x1
 2207 046f 0F01     		.2byte	0x10f
 2208 0471 89040000 		.4byte	0x489
 2209 0475 03       		.uleb128 0x3
 2210 0476 91       		.byte	0x91
 2211 0477 60       		.sleb128 -32
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 45


 2212 0478 06       		.byte	0x6
 2213 0479 0D       		.uleb128 0xd
 2214 047a 20020000 		.4byte	.LASF20
 2215 047e 01       		.byte	0x1
 2216 047f 1001     		.2byte	0x110
 2217 0481 6B000000 		.4byte	0x6b
 2218 0485 02       		.uleb128 0x2
 2219 0486 91       		.byte	0x91
 2220 0487 5F       		.sleb128 -33
 2221 0488 00       		.byte	0
 2222 0489 08       		.uleb128 0x8
 2223 048a 6B000000 		.4byte	0x6b
 2224 048e 9C040000 		.4byte	0x49c
 2225 0492 09       		.uleb128 0x9
 2226 0493 B7000000 		.4byte	0xb7
 2227 0497 03       		.uleb128 0x3
 2228 0498 91       		.byte	0x91
 2229 0499 64       		.sleb128 -28
 2230 049a 06       		.byte	0x6
 2231 049b 00       		.byte	0
 2232 049c 0E       		.uleb128 0xe
 2233 049d BB020000 		.4byte	.LASF47
 2234 04a1 01       		.byte	0x1
 2235 04a2 2501     		.2byte	0x125
 2236 04a4 81000000 		.4byte	0x81
 2237 04a8 00000000 		.4byte	.LFB41
 2238 04ac 28000000 		.4byte	.LFE41-.LFB41
 2239 04b0 01       		.uleb128 0x1
 2240 04b1 9C       		.byte	0x9c
 2241 04b2 D5040000 		.4byte	0x4d5
 2242 04b6 0F       		.uleb128 0xf
 2243 04b7 6C020000 		.4byte	.LASF35
 2244 04bb 01       		.byte	0x1
 2245 04bc 2501     		.2byte	0x125
 2246 04be 6B000000 		.4byte	0x6b
 2247 04c2 02       		.uleb128 0x2
 2248 04c3 91       		.byte	0x91
 2249 04c4 6F       		.sleb128 -17
 2250 04c5 0F       		.uleb128 0xf
 2251 04c6 98020000 		.4byte	.LASF48
 2252 04ca 01       		.byte	0x1
 2253 04cb 2501     		.2byte	0x125
 2254 04cd D5040000 		.4byte	0x4d5
 2255 04d1 02       		.uleb128 0x2
 2256 04d2 91       		.byte	0x91
 2257 04d3 68       		.sleb128 -24
 2258 04d4 00       		.byte	0
 2259 04d5 05       		.uleb128 0x5
 2260 04d6 04       		.byte	0x4
 2261 04d7 8C000000 		.4byte	0x8c
 2262 04db 07       		.uleb128 0x7
 2263 04dc 70010000 		.4byte	.LASF49
 2264 04e0 01       		.byte	0x1
 2265 04e1 1B       		.byte	0x1b
 2266 04e2 6B000000 		.4byte	0x6b
 2267 04e6 05       		.uleb128 0x5
 2268 04e7 03       		.byte	0x3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 46


 2269 04e8 00000000 		.4byte	irrigationStatus
 2270 04ec 07       		.uleb128 0x7
 2271 04ed EE000000 		.4byte	.LASF50
 2272 04f1 01       		.byte	0x1
 2273 04f2 1C       		.byte	0x1c
 2274 04f3 5D000000 		.4byte	0x5d
 2275 04f7 05       		.uleb128 0x5
 2276 04f8 03       		.byte	0x3
 2277 04f9 04000000 		.4byte	size
 2278 04fd 00       		.byte	0
 2279              		.section	.debug_abbrev,"",%progbits
 2280              	.Ldebug_abbrev0:
 2281 0000 01       		.uleb128 0x1
 2282 0001 11       		.uleb128 0x11
 2283 0002 01       		.byte	0x1
 2284 0003 25       		.uleb128 0x25
 2285 0004 0E       		.uleb128 0xe
 2286 0005 13       		.uleb128 0x13
 2287 0006 0B       		.uleb128 0xb
 2288 0007 03       		.uleb128 0x3
 2289 0008 0E       		.uleb128 0xe
 2290 0009 1B       		.uleb128 0x1b
 2291 000a 0E       		.uleb128 0xe
 2292 000b 55       		.uleb128 0x55
 2293 000c 17       		.uleb128 0x17
 2294 000d 11       		.uleb128 0x11
 2295 000e 01       		.uleb128 0x1
 2296 000f 10       		.uleb128 0x10
 2297 0010 17       		.uleb128 0x17
 2298 0011 00       		.byte	0
 2299 0012 00       		.byte	0
 2300 0013 02       		.uleb128 0x2
 2301 0014 24       		.uleb128 0x24
 2302 0015 00       		.byte	0
 2303 0016 0B       		.uleb128 0xb
 2304 0017 0B       		.uleb128 0xb
 2305 0018 3E       		.uleb128 0x3e
 2306 0019 0B       		.uleb128 0xb
 2307 001a 03       		.uleb128 0x3
 2308 001b 0E       		.uleb128 0xe
 2309 001c 00       		.byte	0
 2310 001d 00       		.byte	0
 2311 001e 03       		.uleb128 0x3
 2312 001f 24       		.uleb128 0x24
 2313 0020 00       		.byte	0
 2314 0021 0B       		.uleb128 0xb
 2315 0022 0B       		.uleb128 0xb
 2316 0023 3E       		.uleb128 0x3e
 2317 0024 0B       		.uleb128 0xb
 2318 0025 03       		.uleb128 0x3
 2319 0026 08       		.uleb128 0x8
 2320 0027 00       		.byte	0
 2321 0028 00       		.byte	0
 2322 0029 04       		.uleb128 0x4
 2323 002a 16       		.uleb128 0x16
 2324 002b 00       		.byte	0
 2325 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 47


 2326 002d 0E       		.uleb128 0xe
 2327 002e 3A       		.uleb128 0x3a
 2328 002f 0B       		.uleb128 0xb
 2329 0030 3B       		.uleb128 0x3b
 2330 0031 0B       		.uleb128 0xb
 2331 0032 49       		.uleb128 0x49
 2332 0033 13       		.uleb128 0x13
 2333 0034 00       		.byte	0
 2334 0035 00       		.byte	0
 2335 0036 05       		.uleb128 0x5
 2336 0037 0F       		.uleb128 0xf
 2337 0038 00       		.byte	0
 2338 0039 0B       		.uleb128 0xb
 2339 003a 0B       		.uleb128 0xb
 2340 003b 49       		.uleb128 0x49
 2341 003c 13       		.uleb128 0x13
 2342 003d 00       		.byte	0
 2343 003e 00       		.byte	0
 2344 003f 06       		.uleb128 0x6
 2345 0040 2E       		.uleb128 0x2e
 2346 0041 01       		.byte	0x1
 2347 0042 3F       		.uleb128 0x3f
 2348 0043 19       		.uleb128 0x19
 2349 0044 03       		.uleb128 0x3
 2350 0045 0E       		.uleb128 0xe
 2351 0046 3A       		.uleb128 0x3a
 2352 0047 0B       		.uleb128 0xb
 2353 0048 3B       		.uleb128 0x3b
 2354 0049 0B       		.uleb128 0xb
 2355 004a 27       		.uleb128 0x27
 2356 004b 19       		.uleb128 0x19
 2357 004c 11       		.uleb128 0x11
 2358 004d 01       		.uleb128 0x1
 2359 004e 12       		.uleb128 0x12
 2360 004f 06       		.uleb128 0x6
 2361 0050 40       		.uleb128 0x40
 2362 0051 18       		.uleb128 0x18
 2363 0052 9642     		.uleb128 0x2116
 2364 0054 19       		.uleb128 0x19
 2365 0055 01       		.uleb128 0x1
 2366 0056 13       		.uleb128 0x13
 2367 0057 00       		.byte	0
 2368 0058 00       		.byte	0
 2369 0059 07       		.uleb128 0x7
 2370 005a 34       		.uleb128 0x34
 2371 005b 00       		.byte	0
 2372 005c 03       		.uleb128 0x3
 2373 005d 0E       		.uleb128 0xe
 2374 005e 3A       		.uleb128 0x3a
 2375 005f 0B       		.uleb128 0xb
 2376 0060 3B       		.uleb128 0x3b
 2377 0061 0B       		.uleb128 0xb
 2378 0062 49       		.uleb128 0x49
 2379 0063 13       		.uleb128 0x13
 2380 0064 02       		.uleb128 0x2
 2381 0065 18       		.uleb128 0x18
 2382 0066 00       		.byte	0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 48


 2383 0067 00       		.byte	0
 2384 0068 08       		.uleb128 0x8
 2385 0069 01       		.uleb128 0x1
 2386 006a 01       		.byte	0x1
 2387 006b 49       		.uleb128 0x49
 2388 006c 13       		.uleb128 0x13
 2389 006d 01       		.uleb128 0x1
 2390 006e 13       		.uleb128 0x13
 2391 006f 00       		.byte	0
 2392 0070 00       		.byte	0
 2393 0071 09       		.uleb128 0x9
 2394 0072 21       		.uleb128 0x21
 2395 0073 00       		.byte	0
 2396 0074 49       		.uleb128 0x49
 2397 0075 13       		.uleb128 0x13
 2398 0076 2F       		.uleb128 0x2f
 2399 0077 18       		.uleb128 0x18
 2400 0078 00       		.byte	0
 2401 0079 00       		.byte	0
 2402 007a 0A       		.uleb128 0xa
 2403 007b 2E       		.uleb128 0x2e
 2404 007c 01       		.byte	0x1
 2405 007d 3F       		.uleb128 0x3f
 2406 007e 19       		.uleb128 0x19
 2407 007f 03       		.uleb128 0x3
 2408 0080 0E       		.uleb128 0xe
 2409 0081 3A       		.uleb128 0x3a
 2410 0082 0B       		.uleb128 0xb
 2411 0083 3B       		.uleb128 0x3b
 2412 0084 0B       		.uleb128 0xb
 2413 0085 27       		.uleb128 0x27
 2414 0086 19       		.uleb128 0x19
 2415 0087 49       		.uleb128 0x49
 2416 0088 13       		.uleb128 0x13
 2417 0089 11       		.uleb128 0x11
 2418 008a 01       		.uleb128 0x1
 2419 008b 12       		.uleb128 0x12
 2420 008c 06       		.uleb128 0x6
 2421 008d 40       		.uleb128 0x40
 2422 008e 18       		.uleb128 0x18
 2423 008f 9642     		.uleb128 0x2116
 2424 0091 19       		.uleb128 0x19
 2425 0092 01       		.uleb128 0x1
 2426 0093 13       		.uleb128 0x13
 2427 0094 00       		.byte	0
 2428 0095 00       		.byte	0
 2429 0096 0B       		.uleb128 0xb
 2430 0097 05       		.uleb128 0x5
 2431 0098 00       		.byte	0
 2432 0099 03       		.uleb128 0x3
 2433 009a 08       		.uleb128 0x8
 2434 009b 3A       		.uleb128 0x3a
 2435 009c 0B       		.uleb128 0xb
 2436 009d 3B       		.uleb128 0x3b
 2437 009e 0B       		.uleb128 0xb
 2438 009f 49       		.uleb128 0x49
 2439 00a0 13       		.uleb128 0x13
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 49


 2440 00a1 02       		.uleb128 0x2
 2441 00a2 18       		.uleb128 0x18
 2442 00a3 00       		.byte	0
 2443 00a4 00       		.byte	0
 2444 00a5 0C       		.uleb128 0xc
 2445 00a6 05       		.uleb128 0x5
 2446 00a7 00       		.byte	0
 2447 00a8 03       		.uleb128 0x3
 2448 00a9 0E       		.uleb128 0xe
 2449 00aa 3A       		.uleb128 0x3a
 2450 00ab 0B       		.uleb128 0xb
 2451 00ac 3B       		.uleb128 0x3b
 2452 00ad 0B       		.uleb128 0xb
 2453 00ae 49       		.uleb128 0x49
 2454 00af 13       		.uleb128 0x13
 2455 00b0 02       		.uleb128 0x2
 2456 00b1 18       		.uleb128 0x18
 2457 00b2 00       		.byte	0
 2458 00b3 00       		.byte	0
 2459 00b4 0D       		.uleb128 0xd
 2460 00b5 34       		.uleb128 0x34
 2461 00b6 00       		.byte	0
 2462 00b7 03       		.uleb128 0x3
 2463 00b8 0E       		.uleb128 0xe
 2464 00b9 3A       		.uleb128 0x3a
 2465 00ba 0B       		.uleb128 0xb
 2466 00bb 3B       		.uleb128 0x3b
 2467 00bc 05       		.uleb128 0x5
 2468 00bd 49       		.uleb128 0x49
 2469 00be 13       		.uleb128 0x13
 2470 00bf 02       		.uleb128 0x2
 2471 00c0 18       		.uleb128 0x18
 2472 00c1 00       		.byte	0
 2473 00c2 00       		.byte	0
 2474 00c3 0E       		.uleb128 0xe
 2475 00c4 2E       		.uleb128 0x2e
 2476 00c5 01       		.byte	0x1
 2477 00c6 3F       		.uleb128 0x3f
 2478 00c7 19       		.uleb128 0x19
 2479 00c8 03       		.uleb128 0x3
 2480 00c9 0E       		.uleb128 0xe
 2481 00ca 3A       		.uleb128 0x3a
 2482 00cb 0B       		.uleb128 0xb
 2483 00cc 3B       		.uleb128 0x3b
 2484 00cd 05       		.uleb128 0x5
 2485 00ce 27       		.uleb128 0x27
 2486 00cf 19       		.uleb128 0x19
 2487 00d0 49       		.uleb128 0x49
 2488 00d1 13       		.uleb128 0x13
 2489 00d2 11       		.uleb128 0x11
 2490 00d3 01       		.uleb128 0x1
 2491 00d4 12       		.uleb128 0x12
 2492 00d5 06       		.uleb128 0x6
 2493 00d6 40       		.uleb128 0x40
 2494 00d7 18       		.uleb128 0x18
 2495 00d8 9742     		.uleb128 0x2117
 2496 00da 19       		.uleb128 0x19
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 50


 2497 00db 01       		.uleb128 0x1
 2498 00dc 13       		.uleb128 0x13
 2499 00dd 00       		.byte	0
 2500 00de 00       		.byte	0
 2501 00df 0F       		.uleb128 0xf
 2502 00e0 05       		.uleb128 0x5
 2503 00e1 00       		.byte	0
 2504 00e2 03       		.uleb128 0x3
 2505 00e3 0E       		.uleb128 0xe
 2506 00e4 3A       		.uleb128 0x3a
 2507 00e5 0B       		.uleb128 0xb
 2508 00e6 3B       		.uleb128 0x3b
 2509 00e7 05       		.uleb128 0x5
 2510 00e8 49       		.uleb128 0x49
 2511 00e9 13       		.uleb128 0x13
 2512 00ea 02       		.uleb128 0x2
 2513 00eb 18       		.uleb128 0x18
 2514 00ec 00       		.byte	0
 2515 00ed 00       		.byte	0
 2516 00ee 00       		.byte	0
 2517              		.section	.debug_aranges,"",%progbits
 2518 0000 5C000000 		.4byte	0x5c
 2519 0004 0200     		.2byte	0x2
 2520 0006 00000000 		.4byte	.Ldebug_info0
 2521 000a 04       		.byte	0x4
 2522 000b 00       		.byte	0
 2523 000c 0000     		.2byte	0
 2524 000e 0000     		.2byte	0
 2525 0010 00000000 		.4byte	.LFB33
 2526 0014 0C010000 		.4byte	.LFE33-.LFB33
 2527 0018 00000000 		.4byte	.LFB34
 2528 001c 68010000 		.4byte	.LFE34-.LFB34
 2529 0020 00000000 		.4byte	.LFB35
 2530 0024 68010000 		.4byte	.LFE35-.LFB35
 2531 0028 00000000 		.4byte	.LFB36
 2532 002c 68010000 		.4byte	.LFE36-.LFB36
 2533 0030 00000000 		.4byte	.LFB37
 2534 0034 54010000 		.4byte	.LFE37-.LFB37
 2535 0038 00000000 		.4byte	.LFB38
 2536 003c 36010000 		.4byte	.LFE38-.LFB38
 2537 0040 00000000 		.4byte	.LFB39
 2538 0044 BE000000 		.4byte	.LFE39-.LFB39
 2539 0048 00000000 		.4byte	.LFB40
 2540 004c E4000000 		.4byte	.LFE40-.LFB40
 2541 0050 00000000 		.4byte	.LFB41
 2542 0054 28000000 		.4byte	.LFE41-.LFB41
 2543 0058 00000000 		.4byte	0
 2544 005c 00000000 		.4byte	0
 2545              		.section	.debug_ranges,"",%progbits
 2546              	.Ldebug_ranges0:
 2547 0000 00000000 		.4byte	.LFB33
 2548 0004 0C010000 		.4byte	.LFE33
 2549 0008 00000000 		.4byte	.LFB34
 2550 000c 68010000 		.4byte	.LFE34
 2551 0010 00000000 		.4byte	.LFB35
 2552 0014 68010000 		.4byte	.LFE35
 2553 0018 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 51


 2554 001c 68010000 		.4byte	.LFE36
 2555 0020 00000000 		.4byte	.LFB37
 2556 0024 54010000 		.4byte	.LFE37
 2557 0028 00000000 		.4byte	.LFB38
 2558 002c 36010000 		.4byte	.LFE38
 2559 0030 00000000 		.4byte	.LFB39
 2560 0034 BE000000 		.4byte	.LFE39
 2561 0038 00000000 		.4byte	.LFB40
 2562 003c E4000000 		.4byte	.LFE40
 2563 0040 00000000 		.4byte	.LFB41
 2564 0044 28000000 		.4byte	.LFE41
 2565 0048 00000000 		.4byte	0
 2566 004c 00000000 		.4byte	0
 2567              		.section	.debug_line,"",%progbits
 2568              	.Ldebug_line0:
 2569 0000 95010000 		.section	.debug_str,"MS",%progbits,1
 2569      02004A00 
 2569      00000201 
 2569      FB0E0D00 
 2569      01010101 
 2570              	.LASF33:
 2571 0000 7475726E 		.ascii	"turnOffVent\000"
 2571      4F666656 
 2571      656E7400 
 2572              	.LASF46:
 2573 000c 6C696768 		.ascii	"light\000"
 2573      7400
 2574              	.LASF24:
 2575 0012 61646A75 		.ascii	"adjustWindow\000"
 2575      73745769 
 2575      6E646F77 
 2575      00
 2576              	.LASF37:
 2577 001f 69727269 		.ascii	"irriTransfer\000"
 2577      5472616E 
 2577      73666572 
 2577      00
 2578              	.LASF52:
 2579 002c 2E5C4932 		.ascii	".\\I2C_Class.c\000"
 2579      435F436C 
 2579      6173732E 
 2579      6300
 2580              	.LASF3:
 2581 003a 73686F72 		.ascii	"short unsigned int\000"
 2581      7420756E 
 2581      7369676E 
 2581      65642069 
 2581      6E7400
 2582              	.LASF19:
 2583 004d 6C696768 		.ascii	"lightControl\000"
 2583      74436F6E 
 2583      74726F6C 
 2583      00
 2584              	.LASF28:
 2585 005a 7475726E 		.ascii	"turnOffHeat\000"
 2585      4F666648 
 2585      65617400 
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 52


 2586              	.LASF9:
 2587 0066 75696E74 		.ascii	"uint8\000"
 2587      3800
 2588              	.LASF14:
 2589 006c 666C6F61 		.ascii	"float\000"
 2589      7400
 2590              	.LASF51:
 2591 0072 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2591      4320342E 
 2591      382E3420 
 2591      32303134 
 2591      30353236 
 2592 00a5 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2592      20726576 
 2592      6973696F 
 2592      6E203231 
 2592      31333538 
 2593 00d8 30202D66 		.ascii	"0 -ffunction-sections\000"
 2593      66756E63 
 2593      74696F6E 
 2593      2D736563 
 2593      74696F6E 
 2594              	.LASF50:
 2595 00ee 73697A65 		.ascii	"size\000"
 2595      00
 2596              	.LASF40:
 2597 00f3 76656E74 		.ascii	"vent\000"
 2597      00
 2598              	.LASF36:
 2599 00f8 6F6E4F66 		.ascii	"onOff\000"
 2599      6600
 2600              	.LASF23:
 2601 00fe 74656D70 		.ascii	"tempWindow\000"
 2601      57696E64 
 2601      6F7700
 2602              	.LASF12:
 2603 0109 696E7431 		.ascii	"int16\000"
 2603      3600
 2604              	.LASF5:
 2605 010f 6C6F6E67 		.ascii	"long unsigned int\000"
 2605      20756E73 
 2605      69676E65 
 2605      6420696E 
 2605      7400
 2606              	.LASF38:
 2607 0121 67657441 		.ascii	"getActuatorStatus\000"
 2607      63747561 
 2607      746F7253 
 2607      74617475 
 2607      7300
 2608              	.LASF13:
 2609 0133 696E7433 		.ascii	"int32\000"
 2609      3200
 2610              	.LASF44:
 2611 0139 67657454 		.ascii	"getTempAndHum\000"
 2611      656D7041 
 2611      6E644875 
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 53


 2611      6D00
 2612              	.LASF0:
 2613 0147 7369676E 		.ascii	"signed char\000"
 2613      65642063 
 2613      68617200 
 2614              	.LASF43:
 2615 0153 64617461 		.ascii	"dataget\000"
 2615      67657400 
 2616              	.LASF1:
 2617 015b 756E7369 		.ascii	"unsigned char\000"
 2617      676E6564 
 2617      20636861 
 2617      7200
 2618              	.LASF15:
 2619 0169 646F7562 		.ascii	"double\000"
 2619      6C6500
 2620              	.LASF49:
 2621 0170 69727269 		.ascii	"irrigationStatus\000"
 2621      67617469 
 2621      6F6E5374 
 2621      61747573 
 2621      00
 2622              	.LASF22:
 2623 0181 636C6F73 		.ascii	"closeWindow\000"
 2623      6557696E 
 2623      646F7700 
 2624              	.LASF10:
 2625 018d 75696E74 		.ascii	"uint16\000"
 2625      313600
 2626              	.LASF11:
 2627 0194 696E7438 		.ascii	"int8\000"
 2627      00
 2628              	.LASF8:
 2629 0199 756E7369 		.ascii	"unsigned int\000"
 2629      676E6564 
 2629      20696E74 
 2629      00
 2630              	.LASF29:
 2631 01a6 74656D70 		.ascii	"temp\000"
 2631      00
 2632              	.LASF30:
 2633 01ab 61646A75 		.ascii	"adjustVentilation\000"
 2633      73745665 
 2633      6E74696C 
 2633      6174696F 
 2633      6E00
 2634              	.LASF7:
 2635 01bd 6C6F6E67 		.ascii	"long long unsigned int\000"
 2635      206C6F6E 
 2635      6720756E 
 2635      7369676E 
 2635      65642069 
 2636              	.LASF53:
 2637 01d4 433A5C55 		.ascii	"C:\\Users\\Snufkin\\Documents\\GitHub\\PSoC_Master\\"
 2637      73657273 
 2637      5C536E75 
 2637      666B696E 
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 54


 2637      5C446F63 
 2638 0202 50536F43 		.ascii	"PSoC_Master\\PSoC_Master.cydsn\000"
 2638      5F4D6173 
 2638      7465725C 
 2638      50536F43 
 2638      5F4D6173 
 2639              	.LASF20:
 2640 0220 72657375 		.ascii	"result\000"
 2640      6C7400
 2641              	.LASF26:
 2642 0227 68656174 		.ascii	"heat\000"
 2642      00
 2643              	.LASF21:
 2644 022c 6F70656E 		.ascii	"openWindow\000"
 2644      57696E64 
 2644      6F7700
 2645              	.LASF54:
 2646 0237 696E6974 		.ascii	"initI2C\000"
 2646      49324300 
 2647              	.LASF31:
 2648 023f 73706565 		.ascii	"speed\000"
 2648      6400
 2649              	.LASF17:
 2650 0245 73697A65 		.ascii	"sizetype\000"
 2650      74797065 
 2650      00
 2651              	.LASF25:
 2652 024e 61646A75 		.ascii	"adjustHeat\000"
 2652      73744865 
 2652      617400
 2653              	.LASF6:
 2654 0259 6C6F6E67 		.ascii	"long long int\000"
 2654      206C6F6E 
 2654      6720696E 
 2654      7400
 2655              	.LASF16:
 2656 0267 63686172 		.ascii	"char\000"
 2656      00
 2657              	.LASF35:
 2658 026c 696E6465 		.ascii	"index\000"
 2658      7800
 2659              	.LASF27:
 2660 0272 7475726E 		.ascii	"turnHeatOn\000"
 2660      48656174 
 2660      4F6E00
 2661              	.LASF2:
 2662 027d 73686F72 		.ascii	"short int\000"
 2662      7420696E 
 2662      7400
 2663              	.LASF41:
 2664 0287 69727269 		.ascii	"irrigation\000"
 2664      67617469 
 2664      6F6E00
 2665              	.LASF42:
 2666 0292 52446275 		.ascii	"RDbuf\000"
 2666      6600
 2667              	.LASF48:
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\ccRdAZ2s.s 			page 55


 2668 0298 736F696C 		.ascii	"soilHum\000"
 2668      48756D00 
 2669              	.LASF4:
 2670 02a0 6C6F6E67 		.ascii	"long int\000"
 2670      20696E74 
 2670      00
 2671              	.LASF32:
 2672 02a9 7475726E 		.ascii	"turnOnVent\000"
 2672      4F6E5665 
 2672      6E7400
 2673              	.LASF39:
 2674 02b4 77696E64 		.ascii	"window\000"
 2674      6F7700
 2675              	.LASF47:
 2676 02bb 67657453 		.ascii	"getSoilHum\000"
 2676      6F696C48 
 2676      756D00
 2677              	.LASF34:
 2678 02c6 61646A75 		.ascii	"adjustIrrigation\000"
 2678      73744972 
 2678      72696761 
 2678      74696F6E 
 2678      00
 2679              	.LASF18:
 2680 02d7 6C696768 		.ascii	"lightCommand\000"
 2680      74436F6D 
 2680      6D616E64 
 2680      00
 2681              	.LASF45:
 2682 02e4 6765744C 		.ascii	"getLight\000"
 2682      69676874 
 2682      00
 2683              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
