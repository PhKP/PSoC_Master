ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"I2C_Class.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.data
  18              		.type	irrigationStatus, %object
  19              		.size	irrigationStatus, 1
  20              	irrigationStatus:
  21 0000 C0       		.byte	-64
  22 0001 000000   		.align	2
  23              		.type	size, %object
  24              		.size	size, 4
  25              	size:
  26 0004 01000000 		.word	1
  27              		.section	.text.initI2C,"ax",%progbits
  28              		.align	2
  29              		.global	initI2C
  30              		.code	16
  31              		.thumb_func
  32              		.type	initI2C, %function
  33              	initI2C:
  34              	.LFB33:
  35              		.file 1 ".\\I2C_Class.c"
   1:.\I2C_Class.c **** /* ========================================
   2:.\I2C_Class.c ****  * 
   3:.\I2C_Class.c ****  * AutoGreen - PSoC_Master
   4:.\I2C_Class.c ****  * I2C_Class.c
   5:.\I2C_Class.c ****  * (Description)
   6:.\I2C_Class.c ****  * PRJ3 - GRP9
   7:.\I2C_Class.c ****  * 2015-04-15
   8:.\I2C_Class.c ****  *
   9:.\I2C_Class.c ****  * ========================================
  10:.\I2C_Class.c **** */
  11:.\I2C_Class.c **** 
  12:.\I2C_Class.c **** // Include files
  13:.\I2C_Class.c **** #include "I2C_Class.h"
  14:.\I2C_Class.c **** 
  15:.\I2C_Class.c **** // Definitions
  16:.\I2C_Class.c **** #define TEMP_AND_HUM_SENSOR_ADDRESS 0x27
  17:.\I2C_Class.c **** #define ACTUATOR_ADRESS 0x42
  18:.\I2C_Class.c **** #define LIGHT_SENSOR_COMMAND_ADDRESS 0x00
  19:.\I2C_Class.c **** #define LIGHT_SENSOR_CONTROL_ADDRESS 0x01
  20:.\I2C_Class.c **** #define LIGHT_SENSOR_LSB 0x04  
  21:.\I2C_Class.c **** #define LIGHT_SENSOR_MSB 0x05
  22:.\I2C_Class.c **** 
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 2


  23:.\I2C_Class.c **** // Private data members
  24:.\I2C_Class.c **** static uint8 irrigationStatus = 0b11000000;
  25:.\I2C_Class.c **** static int size = 1;
  26:.\I2C_Class.c **** 
  27:.\I2C_Class.c **** // Private prototypes
  28:.\I2C_Class.c **** 
  29:.\I2C_Class.c **** void initI2C(void){
  36              		.loc 1 29 0
  37              		.cfi_startproc
  38 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  39              		.cfi_def_cfa_offset 20
  40              		.cfi_offset 4, -20
  41              		.cfi_offset 5, -16
  42              		.cfi_offset 6, -12
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 95B0     		sub	sp, sp, #84
  46              		.cfi_def_cfa_offset 104
  47 0004 00AF     		add	r7, sp, #0
  48              		.cfi_def_cfa_register 7
  49 0006 6B46     		mov	r3, sp
  50 0008 1E1C     		mov	r6, r3
  30:.\I2C_Class.c ****     I2C_Start();                    // Starts I2C component
  51              		.loc 1 30 0
  52 000a FFF7FEFF 		bl	I2C_Start
  31:.\I2C_Class.c ****     I2C_I2CMasterClearStatus();     // Clear status flags
  53              		.loc 1 31 0
  54 000e FFF7FEFF 		bl	I2C_I2CMasterClearStatus
  32:.\I2C_Class.c ****     CyGlobalIntEnable;
  55              		.loc 1 32 0
  56              	@ 32 ".\I2C_Class.c" 1
  57 0012 62B6     		CPSIE   i
  58              	@ 0 "" 2
  33:.\I2C_Class.c ****     
  34:.\I2C_Class.c ****     // Light sensor init.
  35:.\I2C_Class.c ****     /*sensor is set up to internal integration timing, light count data in signed and 2^(8) clock c
  36:.\I2C_Class.c ****     uint8 lightCommand[size], lightControl[size];
  59              		.loc 1 36 0
  60              		.code	16
  61 0014 3C4B     		ldr	r3, .L3
  62 0016 1A68     		ldr	r2, [r3]
  63 0018 531E     		sub	r3, r2, #1
  64 001a FB64     		str	r3, [r7, #76]
  65 001c 131C     		mov	r3, r2
  66 001e 1C1C     		mov	r4, r3
  67 0020 0023     		mov	r3, #0
  68 0022 1D1C     		mov	r5, r3
  69 0024 630F     		lsr	r3, r4, #29
  70 0026 E900     		lsl	r1, r5, #3
  71 0028 7963     		str	r1, [r7, #52]
  72 002a 796B     		ldr	r1, [r7, #52]
  73 002c 1943     		orr	r1, r3
  74 002e 7963     		str	r1, [r7, #52]
  75 0030 E300     		lsl	r3, r4, #3
  76 0032 131C     		mov	r3, r2
  77 0034 BB62     		str	r3, [r7, #40]
  78 0036 0023     		mov	r3, #0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 3


  79 0038 FB62     		str	r3, [r7, #44]
  80 003a B96A     		ldr	r1, [r7, #40]
  81 003c 4B0F     		lsr	r3, r1, #29
  82 003e F96A     		ldr	r1, [r7, #44]
  83 0040 C900     		lsl	r1, r1, #3
  84 0042 7962     		str	r1, [r7, #36]
  85 0044 796A     		ldr	r1, [r7, #36]
  86 0046 1943     		orr	r1, r3
  87 0048 7962     		str	r1, [r7, #36]
  88 004a BB6A     		ldr	r3, [r7, #40]
  89 004c DB00     		lsl	r3, r3, #3
  90 004e 131C     		mov	r3, r2
  91 0050 0733     		add	r3, r3, #7
  92 0052 DB08     		lsr	r3, r3, #3
  93 0054 DB00     		lsl	r3, r3, #3
  94 0056 6946     		mov	r1, sp
  95 0058 C91A     		sub	r1, r1, r3
  96 005a 8D46     		mov	sp, r1
  97 005c 6B46     		mov	r3, sp
  98 005e 0033     		add	r3, r3, #0
  99 0060 BB64     		str	r3, [r7, #72]
 100 0062 294B     		ldr	r3, .L3
 101 0064 1B68     		ldr	r3, [r3]
 102 0066 5A1E     		sub	r2, r3, #1
 103 0068 7A64     		str	r2, [r7, #68]
 104 006a 1A1C     		mov	r2, r3
 105 006c BA61     		str	r2, [r7, #24]
 106 006e 0022     		mov	r2, #0
 107 0070 FA61     		str	r2, [r7, #28]
 108 0072 B969     		ldr	r1, [r7, #24]
 109 0074 4A0F     		lsr	r2, r1, #29
 110 0076 F969     		ldr	r1, [r7, #28]
 111 0078 C900     		lsl	r1, r1, #3
 112 007a 7961     		str	r1, [r7, #20]
 113 007c 7969     		ldr	r1, [r7, #20]
 114 007e 1143     		orr	r1, r2
 115 0080 7961     		str	r1, [r7, #20]
 116 0082 BA69     		ldr	r2, [r7, #24]
 117 0084 D200     		lsl	r2, r2, #3
 118 0086 1A1C     		mov	r2, r3
 119 0088 BA60     		str	r2, [r7, #8]
 120 008a 0022     		mov	r2, #0
 121 008c FA60     		str	r2, [r7, #12]
 122 008e B968     		ldr	r1, [r7, #8]
 123 0090 4A0F     		lsr	r2, r1, #29
 124 0092 F968     		ldr	r1, [r7, #12]
 125 0094 C900     		lsl	r1, r1, #3
 126 0096 7960     		str	r1, [r7, #4]
 127 0098 7968     		ldr	r1, [r7, #4]
 128 009a 1143     		orr	r1, r2
 129 009c 7960     		str	r1, [r7, #4]
 130 009e BA68     		ldr	r2, [r7, #8]
 131 00a0 D200     		lsl	r2, r2, #3
 132 00a2 0733     		add	r3, r3, #7
 133 00a4 DB08     		lsr	r3, r3, #3
 134 00a6 DB00     		lsl	r3, r3, #3
 135 00a8 6946     		mov	r1, sp
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 4


 136 00aa C91A     		sub	r1, r1, r3
 137 00ac 8D46     		mov	sp, r1
 138 00ae 6B46     		mov	r3, sp
 139 00b0 0033     		add	r3, r3, #0
 140 00b2 3B64     		str	r3, [r7, #64]
  37:.\I2C_Class.c ****     lightCommand[0] = 0b10001010;       //ADC-normal, Normal operation, Internal timing, signed out
 141              		.loc 1 37 0
 142 00b4 BB6C     		ldr	r3, [r7, #72]
 143 00b6 8A22     		mov	r2, #138
 144 00b8 1A70     		strb	r2, [r3]
  38:.\I2C_Class.c ****     lightControl[0] = 0b00001100;       // Lux-range = 128000. Calculation: ((range(k)?*(100k/100k)
 145              		.loc 1 38 0
 146 00ba 3B6C     		ldr	r3, [r7, #64]
 147 00bc 0C22     		mov	r2, #12
 148 00be 1A70     		strb	r2, [r3]
  39:.\I2C_Class.c **** 	uint8 result;
  40:.\I2C_Class.c ****     // lux range is set to 128.000 lux if REXT is set up to 50K resistor.
  41:.\I2C_Class.c ****     //uint8 lightControl = 0b00001100;
  42:.\I2C_Class.c ****     
  43:.\I2C_Class.c ****     result = I2C_I2CMasterWriteBuf(LIGHT_SENSOR_COMMAND_ADDRESS, lightCommand, size, I2C_I2C_MODE_C
 149              		.loc 1 43 0
 150 00c0 BA6C     		ldr	r2, [r7, #72]
 151 00c2 114B     		ldr	r3, .L3
 152 00c4 1B68     		ldr	r3, [r3]
 153 00c6 0020     		mov	r0, #0
 154 00c8 111C     		mov	r1, r2
 155 00ca 1A1C     		mov	r2, r3
 156 00cc 0023     		mov	r3, #0
 157 00ce FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 158 00d2 021C     		mov	r2, r0
 159 00d4 3B1C     		mov	r3, r7
 160 00d6 3F33     		add	r3, r3, #63
 161 00d8 1A70     		strb	r2, [r3]
  44:.\I2C_Class.c ****     
  45:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 162              		.loc 1 45 0
 163 00da 3B1C     		mov	r3, r7
 164 00dc 3F33     		add	r3, r3, #63
 165 00de 1B78     		ldrb	r3, [r3]
 166 00e0 002B     		cmp	r3, #0
 167 00e2 0CD1     		bne	.L2
  46:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(LIGHT_SENSOR_CONTROL_ADDRESS, lightControl, size, I2C_I2C_MO
 168              		.loc 1 46 0
 169 00e4 3A6C     		ldr	r2, [r7, #64]
 170 00e6 084B     		ldr	r3, .L3
 171 00e8 1B68     		ldr	r3, [r3]
 172 00ea 0120     		mov	r0, #1
 173 00ec 111C     		mov	r1, r2
 174 00ee 1A1C     		mov	r2, r3
 175 00f0 0023     		mov	r3, #0
 176 00f2 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 177 00f6 021C     		mov	r2, r0
 178 00f8 3B1C     		mov	r3, r7
 179 00fa 3F33     		add	r3, r3, #63
 180 00fc 1A70     		strb	r2, [r3]
 181              	.L2:
 182 00fe B546     		mov	sp, r6
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 5


  47:.\I2C_Class.c ****     }
  48:.\I2C_Class.c **** }
 183              		.loc 1 48 0
 184 0100 BD46     		mov	sp, r7
 185 0102 15B0     		add	sp, sp, #84
 186              		@ sp needed
 187 0104 F0BD     		pop	{r4, r5, r6, r7, pc}
 188              	.L4:
 189 0106 C046     		.align	2
 190              	.L3:
 191 0108 04000000 		.word	size
 192              		.cfi_endproc
 193              	.LFE33:
 194              		.size	initI2C, .-initI2C
 195              		.section	.text.adjustWindow,"ax",%progbits
 196              		.align	2
 197              		.global	adjustWindow
 198              		.code	16
 199              		.thumb_func
 200              		.type	adjustWindow, %function
 201              	adjustWindow:
 202              	.LFB34:
  49:.\I2C_Class.c **** 
  50:.\I2C_Class.c **** int8 adjustWindow(uint8 pos){
 203              		.loc 1 50 0
 204              		.cfi_startproc
 205 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 206              		.cfi_def_cfa_offset 20
 207              		.cfi_offset 4, -20
 208              		.cfi_offset 5, -16
 209              		.cfi_offset 6, -12
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 97B0     		sub	sp, sp, #92
 213              		.cfi_def_cfa_offset 112
 214 0004 00AF     		add	r7, sp, #0
 215              		.cfi_def_cfa_register 7
 216 0006 031C     		mov	r3, r0
 217 0008 3A1C     		mov	r2, r7
 218 000a 3F32     		add	r2, r2, #63
 219 000c 1370     		strb	r3, [r2]
 220 000e 6B46     		mov	r3, sp
 221 0010 1E1C     		mov	r6, r3
  51:.\I2C_Class.c ****     uint8 openWindow[size], closeWindow[size];
 222              		.loc 1 51 0
 223 0012 4F4B     		ldr	r3, .L12
 224 0014 1A68     		ldr	r2, [r3]
 225 0016 531E     		sub	r3, r2, #1
 226 0018 3B65     		str	r3, [r7, #80]
 227 001a 131C     		mov	r3, r2
 228 001c 1C1C     		mov	r4, r3
 229 001e 0023     		mov	r3, #0
 230 0020 1D1C     		mov	r5, r3
 231 0022 630F     		lsr	r3, r4, #29
 232 0024 E900     		lsl	r1, r5, #3
 233 0026 7963     		str	r1, [r7, #52]
 234 0028 796B     		ldr	r1, [r7, #52]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 6


 235 002a 1943     		orr	r1, r3
 236 002c 7963     		str	r1, [r7, #52]
 237 002e E300     		lsl	r3, r4, #3
 238 0030 131C     		mov	r3, r2
 239 0032 BB62     		str	r3, [r7, #40]
 240 0034 0023     		mov	r3, #0
 241 0036 FB62     		str	r3, [r7, #44]
 242 0038 B96A     		ldr	r1, [r7, #40]
 243 003a 4B0F     		lsr	r3, r1, #29
 244 003c F96A     		ldr	r1, [r7, #44]
 245 003e C900     		lsl	r1, r1, #3
 246 0040 7962     		str	r1, [r7, #36]
 247 0042 796A     		ldr	r1, [r7, #36]
 248 0044 1943     		orr	r1, r3
 249 0046 7962     		str	r1, [r7, #36]
 250 0048 BB6A     		ldr	r3, [r7, #40]
 251 004a DB00     		lsl	r3, r3, #3
 252 004c 131C     		mov	r3, r2
 253 004e 0733     		add	r3, r3, #7
 254 0050 DB08     		lsr	r3, r3, #3
 255 0052 DB00     		lsl	r3, r3, #3
 256 0054 6946     		mov	r1, sp
 257 0056 C91A     		sub	r1, r1, r3
 258 0058 8D46     		mov	sp, r1
 259 005a 6B46     		mov	r3, sp
 260 005c 0033     		add	r3, r3, #0
 261 005e FB64     		str	r3, [r7, #76]
 262 0060 3B4B     		ldr	r3, .L12
 263 0062 1B68     		ldr	r3, [r3]
 264 0064 5A1E     		sub	r2, r3, #1
 265 0066 BA64     		str	r2, [r7, #72]
 266 0068 1A1C     		mov	r2, r3
 267 006a BA61     		str	r2, [r7, #24]
 268 006c 0022     		mov	r2, #0
 269 006e FA61     		str	r2, [r7, #28]
 270 0070 B969     		ldr	r1, [r7, #24]
 271 0072 4A0F     		lsr	r2, r1, #29
 272 0074 F969     		ldr	r1, [r7, #28]
 273 0076 C900     		lsl	r1, r1, #3
 274 0078 7961     		str	r1, [r7, #20]
 275 007a 7969     		ldr	r1, [r7, #20]
 276 007c 1143     		orr	r1, r2
 277 007e 7961     		str	r1, [r7, #20]
 278 0080 BA69     		ldr	r2, [r7, #24]
 279 0082 D200     		lsl	r2, r2, #3
 280 0084 1A1C     		mov	r2, r3
 281 0086 BA60     		str	r2, [r7, #8]
 282 0088 0022     		mov	r2, #0
 283 008a FA60     		str	r2, [r7, #12]
 284 008c B968     		ldr	r1, [r7, #8]
 285 008e 4A0F     		lsr	r2, r1, #29
 286 0090 F968     		ldr	r1, [r7, #12]
 287 0092 C900     		lsl	r1, r1, #3
 288 0094 7960     		str	r1, [r7, #4]
 289 0096 7968     		ldr	r1, [r7, #4]
 290 0098 1143     		orr	r1, r2
 291 009a 7960     		str	r1, [r7, #4]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 7


 292 009c BA68     		ldr	r2, [r7, #8]
 293 009e D200     		lsl	r2, r2, #3
 294 00a0 0733     		add	r3, r3, #7
 295 00a2 DB08     		lsr	r3, r3, #3
 296 00a4 DB00     		lsl	r3, r3, #3
 297 00a6 6946     		mov	r1, sp
 298 00a8 C91A     		sub	r1, r1, r3
 299 00aa 8D46     		mov	sp, r1
 300 00ac 6B46     		mov	r3, sp
 301 00ae 0033     		add	r3, r3, #0
 302 00b0 7B64     		str	r3, [r7, #68]
  52:.\I2C_Class.c ****     openWindow[0] = 0xF;
 303              		.loc 1 52 0
 304 00b2 FB6C     		ldr	r3, [r7, #76]
 305 00b4 0F22     		mov	r2, #15
 306 00b6 1A70     		strb	r2, [r3]
  53:.\I2C_Class.c ****     closeWindow[0] = 0x0;
 307              		.loc 1 53 0
 308 00b8 7B6C     		ldr	r3, [r7, #68]
 309 00ba 0022     		mov	r2, #0
 310 00bc 1A70     		strb	r2, [r3]
  54:.\I2C_Class.c ****     uint8 result = 0;
 311              		.loc 1 54 0
 312 00be 3B1C     		mov	r3, r7
 313 00c0 5733     		add	r3, r3, #87
 314 00c2 0022     		mov	r2, #0
 315 00c4 1A70     		strb	r2, [r3]
  55:.\I2C_Class.c ****     uint8 *tempWindow = 0;
 316              		.loc 1 55 0
 317 00c6 0023     		mov	r3, #0
 318 00c8 3B64     		str	r3, [r7, #64]
  56:.\I2C_Class.c ****         
  57:.\I2C_Class.c ****     if(pos == 0xFF){
 319              		.loc 1 57 0
 320 00ca 3B1C     		mov	r3, r7
 321 00cc 3F33     		add	r3, r3, #63
 322 00ce 1B78     		ldrb	r3, [r3]
 323 00d0 FF2B     		cmp	r3, #255
 324 00d2 0DD1     		bne	.L6
  58:.\I2C_Class.c ****         // Open window     -                write function  (adress,      dataToSend, NumberOfBytes
  59:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,openWindow,size,I2C_I2C_MODE_COMPLETE_XFER);
 325              		.loc 1 59 0
 326 00d4 FA6C     		ldr	r2, [r7, #76]
 327 00d6 1E4B     		ldr	r3, .L12
 328 00d8 1B68     		ldr	r3, [r3]
 329 00da 4220     		mov	r0, #66
 330 00dc 111C     		mov	r1, r2
 331 00de 1A1C     		mov	r2, r3
 332 00e0 0023     		mov	r3, #0
 333 00e2 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 334 00e6 021C     		mov	r2, r0
 335 00e8 3B1C     		mov	r3, r7
 336 00ea 5733     		add	r3, r3, #87
 337 00ec 1A70     		strb	r2, [r3]
 338 00ee 11E0     		b	.L7
 339              	.L6:
  60:.\I2C_Class.c ****     }
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 8


  61:.\I2C_Class.c ****     else if(pos == 0x0){
 340              		.loc 1 61 0
 341 00f0 3B1C     		mov	r3, r7
 342 00f2 3F33     		add	r3, r3, #63
 343 00f4 1B78     		ldrb	r3, [r3]
 344 00f6 002B     		cmp	r3, #0
 345 00f8 0CD1     		bne	.L7
  62:.\I2C_Class.c ****         // Close window
  63:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,closeWindow,size,I2C_I2C_MODE_COMPLETE_XFER)
 346              		.loc 1 63 0
 347 00fa 7A6C     		ldr	r2, [r7, #68]
 348 00fc 144B     		ldr	r3, .L12
 349 00fe 1B68     		ldr	r3, [r3]
 350 0100 4220     		mov	r0, #66
 351 0102 111C     		mov	r1, r2
 352 0104 1A1C     		mov	r2, r3
 353 0106 0023     		mov	r3, #0
 354 0108 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 355 010c 021C     		mov	r2, r0
 356 010e 3B1C     		mov	r3, r7
 357 0110 5733     		add	r3, r3, #87
 358 0112 1A70     		strb	r2, [r3]
 359              	.L7:
  64:.\I2C_Class.c ****     }
  65:.\I2C_Class.c ****     
  66:.\I2C_Class.c ****     getActuatorStatus(tempWindow, NULL, NULL, NULL);
 360              		.loc 1 66 0
 361 0114 3B6C     		ldr	r3, [r7, #64]
 362 0116 181C     		mov	r0, r3
 363 0118 0021     		mov	r1, #0
 364 011a 0022     		mov	r2, #0
 365 011c 0023     		mov	r3, #0
 366 011e FFF7FEFF 		bl	getActuatorStatus
  67:.\I2C_Class.c ****     
  68:.\I2C_Class.c ****     if (result == 0){
 367              		.loc 1 68 0
 368 0122 3B1C     		mov	r3, r7
 369 0124 5733     		add	r3, r3, #87
 370 0126 1B78     		ldrb	r3, [r3]
 371 0128 002B     		cmp	r3, #0
 372 012a 0AD1     		bne	.L8
  69:.\I2C_Class.c ****         if (*tempWindow == pos){ 
 373              		.loc 1 69 0
 374 012c 3B6C     		ldr	r3, [r7, #64]
 375 012e 1B78     		ldrb	r3, [r3]
 376 0130 3A1C     		mov	r2, r7
 377 0132 3F32     		add	r2, r2, #63
 378 0134 1278     		ldrb	r2, [r2]
 379 0136 9A42     		cmp	r2, r3
 380 0138 01D1     		bne	.L9
  70:.\I2C_Class.c ****             return 0;	
 381              		.loc 1 70 0
 382 013a 0023     		mov	r3, #0
 383 013c 02E0     		b	.L10
 384              	.L9:
  71:.\I2C_Class.c ****         }
  72:.\I2C_Class.c ****         else {
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 9


  73:.\I2C_Class.c ****             return -1;
 385              		.loc 1 73 0
 386 013e FF23     		mov	r3, #255
 387 0140 00E0     		b	.L10
 388              	.L8:
  74:.\I2C_Class.c ****         }
  75:.\I2C_Class.c ****     }
  76:.\I2C_Class.c ****     else {
  77:.\I2C_Class.c ****         return -1;
 389              		.loc 1 77 0
 390 0142 FF23     		mov	r3, #255
 391              	.L10:
 392 0144 B546     		mov	sp, r6
 393 0146 5BB2     		sxtb	r3, r3
  78:.\I2C_Class.c ****     }
  79:.\I2C_Class.c **** }
 394              		.loc 1 79 0
 395 0148 181C     		mov	r0, r3
 396 014a BD46     		mov	sp, r7
 397 014c 17B0     		add	sp, sp, #92
 398              		@ sp needed
 399 014e F0BD     		pop	{r4, r5, r6, r7, pc}
 400              	.L13:
 401              		.align	2
 402              	.L12:
 403 0150 04000000 		.word	size
 404              		.cfi_endproc
 405              	.LFE34:
 406              		.size	adjustWindow, .-adjustWindow
 407              		.section	.text.adjustHeat,"ax",%progbits
 408              		.align	2
 409              		.global	adjustHeat
 410              		.code	16
 411              		.thumb_func
 412              		.type	adjustHeat, %function
 413              	adjustHeat:
 414              	.LFB35:
  80:.\I2C_Class.c **** 
  81:.\I2C_Class.c **** int8 adjustHeat(uint8 heat){
 415              		.loc 1 81 0
 416              		.cfi_startproc
 417 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 418              		.cfi_def_cfa_offset 20
 419              		.cfi_offset 4, -20
 420              		.cfi_offset 5, -16
 421              		.cfi_offset 6, -12
 422              		.cfi_offset 7, -8
 423              		.cfi_offset 14, -4
 424 0002 99B0     		sub	sp, sp, #100
 425              		.cfi_def_cfa_offset 120
 426 0004 00AF     		add	r7, sp, #0
 427              		.cfi_def_cfa_register 7
 428 0006 031C     		mov	r3, r0
 429 0008 3A1C     		mov	r2, r7
 430 000a 3F32     		add	r2, r2, #63
 431 000c 1370     		strb	r3, [r2]
 432 000e 6B46     		mov	r3, sp
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 10


 433 0010 1E1C     		mov	r6, r3
  82:.\I2C_Class.c ****     uint8 turnHeatOn[size], turnOffHeat[size];
 434              		.loc 1 82 0
 435 0012 524B     		ldr	r3, .L21
 436 0014 1A68     		ldr	r2, [r3]
 437 0016 531E     		sub	r3, r2, #1
 438 0018 BB65     		str	r3, [r7, #88]
 439 001a 131C     		mov	r3, r2
 440 001c 1C1C     		mov	r4, r3
 441 001e 0023     		mov	r3, #0
 442 0020 1D1C     		mov	r5, r3
 443 0022 630F     		lsr	r3, r4, #29
 444 0024 E900     		lsl	r1, r5, #3
 445 0026 7963     		str	r1, [r7, #52]
 446 0028 796B     		ldr	r1, [r7, #52]
 447 002a 1943     		orr	r1, r3
 448 002c 7963     		str	r1, [r7, #52]
 449 002e E300     		lsl	r3, r4, #3
 450 0030 131C     		mov	r3, r2
 451 0032 BB62     		str	r3, [r7, #40]
 452 0034 0023     		mov	r3, #0
 453 0036 FB62     		str	r3, [r7, #44]
 454 0038 B96A     		ldr	r1, [r7, #40]
 455 003a 4B0F     		lsr	r3, r1, #29
 456 003c F96A     		ldr	r1, [r7, #44]
 457 003e C900     		lsl	r1, r1, #3
 458 0040 7962     		str	r1, [r7, #36]
 459 0042 796A     		ldr	r1, [r7, #36]
 460 0044 1943     		orr	r1, r3
 461 0046 7962     		str	r1, [r7, #36]
 462 0048 BB6A     		ldr	r3, [r7, #40]
 463 004a DB00     		lsl	r3, r3, #3
 464 004c 131C     		mov	r3, r2
 465 004e 0733     		add	r3, r3, #7
 466 0050 DB08     		lsr	r3, r3, #3
 467 0052 DB00     		lsl	r3, r3, #3
 468 0054 6946     		mov	r1, sp
 469 0056 C91A     		sub	r1, r1, r3
 470 0058 8D46     		mov	sp, r1
 471 005a 6B46     		mov	r3, sp
 472 005c 0033     		add	r3, r3, #0
 473 005e 7B65     		str	r3, [r7, #84]
 474 0060 3E4B     		ldr	r3, .L21
 475 0062 1B68     		ldr	r3, [r3]
 476 0064 5A1E     		sub	r2, r3, #1
 477 0066 3A65     		str	r2, [r7, #80]
 478 0068 1A1C     		mov	r2, r3
 479 006a BA61     		str	r2, [r7, #24]
 480 006c 0022     		mov	r2, #0
 481 006e FA61     		str	r2, [r7, #28]
 482 0070 B969     		ldr	r1, [r7, #24]
 483 0072 4A0F     		lsr	r2, r1, #29
 484 0074 F969     		ldr	r1, [r7, #28]
 485 0076 C900     		lsl	r1, r1, #3
 486 0078 7961     		str	r1, [r7, #20]
 487 007a 7969     		ldr	r1, [r7, #20]
 488 007c 1143     		orr	r1, r2
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 11


 489 007e 7961     		str	r1, [r7, #20]
 490 0080 BA69     		ldr	r2, [r7, #24]
 491 0082 D200     		lsl	r2, r2, #3
 492 0084 1A1C     		mov	r2, r3
 493 0086 BA60     		str	r2, [r7, #8]
 494 0088 0022     		mov	r2, #0
 495 008a FA60     		str	r2, [r7, #12]
 496 008c B968     		ldr	r1, [r7, #8]
 497 008e 4A0F     		lsr	r2, r1, #29
 498 0090 F968     		ldr	r1, [r7, #12]
 499 0092 C900     		lsl	r1, r1, #3
 500 0094 7960     		str	r1, [r7, #4]
 501 0096 7968     		ldr	r1, [r7, #4]
 502 0098 1143     		orr	r1, r2
 503 009a 7960     		str	r1, [r7, #4]
 504 009c BA68     		ldr	r2, [r7, #8]
 505 009e D200     		lsl	r2, r2, #3
 506 00a0 0733     		add	r3, r3, #7
 507 00a2 DB08     		lsr	r3, r3, #3
 508 00a4 DB00     		lsl	r3, r3, #3
 509 00a6 6946     		mov	r1, sp
 510 00a8 C91A     		sub	r1, r1, r3
 511 00aa 8D46     		mov	sp, r1
 512 00ac 6B46     		mov	r3, sp
 513 00ae 0033     		add	r3, r3, #0
 514 00b0 FB64     		str	r3, [r7, #76]
  83:.\I2C_Class.c ****     turnHeatOn[0] = 0b01000111;
 515              		.loc 1 83 0
 516 00b2 7B6D     		ldr	r3, [r7, #84]
 517 00b4 4722     		mov	r2, #71
 518 00b6 1A70     		strb	r2, [r3]
  84:.\I2C_Class.c ****     turnOffHeat[0] = 0b01000000;
 519              		.loc 1 84 0
 520 00b8 FB6C     		ldr	r3, [r7, #76]
 521 00ba 4022     		mov	r2, #64
 522 00bc 1A70     		strb	r2, [r3]
  85:.\I2C_Class.c ****     uint8 result = 0;
 523              		.loc 1 85 0
 524 00be 3B1C     		mov	r3, r7
 525 00c0 5F33     		add	r3, r3, #95
 526 00c2 0022     		mov	r2, #0
 527 00c4 1A70     		strb	r2, [r3]
  86:.\I2C_Class.c ****     uint8 temp;
  87:.\I2C_Class.c ****     uint8 *tempHeat = &temp;
 528              		.loc 1 87 0
 529 00c6 3B1C     		mov	r3, r7
 530 00c8 4733     		add	r3, r3, #71
 531 00ca BB64     		str	r3, [r7, #72]
  88:.\I2C_Class.c ****     
  89:.\I2C_Class.c ****     I2C_I2CMasterClearStatus();
 532              		.loc 1 89 0
 533 00cc FFF7FEFF 		bl	I2C_I2CMasterClearStatus
  90:.\I2C_Class.c ****     
  91:.\I2C_Class.c ****     if(heat == 0b111){
 534              		.loc 1 91 0
 535 00d0 3B1C     		mov	r3, r7
 536 00d2 3F33     		add	r3, r3, #63
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 12


 537 00d4 1B78     		ldrb	r3, [r3]
 538 00d6 072B     		cmp	r3, #7
 539 00d8 0DD1     		bne	.L15
  92:.\I2C_Class.c ****         // Turn on heat
  93:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnHeatOn,size,I2C_I2C_MODE_COMPLETE_XFER);
 540              		.loc 1 93 0
 541 00da 7A6D     		ldr	r2, [r7, #84]
 542 00dc 1F4B     		ldr	r3, .L21
 543 00de 1B68     		ldr	r3, [r3]
 544 00e0 4220     		mov	r0, #66
 545 00e2 111C     		mov	r1, r2
 546 00e4 1A1C     		mov	r2, r3
 547 00e6 0023     		mov	r3, #0
 548 00e8 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 549 00ec 021C     		mov	r2, r0
 550 00ee 3B1C     		mov	r3, r7
 551 00f0 5F33     		add	r3, r3, #95
 552 00f2 1A70     		strb	r2, [r3]
 553 00f4 11E0     		b	.L16
 554              	.L15:
  94:.\I2C_Class.c ****     }
  95:.\I2C_Class.c ****     else if(heat == 0b0){
 555              		.loc 1 95 0
 556 00f6 3B1C     		mov	r3, r7
 557 00f8 3F33     		add	r3, r3, #63
 558 00fa 1B78     		ldrb	r3, [r3]
 559 00fc 002B     		cmp	r3, #0
 560 00fe 0CD1     		bne	.L16
  96:.\I2C_Class.c ****         // Turn off heat
  97:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOffHeat,size,I2C_I2C_MODE_COMPLETE_XFER)
 561              		.loc 1 97 0
 562 0100 FA6C     		ldr	r2, [r7, #76]
 563 0102 164B     		ldr	r3, .L21
 564 0104 1B68     		ldr	r3, [r3]
 565 0106 4220     		mov	r0, #66
 566 0108 111C     		mov	r1, r2
 567 010a 1A1C     		mov	r2, r3
 568 010c 0023     		mov	r3, #0
 569 010e FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 570 0112 021C     		mov	r2, r0
 571 0114 3B1C     		mov	r3, r7
 572 0116 5F33     		add	r3, r3, #95
 573 0118 1A70     		strb	r2, [r3]
 574              	.L16:
  98:.\I2C_Class.c ****     }
  99:.\I2C_Class.c **** 
 100:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (!getActuatorStatus(NULL, tempHeat, NULL, NULL))){
 575              		.loc 1 100 0
 576 011a 3B1C     		mov	r3, r7
 577 011c 5F33     		add	r3, r3, #95
 578 011e 1B78     		ldrb	r3, [r3]
 579 0120 002B     		cmp	r3, #0
 580 0122 14D1     		bne	.L17
 581              		.loc 1 100 0 is_stmt 0 discriminator 1
 582 0124 BB6C     		ldr	r3, [r7, #72]
 583 0126 0020     		mov	r0, #0
 584 0128 191C     		mov	r1, r3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 13


 585 012a 0022     		mov	r2, #0
 586 012c 0023     		mov	r3, #0
 587 012e FFF7FEFF 		bl	getActuatorStatus
 588 0132 031C     		mov	r3, r0
 589 0134 002B     		cmp	r3, #0
 590 0136 0AD1     		bne	.L17
 101:.\I2C_Class.c ****         if (*tempHeat == heat){
 591              		.loc 1 101 0 is_stmt 1
 592 0138 BB6C     		ldr	r3, [r7, #72]
 593 013a 1B78     		ldrb	r3, [r3]
 594 013c 3A1C     		mov	r2, r7
 595 013e 3F32     		add	r2, r2, #63
 596 0140 1278     		ldrb	r2, [r2]
 597 0142 9A42     		cmp	r2, r3
 598 0144 01D1     		bne	.L18
 102:.\I2C_Class.c ****             return 0;
 599              		.loc 1 102 0
 600 0146 0023     		mov	r3, #0
 601 0148 02E0     		b	.L19
 602              	.L18:
 103:.\I2C_Class.c ****         }
 104:.\I2C_Class.c ****         else {
 105:.\I2C_Class.c ****             return -1;   
 603              		.loc 1 105 0
 604 014a FF23     		mov	r3, #255
 605 014c 00E0     		b	.L19
 606              	.L17:
 106:.\I2C_Class.c ****         }
 107:.\I2C_Class.c ****     }
 108:.\I2C_Class.c ****     else {
 109:.\I2C_Class.c ****         return -1;
 607              		.loc 1 109 0
 608 014e FF23     		mov	r3, #255
 609              	.L19:
 610 0150 B546     		mov	sp, r6
 611 0152 5BB2     		sxtb	r3, r3
 110:.\I2C_Class.c ****     }
 111:.\I2C_Class.c **** }
 612              		.loc 1 111 0
 613 0154 181C     		mov	r0, r3
 614 0156 BD46     		mov	sp, r7
 615 0158 19B0     		add	sp, sp, #100
 616              		@ sp needed
 617 015a F0BD     		pop	{r4, r5, r6, r7, pc}
 618              	.L22:
 619              		.align	2
 620              	.L21:
 621 015c 04000000 		.word	size
 622              		.cfi_endproc
 623              	.LFE35:
 624              		.size	adjustHeat, .-adjustHeat
 625              		.section	.text.adjustVentilation,"ax",%progbits
 626              		.align	2
 627              		.global	adjustVentilation
 628              		.code	16
 629              		.thumb_func
 630              		.type	adjustVentilation, %function
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 14


 631              	adjustVentilation:
 632              	.LFB36:
 112:.\I2C_Class.c **** 
 113:.\I2C_Class.c **** int8 adjustVentilation(uint8 speed){
 633              		.loc 1 113 0
 634              		.cfi_startproc
 635 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 636              		.cfi_def_cfa_offset 20
 637              		.cfi_offset 4, -20
 638              		.cfi_offset 5, -16
 639              		.cfi_offset 6, -12
 640              		.cfi_offset 7, -8
 641              		.cfi_offset 14, -4
 642 0002 99B0     		sub	sp, sp, #100
 643              		.cfi_def_cfa_offset 120
 644 0004 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 646 0006 031C     		mov	r3, r0
 647 0008 3A1C     		mov	r2, r7
 648 000a 3F32     		add	r2, r2, #63
 649 000c 1370     		strb	r3, [r2]
 650 000e 6B46     		mov	r3, sp
 651 0010 1E1C     		mov	r6, r3
 114:.\I2C_Class.c ****     uint8 turnOnVent[size], turnOffVent[size];
 652              		.loc 1 114 0
 653 0012 504B     		ldr	r3, .L30
 654 0014 1A68     		ldr	r2, [r3]
 655 0016 531E     		sub	r3, r2, #1
 656 0018 BB65     		str	r3, [r7, #88]
 657 001a 131C     		mov	r3, r2
 658 001c 1C1C     		mov	r4, r3
 659 001e 0023     		mov	r3, #0
 660 0020 1D1C     		mov	r5, r3
 661 0022 630F     		lsr	r3, r4, #29
 662 0024 E900     		lsl	r1, r5, #3
 663 0026 7963     		str	r1, [r7, #52]
 664 0028 796B     		ldr	r1, [r7, #52]
 665 002a 1943     		orr	r1, r3
 666 002c 7963     		str	r1, [r7, #52]
 667 002e E300     		lsl	r3, r4, #3
 668 0030 131C     		mov	r3, r2
 669 0032 BB62     		str	r3, [r7, #40]
 670 0034 0023     		mov	r3, #0
 671 0036 FB62     		str	r3, [r7, #44]
 672 0038 B96A     		ldr	r1, [r7, #40]
 673 003a 4B0F     		lsr	r3, r1, #29
 674 003c F96A     		ldr	r1, [r7, #44]
 675 003e C900     		lsl	r1, r1, #3
 676 0040 7962     		str	r1, [r7, #36]
 677 0042 796A     		ldr	r1, [r7, #36]
 678 0044 1943     		orr	r1, r3
 679 0046 7962     		str	r1, [r7, #36]
 680 0048 BB6A     		ldr	r3, [r7, #40]
 681 004a DB00     		lsl	r3, r3, #3
 682 004c 131C     		mov	r3, r2
 683 004e 0733     		add	r3, r3, #7
 684 0050 DB08     		lsr	r3, r3, #3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 15


 685 0052 DB00     		lsl	r3, r3, #3
 686 0054 6946     		mov	r1, sp
 687 0056 C91A     		sub	r1, r1, r3
 688 0058 8D46     		mov	sp, r1
 689 005a 6B46     		mov	r3, sp
 690 005c 0033     		add	r3, r3, #0
 691 005e 7B65     		str	r3, [r7, #84]
 692 0060 3C4B     		ldr	r3, .L30
 693 0062 1B68     		ldr	r3, [r3]
 694 0064 5A1E     		sub	r2, r3, #1
 695 0066 3A65     		str	r2, [r7, #80]
 696 0068 1A1C     		mov	r2, r3
 697 006a BA61     		str	r2, [r7, #24]
 698 006c 0022     		mov	r2, #0
 699 006e FA61     		str	r2, [r7, #28]
 700 0070 B969     		ldr	r1, [r7, #24]
 701 0072 4A0F     		lsr	r2, r1, #29
 702 0074 F969     		ldr	r1, [r7, #28]
 703 0076 C900     		lsl	r1, r1, #3
 704 0078 7961     		str	r1, [r7, #20]
 705 007a 7969     		ldr	r1, [r7, #20]
 706 007c 1143     		orr	r1, r2
 707 007e 7961     		str	r1, [r7, #20]
 708 0080 BA69     		ldr	r2, [r7, #24]
 709 0082 D200     		lsl	r2, r2, #3
 710 0084 1A1C     		mov	r2, r3
 711 0086 BA60     		str	r2, [r7, #8]
 712 0088 0022     		mov	r2, #0
 713 008a FA60     		str	r2, [r7, #12]
 714 008c B968     		ldr	r1, [r7, #8]
 715 008e 4A0F     		lsr	r2, r1, #29
 716 0090 F968     		ldr	r1, [r7, #12]
 717 0092 C900     		lsl	r1, r1, #3
 718 0094 7960     		str	r1, [r7, #4]
 719 0096 7968     		ldr	r1, [r7, #4]
 720 0098 1143     		orr	r1, r2
 721 009a 7960     		str	r1, [r7, #4]
 722 009c BA68     		ldr	r2, [r7, #8]
 723 009e D200     		lsl	r2, r2, #3
 724 00a0 0733     		add	r3, r3, #7
 725 00a2 DB08     		lsr	r3, r3, #3
 726 00a4 DB00     		lsl	r3, r3, #3
 727 00a6 6946     		mov	r1, sp
 728 00a8 C91A     		sub	r1, r1, r3
 729 00aa 8D46     		mov	sp, r1
 730 00ac 6B46     		mov	r3, sp
 731 00ae 0033     		add	r3, r3, #0
 732 00b0 FB64     		str	r3, [r7, #76]
 115:.\I2C_Class.c ****     turnOnVent[0] = 0b10000111;
 733              		.loc 1 115 0
 734 00b2 7B6D     		ldr	r3, [r7, #84]
 735 00b4 8722     		mov	r2, #135
 736 00b6 1A70     		strb	r2, [r3]
 116:.\I2C_Class.c ****     turnOffVent[0] = 0b10000000;
 737              		.loc 1 116 0
 738 00b8 FB6C     		ldr	r3, [r7, #76]
 739 00ba 8022     		mov	r2, #128
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 16


 740 00bc 1A70     		strb	r2, [r3]
 117:.\I2C_Class.c ****     uint8 result = 0;
 741              		.loc 1 117 0
 742 00be 3B1C     		mov	r3, r7
 743 00c0 5F33     		add	r3, r3, #95
 744 00c2 0022     		mov	r2, #0
 745 00c4 1A70     		strb	r2, [r3]
 118:.\I2C_Class.c ****     uint8 temp;
 119:.\I2C_Class.c ****     uint8 *vent = &temp;
 746              		.loc 1 119 0
 747 00c6 3B1C     		mov	r3, r7
 748 00c8 4733     		add	r3, r3, #71
 749 00ca BB64     		str	r3, [r7, #72]
 120:.\I2C_Class.c ****         
 121:.\I2C_Class.c ****     if(speed == 0xFF){
 750              		.loc 1 121 0
 751 00cc 3B1C     		mov	r3, r7
 752 00ce 3F33     		add	r3, r3, #63
 753 00d0 1B78     		ldrb	r3, [r3]
 754 00d2 FF2B     		cmp	r3, #255
 755 00d4 0DD1     		bne	.L24
 122:.\I2C_Class.c ****         // Turn vent on
 123:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOnVent,size,I2C_I2C_MODE_COMPLETE_XFER);
 756              		.loc 1 123 0
 757 00d6 7A6D     		ldr	r2, [r7, #84]
 758 00d8 1E4B     		ldr	r3, .L30
 759 00da 1B68     		ldr	r3, [r3]
 760 00dc 4220     		mov	r0, #66
 761 00de 111C     		mov	r1, r2
 762 00e0 1A1C     		mov	r2, r3
 763 00e2 0023     		mov	r3, #0
 764 00e4 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 765 00e8 021C     		mov	r2, r0
 766 00ea 3B1C     		mov	r3, r7
 767 00ec 5F33     		add	r3, r3, #95
 768 00ee 1A70     		strb	r2, [r3]
 769 00f0 11E0     		b	.L25
 770              	.L24:
 124:.\I2C_Class.c ****     }
 125:.\I2C_Class.c ****     else if(speed == 0b0){
 771              		.loc 1 125 0
 772 00f2 3B1C     		mov	r3, r7
 773 00f4 3F33     		add	r3, r3, #63
 774 00f6 1B78     		ldrb	r3, [r3]
 775 00f8 002B     		cmp	r3, #0
 776 00fa 0CD1     		bne	.L25
 126:.\I2C_Class.c ****         // Turn vent off
 127:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,turnOffVent,size,I2C_I2C_MODE_COMPLETE_XFER)
 777              		.loc 1 127 0
 778 00fc FA6C     		ldr	r2, [r7, #76]
 779 00fe 154B     		ldr	r3, .L30
 780 0100 1B68     		ldr	r3, [r3]
 781 0102 4220     		mov	r0, #66
 782 0104 111C     		mov	r1, r2
 783 0106 1A1C     		mov	r2, r3
 784 0108 0023     		mov	r3, #0
 785 010a FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 17


 786 010e 021C     		mov	r2, r0
 787 0110 3B1C     		mov	r3, r7
 788 0112 5F33     		add	r3, r3, #95
 789 0114 1A70     		strb	r2, [r3]
 790              	.L25:
 128:.\I2C_Class.c ****     }
 129:.\I2C_Class.c ****     
 130:.\I2C_Class.c ****     getActuatorStatus(NULL, NULL, vent, NULL);
 791              		.loc 1 130 0
 792 0116 BB6C     		ldr	r3, [r7, #72]
 793 0118 0020     		mov	r0, #0
 794 011a 0021     		mov	r1, #0
 795 011c 1A1C     		mov	r2, r3
 796 011e 0023     		mov	r3, #0
 797 0120 FFF7FEFF 		bl	getActuatorStatus
 131:.\I2C_Class.c ****     
 132:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 798              		.loc 1 132 0
 799 0124 3B1C     		mov	r3, r7
 800 0126 5F33     		add	r3, r3, #95
 801 0128 1B78     		ldrb	r3, [r3]
 802 012a 002B     		cmp	r3, #0
 803 012c 0AD1     		bne	.L26
 133:.\I2C_Class.c ****         if (*vent == speed){
 804              		.loc 1 133 0
 805 012e BB6C     		ldr	r3, [r7, #72]
 806 0130 1B78     		ldrb	r3, [r3]
 807 0132 3A1C     		mov	r2, r7
 808 0134 3F32     		add	r2, r2, #63
 809 0136 1278     		ldrb	r2, [r2]
 810 0138 9A42     		cmp	r2, r3
 811 013a 01D1     		bne	.L27
 134:.\I2C_Class.c ****             return 0;
 812              		.loc 1 134 0
 813 013c 0023     		mov	r3, #0
 814 013e 02E0     		b	.L28
 815              	.L27:
 135:.\I2C_Class.c ****             }
 136:.\I2C_Class.c ****         else {
 137:.\I2C_Class.c ****             return -1;       
 816              		.loc 1 137 0
 817 0140 FF23     		mov	r3, #255
 818 0142 00E0     		b	.L28
 819              	.L26:
 138:.\I2C_Class.c ****         }
 139:.\I2C_Class.c ****     }
 140:.\I2C_Class.c ****     else {
 141:.\I2C_Class.c ****         return -1;
 820              		.loc 1 141 0
 821 0144 FF23     		mov	r3, #255
 822              	.L28:
 823 0146 B546     		mov	sp, r6
 824 0148 5BB2     		sxtb	r3, r3
 142:.\I2C_Class.c ****     }
 143:.\I2C_Class.c **** }
 825              		.loc 1 143 0
 826 014a 181C     		mov	r0, r3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 18


 827 014c BD46     		mov	sp, r7
 828 014e 19B0     		add	sp, sp, #100
 829              		@ sp needed
 830 0150 F0BD     		pop	{r4, r5, r6, r7, pc}
 831              	.L31:
 832 0152 C046     		.align	2
 833              	.L30:
 834 0154 04000000 		.word	size
 835              		.cfi_endproc
 836              	.LFE36:
 837              		.size	adjustVentilation, .-adjustVentilation
 838              		.section	.text.adjustIrrigation,"ax",%progbits
 839              		.align	2
 840              		.global	adjustIrrigation
 841              		.code	16
 842              		.thumb_func
 843              		.type	adjustIrrigation, %function
 844              	adjustIrrigation:
 845              	.LFB37:
 144:.\I2C_Class.c **** 
 145:.\I2C_Class.c **** int8 adjustIrrigation(uint8 index, uint8 onOff){
 846              		.loc 1 145 0
 847              		.cfi_startproc
 848 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 849              		.cfi_def_cfa_offset 20
 850              		.cfi_offset 4, -20
 851              		.cfi_offset 5, -16
 852              		.cfi_offset 6, -12
 853              		.cfi_offset 7, -8
 854              		.cfi_offset 14, -4
 855 0002 4746     		mov	r7, r8
 856 0004 80B4     		push	{r7}
 857              		.cfi_def_cfa_offset 24
 858              		.cfi_offset 8, -24
 859 0006 8AB0     		sub	sp, sp, #40
 860              		.cfi_def_cfa_offset 64
 861 0008 00AF     		add	r7, sp, #0
 862              		.cfi_def_cfa_register 7
 863 000a 3A1C     		mov	r2, r7
 864 000c 1732     		add	r2, r2, #23
 865 000e 1070     		strb	r0, [r2]
 866 0010 3A1C     		mov	r2, r7
 867 0012 1632     		add	r2, r2, #22
 868 0014 1170     		strb	r1, [r2]
 869 0016 6A46     		mov	r2, sp
 870 0018 9046     		mov	r8, r2
 146:.\I2C_Class.c ****     uint8 irriTransfer[size];
 871              		.loc 1 146 0
 872 001a 4B4A     		ldr	r2, .L40
 873 001c 1268     		ldr	r2, [r2]
 874 001e 511E     		sub	r1, r2, #1
 875 0020 7962     		str	r1, [r7, #36]
 876 0022 111C     		mov	r1, r2
 877 0024 0D1C     		mov	r5, r1
 878 0026 0021     		mov	r1, #0
 879 0028 0E1C     		mov	r6, r1
 880 002a 690F     		lsr	r1, r5, #29
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 19


 881 002c F000     		lsl	r0, r6, #3
 882 002e F860     		str	r0, [r7, #12]
 883 0030 FB68     		ldr	r3, [r7, #12]
 884 0032 0B43     		orr	r3, r1
 885 0034 FB60     		str	r3, [r7, #12]
 886 0036 E800     		lsl	r0, r5, #3
 887 0038 111C     		mov	r1, r2
 888 003a 0B1C     		mov	r3, r1
 889 003c 0021     		mov	r1, #0
 890 003e 0C1C     		mov	r4, r1
 891 0040 590F     		lsr	r1, r3, #29
 892 0042 E000     		lsl	r0, r4, #3
 893 0044 7860     		str	r0, [r7, #4]
 894 0046 7868     		ldr	r0, [r7, #4]
 895 0048 0843     		orr	r0, r1
 896 004a 7860     		str	r0, [r7, #4]
 897 004c D900     		lsl	r1, r3, #3
 898 004e 131C     		mov	r3, r2
 899 0050 0733     		add	r3, r3, #7
 900 0052 DB08     		lsr	r3, r3, #3
 901 0054 DB00     		lsl	r3, r3, #3
 902 0056 6A46     		mov	r2, sp
 903 0058 D21A     		sub	r2, r2, r3
 904 005a 9546     		mov	sp, r2
 905 005c 6B46     		mov	r3, sp
 906 005e 0033     		add	r3, r3, #0
 907 0060 3B62     		str	r3, [r7, #32]
 147:.\I2C_Class.c ****     uint8 temp;
 148:.\I2C_Class.c ****     uint8 *irrigation = &temp;
 908              		.loc 1 148 0
 909 0062 3B1C     		mov	r3, r7
 910 0064 1A33     		add	r3, r3, #26
 911 0066 FB61     		str	r3, [r7, #28]
 149:.\I2C_Class.c ****     uint8 result = 0;
 912              		.loc 1 149 0
 913 0068 3B1C     		mov	r3, r7
 914 006a 1B33     		add	r3, r3, #27
 915 006c 0022     		mov	r2, #0
 916 006e 1A70     		strb	r2, [r3]
 150:.\I2C_Class.c **** 
 151:.\I2C_Class.c ****         /* In order for this code to function properly, the static int "irrigation" 
 152:.\I2C_Class.c ****         has to get updated each time this function is called. */
 153:.\I2C_Class.c ****     if (onOff == 1){    // Irrigation turn on
 917              		.loc 1 153 0
 918 0070 3B1C     		mov	r3, r7
 919 0072 1633     		add	r3, r3, #22
 920 0074 1B78     		ldrb	r3, [r3]
 921 0076 012B     		cmp	r3, #1
 922 0078 18D1     		bne	.L33
 154:.\I2C_Class.c ****         irriTransfer[0] = (irrigationStatus |= (1 << index));
 923              		.loc 1 154 0
 924 007a 3B1C     		mov	r3, r7
 925 007c 1733     		add	r3, r3, #23
 926 007e 1B78     		ldrb	r3, [r3]
 927 0080 0122     		mov	r2, #1
 928 0082 101C     		mov	r0, r2
 929 0084 9840     		lsl	r0, r0, r3
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 20


 930 0086 031C     		mov	r3, r0
 931 0088 DAB2     		uxtb	r2, r3
 932 008a 304B     		ldr	r3, .L40+4
 933 008c 1B78     		ldrb	r3, [r3]
 934 008e DBB2     		uxtb	r3, r3
 935 0090 1343     		orr	r3, r2
 936 0092 DBB2     		uxtb	r3, r3
 937 0094 DAB2     		uxtb	r2, r3
 938 0096 2D4B     		ldr	r3, .L40+4
 939 0098 1A70     		strb	r2, [r3]
 940 009a 2C4B     		ldr	r3, .L40+4
 941 009c 1A78     		ldrb	r2, [r3]
 942 009e 3B6A     		ldr	r3, [r7, #32]
 943 00a0 1A70     		strb	r2, [r3]
 155:.\I2C_Class.c ****         irrigationStatus = irriTransfer[0];
 944              		.loc 1 155 0
 945 00a2 3B6A     		ldr	r3, [r7, #32]
 946 00a4 1A78     		ldrb	r2, [r3]
 947 00a6 294B     		ldr	r3, .L40+4
 948 00a8 1A70     		strb	r2, [r3]
 949 00aa 21E0     		b	.L34
 950              	.L33:
 156:.\I2C_Class.c ****     }
 157:.\I2C_Class.c ****     else if (onOff == 0){   // Irrigation turn off
 951              		.loc 1 157 0
 952 00ac 3B1C     		mov	r3, r7
 953 00ae 1633     		add	r3, r3, #22
 954 00b0 1B78     		ldrb	r3, [r3]
 955 00b2 002B     		cmp	r3, #0
 956 00b4 1AD1     		bne	.L35
 158:.\I2C_Class.c ****         irriTransfer[0] = (irrigationStatus &= ~(1 << index));
 957              		.loc 1 158 0
 958 00b6 3B1C     		mov	r3, r7
 959 00b8 1733     		add	r3, r3, #23
 960 00ba 1B78     		ldrb	r3, [r3]
 961 00bc 0122     		mov	r2, #1
 962 00be 111C     		mov	r1, r2
 963 00c0 9940     		lsl	r1, r1, r3
 964 00c2 0B1C     		mov	r3, r1
 965 00c4 DBB2     		uxtb	r3, r3
 966 00c6 DB43     		mvn	r3, r3
 967 00c8 DBB2     		uxtb	r3, r3
 968 00ca 204A     		ldr	r2, .L40+4
 969 00cc 1278     		ldrb	r2, [r2]
 970 00ce D2B2     		uxtb	r2, r2
 971 00d0 1340     		and	r3, r2
 972 00d2 DBB2     		uxtb	r3, r3
 973 00d4 DAB2     		uxtb	r2, r3
 974 00d6 1D4B     		ldr	r3, .L40+4
 975 00d8 1A70     		strb	r2, [r3]
 976 00da 1C4B     		ldr	r3, .L40+4
 977 00dc 1A78     		ldrb	r2, [r3]
 978 00de 3B6A     		ldr	r3, [r7, #32]
 979 00e0 1A70     		strb	r2, [r3]
 159:.\I2C_Class.c ****         irrigationStatus = irriTransfer[0];
 980              		.loc 1 159 0
 981 00e2 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 21


 982 00e4 1A78     		ldrb	r2, [r3]
 983 00e6 194B     		ldr	r3, .L40+4
 984 00e8 1A70     		strb	r2, [r3]
 985 00ea 01E0     		b	.L34
 986              	.L35:
 160:.\I2C_Class.c ****     }
 161:.\I2C_Class.c ****     else{
 162:.\I2C_Class.c ****     // Bad argument.
 163:.\I2C_Class.c ****     return -1;
 987              		.loc 1 163 0
 988 00ec FF23     		mov	r3, #255
 989 00ee 22E0     		b	.L36
 990              	.L34:
 164:.\I2C_Class.c ****     }
 165:.\I2C_Class.c ****     
 166:.\I2C_Class.c ****     result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS, irriTransfer,size,I2C_I2C_MODE_COMPLETE_XFER);
 991              		.loc 1 166 0
 992 00f0 3A6A     		ldr	r2, [r7, #32]
 993 00f2 154B     		ldr	r3, .L40
 994 00f4 1B68     		ldr	r3, [r3]
 995 00f6 4220     		mov	r0, #66
 996 00f8 111C     		mov	r1, r2
 997 00fa 1A1C     		mov	r2, r3
 998 00fc 0023     		mov	r3, #0
 999 00fe FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 1000 0102 021C     		mov	r2, r0
 1001 0104 3B1C     		mov	r3, r7
 1002 0106 1B33     		add	r3, r3, #27
 1003 0108 1A70     		strb	r2, [r3]
 167:.\I2C_Class.c ****  
 168:.\I2C_Class.c ****     getActuatorStatus(NULL, NULL, NULL, irrigation);
 1004              		.loc 1 168 0
 1005 010a FB69     		ldr	r3, [r7, #28]
 1006 010c 0020     		mov	r0, #0
 1007 010e 0021     		mov	r1, #0
 1008 0110 0022     		mov	r2, #0
 1009 0112 FFF7FEFF 		bl	getActuatorStatus
 169:.\I2C_Class.c ****     
 170:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 1010              		.loc 1 170 0
 1011 0116 3B1C     		mov	r3, r7
 1012 0118 1B33     		add	r3, r3, #27
 1013 011a 1B78     		ldrb	r3, [r3]
 1014 011c 002B     		cmp	r3, #0
 1015 011e 09D1     		bne	.L37
 171:.\I2C_Class.c ****         if(*irrigation == irrigationStatus){
 1016              		.loc 1 171 0
 1017 0120 FB69     		ldr	r3, [r7, #28]
 1018 0122 1A78     		ldrb	r2, [r3]
 1019 0124 094B     		ldr	r3, .L40+4
 1020 0126 1B78     		ldrb	r3, [r3]
 1021 0128 9A42     		cmp	r2, r3
 1022 012a 01D1     		bne	.L38
 172:.\I2C_Class.c ****             return 0;
 1023              		.loc 1 172 0
 1024 012c 0023     		mov	r3, #0
 1025 012e 02E0     		b	.L36
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 22


 1026              	.L38:
 173:.\I2C_Class.c ****         }
 174:.\I2C_Class.c ****         else {
 175:.\I2C_Class.c ****             return -1;
 1027              		.loc 1 175 0
 1028 0130 FF23     		mov	r3, #255
 1029 0132 00E0     		b	.L36
 1030              	.L37:
 176:.\I2C_Class.c ****         }
 177:.\I2C_Class.c ****     }
 178:.\I2C_Class.c ****     else {
 179:.\I2C_Class.c ****         return -1;
 1031              		.loc 1 179 0
 1032 0134 FF23     		mov	r3, #255
 1033              	.L36:
 1034 0136 C546     		mov	sp, r8
 1035 0138 5BB2     		sxtb	r3, r3
 180:.\I2C_Class.c ****     }
 181:.\I2C_Class.c **** }
 1036              		.loc 1 181 0
 1037 013a 181C     		mov	r0, r3
 1038 013c BD46     		mov	sp, r7
 1039 013e 0AB0     		add	sp, sp, #40
 1040              		@ sp needed
 1041 0140 04BC     		pop	{r2}
 1042 0142 9046     		mov	r8, r2
 1043 0144 F0BD     		pop	{r4, r5, r6, r7, pc}
 1044              	.L41:
 1045 0146 C046     		.align	2
 1046              	.L40:
 1047 0148 04000000 		.word	size
 1048 014c 00000000 		.word	irrigationStatus
 1049              		.cfi_endproc
 1050              	.LFE37:
 1051              		.size	adjustIrrigation, .-adjustIrrigation
 1052              		.section	.text.getActuatorStatus,"ax",%progbits
 1053              		.align	2
 1054              		.global	getActuatorStatus
 1055              		.code	16
 1056              		.thumb_func
 1057              		.type	getActuatorStatus, %function
 1058              	getActuatorStatus:
 1059              	.LFB38:
 182:.\I2C_Class.c **** 
 183:.\I2C_Class.c **** int8 getActuatorStatus(uint8* window, uint8* heat, uint8* vent, uint8* irrigation){
 1060              		.loc 1 183 0
 1061              		.cfi_startproc
 1062 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1063              		.cfi_def_cfa_offset 20
 1064              		.cfi_offset 4, -20
 1065              		.cfi_offset 5, -16
 1066              		.cfi_offset 6, -12
 1067              		.cfi_offset 7, -8
 1068              		.cfi_offset 14, -4
 1069 0002 8FB0     		sub	sp, sp, #60
 1070              		.cfi_def_cfa_offset 80
 1071 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 23


 1072              		.cfi_def_cfa_register 7
 1073 0006 7862     		str	r0, [r7, #36]
 1074 0008 3962     		str	r1, [r7, #32]
 1075 000a FA61     		str	r2, [r7, #28]
 1076 000c BB61     		str	r3, [r7, #24]
 1077 000e 6B46     		mov	r3, sp
 1078 0010 1E1C     		mov	r6, r3
 184:.\I2C_Class.c ****     uint8 result = 0;
 1079              		.loc 1 184 0
 1080 0012 3B1C     		mov	r3, r7
 1081 0014 3733     		add	r3, r3, #55
 1082 0016 0022     		mov	r2, #0
 1083 0018 1A70     		strb	r2, [r3]
 185:.\I2C_Class.c ****     int RDbuf = 2;
 1084              		.loc 1 185 0
 1085 001a 0223     		mov	r3, #2
 1086 001c 3B63     		str	r3, [r7, #48]
 186:.\I2C_Class.c ****     uint8 dataget[RDbuf];
 1087              		.loc 1 186 0
 1088 001e 3B6B     		ldr	r3, [r7, #48]
 1089 0020 5A1E     		sub	r2, r3, #1
 1090 0022 FA62     		str	r2, [r7, #44]
 1091 0024 1A1C     		mov	r2, r3
 1092 0026 3A61     		str	r2, [r7, #16]
 1093 0028 0022     		mov	r2, #0
 1094 002a 7A61     		str	r2, [r7, #20]
 1095 002c 3969     		ldr	r1, [r7, #16]
 1096 002e 4A0F     		lsr	r2, r1, #29
 1097 0030 7969     		ldr	r1, [r7, #20]
 1098 0032 C900     		lsl	r1, r1, #3
 1099 0034 F960     		str	r1, [r7, #12]
 1100 0036 F968     		ldr	r1, [r7, #12]
 1101 0038 1143     		orr	r1, r2
 1102 003a F960     		str	r1, [r7, #12]
 1103 003c 3A69     		ldr	r2, [r7, #16]
 1104 003e D200     		lsl	r2, r2, #3
 1105 0040 1A1C     		mov	r2, r3
 1106 0042 141C     		mov	r4, r2
 1107 0044 0022     		mov	r2, #0
 1108 0046 151C     		mov	r5, r2
 1109 0048 620F     		lsr	r2, r4, #29
 1110 004a E900     		lsl	r1, r5, #3
 1111 004c 7960     		str	r1, [r7, #4]
 1112 004e 7968     		ldr	r1, [r7, #4]
 1113 0050 1143     		orr	r1, r2
 1114 0052 7960     		str	r1, [r7, #4]
 1115 0054 E200     		lsl	r2, r4, #3
 1116 0056 0733     		add	r3, r3, #7
 1117 0058 DB08     		lsr	r3, r3, #3
 1118 005a DB00     		lsl	r3, r3, #3
 1119 005c 6946     		mov	r1, sp
 1120 005e C91A     		sub	r1, r1, r3
 1121 0060 8D46     		mov	sp, r1
 1122 0062 6B46     		mov	r3, sp
 1123 0064 0033     		add	r3, r3, #0
 1124 0066 BB62     		str	r3, [r7, #40]
 187:.\I2C_Class.c ****     
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 24


 188:.\I2C_Class.c ****     //I2C_I2CMasterClearStatus();     // Clear status flags TODO test
 189:.\I2C_Class.c ****     
 190:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_WR_CMPLT)); //Wait for the bus to be ready
 1125              		.loc 1 190 0
 1126 0068 C046     		mov	r8, r8
 1127              	.L43:
 1128              		.loc 1 190 0 is_stmt 0 discriminator 1
 1129 006a FFF7FEFF 		bl	I2C_I2CMasterStatus
 1130 006e 021C     		mov	r2, r0
 1131 0070 0223     		mov	r3, #2
 1132 0072 1340     		and	r3, r2
 1133 0074 F9D0     		beq	.L43
 191:.\I2C_Class.c ****     
 192:.\I2C_Class.c ****     I2C_I2CMasterClearReadBuf();
 1134              		.loc 1 192 0 is_stmt 1
 1135 0076 FFF7FEFF 		bl	I2C_I2CMasterClearReadBuf
 193:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(ACTUATOR_ADRESS, dataget, RDbuf, I2C_I2C_MODE_COMPLETE_XFER);
 1136              		.loc 1 193 0
 1137 007a BA6A     		ldr	r2, [r7, #40]
 1138 007c 3B6B     		ldr	r3, [r7, #48]
 1139 007e 4220     		mov	r0, #66
 1140 0080 111C     		mov	r1, r2
 1141 0082 1A1C     		mov	r2, r3
 1142 0084 0023     		mov	r3, #0
 1143 0086 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1144 008a 021C     		mov	r2, r0
 1145 008c 3B1C     		mov	r3, r7
 1146 008e 3733     		add	r3, r3, #55
 1147 0090 1A70     		strb	r2, [r3]
 194:.\I2C_Class.c ****     
 195:.\I2C_Class.c ****     while (0u == (I2C_I2CMasterStatus() & I2C_I2C_MSTAT_RD_CMPLT)); //Wait for the dataget array to
 1148              		.loc 1 195 0
 1149 0092 C046     		mov	r8, r8
 1150              	.L44:
 1151              		.loc 1 195 0 is_stmt 0 discriminator 1
 1152 0094 FFF7FEFF 		bl	I2C_I2CMasterStatus
 1153 0098 021C     		mov	r2, r0
 1154 009a 0123     		mov	r3, #1
 1155 009c 1340     		and	r3, r2
 1156 009e F9D0     		beq	.L44
 196:.\I2C_Class.c ****     
 197:.\I2C_Class.c ****     if ((result == I2C_I2C_MSTR_NO_ERROR) && (I2C_I2CMasterGetReadBufSize() != 0)){
 1157              		.loc 1 197 0 is_stmt 1
 1158 00a0 3B1C     		mov	r3, r7
 1159 00a2 3733     		add	r3, r3, #55
 1160 00a4 1B78     		ldrb	r3, [r3]
 1161 00a6 002B     		cmp	r3, #0
 1162 00a8 59D1     		bne	.L45
 1163              		.loc 1 197 0 is_stmt 0 discriminator 1
 1164 00aa FFF7FEFF 		bl	I2C_I2CMasterGetReadBufSize
 1165 00ae 031C     		mov	r3, r0
 1166 00b0 002B     		cmp	r3, #0
 1167 00b2 54D0     		beq	.L45
 198:.\I2C_Class.c ****         if (window){                                   // Expecting to receive MSB first 
 1168              		.loc 1 198 0 is_stmt 1
 1169 00b4 7B6A     		ldr	r3, [r7, #36]
 1170 00b6 002B     		cmp	r3, #0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 25


 1171 00b8 0BD0     		beq	.L46
 199:.\I2C_Class.c ****             *window = (dataget[0] >> 4);      // Shifting out the 4 least significant bits.
 1172              		.loc 1 199 0
 1173 00ba BB6A     		ldr	r3, [r7, #40]
 1174 00bc 1B78     		ldrb	r3, [r3]
 1175 00be 1B09     		lsr	r3, r3, #4
 1176 00c0 DAB2     		uxtb	r2, r3
 1177 00c2 7B6A     		ldr	r3, [r7, #36]
 1178 00c4 1A70     		strb	r2, [r3]
 200:.\I2C_Class.c ****             UART_UartPutChar(*window+48);
 1179              		.loc 1 200 0
 1180 00c6 7B6A     		ldr	r3, [r7, #36]
 1181 00c8 1B78     		ldrb	r3, [r3]
 1182 00ca 3033     		add	r3, r3, #48
 1183 00cc 181C     		mov	r0, r3
 1184 00ce FFF7FEFF 		bl	UART_SpiUartWriteTxData
 1185              	.L46:
 201:.\I2C_Class.c ****         }
 202:.\I2C_Class.c ****         if (heat){
 1186              		.loc 1 202 0
 1187 00d2 3B6A     		ldr	r3, [r7, #32]
 1188 00d4 002B     		cmp	r3, #0
 1189 00d6 0ED0     		beq	.L47
 203:.\I2C_Class.c ****             *heat = ((dataget[0] & 0b00001110) >> 1);       // Ignoring everything but bit 1-3 and 
 1190              		.loc 1 203 0
 1191 00d8 BB6A     		ldr	r3, [r7, #40]
 1192 00da 1B78     		ldrb	r3, [r3]
 1193 00dc 1A1C     		mov	r2, r3
 1194 00de 0E23     		mov	r3, #14
 1195 00e0 1340     		and	r3, r2
 1196 00e2 5B10     		asr	r3, r3, #1
 1197 00e4 DAB2     		uxtb	r2, r3
 1198 00e6 3B6A     		ldr	r3, [r7, #32]
 1199 00e8 1A70     		strb	r2, [r3]
 204:.\I2C_Class.c ****             UART_UartPutChar(*heat+48);
 1200              		.loc 1 204 0
 1201 00ea 3B6A     		ldr	r3, [r7, #32]
 1202 00ec 1B78     		ldrb	r3, [r3]
 1203 00ee 3033     		add	r3, r3, #48
 1204 00f0 181C     		mov	r0, r3
 1205 00f2 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 1206              	.L47:
 205:.\I2C_Class.c ****         }
 206:.\I2C_Class.c ****         if (vent){
 1207              		.loc 1 206 0
 1208 00f6 FB69     		ldr	r3, [r7, #28]
 1209 00f8 002B     		cmp	r3, #0
 1210 00fa 1FD0     		beq	.L48
 207:.\I2C_Class.c ****             if ((dataget[0] & 0b00000001) == 0b00000001){        // Maybe we can find a smarter way
 1211              		.loc 1 207 0
 1212 00fc BB6A     		ldr	r3, [r7, #40]
 1213 00fe 1B78     		ldrb	r3, [r3]
 1214 0100 1A1C     		mov	r2, r3
 1215 0102 0123     		mov	r3, #1
 1216 0104 1340     		and	r3, r2
 1217 0106 0ED0     		beq	.L49
 208:.\I2C_Class.c ****                 *vent = (dataget[1] >> 6) | 0b00000100;          // The if statements checks if bit
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 26


 1218              		.loc 1 208 0
 1219 0108 BB6A     		ldr	r3, [r7, #40]
 1220 010a 5B78     		ldrb	r3, [r3, #1]
 1221 010c 9B09     		lsr	r3, r3, #6
 1222 010e DBB2     		uxtb	r3, r3
 1223 0110 0422     		mov	r2, #4
 1224 0112 1343     		orr	r3, r2
 1225 0114 DAB2     		uxtb	r2, r3
 1226 0116 FB69     		ldr	r3, [r7, #28]
 1227 0118 1A70     		strb	r2, [r3]
 209:.\I2C_Class.c ****                 UART_UartPutChar(*vent);                         // Shifting 5 right so only 2 bits
 1228              		.loc 1 209 0
 1229 011a FB69     		ldr	r3, [r7, #28]
 1230 011c 1B78     		ldrb	r3, [r3]
 1231 011e 181C     		mov	r0, r3
 1232 0120 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 1233 0124 0AE0     		b	.L48
 1234              	.L49:
 210:.\I2C_Class.c ****             }                                                    
 211:.\I2C_Class.c ****             else {
 212:.\I2C_Class.c ****                 *vent = (dataget[1] >> 6) | 0b00000000;          // shifting 5 right since only the
 1235              		.loc 1 212 0
 1236 0126 BB6A     		ldr	r3, [r7, #40]
 1237 0128 5B78     		ldrb	r3, [r3, #1]
 1238 012a 9B09     		lsr	r3, r3, #6
 1239 012c DAB2     		uxtb	r2, r3
 1240 012e FB69     		ldr	r3, [r7, #28]
 1241 0130 1A70     		strb	r2, [r3]
 213:.\I2C_Class.c ****                 UART_UartPutChar(*vent);
 1242              		.loc 1 213 0
 1243 0132 FB69     		ldr	r3, [r7, #28]
 1244 0134 1B78     		ldrb	r3, [r3]
 1245 0136 181C     		mov	r0, r3
 1246 0138 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 1247              	.L48:
 214:.\I2C_Class.c ****             }
 215:.\I2C_Class.c ****         }
 216:.\I2C_Class.c ****         if (irrigation){
 1248              		.loc 1 216 0
 1249 013c BB69     		ldr	r3, [r7, #24]
 1250 013e 002B     		cmp	r3, #0
 1251 0140 0BD0     		beq	.L50
 217:.\I2C_Class.c ****             *irrigation = (dataget[1] & 0b00111111);             // Ignoring two most significant b
 1252              		.loc 1 217 0
 1253 0142 BB6A     		ldr	r3, [r7, #40]
 1254 0144 5A78     		ldrb	r2, [r3, #1]
 1255 0146 3F23     		mov	r3, #63
 1256 0148 1340     		and	r3, r2
 1257 014a DAB2     		uxtb	r2, r3
 1258 014c BB69     		ldr	r3, [r7, #24]
 1259 014e 1A70     		strb	r2, [r3]
 218:.\I2C_Class.c ****             UART_UartPutChar(*irrigation);
 1260              		.loc 1 218 0
 1261 0150 BB69     		ldr	r3, [r7, #24]
 1262 0152 1B78     		ldrb	r3, [r3]
 1263 0154 181C     		mov	r0, r3
 1264 0156 FFF7FEFF 		bl	UART_SpiUartWriteTxData
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 27


 1265              	.L50:
 219:.\I2C_Class.c ****         }   
 220:.\I2C_Class.c ****         return 0;
 1266              		.loc 1 220 0
 1267 015a 0023     		mov	r3, #0
 1268 015c 00E0     		b	.L51
 1269              	.L45:
 221:.\I2C_Class.c ****     }
 222:.\I2C_Class.c ****     else {
 223:.\I2C_Class.c ****         return -1;   
 1270              		.loc 1 223 0
 1271 015e FF23     		mov	r3, #255
 1272              	.L51:
 1273 0160 B546     		mov	sp, r6
 1274 0162 5BB2     		sxtb	r3, r3
 224:.\I2C_Class.c ****     }
 225:.\I2C_Class.c **** }
 1275              		.loc 1 225 0
 1276 0164 181C     		mov	r0, r3
 1277 0166 BD46     		mov	sp, r7
 1278 0168 0FB0     		add	sp, sp, #60
 1279              		@ sp needed
 1280 016a F0BD     		pop	{r4, r5, r6, r7, pc}
 1281              		.cfi_endproc
 1282              	.LFE38:
 1283              		.size	getActuatorStatus, .-getActuatorStatus
 1284              		.section	.text.getTempAndHum,"ax",%progbits
 1285              		.align	2
 1286              		.global	getTempAndHum
 1287              		.code	16
 1288              		.thumb_func
 1289              		.type	getTempAndHum, %function
 1290              	getTempAndHum:
 1291              	.LFB39:
 226:.\I2C_Class.c **** 
 227:.\I2C_Class.c **** int8 getTempAndHum(int32* temp, int32* hum){
 1292              		.loc 1 227 0
 1293              		.cfi_startproc
 1294 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1295              		.cfi_def_cfa_offset 20
 1296              		.cfi_offset 4, -20
 1297              		.cfi_offset 5, -16
 1298              		.cfi_offset 6, -12
 1299              		.cfi_offset 7, -8
 1300              		.cfi_offset 14, -4
 1301 0002 4746     		mov	r7, r8
 1302 0004 80B4     		push	{r7}
 1303              		.cfi_def_cfa_offset 24
 1304              		.cfi_offset 8, -24
 1305 0006 8AB0     		sub	sp, sp, #40
 1306              		.cfi_def_cfa_offset 64
 1307 0008 00AF     		add	r7, sp, #0
 1308              		.cfi_def_cfa_register 7
 1309 000a 7861     		str	r0, [r7, #20]
 1310 000c 3961     		str	r1, [r7, #16]
 1311 000e 6A46     		mov	r2, sp
 1312 0010 9046     		mov	r8, r2
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 28


 228:.\I2C_Class.c ****     int32 RDbuf = 4;
 1313              		.loc 1 228 0
 1314 0012 0422     		mov	r2, #4
 1315 0014 7A62     		str	r2, [r7, #36]
 229:.\I2C_Class.c ****     uint8 dataget[RDbuf];
 1316              		.loc 1 229 0
 1317 0016 7A6A     		ldr	r2, [r7, #36]
 1318 0018 511E     		sub	r1, r2, #1
 1319 001a 3962     		str	r1, [r7, #32]
 1320 001c 111C     		mov	r1, r2
 1321 001e 0D1C     		mov	r5, r1
 1322 0020 0021     		mov	r1, #0
 1323 0022 0E1C     		mov	r6, r1
 1324 0024 690F     		lsr	r1, r5, #29
 1325 0026 F000     		lsl	r0, r6, #3
 1326 0028 F860     		str	r0, [r7, #12]
 1327 002a FB68     		ldr	r3, [r7, #12]
 1328 002c 0B43     		orr	r3, r1
 1329 002e FB60     		str	r3, [r7, #12]
 1330 0030 E800     		lsl	r0, r5, #3
 1331 0032 111C     		mov	r1, r2
 1332 0034 0B1C     		mov	r3, r1
 1333 0036 0021     		mov	r1, #0
 1334 0038 0C1C     		mov	r4, r1
 1335 003a 590F     		lsr	r1, r3, #29
 1336 003c E000     		lsl	r0, r4, #3
 1337 003e 7860     		str	r0, [r7, #4]
 1338 0040 7868     		ldr	r0, [r7, #4]
 1339 0042 0843     		orr	r0, r1
 1340 0044 7860     		str	r0, [r7, #4]
 1341 0046 D900     		lsl	r1, r3, #3
 1342 0048 131C     		mov	r3, r2
 1343 004a 0733     		add	r3, r3, #7
 1344 004c DB08     		lsr	r3, r3, #3
 1345 004e DB00     		lsl	r3, r3, #3
 1346 0050 6A46     		mov	r2, sp
 1347 0052 D21A     		sub	r2, r2, r3
 1348 0054 9546     		mov	sp, r2
 1349 0056 6B46     		mov	r3, sp
 1350 0058 0033     		add	r3, r3, #0
 1351 005a FB61     		str	r3, [r7, #28]
 230:.\I2C_Class.c ****     uint8 result = 0;
 1352              		.loc 1 230 0
 1353 005c 3B1C     		mov	r3, r7
 1354 005e 1B33     		add	r3, r3, #27
 1355 0060 0022     		mov	r2, #0
 1356 0062 1A70     		strb	r2, [r3]
 231:.\I2C_Class.c ****     
 232:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(TEMP_AND_HUM_SENSOR_ADDRESS, dataget, RDbuf, I2C_I2C_MODE_COMPLET
 1357              		.loc 1 232 0
 1358 0064 FA69     		ldr	r2, [r7, #28]
 1359 0066 7B6A     		ldr	r3, [r7, #36]
 1360 0068 2720     		mov	r0, #39
 1361 006a 111C     		mov	r1, r2
 1362 006c 1A1C     		mov	r2, r3
 1363 006e 0023     		mov	r3, #0
 1364 0070 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 29


 1365 0074 021C     		mov	r2, r0
 1366 0076 3B1C     		mov	r3, r7
 1367 0078 1B33     		add	r3, r3, #27
 1368 007a 1A70     		strb	r2, [r3]
 233:.\I2C_Class.c ****     
 234:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 1369              		.loc 1 234 0
 1370 007c 3B1C     		mov	r3, r7
 1371 007e 1B33     		add	r3, r3, #27
 1372 0080 1B78     		ldrb	r3, [r3]
 1373 0082 002B     		cmp	r3, #0
 1374 0084 12D1     		bne	.L54
 235:.\I2C_Class.c ****         // Expecting to receive MSB first.
 236:.\I2C_Class.c ****         *hum = ((dataget[0] << 8) | dataget[1]);   
 1375              		.loc 1 236 0
 1376 0086 FB69     		ldr	r3, [r7, #28]
 1377 0088 1B78     		ldrb	r3, [r3]
 1378 008a 1A02     		lsl	r2, r3, #8
 1379 008c FB69     		ldr	r3, [r7, #28]
 1380 008e 5B78     		ldrb	r3, [r3, #1]
 1381 0090 1A43     		orr	r2, r3
 1382 0092 3B69     		ldr	r3, [r7, #16]
 1383 0094 1A60     		str	r2, [r3]
 237:.\I2C_Class.c ****         *temp = (((dataget[2] << 8) | dataget[3]) >> 2);
 1384              		.loc 1 237 0
 1385 0096 FB69     		ldr	r3, [r7, #28]
 1386 0098 9B78     		ldrb	r3, [r3, #2]
 1387 009a 1A02     		lsl	r2, r3, #8
 1388 009c FB69     		ldr	r3, [r7, #28]
 1389 009e DB78     		ldrb	r3, [r3, #3]
 1390 00a0 1343     		orr	r3, r2
 1391 00a2 9A10     		asr	r2, r3, #2
 1392 00a4 7B69     		ldr	r3, [r7, #20]
 1393 00a6 1A60     		str	r2, [r3]
 238:.\I2C_Class.c ****         return 0;   // No error 
 1394              		.loc 1 238 0
 1395 00a8 0023     		mov	r3, #0
 1396 00aa 00E0     		b	.L55
 1397              	.L54:
 239:.\I2C_Class.c ****     }
 240:.\I2C_Class.c ****     else {
 241:.\I2C_Class.c ****         return -1;
 1398              		.loc 1 241 0
 1399 00ac FF23     		mov	r3, #255
 1400              	.L55:
 1401 00ae C546     		mov	sp, r8
 1402 00b0 5BB2     		sxtb	r3, r3
 242:.\I2C_Class.c ****     }
 243:.\I2C_Class.c **** }
 1403              		.loc 1 243 0
 1404 00b2 181C     		mov	r0, r3
 1405 00b4 BD46     		mov	sp, r7
 1406 00b6 0AB0     		add	sp, sp, #40
 1407              		@ sp needed
 1408 00b8 04BC     		pop	{r2}
 1409 00ba 9046     		mov	r8, r2
 1410 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 30


 1411              		.cfi_endproc
 1412              	.LFE39:
 1413              		.size	getTempAndHum, .-getTempAndHum
 1414 00be C046     		.section	.text.getLight,"ax",%progbits
 1415              		.align	2
 1416              		.global	getLight
 1417              		.code	16
 1418              		.thumb_func
 1419              		.type	getLight, %function
 1420              	getLight:
 1421              	.LFB40:
 244:.\I2C_Class.c **** 
 245:.\I2C_Class.c **** int8 getLight(int32* light){
 1422              		.loc 1 245 0
 1423              		.cfi_startproc
 1424 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1425              		.cfi_def_cfa_offset 20
 1426              		.cfi_offset 4, -20
 1427              		.cfi_offset 5, -16
 1428              		.cfi_offset 6, -12
 1429              		.cfi_offset 7, -8
 1430              		.cfi_offset 14, -4
 1431 0002 4746     		mov	r7, r8
 1432 0004 80B4     		push	{r7}
 1433              		.cfi_def_cfa_offset 24
 1434              		.cfi_offset 8, -24
 1435 0006 88B0     		sub	sp, sp, #32
 1436              		.cfi_def_cfa_offset 56
 1437 0008 00AF     		add	r7, sp, #0
 1438              		.cfi_def_cfa_register 7
 1439 000a F860     		str	r0, [r7, #12]
 1440 000c 6846     		mov	r0, sp
 1441 000e 8046     		mov	r8, r0
 246:.\I2C_Class.c ****     
 247:.\I2C_Class.c ****     /* 
 248:.\I2C_Class.c ****     Command register: Adress 0x00.
 249:.\I2C_Class.c ****     Bit 7: resets '0' or enables '1' ADC.
 250:.\I2C_Class.c ****     Bit 6: Power down mode. Normal operation '0' or power down mode '1'.
 251:.\I2C_Class.c ****     Bit 5: Decides whether integration time (ADC is of integration type) is done internally '0' or 
 252:.\I2C_Class.c ****     Bit 4: Has to be zero.
 253:.\I2C_Class.c ****     Bit 3-2: Photodiode select 0:0 and 0:1 = disable ADC. 1:0 = Light count DATA output in signed (
 254:.\I2C_Class.c ****     Bit 1-0: Prescaler or number of clockcycles 2^(n). 0:0 = 2^(16), 0:1 = 2^(12), 1:0 = 2^(8) and 
 255:.\I2C_Class.c ****     
 256:.\I2C_Class.c ****     RW Control register: Adress 0x01.
 257:.\I2C_Class.c ****     Bit 3-2: Set lux range. watch table in page 6.
 258:.\I2C_Class.c ****     All other bits has to be zero.
 259:.\I2C_Class.c ****     
 260:.\I2C_Class.c ****     I2C Sensor data reg: Adress 0x04(LSB) and 0x05()
 261:.\I2C_Class.c ****     The sensor sends a 15 bit value that can be acceMSBssed by the adresses 0x04 and 0x05
 262:.\I2C_Class.c ****     these registers are automatically refreshed each new integration period.
 263:.\I2C_Class.c ****     */
 264:.\I2C_Class.c ****     
 265:.\I2C_Class.c ****     uint8 dataget[size];
 1442              		.loc 1 265 0
 1443 0010 3348     		ldr	r0, .L62
 1444 0012 0068     		ldr	r0, [r0]
 1445 0014 421E     		sub	r2, r0, #1
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 31


 1446 0016 9446     		mov	ip, r2
 1447 0018 6346     		mov	r3, ip
 1448 001a FB61     		str	r3, [r7, #28]
 1449 001c 8446     		mov	ip, r0
 1450 001e 6146     		mov	r1, ip
 1451 0020 0024     		mov	r4, #0
 1452 0022 A446     		mov	ip, r4
 1453 0024 6246     		mov	r2, ip
 1454 0026 4B0F     		lsr	r3, r1, #29
 1455 0028 9C46     		mov	ip, r3
 1456 002a D400     		lsl	r4, r2, #3
 1457 002c 7C60     		str	r4, [r7, #4]
 1458 002e 6346     		mov	r3, ip
 1459 0030 7C68     		ldr	r4, [r7, #4]
 1460 0032 2343     		orr	r3, r4
 1461 0034 7B60     		str	r3, [r7, #4]
 1462 0036 CB00     		lsl	r3, r1, #3
 1463 0038 021C     		mov	r2, r0
 1464 003a 131C     		mov	r3, r2
 1465 003c 0022     		mov	r2, #0
 1466 003e 141C     		mov	r4, r2
 1467 0040 5A0F     		lsr	r2, r3, #29
 1468 0042 E600     		lsl	r6, r4, #3
 1469 0044 1643     		orr	r6, r2
 1470 0046 DD00     		lsl	r5, r3, #3
 1471 0048 031C     		mov	r3, r0
 1472 004a 0733     		add	r3, r3, #7
 1473 004c DB08     		lsr	r3, r3, #3
 1474 004e DB00     		lsl	r3, r3, #3
 1475 0050 6C46     		mov	r4, sp
 1476 0052 E41A     		sub	r4, r4, r3
 1477 0054 A546     		mov	sp, r4
 1478 0056 6B46     		mov	r3, sp
 1479 0058 0033     		add	r3, r3, #0
 1480 005a BB61     		str	r3, [r7, #24]
 266:.\I2C_Class.c ****     uint8 result = 0;
 1481              		.loc 1 266 0
 1482 005c 3B1C     		mov	r3, r7
 1483 005e 1733     		add	r3, r3, #23
 1484 0060 0022     		mov	r2, #0
 1485 0062 1A70     		strb	r2, [r3]
 267:.\I2C_Class.c ****     
 268:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(LIGHT_SENSOR_MSB, dataget, size, I2C_I2C_MODE_COMPLETE_XFER); 
 1486              		.loc 1 268 0
 1487 0064 BA69     		ldr	r2, [r7, #24]
 1488 0066 1E4B     		ldr	r3, .L62
 1489 0068 1B68     		ldr	r3, [r3]
 1490 006a 0520     		mov	r0, #5
 1491 006c 111C     		mov	r1, r2
 1492 006e 1A1C     		mov	r2, r3
 1493 0070 0023     		mov	r3, #0
 1494 0072 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1495 0076 021C     		mov	r2, r0
 1496 0078 3B1C     		mov	r3, r7
 1497 007a 1733     		add	r3, r3, #23
 1498 007c 1A70     		strb	r2, [r3]
 269:.\I2C_Class.c ****         
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 32


 270:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 1499              		.loc 1 270 0
 1500 007e 3B1C     		mov	r3, r7
 1501 0080 1733     		add	r3, r3, #23
 1502 0082 1B78     		ldrb	r3, [r3]
 1503 0084 002B     		cmp	r3, #0
 1504 0086 21D1     		bne	.L58
 271:.\I2C_Class.c ****         // Expecting to receive MSB first.
 272:.\I2C_Class.c ****         *light = (dataget[0] << 7);     // TODO: TEST THIS WITH THE PROPER SENSOR!!
 1505              		.loc 1 272 0
 1506 0088 BB69     		ldr	r3, [r7, #24]
 1507 008a 1B78     		ldrb	r3, [r3]
 1508 008c DA01     		lsl	r2, r3, #7
 1509 008e FB68     		ldr	r3, [r7, #12]
 1510 0090 1A60     		str	r2, [r3]
 273:.\I2C_Class.c ****         result = I2C_I2CMasterReadBuf(LIGHT_SENSOR_LSB, dataget, size, I2C_I2C_MODE_COMPLETE_XFER);
 1511              		.loc 1 273 0
 1512 0092 BA69     		ldr	r2, [r7, #24]
 1513 0094 124B     		ldr	r3, .L62
 1514 0096 1B68     		ldr	r3, [r3]
 1515 0098 0420     		mov	r0, #4
 1516 009a 111C     		mov	r1, r2
 1517 009c 1A1C     		mov	r2, r3
 1518 009e 0023     		mov	r3, #0
 1519 00a0 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 1520 00a4 021C     		mov	r2, r0
 1521 00a6 3B1C     		mov	r3, r7
 1522 00a8 1733     		add	r3, r3, #23
 1523 00aa 1A70     		strb	r2, [r3]
 274:.\I2C_Class.c ****             if (result == I2C_I2C_MSTR_NO_ERROR){
 1524              		.loc 1 274 0
 1525 00ac 3B1C     		mov	r3, r7
 1526 00ae 1733     		add	r3, r3, #23
 1527 00b0 1B78     		ldrb	r3, [r3]
 1528 00b2 002B     		cmp	r3, #0
 1529 00b4 08D1     		bne	.L59
 275:.\I2C_Class.c ****                 *light |= dataget[0]; 
 1530              		.loc 1 275 0
 1531 00b6 FB68     		ldr	r3, [r7, #12]
 1532 00b8 1A68     		ldr	r2, [r3]
 1533 00ba BB69     		ldr	r3, [r7, #24]
 1534 00bc 1B78     		ldrb	r3, [r3]
 1535 00be 1A43     		orr	r2, r3
 1536 00c0 FB68     		ldr	r3, [r7, #12]
 1537 00c2 1A60     		str	r2, [r3]
 276:.\I2C_Class.c ****                 return 0;   // No error 
 1538              		.loc 1 276 0
 1539 00c4 0023     		mov	r3, #0
 1540 00c6 02E0     		b	.L60
 1541              	.L59:
 277:.\I2C_Class.c **** 	        }
 278:.\I2C_Class.c ****             else {
 279:.\I2C_Class.c ****                 return -1;
 1542              		.loc 1 279 0
 1543 00c8 FF23     		mov	r3, #255
 1544 00ca 00E0     		b	.L60
 1545              	.L58:
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 33


 280:.\I2C_Class.c ****             }
 281:.\I2C_Class.c ****     }
 282:.\I2C_Class.c ****     else {
 283:.\I2C_Class.c ****         return -1;
 1546              		.loc 1 283 0
 1547 00cc FF23     		mov	r3, #255
 1548              	.L60:
 1549 00ce C546     		mov	sp, r8
 1550 00d0 5BB2     		sxtb	r3, r3
 284:.\I2C_Class.c ****     }
 285:.\I2C_Class.c **** }
 1551              		.loc 1 285 0
 1552 00d2 181C     		mov	r0, r3
 1553 00d4 BD46     		mov	sp, r7
 1554 00d6 08B0     		add	sp, sp, #32
 1555              		@ sp needed
 1556 00d8 04BC     		pop	{r2}
 1557 00da 9046     		mov	r8, r2
 1558 00dc F0BD     		pop	{r4, r5, r6, r7, pc}
 1559              	.L63:
 1560 00de C046     		.align	2
 1561              	.L62:
 1562 00e0 04000000 		.word	size
 1563              		.cfi_endproc
 1564              	.LFE40:
 1565              		.size	getLight, .-getLight
 1566              		.section	.text.getSoilHum,"ax",%progbits
 1567              		.align	2
 1568              		.global	getSoilHum
 1569              		.code	16
 1570              		.thumb_func
 1571              		.type	getSoilHum, %function
 1572              	getSoilHum:
 1573              	.LFB41:
 286:.\I2C_Class.c **** 
 287:.\I2C_Class.c **** int8 getSoilHum(uint8 index, int16* soilHum){   // TODO: THIS HAS NOT BEEN IMPLEMENTED.
 1574              		.loc 1 287 0
 1575              		.cfi_startproc
 1576 0000 80B5     		push	{r7, lr}
 1577              		.cfi_def_cfa_offset 8
 1578              		.cfi_offset 7, -8
 1579              		.cfi_offset 14, -4
 1580 0002 84B0     		sub	sp, sp, #16
 1581              		.cfi_def_cfa_offset 24
 1582 0004 00AF     		add	r7, sp, #0
 1583              		.cfi_def_cfa_register 7
 1584 0006 021C     		mov	r2, r0
 1585 0008 3960     		str	r1, [r7]
 1586 000a FB1D     		add	r3, r7, #7
 1587 000c 1A70     		strb	r2, [r3]
 288:.\I2C_Class.c ****     index = 0;
 1588              		.loc 1 288 0
 1589 000e 3B1C     		mov	r3, r7
 1590 0010 0F33     		add	r3, r3, #15
 1591 0012 0022     		mov	r2, #0
 1592 0014 1A70     		strb	r2, [r3]
 289:.\I2C_Class.c ****     *soilHum = 0;
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 34


 1593              		.loc 1 289 0
 1594 0016 3B68     		ldr	r3, [r7]
 1595 0018 0022     		mov	r2, #0
 1596 001a 1A80     		strh	r2, [r3]
 290:.\I2C_Class.c ****     return 0;
 1597              		.loc 1 290 0
 1598 001c 0023     		mov	r3, #0
 1599 001e 5BB2     		sxtb	r3, r3
 291:.\I2C_Class.c **** }
 1600              		.loc 1 291 0
 1601 0020 181C     		mov	r0, r3
 1602 0022 BD46     		mov	sp, r7
 1603 0024 04B0     		add	sp, sp, #16
 1604              		@ sp needed
 1605 0026 80BD     		pop	{r7, pc}
 1606              		.cfi_endproc
 1607              	.LFE41:
 1608              		.size	getSoilHum, .-getSoilHum
 1609              		.text
 1610              	.Letext0:
 1611              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 1612              		.section	.debug_info,"",%progbits
 1613              	.Ldebug_info0:
 1614 0000 2F050000 		.4byte	0x52f
 1615 0004 0400     		.2byte	0x4
 1616 0006 00000000 		.4byte	.Ldebug_abbrev0
 1617 000a 04       		.byte	0x4
 1618 000b 01       		.uleb128 0x1
 1619 000c 72000000 		.4byte	.LASF53
 1620 0010 01       		.byte	0x1
 1621 0011 2C000000 		.4byte	.LASF54
 1622 0015 DB010000 		.4byte	.LASF55
 1623 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1624 001d 00000000 		.4byte	0
 1625 0021 00000000 		.4byte	.Ldebug_line0
 1626 0025 02       		.uleb128 0x2
 1627 0026 01       		.byte	0x1
 1628 0027 06       		.byte	0x6
 1629 0028 47010000 		.4byte	.LASF0
 1630 002c 02       		.uleb128 0x2
 1631 002d 01       		.byte	0x1
 1632 002e 08       		.byte	0x8
 1633 002f 5B010000 		.4byte	.LASF1
 1634 0033 02       		.uleb128 0x2
 1635 0034 02       		.byte	0x2
 1636 0035 05       		.byte	0x5
 1637 0036 8D020000 		.4byte	.LASF2
 1638 003a 02       		.uleb128 0x2
 1639 003b 02       		.byte	0x2
 1640 003c 07       		.byte	0x7
 1641 003d 3A000000 		.4byte	.LASF3
 1642 0041 02       		.uleb128 0x2
 1643 0042 04       		.byte	0x4
 1644 0043 05       		.byte	0x5
 1645 0044 B0020000 		.4byte	.LASF4
 1646 0048 02       		.uleb128 0x2
 1647 0049 04       		.byte	0x4
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 35


 1648 004a 07       		.byte	0x7
 1649 004b 0F010000 		.4byte	.LASF5
 1650 004f 02       		.uleb128 0x2
 1651 0050 08       		.byte	0x8
 1652 0051 05       		.byte	0x5
 1653 0052 69020000 		.4byte	.LASF6
 1654 0056 02       		.uleb128 0x2
 1655 0057 08       		.byte	0x8
 1656 0058 07       		.byte	0x7
 1657 0059 C4010000 		.4byte	.LASF7
 1658 005d 03       		.uleb128 0x3
 1659 005e 04       		.byte	0x4
 1660 005f 05       		.byte	0x5
 1661 0060 696E7400 		.ascii	"int\000"
 1662 0064 02       		.uleb128 0x2
 1663 0065 04       		.byte	0x4
 1664 0066 07       		.byte	0x7
 1665 0067 A0010000 		.4byte	.LASF8
 1666 006b 04       		.uleb128 0x4
 1667 006c 66000000 		.4byte	.LASF9
 1668 0070 02       		.byte	0x2
 1669 0071 A1       		.byte	0xa1
 1670 0072 2C000000 		.4byte	0x2c
 1671 0076 04       		.uleb128 0x4
 1672 0077 8D010000 		.4byte	.LASF10
 1673 007b 02       		.byte	0x2
 1674 007c A2       		.byte	0xa2
 1675 007d 3A000000 		.4byte	0x3a
 1676 0081 04       		.uleb128 0x4
 1677 0082 99010000 		.4byte	.LASF11
 1678 0086 02       		.byte	0x2
 1679 0087 A3       		.byte	0xa3
 1680 0088 48000000 		.4byte	0x48
 1681 008c 04       		.uleb128 0x4
 1682 008d 94010000 		.4byte	.LASF12
 1683 0091 02       		.byte	0x2
 1684 0092 A4       		.byte	0xa4
 1685 0093 25000000 		.4byte	0x25
 1686 0097 04       		.uleb128 0x4
 1687 0098 09010000 		.4byte	.LASF13
 1688 009c 02       		.byte	0x2
 1689 009d A5       		.byte	0xa5
 1690 009e 33000000 		.4byte	0x33
 1691 00a2 04       		.uleb128 0x4
 1692 00a3 33010000 		.4byte	.LASF14
 1693 00a7 02       		.byte	0x2
 1694 00a8 A6       		.byte	0xa6
 1695 00a9 41000000 		.4byte	0x41
 1696 00ad 02       		.uleb128 0x2
 1697 00ae 04       		.byte	0x4
 1698 00af 04       		.byte	0x4
 1699 00b0 6C000000 		.4byte	.LASF15
 1700 00b4 02       		.uleb128 0x2
 1701 00b5 08       		.byte	0x8
 1702 00b6 04       		.byte	0x4
 1703 00b7 69010000 		.4byte	.LASF16
 1704 00bb 02       		.uleb128 0x2
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 36


 1705 00bc 01       		.byte	0x1
 1706 00bd 08       		.byte	0x8
 1707 00be 77020000 		.4byte	.LASF17
 1708 00c2 02       		.uleb128 0x2
 1709 00c3 04       		.byte	0x4
 1710 00c4 07       		.byte	0x7
 1711 00c5 55020000 		.4byte	.LASF18
 1712 00c9 05       		.uleb128 0x5
 1713 00ca 04       		.byte	0x4
 1714 00cb 6B000000 		.4byte	0x6b
 1715 00cf 06       		.uleb128 0x6
 1716 00d0 47020000 		.4byte	.LASF56
 1717 00d4 01       		.byte	0x1
 1718 00d5 1D       		.byte	0x1d
 1719 00d6 00000000 		.4byte	.LFB33
 1720 00da 0C010000 		.4byte	.LFE33-.LFB33
 1721 00de 01       		.uleb128 0x1
 1722 00df 9C       		.byte	0x9c
 1723 00e0 11010000 		.4byte	0x111
 1724 00e4 07       		.uleb128 0x7
 1725 00e5 E7020000 		.4byte	.LASF19
 1726 00e9 01       		.byte	0x1
 1727 00ea 24       		.byte	0x24
 1728 00eb 11010000 		.4byte	0x111
 1729 00ef 03       		.uleb128 0x3
 1730 00f0 91       		.byte	0x91
 1731 00f1 60       		.sleb128 -32
 1732 00f2 06       		.byte	0x6
 1733 00f3 07       		.uleb128 0x7
 1734 00f4 4D000000 		.4byte	.LASF20
 1735 00f8 01       		.byte	0x1
 1736 00f9 24       		.byte	0x24
 1737 00fa 24010000 		.4byte	0x124
 1738 00fe 03       		.uleb128 0x3
 1739 00ff 91       		.byte	0x91
 1740 0100 58       		.sleb128 -40
 1741 0101 06       		.byte	0x6
 1742 0102 07       		.uleb128 0x7
 1743 0103 27020000 		.4byte	.LASF21
 1744 0107 01       		.byte	0x1
 1745 0108 27       		.byte	0x27
 1746 0109 6B000000 		.4byte	0x6b
 1747 010d 02       		.uleb128 0x2
 1748 010e 91       		.byte	0x91
 1749 010f 57       		.sleb128 -41
 1750 0110 00       		.byte	0
 1751 0111 08       		.uleb128 0x8
 1752 0112 6B000000 		.4byte	0x6b
 1753 0116 24010000 		.4byte	0x124
 1754 011a 09       		.uleb128 0x9
 1755 011b C2000000 		.4byte	0xc2
 1756 011f 03       		.uleb128 0x3
 1757 0120 91       		.byte	0x91
 1758 0121 64       		.sleb128 -28
 1759 0122 06       		.byte	0x6
 1760 0123 00       		.byte	0
 1761 0124 08       		.uleb128 0x8
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 37


 1762 0125 6B000000 		.4byte	0x6b
 1763 0129 37010000 		.4byte	0x137
 1764 012d 09       		.uleb128 0x9
 1765 012e C2000000 		.4byte	0xc2
 1766 0132 03       		.uleb128 0x3
 1767 0133 91       		.byte	0x91
 1768 0134 5C       		.sleb128 -36
 1769 0135 06       		.byte	0x6
 1770 0136 00       		.byte	0
 1771 0137 0A       		.uleb128 0xa
 1772 0138 12000000 		.4byte	.LASF25
 1773 013c 01       		.byte	0x1
 1774 013d 32       		.byte	0x32
 1775 013e 8C000000 		.4byte	0x8c
 1776 0142 00000000 		.4byte	.LFB34
 1777 0146 54010000 		.4byte	.LFE34-.LFB34
 1778 014a 01       		.uleb128 0x1
 1779 014b 9C       		.byte	0x9c
 1780 014c 99010000 		.4byte	0x199
 1781 0150 0B       		.uleb128 0xb
 1782 0151 706F7300 		.ascii	"pos\000"
 1783 0155 01       		.byte	0x1
 1784 0156 32       		.byte	0x32
 1785 0157 6B000000 		.4byte	0x6b
 1786 015b 02       		.uleb128 0x2
 1787 015c 91       		.byte	0x91
 1788 015d 4F       		.sleb128 -49
 1789 015e 07       		.uleb128 0x7
 1790 015f 3C020000 		.4byte	.LASF22
 1791 0163 01       		.byte	0x1
 1792 0164 33       		.byte	0x33
 1793 0165 99010000 		.4byte	0x199
 1794 0169 03       		.uleb128 0x3
 1795 016a 91       		.byte	0x91
 1796 016b 5C       		.sleb128 -36
 1797 016c 06       		.byte	0x6
 1798 016d 07       		.uleb128 0x7
 1799 016e 81010000 		.4byte	.LASF23
 1800 0172 01       		.byte	0x1
 1801 0173 33       		.byte	0x33
 1802 0174 AC010000 		.4byte	0x1ac
 1803 0178 03       		.uleb128 0x3
 1804 0179 91       		.byte	0x91
 1805 017a 54       		.sleb128 -44
 1806 017b 06       		.byte	0x6
 1807 017c 07       		.uleb128 0x7
 1808 017d 27020000 		.4byte	.LASF21
 1809 0181 01       		.byte	0x1
 1810 0182 36       		.byte	0x36
 1811 0183 6B000000 		.4byte	0x6b
 1812 0187 02       		.uleb128 0x2
 1813 0188 91       		.byte	0x91
 1814 0189 67       		.sleb128 -25
 1815 018a 07       		.uleb128 0x7
 1816 018b FE000000 		.4byte	.LASF24
 1817 018f 01       		.byte	0x1
 1818 0190 37       		.byte	0x37
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 38


 1819 0191 C9000000 		.4byte	0xc9
 1820 0195 02       		.uleb128 0x2
 1821 0196 91       		.byte	0x91
 1822 0197 50       		.sleb128 -48
 1823 0198 00       		.byte	0
 1824 0199 08       		.uleb128 0x8
 1825 019a 6B000000 		.4byte	0x6b
 1826 019e AC010000 		.4byte	0x1ac
 1827 01a2 09       		.uleb128 0x9
 1828 01a3 C2000000 		.4byte	0xc2
 1829 01a7 03       		.uleb128 0x3
 1830 01a8 91       		.byte	0x91
 1831 01a9 60       		.sleb128 -32
 1832 01aa 06       		.byte	0x6
 1833 01ab 00       		.byte	0
 1834 01ac 08       		.uleb128 0x8
 1835 01ad 6B000000 		.4byte	0x6b
 1836 01b1 BF010000 		.4byte	0x1bf
 1837 01b5 09       		.uleb128 0x9
 1838 01b6 C2000000 		.4byte	0xc2
 1839 01ba 03       		.uleb128 0x3
 1840 01bb 91       		.byte	0x91
 1841 01bc 58       		.sleb128 -40
 1842 01bd 06       		.byte	0x6
 1843 01be 00       		.byte	0
 1844 01bf 0A       		.uleb128 0xa
 1845 01c0 5E020000 		.4byte	.LASF26
 1846 01c4 01       		.byte	0x1
 1847 01c5 51       		.byte	0x51
 1848 01c6 8C000000 		.4byte	0x8c
 1849 01ca 00000000 		.4byte	.LFB35
 1850 01ce 60010000 		.4byte	.LFE35-.LFB35
 1851 01d2 01       		.uleb128 0x1
 1852 01d3 9C       		.byte	0x9c
 1853 01d4 2F020000 		.4byte	0x22f
 1854 01d8 0C       		.uleb128 0xc
 1855 01d9 2E020000 		.4byte	.LASF27
 1856 01dd 01       		.byte	0x1
 1857 01de 51       		.byte	0x51
 1858 01df 6B000000 		.4byte	0x6b
 1859 01e3 02       		.uleb128 0x2
 1860 01e4 91       		.byte	0x91
 1861 01e5 47       		.sleb128 -57
 1862 01e6 07       		.uleb128 0x7
 1863 01e7 82020000 		.4byte	.LASF28
 1864 01eb 01       		.byte	0x1
 1865 01ec 52       		.byte	0x52
 1866 01ed 2F020000 		.4byte	0x22f
 1867 01f1 03       		.uleb128 0x3
 1868 01f2 91       		.byte	0x91
 1869 01f3 5C       		.sleb128 -36
 1870 01f4 06       		.byte	0x6
 1871 01f5 07       		.uleb128 0x7
 1872 01f6 5A000000 		.4byte	.LASF29
 1873 01fa 01       		.byte	0x1
 1874 01fb 52       		.byte	0x52
 1875 01fc 42020000 		.4byte	0x242
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 39


 1876 0200 03       		.uleb128 0x3
 1877 0201 91       		.byte	0x91
 1878 0202 54       		.sleb128 -44
 1879 0203 06       		.byte	0x6
 1880 0204 07       		.uleb128 0x7
 1881 0205 27020000 		.4byte	.LASF21
 1882 0209 01       		.byte	0x1
 1883 020a 55       		.byte	0x55
 1884 020b 6B000000 		.4byte	0x6b
 1885 020f 02       		.uleb128 0x2
 1886 0210 91       		.byte	0x91
 1887 0211 67       		.sleb128 -25
 1888 0212 07       		.uleb128 0x7
 1889 0213 AD010000 		.4byte	.LASF30
 1890 0217 01       		.byte	0x1
 1891 0218 56       		.byte	0x56
 1892 0219 6B000000 		.4byte	0x6b
 1893 021d 02       		.uleb128 0x2
 1894 021e 91       		.byte	0x91
 1895 021f 4F       		.sleb128 -49
 1896 0220 07       		.uleb128 0x7
 1897 0221 33020000 		.4byte	.LASF31
 1898 0225 01       		.byte	0x1
 1899 0226 57       		.byte	0x57
 1900 0227 C9000000 		.4byte	0xc9
 1901 022b 02       		.uleb128 0x2
 1902 022c 91       		.byte	0x91
 1903 022d 50       		.sleb128 -48
 1904 022e 00       		.byte	0
 1905 022f 08       		.uleb128 0x8
 1906 0230 6B000000 		.4byte	0x6b
 1907 0234 42020000 		.4byte	0x242
 1908 0238 09       		.uleb128 0x9
 1909 0239 C2000000 		.4byte	0xc2
 1910 023d 03       		.uleb128 0x3
 1911 023e 91       		.byte	0x91
 1912 023f 60       		.sleb128 -32
 1913 0240 06       		.byte	0x6
 1914 0241 00       		.byte	0
 1915 0242 08       		.uleb128 0x8
 1916 0243 6B000000 		.4byte	0x6b
 1917 0247 55020000 		.4byte	0x255
 1918 024b 09       		.uleb128 0x9
 1919 024c C2000000 		.4byte	0xc2
 1920 0250 03       		.uleb128 0x3
 1921 0251 91       		.byte	0x91
 1922 0252 58       		.sleb128 -40
 1923 0253 06       		.byte	0x6
 1924 0254 00       		.byte	0
 1925 0255 0A       		.uleb128 0xa
 1926 0256 B2010000 		.4byte	.LASF32
 1927 025a 01       		.byte	0x1
 1928 025b 71       		.byte	0x71
 1929 025c 8C000000 		.4byte	0x8c
 1930 0260 00000000 		.4byte	.LFB36
 1931 0264 58010000 		.4byte	.LFE36-.LFB36
 1932 0268 01       		.uleb128 0x1
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 40


 1933 0269 9C       		.byte	0x9c
 1934 026a C5020000 		.4byte	0x2c5
 1935 026e 0C       		.uleb128 0xc
 1936 026f 4F020000 		.4byte	.LASF33
 1937 0273 01       		.byte	0x1
 1938 0274 71       		.byte	0x71
 1939 0275 6B000000 		.4byte	0x6b
 1940 0279 02       		.uleb128 0x2
 1941 027a 91       		.byte	0x91
 1942 027b 47       		.sleb128 -57
 1943 027c 07       		.uleb128 0x7
 1944 027d B9020000 		.4byte	.LASF34
 1945 0281 01       		.byte	0x1
 1946 0282 72       		.byte	0x72
 1947 0283 C5020000 		.4byte	0x2c5
 1948 0287 03       		.uleb128 0x3
 1949 0288 91       		.byte	0x91
 1950 0289 5C       		.sleb128 -36
 1951 028a 06       		.byte	0x6
 1952 028b 07       		.uleb128 0x7
 1953 028c 00000000 		.4byte	.LASF35
 1954 0290 01       		.byte	0x1
 1955 0291 72       		.byte	0x72
 1956 0292 D8020000 		.4byte	0x2d8
 1957 0296 03       		.uleb128 0x3
 1958 0297 91       		.byte	0x91
 1959 0298 54       		.sleb128 -44
 1960 0299 06       		.byte	0x6
 1961 029a 07       		.uleb128 0x7
 1962 029b 27020000 		.4byte	.LASF21
 1963 029f 01       		.byte	0x1
 1964 02a0 75       		.byte	0x75
 1965 02a1 6B000000 		.4byte	0x6b
 1966 02a5 02       		.uleb128 0x2
 1967 02a6 91       		.byte	0x91
 1968 02a7 67       		.sleb128 -25
 1969 02a8 07       		.uleb128 0x7
 1970 02a9 AD010000 		.4byte	.LASF30
 1971 02ad 01       		.byte	0x1
 1972 02ae 76       		.byte	0x76
 1973 02af 6B000000 		.4byte	0x6b
 1974 02b3 02       		.uleb128 0x2
 1975 02b4 91       		.byte	0x91
 1976 02b5 4F       		.sleb128 -49
 1977 02b6 07       		.uleb128 0x7
 1978 02b7 F3000000 		.4byte	.LASF36
 1979 02bb 01       		.byte	0x1
 1980 02bc 77       		.byte	0x77
 1981 02bd C9000000 		.4byte	0xc9
 1982 02c1 02       		.uleb128 0x2
 1983 02c2 91       		.byte	0x91
 1984 02c3 50       		.sleb128 -48
 1985 02c4 00       		.byte	0
 1986 02c5 08       		.uleb128 0x8
 1987 02c6 6B000000 		.4byte	0x6b
 1988 02ca D8020000 		.4byte	0x2d8
 1989 02ce 09       		.uleb128 0x9
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 41


 1990 02cf C2000000 		.4byte	0xc2
 1991 02d3 03       		.uleb128 0x3
 1992 02d4 91       		.byte	0x91
 1993 02d5 60       		.sleb128 -32
 1994 02d6 06       		.byte	0x6
 1995 02d7 00       		.byte	0
 1996 02d8 08       		.uleb128 0x8
 1997 02d9 6B000000 		.4byte	0x6b
 1998 02dd EB020000 		.4byte	0x2eb
 1999 02e1 09       		.uleb128 0x9
 2000 02e2 C2000000 		.4byte	0xc2
 2001 02e6 03       		.uleb128 0x3
 2002 02e7 91       		.byte	0x91
 2003 02e8 58       		.sleb128 -40
 2004 02e9 06       		.byte	0x6
 2005 02ea 00       		.byte	0
 2006 02eb 0A       		.uleb128 0xa
 2007 02ec D6020000 		.4byte	.LASF37
 2008 02f0 01       		.byte	0x1
 2009 02f1 91       		.byte	0x91
 2010 02f2 8C000000 		.4byte	0x8c
 2011 02f6 00000000 		.4byte	.LFB37
 2012 02fa 50010000 		.4byte	.LFE37-.LFB37
 2013 02fe 01       		.uleb128 0x1
 2014 02ff 9C       		.byte	0x9c
 2015 0300 5A030000 		.4byte	0x35a
 2016 0304 0C       		.uleb128 0xc
 2017 0305 7C020000 		.4byte	.LASF38
 2018 0309 01       		.byte	0x1
 2019 030a 91       		.byte	0x91
 2020 030b 6B000000 		.4byte	0x6b
 2021 030f 02       		.uleb128 0x2
 2022 0310 91       		.byte	0x91
 2023 0311 57       		.sleb128 -41
 2024 0312 0C       		.uleb128 0xc
 2025 0313 F8000000 		.4byte	.LASF39
 2026 0317 01       		.byte	0x1
 2027 0318 91       		.byte	0x91
 2028 0319 6B000000 		.4byte	0x6b
 2029 031d 02       		.uleb128 0x2
 2030 031e 91       		.byte	0x91
 2031 031f 56       		.sleb128 -42
 2032 0320 07       		.uleb128 0x7
 2033 0321 1F000000 		.4byte	.LASF40
 2034 0325 01       		.byte	0x1
 2035 0326 92       		.byte	0x92
 2036 0327 5A030000 		.4byte	0x35a
 2037 032b 03       		.uleb128 0x3
 2038 032c 91       		.byte	0x91
 2039 032d 60       		.sleb128 -32
 2040 032e 06       		.byte	0x6
 2041 032f 07       		.uleb128 0x7
 2042 0330 AD010000 		.4byte	.LASF30
 2043 0334 01       		.byte	0x1
 2044 0335 93       		.byte	0x93
 2045 0336 6B000000 		.4byte	0x6b
 2046 033a 02       		.uleb128 0x2
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 42


 2047 033b 91       		.byte	0x91
 2048 033c 5A       		.sleb128 -38
 2049 033d 07       		.uleb128 0x7
 2050 033e 97020000 		.4byte	.LASF41
 2051 0342 01       		.byte	0x1
 2052 0343 94       		.byte	0x94
 2053 0344 C9000000 		.4byte	0xc9
 2054 0348 02       		.uleb128 0x2
 2055 0349 91       		.byte	0x91
 2056 034a 5C       		.sleb128 -36
 2057 034b 07       		.uleb128 0x7
 2058 034c 27020000 		.4byte	.LASF21
 2059 0350 01       		.byte	0x1
 2060 0351 95       		.byte	0x95
 2061 0352 6B000000 		.4byte	0x6b
 2062 0356 02       		.uleb128 0x2
 2063 0357 91       		.byte	0x91
 2064 0358 5B       		.sleb128 -37
 2065 0359 00       		.byte	0
 2066 035a 08       		.uleb128 0x8
 2067 035b 6B000000 		.4byte	0x6b
 2068 035f 6D030000 		.4byte	0x36d
 2069 0363 09       		.uleb128 0x9
 2070 0364 C2000000 		.4byte	0xc2
 2071 0368 03       		.uleb128 0x3
 2072 0369 91       		.byte	0x91
 2073 036a 64       		.sleb128 -28
 2074 036b 06       		.byte	0x6
 2075 036c 00       		.byte	0
 2076 036d 0A       		.uleb128 0xa
 2077 036e 21010000 		.4byte	.LASF42
 2078 0372 01       		.byte	0x1
 2079 0373 B7       		.byte	0xb7
 2080 0374 8C000000 		.4byte	0x8c
 2081 0378 00000000 		.4byte	.LFB38
 2082 037c 6C010000 		.4byte	.LFE38-.LFB38
 2083 0380 01       		.uleb128 0x1
 2084 0381 9C       		.byte	0x9c
 2085 0382 EA030000 		.4byte	0x3ea
 2086 0386 0C       		.uleb128 0xc
 2087 0387 C4020000 		.4byte	.LASF43
 2088 038b 01       		.byte	0x1
 2089 038c B7       		.byte	0xb7
 2090 038d C9000000 		.4byte	0xc9
 2091 0391 02       		.uleb128 0x2
 2092 0392 91       		.byte	0x91
 2093 0393 54       		.sleb128 -44
 2094 0394 0C       		.uleb128 0xc
 2095 0395 2E020000 		.4byte	.LASF27
 2096 0399 01       		.byte	0x1
 2097 039a B7       		.byte	0xb7
 2098 039b C9000000 		.4byte	0xc9
 2099 039f 02       		.uleb128 0x2
 2100 03a0 91       		.byte	0x91
 2101 03a1 50       		.sleb128 -48
 2102 03a2 0C       		.uleb128 0xc
 2103 03a3 F3000000 		.4byte	.LASF36
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 43


 2104 03a7 01       		.byte	0x1
 2105 03a8 B7       		.byte	0xb7
 2106 03a9 C9000000 		.4byte	0xc9
 2107 03ad 02       		.uleb128 0x2
 2108 03ae 91       		.byte	0x91
 2109 03af 4C       		.sleb128 -52
 2110 03b0 0C       		.uleb128 0xc
 2111 03b1 97020000 		.4byte	.LASF41
 2112 03b5 01       		.byte	0x1
 2113 03b6 B7       		.byte	0xb7
 2114 03b7 C9000000 		.4byte	0xc9
 2115 03bb 02       		.uleb128 0x2
 2116 03bc 91       		.byte	0x91
 2117 03bd 48       		.sleb128 -56
 2118 03be 07       		.uleb128 0x7
 2119 03bf 27020000 		.4byte	.LASF21
 2120 03c3 01       		.byte	0x1
 2121 03c4 B8       		.byte	0xb8
 2122 03c5 6B000000 		.4byte	0x6b
 2123 03c9 02       		.uleb128 0x2
 2124 03ca 91       		.byte	0x91
 2125 03cb 67       		.sleb128 -25
 2126 03cc 07       		.uleb128 0x7
 2127 03cd A2020000 		.4byte	.LASF44
 2128 03d1 01       		.byte	0x1
 2129 03d2 B9       		.byte	0xb9
 2130 03d3 5D000000 		.4byte	0x5d
 2131 03d7 02       		.uleb128 0x2
 2132 03d8 91       		.byte	0x91
 2133 03d9 60       		.sleb128 -32
 2134 03da 07       		.uleb128 0x7
 2135 03db 53010000 		.4byte	.LASF45
 2136 03df 01       		.byte	0x1
 2137 03e0 BA       		.byte	0xba
 2138 03e1 EA030000 		.4byte	0x3ea
 2139 03e5 03       		.uleb128 0x3
 2140 03e6 91       		.byte	0x91
 2141 03e7 58       		.sleb128 -40
 2142 03e8 06       		.byte	0x6
 2143 03e9 00       		.byte	0
 2144 03ea 08       		.uleb128 0x8
 2145 03eb 6B000000 		.4byte	0x6b
 2146 03ef FD030000 		.4byte	0x3fd
 2147 03f3 09       		.uleb128 0x9
 2148 03f4 C2000000 		.4byte	0xc2
 2149 03f8 03       		.uleb128 0x3
 2150 03f9 91       		.byte	0x91
 2151 03fa 5C       		.sleb128 -36
 2152 03fb 06       		.byte	0x6
 2153 03fc 00       		.byte	0
 2154 03fd 0A       		.uleb128 0xa
 2155 03fe 39010000 		.4byte	.LASF46
 2156 0402 01       		.byte	0x1
 2157 0403 E3       		.byte	0xe3
 2158 0404 8C000000 		.4byte	0x8c
 2159 0408 00000000 		.4byte	.LFB39
 2160 040c BE000000 		.4byte	.LFE39-.LFB39
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 44


 2161 0410 01       		.uleb128 0x1
 2162 0411 9C       		.byte	0x9c
 2163 0412 5E040000 		.4byte	0x45e
 2164 0416 0C       		.uleb128 0xc
 2165 0417 AD010000 		.4byte	.LASF30
 2166 041b 01       		.byte	0x1
 2167 041c E3       		.byte	0xe3
 2168 041d 5E040000 		.4byte	0x45e
 2169 0421 02       		.uleb128 0x2
 2170 0422 91       		.byte	0x91
 2171 0423 54       		.sleb128 -44
 2172 0424 0B       		.uleb128 0xb
 2173 0425 68756D00 		.ascii	"hum\000"
 2174 0429 01       		.byte	0x1
 2175 042a E3       		.byte	0xe3
 2176 042b 5E040000 		.4byte	0x45e
 2177 042f 02       		.uleb128 0x2
 2178 0430 91       		.byte	0x91
 2179 0431 50       		.sleb128 -48
 2180 0432 07       		.uleb128 0x7
 2181 0433 A2020000 		.4byte	.LASF44
 2182 0437 01       		.byte	0x1
 2183 0438 E4       		.byte	0xe4
 2184 0439 A2000000 		.4byte	0xa2
 2185 043d 02       		.uleb128 0x2
 2186 043e 91       		.byte	0x91
 2187 043f 64       		.sleb128 -28
 2188 0440 07       		.uleb128 0x7
 2189 0441 53010000 		.4byte	.LASF45
 2190 0445 01       		.byte	0x1
 2191 0446 E5       		.byte	0xe5
 2192 0447 64040000 		.4byte	0x464
 2193 044b 03       		.uleb128 0x3
 2194 044c 91       		.byte	0x91
 2195 044d 5C       		.sleb128 -36
 2196 044e 06       		.byte	0x6
 2197 044f 07       		.uleb128 0x7
 2198 0450 27020000 		.4byte	.LASF21
 2199 0454 01       		.byte	0x1
 2200 0455 E6       		.byte	0xe6
 2201 0456 6B000000 		.4byte	0x6b
 2202 045a 02       		.uleb128 0x2
 2203 045b 91       		.byte	0x91
 2204 045c 5B       		.sleb128 -37
 2205 045d 00       		.byte	0
 2206 045e 05       		.uleb128 0x5
 2207 045f 04       		.byte	0x4
 2208 0460 A2000000 		.4byte	0xa2
 2209 0464 08       		.uleb128 0x8
 2210 0465 6B000000 		.4byte	0x6b
 2211 0469 77040000 		.4byte	0x477
 2212 046d 09       		.uleb128 0x9
 2213 046e C2000000 		.4byte	0xc2
 2214 0472 03       		.uleb128 0x3
 2215 0473 91       		.byte	0x91
 2216 0474 60       		.sleb128 -32
 2217 0475 06       		.byte	0x6
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 45


 2218 0476 00       		.byte	0
 2219 0477 0A       		.uleb128 0xa
 2220 0478 F4020000 		.4byte	.LASF47
 2221 047c 01       		.byte	0x1
 2222 047d F5       		.byte	0xf5
 2223 047e 8C000000 		.4byte	0x8c
 2224 0482 00000000 		.4byte	.LFB40
 2225 0486 E4000000 		.4byte	.LFE40-.LFB40
 2226 048a 01       		.uleb128 0x1
 2227 048b 9C       		.byte	0x9c
 2228 048c BE040000 		.4byte	0x4be
 2229 0490 0C       		.uleb128 0xc
 2230 0491 0C000000 		.4byte	.LASF48
 2231 0495 01       		.byte	0x1
 2232 0496 F5       		.byte	0xf5
 2233 0497 5E040000 		.4byte	0x45e
 2234 049b 02       		.uleb128 0x2
 2235 049c 91       		.byte	0x91
 2236 049d 54       		.sleb128 -44
 2237 049e 0D       		.uleb128 0xd
 2238 049f 53010000 		.4byte	.LASF45
 2239 04a3 01       		.byte	0x1
 2240 04a4 0901     		.2byte	0x109
 2241 04a6 BE040000 		.4byte	0x4be
 2242 04aa 03       		.uleb128 0x3
 2243 04ab 91       		.byte	0x91
 2244 04ac 60       		.sleb128 -32
 2245 04ad 06       		.byte	0x6
 2246 04ae 0D       		.uleb128 0xd
 2247 04af 27020000 		.4byte	.LASF21
 2248 04b3 01       		.byte	0x1
 2249 04b4 0A01     		.2byte	0x10a
 2250 04b6 6B000000 		.4byte	0x6b
 2251 04ba 02       		.uleb128 0x2
 2252 04bb 91       		.byte	0x91
 2253 04bc 5F       		.sleb128 -33
 2254 04bd 00       		.byte	0
 2255 04be 08       		.uleb128 0x8
 2256 04bf 6B000000 		.4byte	0x6b
 2257 04c3 D1040000 		.4byte	0x4d1
 2258 04c7 09       		.uleb128 0x9
 2259 04c8 C2000000 		.4byte	0xc2
 2260 04cc 03       		.uleb128 0x3
 2261 04cd 91       		.byte	0x91
 2262 04ce 64       		.sleb128 -28
 2263 04cf 06       		.byte	0x6
 2264 04d0 00       		.byte	0
 2265 04d1 0E       		.uleb128 0xe
 2266 04d2 CB020000 		.4byte	.LASF49
 2267 04d6 01       		.byte	0x1
 2268 04d7 1F01     		.2byte	0x11f
 2269 04d9 8C000000 		.4byte	0x8c
 2270 04dd 00000000 		.4byte	.LFB41
 2271 04e1 28000000 		.4byte	.LFE41-.LFB41
 2272 04e5 01       		.uleb128 0x1
 2273 04e6 9C       		.byte	0x9c
 2274 04e7 0A050000 		.4byte	0x50a
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 46


 2275 04eb 0F       		.uleb128 0xf
 2276 04ec 7C020000 		.4byte	.LASF38
 2277 04f0 01       		.byte	0x1
 2278 04f1 1F01     		.2byte	0x11f
 2279 04f3 6B000000 		.4byte	0x6b
 2280 04f7 02       		.uleb128 0x2
 2281 04f8 91       		.byte	0x91
 2282 04f9 6F       		.sleb128 -17
 2283 04fa 0F       		.uleb128 0xf
 2284 04fb A8020000 		.4byte	.LASF50
 2285 04ff 01       		.byte	0x1
 2286 0500 1F01     		.2byte	0x11f
 2287 0502 0A050000 		.4byte	0x50a
 2288 0506 02       		.uleb128 0x2
 2289 0507 91       		.byte	0x91
 2290 0508 68       		.sleb128 -24
 2291 0509 00       		.byte	0
 2292 050a 05       		.uleb128 0x5
 2293 050b 04       		.byte	0x4
 2294 050c 97000000 		.4byte	0x97
 2295 0510 07       		.uleb128 0x7
 2296 0511 70010000 		.4byte	.LASF51
 2297 0515 01       		.byte	0x1
 2298 0516 18       		.byte	0x18
 2299 0517 6B000000 		.4byte	0x6b
 2300 051b 05       		.uleb128 0x5
 2301 051c 03       		.byte	0x3
 2302 051d 00000000 		.4byte	irrigationStatus
 2303 0521 07       		.uleb128 0x7
 2304 0522 EE000000 		.4byte	.LASF52
 2305 0526 01       		.byte	0x1
 2306 0527 19       		.byte	0x19
 2307 0528 5D000000 		.4byte	0x5d
 2308 052c 05       		.uleb128 0x5
 2309 052d 03       		.byte	0x3
 2310 052e 04000000 		.4byte	size
 2311 0532 00       		.byte	0
 2312              		.section	.debug_abbrev,"",%progbits
 2313              	.Ldebug_abbrev0:
 2314 0000 01       		.uleb128 0x1
 2315 0001 11       		.uleb128 0x11
 2316 0002 01       		.byte	0x1
 2317 0003 25       		.uleb128 0x25
 2318 0004 0E       		.uleb128 0xe
 2319 0005 13       		.uleb128 0x13
 2320 0006 0B       		.uleb128 0xb
 2321 0007 03       		.uleb128 0x3
 2322 0008 0E       		.uleb128 0xe
 2323 0009 1B       		.uleb128 0x1b
 2324 000a 0E       		.uleb128 0xe
 2325 000b 55       		.uleb128 0x55
 2326 000c 17       		.uleb128 0x17
 2327 000d 11       		.uleb128 0x11
 2328 000e 01       		.uleb128 0x1
 2329 000f 10       		.uleb128 0x10
 2330 0010 17       		.uleb128 0x17
 2331 0011 00       		.byte	0
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 47


 2332 0012 00       		.byte	0
 2333 0013 02       		.uleb128 0x2
 2334 0014 24       		.uleb128 0x24
 2335 0015 00       		.byte	0
 2336 0016 0B       		.uleb128 0xb
 2337 0017 0B       		.uleb128 0xb
 2338 0018 3E       		.uleb128 0x3e
 2339 0019 0B       		.uleb128 0xb
 2340 001a 03       		.uleb128 0x3
 2341 001b 0E       		.uleb128 0xe
 2342 001c 00       		.byte	0
 2343 001d 00       		.byte	0
 2344 001e 03       		.uleb128 0x3
 2345 001f 24       		.uleb128 0x24
 2346 0020 00       		.byte	0
 2347 0021 0B       		.uleb128 0xb
 2348 0022 0B       		.uleb128 0xb
 2349 0023 3E       		.uleb128 0x3e
 2350 0024 0B       		.uleb128 0xb
 2351 0025 03       		.uleb128 0x3
 2352 0026 08       		.uleb128 0x8
 2353 0027 00       		.byte	0
 2354 0028 00       		.byte	0
 2355 0029 04       		.uleb128 0x4
 2356 002a 16       		.uleb128 0x16
 2357 002b 00       		.byte	0
 2358 002c 03       		.uleb128 0x3
 2359 002d 0E       		.uleb128 0xe
 2360 002e 3A       		.uleb128 0x3a
 2361 002f 0B       		.uleb128 0xb
 2362 0030 3B       		.uleb128 0x3b
 2363 0031 0B       		.uleb128 0xb
 2364 0032 49       		.uleb128 0x49
 2365 0033 13       		.uleb128 0x13
 2366 0034 00       		.byte	0
 2367 0035 00       		.byte	0
 2368 0036 05       		.uleb128 0x5
 2369 0037 0F       		.uleb128 0xf
 2370 0038 00       		.byte	0
 2371 0039 0B       		.uleb128 0xb
 2372 003a 0B       		.uleb128 0xb
 2373 003b 49       		.uleb128 0x49
 2374 003c 13       		.uleb128 0x13
 2375 003d 00       		.byte	0
 2376 003e 00       		.byte	0
 2377 003f 06       		.uleb128 0x6
 2378 0040 2E       		.uleb128 0x2e
 2379 0041 01       		.byte	0x1
 2380 0042 3F       		.uleb128 0x3f
 2381 0043 19       		.uleb128 0x19
 2382 0044 03       		.uleb128 0x3
 2383 0045 0E       		.uleb128 0xe
 2384 0046 3A       		.uleb128 0x3a
 2385 0047 0B       		.uleb128 0xb
 2386 0048 3B       		.uleb128 0x3b
 2387 0049 0B       		.uleb128 0xb
 2388 004a 27       		.uleb128 0x27
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 48


 2389 004b 19       		.uleb128 0x19
 2390 004c 11       		.uleb128 0x11
 2391 004d 01       		.uleb128 0x1
 2392 004e 12       		.uleb128 0x12
 2393 004f 06       		.uleb128 0x6
 2394 0050 40       		.uleb128 0x40
 2395 0051 18       		.uleb128 0x18
 2396 0052 9642     		.uleb128 0x2116
 2397 0054 19       		.uleb128 0x19
 2398 0055 01       		.uleb128 0x1
 2399 0056 13       		.uleb128 0x13
 2400 0057 00       		.byte	0
 2401 0058 00       		.byte	0
 2402 0059 07       		.uleb128 0x7
 2403 005a 34       		.uleb128 0x34
 2404 005b 00       		.byte	0
 2405 005c 03       		.uleb128 0x3
 2406 005d 0E       		.uleb128 0xe
 2407 005e 3A       		.uleb128 0x3a
 2408 005f 0B       		.uleb128 0xb
 2409 0060 3B       		.uleb128 0x3b
 2410 0061 0B       		.uleb128 0xb
 2411 0062 49       		.uleb128 0x49
 2412 0063 13       		.uleb128 0x13
 2413 0064 02       		.uleb128 0x2
 2414 0065 18       		.uleb128 0x18
 2415 0066 00       		.byte	0
 2416 0067 00       		.byte	0
 2417 0068 08       		.uleb128 0x8
 2418 0069 01       		.uleb128 0x1
 2419 006a 01       		.byte	0x1
 2420 006b 49       		.uleb128 0x49
 2421 006c 13       		.uleb128 0x13
 2422 006d 01       		.uleb128 0x1
 2423 006e 13       		.uleb128 0x13
 2424 006f 00       		.byte	0
 2425 0070 00       		.byte	0
 2426 0071 09       		.uleb128 0x9
 2427 0072 21       		.uleb128 0x21
 2428 0073 00       		.byte	0
 2429 0074 49       		.uleb128 0x49
 2430 0075 13       		.uleb128 0x13
 2431 0076 2F       		.uleb128 0x2f
 2432 0077 18       		.uleb128 0x18
 2433 0078 00       		.byte	0
 2434 0079 00       		.byte	0
 2435 007a 0A       		.uleb128 0xa
 2436 007b 2E       		.uleb128 0x2e
 2437 007c 01       		.byte	0x1
 2438 007d 3F       		.uleb128 0x3f
 2439 007e 19       		.uleb128 0x19
 2440 007f 03       		.uleb128 0x3
 2441 0080 0E       		.uleb128 0xe
 2442 0081 3A       		.uleb128 0x3a
 2443 0082 0B       		.uleb128 0xb
 2444 0083 3B       		.uleb128 0x3b
 2445 0084 0B       		.uleb128 0xb
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 49


 2446 0085 27       		.uleb128 0x27
 2447 0086 19       		.uleb128 0x19
 2448 0087 49       		.uleb128 0x49
 2449 0088 13       		.uleb128 0x13
 2450 0089 11       		.uleb128 0x11
 2451 008a 01       		.uleb128 0x1
 2452 008b 12       		.uleb128 0x12
 2453 008c 06       		.uleb128 0x6
 2454 008d 40       		.uleb128 0x40
 2455 008e 18       		.uleb128 0x18
 2456 008f 9642     		.uleb128 0x2116
 2457 0091 19       		.uleb128 0x19
 2458 0092 01       		.uleb128 0x1
 2459 0093 13       		.uleb128 0x13
 2460 0094 00       		.byte	0
 2461 0095 00       		.byte	0
 2462 0096 0B       		.uleb128 0xb
 2463 0097 05       		.uleb128 0x5
 2464 0098 00       		.byte	0
 2465 0099 03       		.uleb128 0x3
 2466 009a 08       		.uleb128 0x8
 2467 009b 3A       		.uleb128 0x3a
 2468 009c 0B       		.uleb128 0xb
 2469 009d 3B       		.uleb128 0x3b
 2470 009e 0B       		.uleb128 0xb
 2471 009f 49       		.uleb128 0x49
 2472 00a0 13       		.uleb128 0x13
 2473 00a1 02       		.uleb128 0x2
 2474 00a2 18       		.uleb128 0x18
 2475 00a3 00       		.byte	0
 2476 00a4 00       		.byte	0
 2477 00a5 0C       		.uleb128 0xc
 2478 00a6 05       		.uleb128 0x5
 2479 00a7 00       		.byte	0
 2480 00a8 03       		.uleb128 0x3
 2481 00a9 0E       		.uleb128 0xe
 2482 00aa 3A       		.uleb128 0x3a
 2483 00ab 0B       		.uleb128 0xb
 2484 00ac 3B       		.uleb128 0x3b
 2485 00ad 0B       		.uleb128 0xb
 2486 00ae 49       		.uleb128 0x49
 2487 00af 13       		.uleb128 0x13
 2488 00b0 02       		.uleb128 0x2
 2489 00b1 18       		.uleb128 0x18
 2490 00b2 00       		.byte	0
 2491 00b3 00       		.byte	0
 2492 00b4 0D       		.uleb128 0xd
 2493 00b5 34       		.uleb128 0x34
 2494 00b6 00       		.byte	0
 2495 00b7 03       		.uleb128 0x3
 2496 00b8 0E       		.uleb128 0xe
 2497 00b9 3A       		.uleb128 0x3a
 2498 00ba 0B       		.uleb128 0xb
 2499 00bb 3B       		.uleb128 0x3b
 2500 00bc 05       		.uleb128 0x5
 2501 00bd 49       		.uleb128 0x49
 2502 00be 13       		.uleb128 0x13
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 50


 2503 00bf 02       		.uleb128 0x2
 2504 00c0 18       		.uleb128 0x18
 2505 00c1 00       		.byte	0
 2506 00c2 00       		.byte	0
 2507 00c3 0E       		.uleb128 0xe
 2508 00c4 2E       		.uleb128 0x2e
 2509 00c5 01       		.byte	0x1
 2510 00c6 3F       		.uleb128 0x3f
 2511 00c7 19       		.uleb128 0x19
 2512 00c8 03       		.uleb128 0x3
 2513 00c9 0E       		.uleb128 0xe
 2514 00ca 3A       		.uleb128 0x3a
 2515 00cb 0B       		.uleb128 0xb
 2516 00cc 3B       		.uleb128 0x3b
 2517 00cd 05       		.uleb128 0x5
 2518 00ce 27       		.uleb128 0x27
 2519 00cf 19       		.uleb128 0x19
 2520 00d0 49       		.uleb128 0x49
 2521 00d1 13       		.uleb128 0x13
 2522 00d2 11       		.uleb128 0x11
 2523 00d3 01       		.uleb128 0x1
 2524 00d4 12       		.uleb128 0x12
 2525 00d5 06       		.uleb128 0x6
 2526 00d6 40       		.uleb128 0x40
 2527 00d7 18       		.uleb128 0x18
 2528 00d8 9742     		.uleb128 0x2117
 2529 00da 19       		.uleb128 0x19
 2530 00db 01       		.uleb128 0x1
 2531 00dc 13       		.uleb128 0x13
 2532 00dd 00       		.byte	0
 2533 00de 00       		.byte	0
 2534 00df 0F       		.uleb128 0xf
 2535 00e0 05       		.uleb128 0x5
 2536 00e1 00       		.byte	0
 2537 00e2 03       		.uleb128 0x3
 2538 00e3 0E       		.uleb128 0xe
 2539 00e4 3A       		.uleb128 0x3a
 2540 00e5 0B       		.uleb128 0xb
 2541 00e6 3B       		.uleb128 0x3b
 2542 00e7 05       		.uleb128 0x5
 2543 00e8 49       		.uleb128 0x49
 2544 00e9 13       		.uleb128 0x13
 2545 00ea 02       		.uleb128 0x2
 2546 00eb 18       		.uleb128 0x18
 2547 00ec 00       		.byte	0
 2548 00ed 00       		.byte	0
 2549 00ee 00       		.byte	0
 2550              		.section	.debug_aranges,"",%progbits
 2551 0000 5C000000 		.4byte	0x5c
 2552 0004 0200     		.2byte	0x2
 2553 0006 00000000 		.4byte	.Ldebug_info0
 2554 000a 04       		.byte	0x4
 2555 000b 00       		.byte	0
 2556 000c 0000     		.2byte	0
 2557 000e 0000     		.2byte	0
 2558 0010 00000000 		.4byte	.LFB33
 2559 0014 0C010000 		.4byte	.LFE33-.LFB33
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 51


 2560 0018 00000000 		.4byte	.LFB34
 2561 001c 54010000 		.4byte	.LFE34-.LFB34
 2562 0020 00000000 		.4byte	.LFB35
 2563 0024 60010000 		.4byte	.LFE35-.LFB35
 2564 0028 00000000 		.4byte	.LFB36
 2565 002c 58010000 		.4byte	.LFE36-.LFB36
 2566 0030 00000000 		.4byte	.LFB37
 2567 0034 50010000 		.4byte	.LFE37-.LFB37
 2568 0038 00000000 		.4byte	.LFB38
 2569 003c 6C010000 		.4byte	.LFE38-.LFB38
 2570 0040 00000000 		.4byte	.LFB39
 2571 0044 BE000000 		.4byte	.LFE39-.LFB39
 2572 0048 00000000 		.4byte	.LFB40
 2573 004c E4000000 		.4byte	.LFE40-.LFB40
 2574 0050 00000000 		.4byte	.LFB41
 2575 0054 28000000 		.4byte	.LFE41-.LFB41
 2576 0058 00000000 		.4byte	0
 2577 005c 00000000 		.4byte	0
 2578              		.section	.debug_ranges,"",%progbits
 2579              	.Ldebug_ranges0:
 2580 0000 00000000 		.4byte	.LFB33
 2581 0004 0C010000 		.4byte	.LFE33
 2582 0008 00000000 		.4byte	.LFB34
 2583 000c 54010000 		.4byte	.LFE34
 2584 0010 00000000 		.4byte	.LFB35
 2585 0014 60010000 		.4byte	.LFE35
 2586 0018 00000000 		.4byte	.LFB36
 2587 001c 58010000 		.4byte	.LFE36
 2588 0020 00000000 		.4byte	.LFB37
 2589 0024 50010000 		.4byte	.LFE37
 2590 0028 00000000 		.4byte	.LFB38
 2591 002c 6C010000 		.4byte	.LFE38
 2592 0030 00000000 		.4byte	.LFB39
 2593 0034 BE000000 		.4byte	.LFE39
 2594 0038 00000000 		.4byte	.LFB40
 2595 003c E4000000 		.4byte	.LFE40
 2596 0040 00000000 		.4byte	.LFB41
 2597 0044 28000000 		.4byte	.LFE41
 2598 0048 00000000 		.4byte	0
 2599 004c 00000000 		.4byte	0
 2600              		.section	.debug_line,"",%progbits
 2601              	.Ldebug_line0:
 2602 0000 8E010000 		.section	.debug_str,"MS",%progbits,1
 2602      02004A00 
 2602      00000201 
 2602      FB0E0D00 
 2602      01010101 
 2603              	.LASF35:
 2604 0000 7475726E 		.ascii	"turnOffVent\000"
 2604      4F666656 
 2604      656E7400 
 2605              	.LASF48:
 2606 000c 6C696768 		.ascii	"light\000"
 2606      7400
 2607              	.LASF25:
 2608 0012 61646A75 		.ascii	"adjustWindow\000"
 2608      73745769 
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 52


 2608      6E646F77 
 2608      00
 2609              	.LASF40:
 2610 001f 69727269 		.ascii	"irriTransfer\000"
 2610      5472616E 
 2610      73666572 
 2610      00
 2611              	.LASF54:
 2612 002c 2E5C4932 		.ascii	".\\I2C_Class.c\000"
 2612      435F436C 
 2612      6173732E 
 2612      6300
 2613              	.LASF3:
 2614 003a 73686F72 		.ascii	"short unsigned int\000"
 2614      7420756E 
 2614      7369676E 
 2614      65642069 
 2614      6E7400
 2615              	.LASF20:
 2616 004d 6C696768 		.ascii	"lightControl\000"
 2616      74436F6E 
 2616      74726F6C 
 2616      00
 2617              	.LASF29:
 2618 005a 7475726E 		.ascii	"turnOffHeat\000"
 2618      4F666648 
 2618      65617400 
 2619              	.LASF9:
 2620 0066 75696E74 		.ascii	"uint8\000"
 2620      3800
 2621              	.LASF15:
 2622 006c 666C6F61 		.ascii	"float\000"
 2622      7400
 2623              	.LASF53:
 2624 0072 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2624      4320342E 
 2624      382E3420 
 2624      32303134 
 2624      30353236 
 2625 00a5 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2625      20726576 
 2625      6973696F 
 2625      6E203231 
 2625      31333538 
 2626 00d8 30202D66 		.ascii	"0 -ffunction-sections\000"
 2626      66756E63 
 2626      74696F6E 
 2626      2D736563 
 2626      74696F6E 
 2627              	.LASF52:
 2628 00ee 73697A65 		.ascii	"size\000"
 2628      00
 2629              	.LASF36:
 2630 00f3 76656E74 		.ascii	"vent\000"
 2630      00
 2631              	.LASF39:
 2632 00f8 6F6E4F66 		.ascii	"onOff\000"
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 53


 2632      6600
 2633              	.LASF24:
 2634 00fe 74656D70 		.ascii	"tempWindow\000"
 2634      57696E64 
 2634      6F7700
 2635              	.LASF13:
 2636 0109 696E7431 		.ascii	"int16\000"
 2636      3600
 2637              	.LASF5:
 2638 010f 6C6F6E67 		.ascii	"long unsigned int\000"
 2638      20756E73 
 2638      69676E65 
 2638      6420696E 
 2638      7400
 2639              	.LASF42:
 2640 0121 67657441 		.ascii	"getActuatorStatus\000"
 2640      63747561 
 2640      746F7253 
 2640      74617475 
 2640      7300
 2641              	.LASF14:
 2642 0133 696E7433 		.ascii	"int32\000"
 2642      3200
 2643              	.LASF46:
 2644 0139 67657454 		.ascii	"getTempAndHum\000"
 2644      656D7041 
 2644      6E644875 
 2644      6D00
 2645              	.LASF0:
 2646 0147 7369676E 		.ascii	"signed char\000"
 2646      65642063 
 2646      68617200 
 2647              	.LASF45:
 2648 0153 64617461 		.ascii	"dataget\000"
 2648      67657400 
 2649              	.LASF1:
 2650 015b 756E7369 		.ascii	"unsigned char\000"
 2650      676E6564 
 2650      20636861 
 2650      7200
 2651              	.LASF16:
 2652 0169 646F7562 		.ascii	"double\000"
 2652      6C6500
 2653              	.LASF51:
 2654 0170 69727269 		.ascii	"irrigationStatus\000"
 2654      67617469 
 2654      6F6E5374 
 2654      61747573 
 2654      00
 2655              	.LASF23:
 2656 0181 636C6F73 		.ascii	"closeWindow\000"
 2656      6557696E 
 2656      646F7700 
 2657              	.LASF10:
 2658 018d 75696E74 		.ascii	"uint16\000"
 2658      313600
 2659              	.LASF12:
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 54


 2660 0194 696E7438 		.ascii	"int8\000"
 2660      00
 2661              	.LASF11:
 2662 0199 75696E74 		.ascii	"uint32\000"
 2662      333200
 2663              	.LASF8:
 2664 01a0 756E7369 		.ascii	"unsigned int\000"
 2664      676E6564 
 2664      20696E74 
 2664      00
 2665              	.LASF30:
 2666 01ad 74656D70 		.ascii	"temp\000"
 2666      00
 2667              	.LASF32:
 2668 01b2 61646A75 		.ascii	"adjustVentilation\000"
 2668      73745665 
 2668      6E74696C 
 2668      6174696F 
 2668      6E00
 2669              	.LASF7:
 2670 01c4 6C6F6E67 		.ascii	"long long unsigned int\000"
 2670      206C6F6E 
 2670      6720756E 
 2670      7369676E 
 2670      65642069 
 2671              	.LASF55:
 2672 01db 433A5C55 		.ascii	"C:\\Users\\Snufkin\\Documents\\GitHub\\PSoC_Master\\"
 2672      73657273 
 2672      5C536E75 
 2672      666B696E 
 2672      5C446F63 
 2673 0209 50536F43 		.ascii	"PSoC_Master\\PSoC_Master.cydsn\000"
 2673      5F4D6173 
 2673      7465725C 
 2673      50536F43 
 2673      5F4D6173 
 2674              	.LASF21:
 2675 0227 72657375 		.ascii	"result\000"
 2675      6C7400
 2676              	.LASF27:
 2677 022e 68656174 		.ascii	"heat\000"
 2677      00
 2678              	.LASF31:
 2679 0233 74656D70 		.ascii	"tempHeat\000"
 2679      48656174 
 2679      00
 2680              	.LASF22:
 2681 023c 6F70656E 		.ascii	"openWindow\000"
 2681      57696E64 
 2681      6F7700
 2682              	.LASF56:
 2683 0247 696E6974 		.ascii	"initI2C\000"
 2683      49324300 
 2684              	.LASF33:
 2685 024f 73706565 		.ascii	"speed\000"
 2685      6400
 2686              	.LASF18:
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 55


 2687 0255 73697A65 		.ascii	"sizetype\000"
 2687      74797065 
 2687      00
 2688              	.LASF26:
 2689 025e 61646A75 		.ascii	"adjustHeat\000"
 2689      73744865 
 2689      617400
 2690              	.LASF6:
 2691 0269 6C6F6E67 		.ascii	"long long int\000"
 2691      206C6F6E 
 2691      6720696E 
 2691      7400
 2692              	.LASF17:
 2693 0277 63686172 		.ascii	"char\000"
 2693      00
 2694              	.LASF38:
 2695 027c 696E6465 		.ascii	"index\000"
 2695      7800
 2696              	.LASF28:
 2697 0282 7475726E 		.ascii	"turnHeatOn\000"
 2697      48656174 
 2697      4F6E00
 2698              	.LASF2:
 2699 028d 73686F72 		.ascii	"short int\000"
 2699      7420696E 
 2699      7400
 2700              	.LASF41:
 2701 0297 69727269 		.ascii	"irrigation\000"
 2701      67617469 
 2701      6F6E00
 2702              	.LASF44:
 2703 02a2 52446275 		.ascii	"RDbuf\000"
 2703      6600
 2704              	.LASF50:
 2705 02a8 736F696C 		.ascii	"soilHum\000"
 2705      48756D00 
 2706              	.LASF4:
 2707 02b0 6C6F6E67 		.ascii	"long int\000"
 2707      20696E74 
 2707      00
 2708              	.LASF34:
 2709 02b9 7475726E 		.ascii	"turnOnVent\000"
 2709      4F6E5665 
 2709      6E7400
 2710              	.LASF43:
 2711 02c4 77696E64 		.ascii	"window\000"
 2711      6F7700
 2712              	.LASF49:
 2713 02cb 67657453 		.ascii	"getSoilHum\000"
 2713      6F696C48 
 2713      756D00
 2714              	.LASF37:
 2715 02d6 61646A75 		.ascii	"adjustIrrigation\000"
 2715      73744972 
 2715      72696761 
 2715      74696F6E 
 2715      00
ARM GAS  C:\Users\Snufkin\AppData\Local\Temp\cc8Nr32b.s 			page 56


 2716              	.LASF19:
 2717 02e7 6C696768 		.ascii	"lightCommand\000"
 2717      74436F6D 
 2717      6D616E64 
 2717      00
 2718              	.LASF47:
 2719 02f4 6765744C 		.ascii	"getLight\000"
 2719      69676874 
 2719      00
 2720              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
