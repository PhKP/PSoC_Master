ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"I2C_Class.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	irrigationStatus,1,1
  18              		.section	.text.initI2C,"ax",%progbits
  19              		.align	2
  20              		.global	initI2C
  21              		.code	16
  22              		.thumb_func
  23              		.type	initI2C, %function
  24              	initI2C:
  25              	.LFB33:
  26              		.file 1 ".\\I2C_Class.c"
   1:.\I2C_Class.c **** /* ========================================
   2:.\I2C_Class.c ****  * 
   3:.\I2C_Class.c ****  * AutoGreen - PSoC_Master
   4:.\I2C_Class.c ****  * I2C_Class.c
   5:.\I2C_Class.c ****  * (Description)
   6:.\I2C_Class.c ****  * PRJ3 - GRP9
   7:.\I2C_Class.c ****  * 2015-04-15
   8:.\I2C_Class.c ****  *
   9:.\I2C_Class.c ****  * ========================================
  10:.\I2C_Class.c **** */
  11:.\I2C_Class.c **** 
  12:.\I2C_Class.c **** // Include files
  13:.\I2C_Class.c **** #include "I2C_Class.h"
  14:.\I2C_Class.c **** 
  15:.\I2C_Class.c **** // Definitions
  16:.\I2C_Class.c **** #define TEMP_AND_HUM_SENSOR_ADDRESS 0x27
  17:.\I2C_Class.c **** #define ACTUATOR_ADRESS 0x42
  18:.\I2C_Class.c **** #define LIGHT_SENSOR_COMMAND_ADDRESS 0x00
  19:.\I2C_Class.c **** #define LIGHT_SENSOR_CONTROL_ADDRESS 0x01
  20:.\I2C_Class.c **** #define LIGHT_SENSOR_ADDRESS_LSB 0x04  
  21:.\I2C_Class.c **** #define LIGHT_SENSOR_ADDRESS_MSB 0x05
  22:.\I2C_Class.c **** 
  23:.\I2C_Class.c **** // Private data members
  24:.\I2C_Class.c **** uint8 irrigationStatus;
  25:.\I2C_Class.c **** 
  26:.\I2C_Class.c **** // Private prototypes
  27:.\I2C_Class.c **** 
  28:.\I2C_Class.c **** void initI2C(void){
  27              		.loc 1 28 0
  28              		.cfi_startproc
  29 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 2


  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 00AF     		add	r7, sp, #0
  34              		.cfi_def_cfa_register 7
  29:.\I2C_Class.c ****     I2C_Start();                    // Starts I2C component
  35              		.loc 1 29 0
  36 0004 FFF7FEFF 		bl	I2C_Start
  30:.\I2C_Class.c ****     I2C_I2CMasterClearStatus();     // Clear status flags
  37              		.loc 1 30 0
  38 0008 FFF7FEFF 		bl	I2C_I2CMasterClearStatus
  31:.\I2C_Class.c ****     CyGlobalIntEnable;
  39              		.loc 1 31 0
  40              	@ 31 ".\I2C_Class.c" 1
  41 000c 62B6     		CPSIE   i
  42              	@ 0 "" 2
  32:.\I2C_Class.c **** }
  43              		.loc 1 32 0
  44              		.code	16
  45 000e BD46     		mov	sp, r7
  46              		@ sp needed
  47 0010 80BD     		pop	{r7, pc}
  48              		.cfi_endproc
  49              	.LFE33:
  50              		.size	initI2C, .-initI2C
  51 0012 C046     		.section	.text.adjustWindow,"ax",%progbits
  52              		.align	2
  53              		.global	adjustWindow
  54              		.code	16
  55              		.thumb_func
  56              		.type	adjustWindow, %function
  57              	adjustWindow:
  58              	.LFB34:
  33:.\I2C_Class.c **** 
  34:.\I2C_Class.c **** int8 adjustWindow(uint8 pos){
  59              		.loc 1 34 0
  60              		.cfi_startproc
  61 0000 80B5     		push	{r7, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 86B0     		sub	sp, sp, #24
  66              		.cfi_def_cfa_offset 32
  67 0004 00AF     		add	r7, sp, #0
  68              		.cfi_def_cfa_register 7
  69 0006 021C     		mov	r2, r0
  70 0008 FB1D     		add	r3, r7, #7
  71 000a 1A70     		strb	r2, [r3]
  35:.\I2C_Class.c ****     uint8 openWindow = 0xF;
  72              		.loc 1 35 0
  73 000c 3B1C     		mov	r3, r7
  74 000e 0F33     		add	r3, r3, #15
  75 0010 0F22     		mov	r2, #15
  76 0012 1A70     		strb	r2, [r3]
  36:.\I2C_Class.c ****     uint8 closeWindow = 0x0;
  77              		.loc 1 36 0
  78 0014 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 3


  79 0016 0E33     		add	r3, r3, #14
  80 0018 0022     		mov	r2, #0
  81 001a 1A70     		strb	r2, [r3]
  37:.\I2C_Class.c ****     uint8 result = 0;
  82              		.loc 1 37 0
  83 001c 3B1C     		mov	r3, r7
  84 001e 1733     		add	r3, r3, #23
  85 0020 0022     		mov	r2, #0
  86 0022 1A70     		strb	r2, [r3]
  38:.\I2C_Class.c ****     uint8 *tempWindow = 0;
  87              		.loc 1 38 0
  88 0024 0023     		mov	r3, #0
  89 0026 3B61     		str	r3, [r7, #16]
  39:.\I2C_Class.c ****         
  40:.\I2C_Class.c ****     if(pos == 0xF){
  90              		.loc 1 40 0
  91 0028 FB1D     		add	r3, r7, #7
  92 002a 1B78     		ldrb	r3, [r3]
  93 002c 0F2B     		cmp	r3, #15
  94 002e 0CD1     		bne	.L3
  41:.\I2C_Class.c ****         // Open window     -                write function  (adress,      dataToSend, NumberOfBytes
  42:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,&openWindow,1,I2C_I2C_MODE_COMPLETE_XFER);
  95              		.loc 1 42 0
  96 0030 3B1C     		mov	r3, r7
  97 0032 0F33     		add	r3, r3, #15
  98 0034 4220     		mov	r0, #66
  99 0036 191C     		mov	r1, r3
 100 0038 0122     		mov	r2, #1
 101 003a 0023     		mov	r3, #0
 102 003c FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 103 0040 021C     		mov	r2, r0
 104 0042 3B1C     		mov	r3, r7
 105 0044 1733     		add	r3, r3, #23
 106 0046 1A70     		strb	r2, [r3]
 107 0048 0FE0     		b	.L4
 108              	.L3:
  43:.\I2C_Class.c ****     }
  44:.\I2C_Class.c ****     else if(pos == 0x0){
 109              		.loc 1 44 0
 110 004a FB1D     		add	r3, r7, #7
 111 004c 1B78     		ldrb	r3, [r3]
 112 004e 002B     		cmp	r3, #0
 113 0050 0BD1     		bne	.L4
  45:.\I2C_Class.c ****         // Close window
  46:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,&closeWindow,1,I2C_I2C_MODE_COMPLETE_XFER); 
 114              		.loc 1 46 0
 115 0052 3B1C     		mov	r3, r7
 116 0054 0E33     		add	r3, r3, #14
 117 0056 4220     		mov	r0, #66
 118 0058 191C     		mov	r1, r3
 119 005a 0122     		mov	r2, #1
 120 005c 0023     		mov	r3, #0
 121 005e FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 122 0062 021C     		mov	r2, r0
 123 0064 3B1C     		mov	r3, r7
 124 0066 1733     		add	r3, r3, #23
 125 0068 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 4


 126              	.L4:
  47:.\I2C_Class.c ****     }
  48:.\I2C_Class.c ****     
  49:.\I2C_Class.c ****     getActuatorStatus(tempWindow, NULL, NULL, NULL);
 127              		.loc 1 49 0
 128 006a 3B69     		ldr	r3, [r7, #16]
 129 006c 181C     		mov	r0, r3
 130 006e 0021     		mov	r1, #0
 131 0070 0022     		mov	r2, #0
 132 0072 0023     		mov	r3, #0
 133 0074 FFF7FEFF 		bl	getActuatorStatus
  50:.\I2C_Class.c ****     
  51:.\I2C_Class.c ****     if (result == 0){
 134              		.loc 1 51 0
 135 0078 3B1C     		mov	r3, r7
 136 007a 1733     		add	r3, r3, #23
 137 007c 1B78     		ldrb	r3, [r3]
 138 007e 002B     		cmp	r3, #0
 139 0080 09D1     		bne	.L5
  52:.\I2C_Class.c ****     if (*tempWindow == pos){ 
 140              		.loc 1 52 0
 141 0082 3B69     		ldr	r3, [r7, #16]
 142 0084 1B78     		ldrb	r3, [r3]
 143 0086 FA1D     		add	r2, r7, #7
 144 0088 1278     		ldrb	r2, [r2]
 145 008a 9A42     		cmp	r2, r3
 146 008c 01D1     		bne	.L6
  53:.\I2C_Class.c ****         return 0;	
 147              		.loc 1 53 0
 148 008e 0023     		mov	r3, #0
 149 0090 02E0     		b	.L8
 150              	.L6:
  54:.\I2C_Class.c ****     }
  55:.\I2C_Class.c ****     else {
  56:.\I2C_Class.c ****         return -1;
 151              		.loc 1 56 0
 152 0092 FF23     		mov	r3, #255
 153 0094 00E0     		b	.L8
 154              	.L5:
  57:.\I2C_Class.c ****     }
  58:.\I2C_Class.c ****     }
  59:.\I2C_Class.c ****     else {
  60:.\I2C_Class.c ****         return -1;
 155              		.loc 1 60 0
 156 0096 FF23     		mov	r3, #255
 157              	.L8:
 158 0098 5BB2     		sxtb	r3, r3
  61:.\I2C_Class.c ****     }
  62:.\I2C_Class.c **** }
 159              		.loc 1 62 0
 160 009a 181C     		mov	r0, r3
 161 009c BD46     		mov	sp, r7
 162 009e 06B0     		add	sp, sp, #24
 163              		@ sp needed
 164 00a0 80BD     		pop	{r7, pc}
 165              		.cfi_endproc
 166              	.LFE34:
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 5


 167              		.size	adjustWindow, .-adjustWindow
 168 00a2 C046     		.section	.text.adjustHeat,"ax",%progbits
 169              		.align	2
 170              		.global	adjustHeat
 171              		.code	16
 172              		.thumb_func
 173              		.type	adjustHeat, %function
 174              	adjustHeat:
 175              	.LFB35:
  63:.\I2C_Class.c **** 
  64:.\I2C_Class.c **** int8 adjustHeat(uint8 heat){
 176              		.loc 1 64 0
 177              		.cfi_startproc
 178 0000 80B5     		push	{r7, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 86B0     		sub	sp, sp, #24
 183              		.cfi_def_cfa_offset 32
 184 0004 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 186 0006 021C     		mov	r2, r0
 187 0008 FB1D     		add	r3, r7, #7
 188 000a 1A70     		strb	r2, [r3]
  65:.\I2C_Class.c ****     uint8 turnHeatOn = 0b01000111;
 189              		.loc 1 65 0
 190 000c 3B1C     		mov	r3, r7
 191 000e 0F33     		add	r3, r3, #15
 192 0010 4722     		mov	r2, #71
 193 0012 1A70     		strb	r2, [r3]
  66:.\I2C_Class.c ****     uint8 turnHeatOff = 0b01000000;
 194              		.loc 1 66 0
 195 0014 3B1C     		mov	r3, r7
 196 0016 0E33     		add	r3, r3, #14
 197 0018 4022     		mov	r2, #64
 198 001a 1A70     		strb	r2, [r3]
  67:.\I2C_Class.c ****     uint8 result = 0;
 199              		.loc 1 67 0
 200 001c 3B1C     		mov	r3, r7
 201 001e 1733     		add	r3, r3, #23
 202 0020 0022     		mov	r2, #0
 203 0022 1A70     		strb	r2, [r3]
  68:.\I2C_Class.c ****     uint8 temp;
  69:.\I2C_Class.c ****     uint8 *tempHeat = &temp;
 204              		.loc 1 69 0
 205 0024 3B1C     		mov	r3, r7
 206 0026 0D33     		add	r3, r3, #13
 207 0028 3B61     		str	r3, [r7, #16]
  70:.\I2C_Class.c ****     
  71:.\I2C_Class.c ****     
  72:.\I2C_Class.c ****     if(heat == 0b111){
 208              		.loc 1 72 0
 209 002a FB1D     		add	r3, r7, #7
 210 002c 1B78     		ldrb	r3, [r3]
 211 002e 072B     		cmp	r3, #7
 212 0030 0CD1     		bne	.L10
  73:.\I2C_Class.c ****         // Turn on heat
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 6


  74:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,&turnHeatOn,1,I2C_I2C_MODE_COMPLETE_XFER);
 213              		.loc 1 74 0
 214 0032 3B1C     		mov	r3, r7
 215 0034 0F33     		add	r3, r3, #15
 216 0036 4220     		mov	r0, #66
 217 0038 191C     		mov	r1, r3
 218 003a 0122     		mov	r2, #1
 219 003c 0023     		mov	r3, #0
 220 003e FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 221 0042 021C     		mov	r2, r0
 222 0044 3B1C     		mov	r3, r7
 223 0046 1733     		add	r3, r3, #23
 224 0048 1A70     		strb	r2, [r3]
 225 004a 0FE0     		b	.L11
 226              	.L10:
  75:.\I2C_Class.c ****     }
  76:.\I2C_Class.c ****     else if(heat == 0b0){
 227              		.loc 1 76 0
 228 004c FB1D     		add	r3, r7, #7
 229 004e 1B78     		ldrb	r3, [r3]
 230 0050 002B     		cmp	r3, #0
 231 0052 0BD1     		bne	.L11
  77:.\I2C_Class.c ****         // Turn off heat
  78:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,&turnHeatOff,1,I2C_I2C_MODE_COMPLETE_XFER);
 232              		.loc 1 78 0
 233 0054 3B1C     		mov	r3, r7
 234 0056 0E33     		add	r3, r3, #14
 235 0058 4220     		mov	r0, #66
 236 005a 191C     		mov	r1, r3
 237 005c 0122     		mov	r2, #1
 238 005e 0023     		mov	r3, #0
 239 0060 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 240 0064 021C     		mov	r2, r0
 241 0066 3B1C     		mov	r3, r7
 242 0068 1733     		add	r3, r3, #23
 243 006a 1A70     		strb	r2, [r3]
 244              	.L11:
  79:.\I2C_Class.c ****     }
  80:.\I2C_Class.c ****     
  81:.\I2C_Class.c ****     getActuatorStatus(NULL, tempHeat, NULL, NULL);
 245              		.loc 1 81 0
 246 006c 3B69     		ldr	r3, [r7, #16]
 247 006e 0020     		mov	r0, #0
 248 0070 191C     		mov	r1, r3
 249 0072 0022     		mov	r2, #0
 250 0074 0023     		mov	r3, #0
 251 0076 FFF7FEFF 		bl	getActuatorStatus
  82:.\I2C_Class.c ****     
  83:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 252              		.loc 1 83 0
 253 007a 3B1C     		mov	r3, r7
 254 007c 1733     		add	r3, r3, #23
 255 007e 1B78     		ldrb	r3, [r3]
 256 0080 002B     		cmp	r3, #0
 257 0082 09D1     		bne	.L12
  84:.\I2C_Class.c ****         if (*tempHeat == heat){
 258              		.loc 1 84 0
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 7


 259 0084 3B69     		ldr	r3, [r7, #16]
 260 0086 1B78     		ldrb	r3, [r3]
 261 0088 FA1D     		add	r2, r7, #7
 262 008a 1278     		ldrb	r2, [r2]
 263 008c 9A42     		cmp	r2, r3
 264 008e 01D1     		bne	.L13
  85:.\I2C_Class.c ****             return 0;
 265              		.loc 1 85 0
 266 0090 0023     		mov	r3, #0
 267 0092 02E0     		b	.L15
 268              	.L13:
  86:.\I2C_Class.c ****         }
  87:.\I2C_Class.c ****         else {
  88:.\I2C_Class.c ****             return -1;   
 269              		.loc 1 88 0
 270 0094 FF23     		mov	r3, #255
 271 0096 00E0     		b	.L15
 272              	.L12:
  89:.\I2C_Class.c ****         }
  90:.\I2C_Class.c ****     }
  91:.\I2C_Class.c ****     else {
  92:.\I2C_Class.c ****         return -1;
 273              		.loc 1 92 0
 274 0098 FF23     		mov	r3, #255
 275              	.L15:
 276 009a 5BB2     		sxtb	r3, r3
  93:.\I2C_Class.c ****     }
  94:.\I2C_Class.c **** }
 277              		.loc 1 94 0
 278 009c 181C     		mov	r0, r3
 279 009e BD46     		mov	sp, r7
 280 00a0 06B0     		add	sp, sp, #24
 281              		@ sp needed
 282 00a2 80BD     		pop	{r7, pc}
 283              		.cfi_endproc
 284              	.LFE35:
 285              		.size	adjustHeat, .-adjustHeat
 286              		.section	.text.adjustVentilation,"ax",%progbits
 287              		.align	2
 288              		.global	adjustVentilation
 289              		.code	16
 290              		.thumb_func
 291              		.type	adjustVentilation, %function
 292              	adjustVentilation:
 293              	.LFB36:
  95:.\I2C_Class.c **** 
  96:.\I2C_Class.c **** int8 adjustVentilation(uint8 speed){
 294              		.loc 1 96 0
 295              		.cfi_startproc
 296 0000 80B5     		push	{r7, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 0002 86B0     		sub	sp, sp, #24
 301              		.cfi_def_cfa_offset 32
 302 0004 00AF     		add	r7, sp, #0
 303              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 8


 304 0006 021C     		mov	r2, r0
 305 0008 FB1D     		add	r3, r7, #7
 306 000a 1A70     		strb	r2, [r3]
  97:.\I2C_Class.c ****     uint8 turnOnVent = 0b10000111;
 307              		.loc 1 97 0
 308 000c 3B1C     		mov	r3, r7
 309 000e 0F33     		add	r3, r3, #15
 310 0010 8722     		mov	r2, #135
 311 0012 1A70     		strb	r2, [r3]
  98:.\I2C_Class.c ****     uint8 turnOffVent = 0b10000000;
 312              		.loc 1 98 0
 313 0014 3B1C     		mov	r3, r7
 314 0016 0E33     		add	r3, r3, #14
 315 0018 8022     		mov	r2, #128
 316 001a 1A70     		strb	r2, [r3]
  99:.\I2C_Class.c ****     uint8 result = 0;
 317              		.loc 1 99 0
 318 001c 3B1C     		mov	r3, r7
 319 001e 1733     		add	r3, r3, #23
 320 0020 0022     		mov	r2, #0
 321 0022 1A70     		strb	r2, [r3]
 100:.\I2C_Class.c ****     uint8 temp;
 101:.\I2C_Class.c ****     uint8 *vent = &temp;
 322              		.loc 1 101 0
 323 0024 3B1C     		mov	r3, r7
 324 0026 0D33     		add	r3, r3, #13
 325 0028 3B61     		str	r3, [r7, #16]
 102:.\I2C_Class.c ****         
 103:.\I2C_Class.c ****     if(speed == 0b111){
 326              		.loc 1 103 0
 327 002a FB1D     		add	r3, r7, #7
 328 002c 1B78     		ldrb	r3, [r3]
 329 002e 072B     		cmp	r3, #7
 330 0030 0CD1     		bne	.L17
 104:.\I2C_Class.c ****         // Turn vent on
 105:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,&turnOnVent,1,I2C_I2C_MODE_COMPLETE_XFER);
 331              		.loc 1 105 0
 332 0032 3B1C     		mov	r3, r7
 333 0034 0F33     		add	r3, r3, #15
 334 0036 4220     		mov	r0, #66
 335 0038 191C     		mov	r1, r3
 336 003a 0122     		mov	r2, #1
 337 003c 0023     		mov	r3, #0
 338 003e FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 339 0042 021C     		mov	r2, r0
 340 0044 3B1C     		mov	r3, r7
 341 0046 1733     		add	r3, r3, #23
 342 0048 1A70     		strb	r2, [r3]
 343 004a 10E0     		b	.L18
 344              	.L17:
 106:.\I2C_Class.c ****     }
 107:.\I2C_Class.c ****     else if(speed == 0b0){
 345              		.loc 1 107 0
 346 004c FB1D     		add	r3, r7, #7
 347 004e 1B78     		ldrb	r3, [r3]
 348 0050 002B     		cmp	r3, #0
 349 0052 0CD1     		bne	.L18
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 9


 108:.\I2C_Class.c ****         // Turn vent off
 109:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,&turnOffVent,1,I2C_I2C_MODE_COMPLETE_XFER);
 350              		.loc 1 109 0
 351 0054 3B1C     		mov	r3, r7
 352 0056 0E33     		add	r3, r3, #14
 353 0058 4220     		mov	r0, #66
 354 005a 191C     		mov	r1, r3
 355 005c 0122     		mov	r2, #1
 356 005e 0023     		mov	r3, #0
 357 0060 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 358 0064 021C     		mov	r2, r0
 359 0066 3B1C     		mov	r3, r7
 360 0068 1733     		add	r3, r3, #23
 361 006a 1A70     		strb	r2, [r3]
 110:.\I2C_Class.c ****     }
 111:.\I2C_Class.c ****     
 112:.\I2C_Class.c ****     while (I2C_I2CMasterStatus() == I2C_I2C_MSTAT_WR_CMPLT);
 362              		.loc 1 112 0
 363 006c FFE7     		b	.L24
 364              	.L18:
 365              	.L24:
 366 006e C046     		mov	r8, r8
 367              	.L19:
 368              		.loc 1 112 0 is_stmt 0 discriminator 1
 369 0070 FFF7FEFF 		bl	I2C_I2CMasterStatus
 370 0074 031C     		mov	r3, r0
 371 0076 022B     		cmp	r3, #2
 372 0078 FAD0     		beq	.L19
 113:.\I2C_Class.c ****     getActuatorStatus(NULL, NULL, vent, NULL);
 373              		.loc 1 113 0 is_stmt 1
 374 007a 3B69     		ldr	r3, [r7, #16]
 375 007c 0020     		mov	r0, #0
 376 007e 0021     		mov	r1, #0
 377 0080 1A1C     		mov	r2, r3
 378 0082 0023     		mov	r3, #0
 379 0084 FFF7FEFF 		bl	getActuatorStatus
 114:.\I2C_Class.c ****     
 115:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 380              		.loc 1 115 0
 381 0088 3B1C     		mov	r3, r7
 382 008a 1733     		add	r3, r3, #23
 383 008c 1B78     		ldrb	r3, [r3]
 384 008e 002B     		cmp	r3, #0
 385 0090 09D1     		bne	.L20
 116:.\I2C_Class.c ****         if (*vent == speed){
 386              		.loc 1 116 0
 387 0092 3B69     		ldr	r3, [r7, #16]
 388 0094 1B78     		ldrb	r3, [r3]
 389 0096 FA1D     		add	r2, r7, #7
 390 0098 1278     		ldrb	r2, [r2]
 391 009a 9A42     		cmp	r2, r3
 392 009c 01D1     		bne	.L21
 117:.\I2C_Class.c ****             return 0;
 393              		.loc 1 117 0
 394 009e 0023     		mov	r3, #0
 395 00a0 02E0     		b	.L23
 396              	.L21:
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 10


 118:.\I2C_Class.c ****             }
 119:.\I2C_Class.c ****         else {
 120:.\I2C_Class.c ****             return -1;       
 397              		.loc 1 120 0
 398 00a2 FF23     		mov	r3, #255
 399 00a4 00E0     		b	.L23
 400              	.L20:
 121:.\I2C_Class.c ****         }
 122:.\I2C_Class.c ****     }
 123:.\I2C_Class.c ****     else {
 124:.\I2C_Class.c ****         return -1;
 401              		.loc 1 124 0
 402 00a6 FF23     		mov	r3, #255
 403              	.L23:
 404 00a8 5BB2     		sxtb	r3, r3
 125:.\I2C_Class.c ****     }
 126:.\I2C_Class.c **** }
 405              		.loc 1 126 0
 406 00aa 181C     		mov	r0, r3
 407 00ac BD46     		mov	sp, r7
 408 00ae 06B0     		add	sp, sp, #24
 409              		@ sp needed
 410 00b0 80BD     		pop	{r7, pc}
 411              		.cfi_endproc
 412              	.LFE36:
 413              		.size	adjustVentilation, .-adjustVentilation
 414 00b2 C046     		.section	.text.adjustIrrigation,"ax",%progbits
 415              		.align	2
 416              		.global	adjustIrrigation
 417              		.code	16
 418              		.thumb_func
 419              		.type	adjustIrrigation, %function
 420              	adjustIrrigation:
 421              	.LFB37:
 127:.\I2C_Class.c **** 
 128:.\I2C_Class.c **** int8 adjustIrrigation(uint8 index, uint8 onOff){
 422              		.loc 1 128 0
 423              		.cfi_startproc
 424 0000 80B5     		push	{r7, lr}
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 7, -8
 427              		.cfi_offset 14, -4
 428 0002 84B0     		sub	sp, sp, #16
 429              		.cfi_def_cfa_offset 24
 430 0004 00AF     		add	r7, sp, #0
 431              		.cfi_def_cfa_register 7
 432 0006 0A1C     		mov	r2, r1
 433 0008 FB1D     		add	r3, r7, #7
 434 000a 011C     		add	r1, r0, #0
 435 000c 1970     		strb	r1, [r3]
 436 000e BB1D     		add	r3, r7, #6
 437 0010 1A70     		strb	r2, [r3]
 129:.\I2C_Class.c ****     uint8 irriTransfer;
 130:.\I2C_Class.c ****     uint8 temp;
 131:.\I2C_Class.c ****     uint8 *irrigation = &temp;
 438              		.loc 1 131 0
 439 0012 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 11


 440 0014 0933     		add	r3, r3, #9
 441 0016 FB60     		str	r3, [r7, #12]
 132:.\I2C_Class.c ****     uint8 result = 0;
 442              		.loc 1 132 0
 443 0018 3B1C     		mov	r3, r7
 444 001a 0B33     		add	r3, r3, #11
 445 001c 0022     		mov	r2, #0
 446 001e 1A70     		strb	r2, [r3]
 133:.\I2C_Class.c **** 
 134:.\I2C_Class.c ****         /* In order for this code to function properly, the static int "irrigation" 
 135:.\I2C_Class.c ****         has to get updated each time this function is called. */
 136:.\I2C_Class.c ****     if (onOff == 1){    // Irrigation turn on
 447              		.loc 1 136 0
 448 0020 BB1D     		add	r3, r7, #6
 449 0022 1B78     		ldrb	r3, [r3]
 450 0024 012B     		cmp	r3, #1
 451 0026 19D1     		bne	.L26
 137:.\I2C_Class.c ****         irriTransfer = (irrigationStatus |= (1 << index));
 452              		.loc 1 137 0
 453 0028 FB1D     		add	r3, r7, #7
 454 002a 1B78     		ldrb	r3, [r3]
 455 002c 0122     		mov	r2, #1
 456 002e 111C     		mov	r1, r2
 457 0030 9940     		lsl	r1, r1, r3
 458 0032 0B1C     		mov	r3, r1
 459 0034 DAB2     		uxtb	r2, r3
 460 0036 2E4B     		ldr	r3, .L33
 461 0038 1B78     		ldrb	r3, [r3]
 462 003a DBB2     		uxtb	r3, r3
 463 003c 1343     		orr	r3, r2
 464 003e DBB2     		uxtb	r3, r3
 465 0040 DAB2     		uxtb	r2, r3
 466 0042 2B4B     		ldr	r3, .L33
 467 0044 1A70     		strb	r2, [r3]
 468 0046 2A4B     		ldr	r3, .L33
 469 0048 1A78     		ldrb	r2, [r3]
 470 004a 3B1C     		mov	r3, r7
 471 004c 0A33     		add	r3, r3, #10
 472 004e 1A70     		strb	r2, [r3]
 138:.\I2C_Class.c ****         irrigationStatus = irriTransfer;
 473              		.loc 1 138 0
 474 0050 3B1C     		mov	r3, r7
 475 0052 0A33     		add	r3, r3, #10
 476 0054 1A78     		ldrb	r2, [r3]
 477 0056 264B     		ldr	r3, .L33
 478 0058 1A70     		strb	r2, [r3]
 479 005a 21E0     		b	.L27
 480              	.L26:
 139:.\I2C_Class.c ****     }
 140:.\I2C_Class.c ****     else if (onOff == 0){   // Irrigation turn off
 481              		.loc 1 140 0
 482 005c BB1D     		add	r3, r7, #6
 483 005e 1B78     		ldrb	r3, [r3]
 484 0060 002B     		cmp	r3, #0
 485 0062 1BD1     		bne	.L28
 141:.\I2C_Class.c ****         irriTransfer = (irrigationStatus &= ~(1 << index));
 486              		.loc 1 141 0
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 12


 487 0064 FB1D     		add	r3, r7, #7
 488 0066 1B78     		ldrb	r3, [r3]
 489 0068 0122     		mov	r2, #1
 490 006a 111C     		mov	r1, r2
 491 006c 9940     		lsl	r1, r1, r3
 492 006e 0B1C     		mov	r3, r1
 493 0070 DBB2     		uxtb	r3, r3
 494 0072 DB43     		mvn	r3, r3
 495 0074 DBB2     		uxtb	r3, r3
 496 0076 1E4A     		ldr	r2, .L33
 497 0078 1278     		ldrb	r2, [r2]
 498 007a D2B2     		uxtb	r2, r2
 499 007c 1340     		and	r3, r2
 500 007e DBB2     		uxtb	r3, r3
 501 0080 DAB2     		uxtb	r2, r3
 502 0082 1B4B     		ldr	r3, .L33
 503 0084 1A70     		strb	r2, [r3]
 504 0086 1A4B     		ldr	r3, .L33
 505 0088 1A78     		ldrb	r2, [r3]
 506 008a 3B1C     		mov	r3, r7
 507 008c 0A33     		add	r3, r3, #10
 508 008e 1A70     		strb	r2, [r3]
 142:.\I2C_Class.c ****         irrigationStatus = irriTransfer;
 509              		.loc 1 142 0
 510 0090 3B1C     		mov	r3, r7
 511 0092 0A33     		add	r3, r3, #10
 512 0094 1A78     		ldrb	r2, [r3]
 513 0096 164B     		ldr	r3, .L33
 514 0098 1A70     		strb	r2, [r3]
 515 009a 01E0     		b	.L27
 516              	.L28:
 143:.\I2C_Class.c ****     }
 144:.\I2C_Class.c ****     else{
 145:.\I2C_Class.c ****     // Bad argument.
 146:.\I2C_Class.c ****     return -1;
 517              		.loc 1 146 0
 518 009c FF23     		mov	r3, #255
 519 009e 21E0     		b	.L32
 520              	.L27:
 147:.\I2C_Class.c ****     }
 148:.\I2C_Class.c ****     
 149:.\I2C_Class.c ****     result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS, &irriTransfer ,1,I2C_I2C_MODE_COMPLETE_XFER);
 521              		.loc 1 149 0
 522 00a0 3B1C     		mov	r3, r7
 523 00a2 0A33     		add	r3, r3, #10
 524 00a4 4220     		mov	r0, #66
 525 00a6 191C     		mov	r1, r3
 526 00a8 0122     		mov	r2, #1
 527 00aa 0023     		mov	r3, #0
 528 00ac FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 529 00b0 021C     		mov	r2, r0
 530 00b2 3B1C     		mov	r3, r7
 531 00b4 0B33     		add	r3, r3, #11
 532 00b6 1A70     		strb	r2, [r3]
 150:.\I2C_Class.c ****  
 151:.\I2C_Class.c ****     getActuatorStatus(NULL, NULL, NULL, irrigation);
 533              		.loc 1 151 0
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 13


 534 00b8 FB68     		ldr	r3, [r7, #12]
 535 00ba 0020     		mov	r0, #0
 536 00bc 0021     		mov	r1, #0
 537 00be 0022     		mov	r2, #0
 538 00c0 FFF7FEFF 		bl	getActuatorStatus
 152:.\I2C_Class.c ****     
 153:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 539              		.loc 1 153 0
 540 00c4 3B1C     		mov	r3, r7
 541 00c6 0B33     		add	r3, r3, #11
 542 00c8 1B78     		ldrb	r3, [r3]
 543 00ca 002B     		cmp	r3, #0
 544 00cc 09D1     		bne	.L30
 154:.\I2C_Class.c ****         if(*irrigation == irrigationStatus){
 545              		.loc 1 154 0
 546 00ce FB68     		ldr	r3, [r7, #12]
 547 00d0 1A78     		ldrb	r2, [r3]
 548 00d2 074B     		ldr	r3, .L33
 549 00d4 1B78     		ldrb	r3, [r3]
 550 00d6 9A42     		cmp	r2, r3
 551 00d8 01D1     		bne	.L31
 155:.\I2C_Class.c ****             return 0;
 552              		.loc 1 155 0
 553 00da 0023     		mov	r3, #0
 554 00dc 02E0     		b	.L32
 555              	.L31:
 156:.\I2C_Class.c ****         }
 157:.\I2C_Class.c ****         else {
 158:.\I2C_Class.c ****             return -1;
 556              		.loc 1 158 0
 557 00de FF23     		mov	r3, #255
 558 00e0 00E0     		b	.L32
 559              	.L30:
 159:.\I2C_Class.c ****         }
 160:.\I2C_Class.c ****     }
 161:.\I2C_Class.c ****     else {
 162:.\I2C_Class.c ****         return -1;
 560              		.loc 1 162 0
 561 00e2 FF23     		mov	r3, #255
 562              	.L32:
 563 00e4 5BB2     		sxtb	r3, r3
 163:.\I2C_Class.c ****     }
 164:.\I2C_Class.c **** }
 564              		.loc 1 164 0
 565 00e6 181C     		mov	r0, r3
 566 00e8 BD46     		mov	sp, r7
 567 00ea 04B0     		add	sp, sp, #16
 568              		@ sp needed
 569 00ec 80BD     		pop	{r7, pc}
 570              	.L34:
 571 00ee C046     		.align	2
 572              	.L33:
 573 00f0 00000000 		.word	irrigationStatus
 574              		.cfi_endproc
 575              	.LFE37:
 576              		.size	adjustIrrigation, .-adjustIrrigation
 577              		.section	.text.getActuatorStatus,"ax",%progbits
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 14


 578              		.align	2
 579              		.global	getActuatorStatus
 580              		.code	16
 581              		.thumb_func
 582              		.type	getActuatorStatus, %function
 583              	getActuatorStatus:
 584              	.LFB38:
 165:.\I2C_Class.c **** 
 166:.\I2C_Class.c **** int8 getActuatorStatus(uint8* window, uint8* heat, uint8* vent, uint8* irrigation){
 585              		.loc 1 166 0
 586              		.cfi_startproc
 587 0000 80B5     		push	{r7, lr}
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 86B0     		sub	sp, sp, #24
 592              		.cfi_def_cfa_offset 32
 593 0004 00AF     		add	r7, sp, #0
 594              		.cfi_def_cfa_register 7
 595 0006 F860     		str	r0, [r7, #12]
 596 0008 B960     		str	r1, [r7, #8]
 597 000a 7A60     		str	r2, [r7, #4]
 598 000c 3B60     		str	r3, [r7]
 167:.\I2C_Class.c ****     uint8 dataget[2];
 168:.\I2C_Class.c ****     uint8 result = 0;
 599              		.loc 1 168 0
 600 000e 3B1C     		mov	r3, r7
 601 0010 1733     		add	r3, r3, #23
 602 0012 0022     		mov	r2, #0
 603 0014 1A70     		strb	r2, [r3]
 169:.\I2C_Class.c ****     
 170:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(ACTUATOR_ADRESS, dataget, 2, I2C_I2C_MODE_COMPLETE_XFER);
 604              		.loc 1 170 0
 605 0016 3B1C     		mov	r3, r7
 606 0018 1433     		add	r3, r3, #20
 607 001a 4220     		mov	r0, #66
 608 001c 191C     		mov	r1, r3
 609 001e 0222     		mov	r2, #2
 610 0020 0023     		mov	r3, #0
 611 0022 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 612 0026 021C     		mov	r2, r0
 613 0028 3B1C     		mov	r3, r7
 614 002a 1733     		add	r3, r3, #23
 615 002c 1A70     		strb	r2, [r3]
 171:.\I2C_Class.c ****     
 172:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 616              		.loc 1 172 0
 617 002e 3B1C     		mov	r3, r7
 618 0030 1733     		add	r3, r3, #23
 619 0032 1B78     		ldrb	r3, [r3]
 620 0034 002B     		cmp	r3, #0
 621 0036 3FD1     		bne	.L36
 173:.\I2C_Class.c ****         if (window)
 622              		.loc 1 173 0
 623 0038 FB68     		ldr	r3, [r7, #12]
 624 003a 002B     		cmp	r3, #0
 625 003c 06D0     		beq	.L37
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 15


 174:.\I2C_Class.c ****         {                                   // Expecting to receive MSB first 
 175:.\I2C_Class.c ****             *window = (dataget[0] >> 3);      // Shifting out the 3 least significant bits.
 626              		.loc 1 175 0
 627 003e 3B1C     		mov	r3, r7
 628 0040 1433     		add	r3, r3, #20
 629 0042 1B78     		ldrb	r3, [r3]
 630 0044 DB08     		lsr	r3, r3, #3
 631 0046 DAB2     		uxtb	r2, r3
 632 0048 FB68     		ldr	r3, [r7, #12]
 633 004a 1A70     		strb	r2, [r3]
 634              	.L37:
 176:.\I2C_Class.c ****         }
 177:.\I2C_Class.c ****         if (heat){              
 635              		.loc 1 177 0
 636 004c BB68     		ldr	r3, [r7, #8]
 637 004e 002B     		cmp	r3, #0
 638 0050 09D0     		beq	.L38
 178:.\I2C_Class.c ****             *heat = ((dataget[0] & 0b00001110) >> 1);       // Ignoring everything but bit 1-3 and 
 639              		.loc 1 178 0
 640 0052 3B1C     		mov	r3, r7
 641 0054 1433     		add	r3, r3, #20
 642 0056 1B78     		ldrb	r3, [r3]
 643 0058 1A1C     		mov	r2, r3
 644 005a 0E23     		mov	r3, #14
 645 005c 1340     		and	r3, r2
 646 005e 5B10     		asr	r3, r3, #1
 647 0060 DAB2     		uxtb	r2, r3
 648 0062 BB68     		ldr	r3, [r7, #8]
 649 0064 1A70     		strb	r2, [r3]
 650              	.L38:
 179:.\I2C_Class.c ****         }
 180:.\I2C_Class.c ****         if (vent){
 651              		.loc 1 180 0
 652 0066 7B68     		ldr	r3, [r7, #4]
 653 0068 002B     		cmp	r3, #0
 654 006a 18D0     		beq	.L39
 181:.\I2C_Class.c ****             if ((dataget[0] & 0b00000001) == 0b00000001){   // Maybe we can find a smarter way to d
 655              		.loc 1 181 0
 656 006c 3B1C     		mov	r3, r7
 657 006e 1433     		add	r3, r3, #20
 658 0070 1B78     		ldrb	r3, [r3]
 659 0072 1A1C     		mov	r2, r3
 660 0074 0123     		mov	r3, #1
 661 0076 1340     		and	r3, r2
 662 0078 0AD0     		beq	.L40
 182:.\I2C_Class.c ****                 *vent = (dataget[1] >> 5) | 0b00000100;                                           /
 663              		.loc 1 182 0
 664 007a 3B1C     		mov	r3, r7
 665 007c 1433     		add	r3, r3, #20
 666 007e 5B78     		ldrb	r3, [r3, #1]
 667 0080 5B09     		lsr	r3, r3, #5
 668 0082 DBB2     		uxtb	r3, r3
 669 0084 0422     		mov	r2, #4
 670 0086 1343     		orr	r3, r2
 671 0088 DAB2     		uxtb	r2, r3
 672 008a 7B68     		ldr	r3, [r7, #4]
 673 008c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 16


 674 008e 06E0     		b	.L39
 675              	.L40:
 183:.\I2C_Class.c ****             }                                                    // Shifting 5 right so only 2 bits
 184:.\I2C_Class.c ****             else {
 185:.\I2C_Class.c ****                 *vent = (dataget[1] >> 5) | 0b00000000;         // shifting 5 right since only the 
 676              		.loc 1 185 0
 677 0090 3B1C     		mov	r3, r7
 678 0092 1433     		add	r3, r3, #20
 679 0094 5B78     		ldrb	r3, [r3, #1]
 680 0096 5B09     		lsr	r3, r3, #5
 681 0098 DAB2     		uxtb	r2, r3
 682 009a 7B68     		ldr	r3, [r7, #4]
 683 009c 1A70     		strb	r2, [r3]
 684              	.L39:
 186:.\I2C_Class.c ****             }
 187:.\I2C_Class.c ****         }
 188:.\I2C_Class.c ****         if (irrigation){
 685              		.loc 1 188 0
 686 009e 3B68     		ldr	r3, [r7]
 687 00a0 002B     		cmp	r3, #0
 688 00a2 07D0     		beq	.L41
 189:.\I2C_Class.c ****             *irrigation = (dataget[1] & 0b00111111);        // Ignoring two most significant bits.
 689              		.loc 1 189 0
 690 00a4 3B1C     		mov	r3, r7
 691 00a6 1433     		add	r3, r3, #20
 692 00a8 5A78     		ldrb	r2, [r3, #1]
 693 00aa 3F23     		mov	r3, #63
 694 00ac 1340     		and	r3, r2
 695 00ae DAB2     		uxtb	r2, r3
 696 00b0 3B68     		ldr	r3, [r7]
 697 00b2 1A70     		strb	r2, [r3]
 698              	.L41:
 190:.\I2C_Class.c ****         }   
 191:.\I2C_Class.c ****         return 0;
 699              		.loc 1 191 0
 700 00b4 0023     		mov	r3, #0
 701 00b6 00E0     		b	.L43
 702              	.L36:
 192:.\I2C_Class.c ****     }
 193:.\I2C_Class.c ****     else {
 194:.\I2C_Class.c ****         return -1;   
 703              		.loc 1 194 0
 704 00b8 FF23     		mov	r3, #255
 705              	.L43:
 706 00ba 5BB2     		sxtb	r3, r3
 195:.\I2C_Class.c ****     }
 196:.\I2C_Class.c **** }
 707              		.loc 1 196 0
 708 00bc 181C     		mov	r0, r3
 709 00be BD46     		mov	sp, r7
 710 00c0 06B0     		add	sp, sp, #24
 711              		@ sp needed
 712 00c2 80BD     		pop	{r7, pc}
 713              		.cfi_endproc
 714              	.LFE38:
 715              		.size	getActuatorStatus, .-getActuatorStatus
 716              		.section	.text.getTempAndHum,"ax",%progbits
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 17


 717              		.align	2
 718              		.global	getTempAndHum
 719              		.code	16
 720              		.thumb_func
 721              		.type	getTempAndHum, %function
 722              	getTempAndHum:
 723              	.LFB39:
 197:.\I2C_Class.c **** 
 198:.\I2C_Class.c **** int8 getTempAndHum(int32* temp, int32* hum){
 724              		.loc 1 198 0
 725              		.cfi_startproc
 726 0000 80B5     		push	{r7, lr}
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 7, -8
 729              		.cfi_offset 14, -4
 730 0002 84B0     		sub	sp, sp, #16
 731              		.cfi_def_cfa_offset 24
 732 0004 00AF     		add	r7, sp, #0
 733              		.cfi_def_cfa_register 7
 734 0006 7860     		str	r0, [r7, #4]
 735 0008 3960     		str	r1, [r7]
 199:.\I2C_Class.c ****     uint8 dataget[4];
 200:.\I2C_Class.c ****     uint8 result = 0;
 736              		.loc 1 200 0
 737 000a 3B1C     		mov	r3, r7
 738 000c 0F33     		add	r3, r3, #15
 739 000e 0022     		mov	r2, #0
 740 0010 1A70     		strb	r2, [r3]
 201:.\I2C_Class.c ****     
 202:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(TEMP_AND_HUM_SENSOR_ADDRESS, dataget, 4, I2C_I2C_MODE_COMPLETE_XF
 741              		.loc 1 202 0
 742 0012 3B1C     		mov	r3, r7
 743 0014 0833     		add	r3, r3, #8
 744 0016 2720     		mov	r0, #39
 745 0018 191C     		mov	r1, r3
 746 001a 0422     		mov	r2, #4
 747 001c 0023     		mov	r3, #0
 748 001e FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 749 0022 021C     		mov	r2, r0
 750 0024 3B1C     		mov	r3, r7
 751 0026 0F33     		add	r3, r3, #15
 752 0028 1A70     		strb	r2, [r3]
 203:.\I2C_Class.c ****     
 204:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 753              		.loc 1 204 0
 754 002a 3B1C     		mov	r3, r7
 755 002c 0F33     		add	r3, r3, #15
 756 002e 1B78     		ldrb	r3, [r3]
 757 0030 002B     		cmp	r3, #0
 758 0032 15D1     		bne	.L45
 205:.\I2C_Class.c ****         // Expecting to receive MSB first.
 206:.\I2C_Class.c ****         *temp = ((dataget[0] << 7) | dataget[1]);   
 759              		.loc 1 206 0
 760 0034 3B1C     		mov	r3, r7
 761 0036 0833     		add	r3, r3, #8
 762 0038 1B78     		ldrb	r3, [r3]
 763 003a DA01     		lsl	r2, r3, #7
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 18


 764 003c 3B1C     		mov	r3, r7
 765 003e 0833     		add	r3, r3, #8
 766 0040 5B78     		ldrb	r3, [r3, #1]
 767 0042 1A43     		orr	r2, r3
 768 0044 7B68     		ldr	r3, [r7, #4]
 769 0046 1A60     		str	r2, [r3]
 207:.\I2C_Class.c ****         *hum = ((dataget[2] << 7) | dataget[3]);
 770              		.loc 1 207 0
 771 0048 3B1C     		mov	r3, r7
 772 004a 0833     		add	r3, r3, #8
 773 004c 9B78     		ldrb	r3, [r3, #2]
 774 004e DA01     		lsl	r2, r3, #7
 775 0050 3B1C     		mov	r3, r7
 776 0052 0833     		add	r3, r3, #8
 777 0054 DB78     		ldrb	r3, [r3, #3]
 778 0056 1A43     		orr	r2, r3
 779 0058 3B68     		ldr	r3, [r7]
 780 005a 1A60     		str	r2, [r3]
 208:.\I2C_Class.c ****         return 0;   // No error 
 781              		.loc 1 208 0
 782 005c 0023     		mov	r3, #0
 783 005e 00E0     		b	.L47
 784              	.L45:
 209:.\I2C_Class.c ****     }
 210:.\I2C_Class.c ****     else {
 211:.\I2C_Class.c ****         return -1;
 785              		.loc 1 211 0
 786 0060 FF23     		mov	r3, #255
 787              	.L47:
 788 0062 5BB2     		sxtb	r3, r3
 212:.\I2C_Class.c ****     }
 213:.\I2C_Class.c **** }
 789              		.loc 1 213 0
 790 0064 181C     		mov	r0, r3
 791 0066 BD46     		mov	sp, r7
 792 0068 04B0     		add	sp, sp, #16
 793              		@ sp needed
 794 006a 80BD     		pop	{r7, pc}
 795              		.cfi_endproc
 796              	.LFE39:
 797              		.size	getTempAndHum, .-getTempAndHum
 798              		.section	.text.getLight,"ax",%progbits
 799              		.align	2
 800              		.global	getLight
 801              		.code	16
 802              		.thumb_func
 803              		.type	getLight, %function
 804              	getLight:
 805              	.LFB40:
 214:.\I2C_Class.c **** 
 215:.\I2C_Class.c **** int8 getLight(int32* light){
 806              		.loc 1 215 0
 807              		.cfi_startproc
 808 0000 80B5     		push	{r7, lr}
 809              		.cfi_def_cfa_offset 8
 810              		.cfi_offset 7, -8
 811              		.cfi_offset 14, -4
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 19


 812 0002 84B0     		sub	sp, sp, #16
 813              		.cfi_def_cfa_offset 24
 814 0004 00AF     		add	r7, sp, #0
 815              		.cfi_def_cfa_register 7
 816 0006 7860     		str	r0, [r7, #4]
 216:.\I2C_Class.c ****     uint8 dataget[2];
 217:.\I2C_Class.c ****     uint8 result = 0;
 817              		.loc 1 217 0
 818 0008 3B1C     		mov	r3, r7
 819 000a 0F33     		add	r3, r3, #15
 820 000c 0022     		mov	r2, #0
 821 000e 1A70     		strb	r2, [r3]
 218:.\I2C_Class.c ****     
 219:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(LIGHT_SENSOR_ADDRESS_MSB, (uint8*) dataget, 2, I2C_I2C_MODE_COMPL
 822              		.loc 1 219 0
 823 0010 3B1C     		mov	r3, r7
 824 0012 0C33     		add	r3, r3, #12
 825 0014 0520     		mov	r0, #5
 826 0016 191C     		mov	r1, r3
 827 0018 0222     		mov	r2, #2
 828 001a 0023     		mov	r3, #0
 829 001c FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 830 0020 021C     		mov	r2, r0
 831 0022 3B1C     		mov	r3, r7
 832 0024 0F33     		add	r3, r3, #15
 833 0026 1A70     		strb	r2, [r3]
 220:.\I2C_Class.c ****         
 221:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 834              		.loc 1 221 0
 835 0028 3B1C     		mov	r3, r7
 836 002a 0F33     		add	r3, r3, #15
 837 002c 1B78     		ldrb	r3, [r3]
 838 002e 002B     		cmp	r3, #0
 839 0030 0FD1     		bne	.L49
 222:.\I2C_Class.c ****         // Expecting to receive MSB first.
 223:.\I2C_Class.c ****         *light = (dataget[0] << 7);     // TODO: TEST THIS WITH THE PROPER SENSOR!!
 840              		.loc 1 223 0
 841 0032 3B1C     		mov	r3, r7
 842 0034 0C33     		add	r3, r3, #12
 843 0036 1B78     		ldrb	r3, [r3]
 844 0038 DA01     		lsl	r2, r3, #7
 845 003a 7B68     		ldr	r3, [r7, #4]
 846 003c 1A60     		str	r2, [r3]
 224:.\I2C_Class.c ****         *light = *light | dataget[1];  
 847              		.loc 1 224 0
 848 003e 7B68     		ldr	r3, [r7, #4]
 849 0040 1A68     		ldr	r2, [r3]
 850 0042 3B1C     		mov	r3, r7
 851 0044 0C33     		add	r3, r3, #12
 852 0046 5B78     		ldrb	r3, [r3, #1]
 853 0048 1A43     		orr	r2, r3
 854 004a 7B68     		ldr	r3, [r7, #4]
 855 004c 1A60     		str	r2, [r3]
 225:.\I2C_Class.c ****         return 0;   // No error 
 856              		.loc 1 225 0
 857 004e 0023     		mov	r3, #0
 858 0050 00E0     		b	.L51
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 20


 859              	.L49:
 226:.\I2C_Class.c **** 	}
 227:.\I2C_Class.c ****     else {
 228:.\I2C_Class.c ****         return -1;
 860              		.loc 1 228 0
 861 0052 FF23     		mov	r3, #255
 862              	.L51:
 863 0054 5BB2     		sxtb	r3, r3
 229:.\I2C_Class.c ****     }
 230:.\I2C_Class.c **** }
 864              		.loc 1 230 0
 865 0056 181C     		mov	r0, r3
 866 0058 BD46     		mov	sp, r7
 867 005a 04B0     		add	sp, sp, #16
 868              		@ sp needed
 869 005c 80BD     		pop	{r7, pc}
 870              		.cfi_endproc
 871              	.LFE40:
 872              		.size	getLight, .-getLight
 873 005e C046     		.section	.text.getSoilHum,"ax",%progbits
 874              		.align	2
 875              		.global	getSoilHum
 876              		.code	16
 877              		.thumb_func
 878              		.type	getSoilHum, %function
 879              	getSoilHum:
 880              	.LFB41:
 231:.\I2C_Class.c **** 
 232:.\I2C_Class.c **** int8 getSoilHum(uint8 index, int16* soilHum){   // TODO: THIS HAS NOT BEEN IMPLEMENTED.
 881              		.loc 1 232 0
 882              		.cfi_startproc
 883 0000 80B5     		push	{r7, lr}
 884              		.cfi_def_cfa_offset 8
 885              		.cfi_offset 7, -8
 886              		.cfi_offset 14, -4
 887 0002 84B0     		sub	sp, sp, #16
 888              		.cfi_def_cfa_offset 24
 889 0004 00AF     		add	r7, sp, #0
 890              		.cfi_def_cfa_register 7
 891 0006 021C     		mov	r2, r0
 892 0008 3960     		str	r1, [r7]
 893 000a FB1D     		add	r3, r7, #7
 894 000c 1A70     		strb	r2, [r3]
 233:.\I2C_Class.c ****     index = 0;
 895              		.loc 1 233 0
 896 000e 3B1C     		mov	r3, r7
 897 0010 0F33     		add	r3, r3, #15
 898 0012 0022     		mov	r2, #0
 899 0014 1A70     		strb	r2, [r3]
 234:.\I2C_Class.c ****     *soilHum = 0;
 900              		.loc 1 234 0
 901 0016 3B68     		ldr	r3, [r7]
 902 0018 0022     		mov	r2, #0
 903 001a 1A80     		strh	r2, [r3]
 235:.\I2C_Class.c ****     return 0;
 904              		.loc 1 235 0
 905 001c 0023     		mov	r3, #0
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 21


 906 001e 5BB2     		sxtb	r3, r3
 236:.\I2C_Class.c **** }
 907              		.loc 1 236 0
 908 0020 181C     		mov	r0, r3
 909 0022 BD46     		mov	sp, r7
 910 0024 04B0     		add	sp, sp, #16
 911              		@ sp needed
 912 0026 80BD     		pop	{r7, pc}
 913              		.cfi_endproc
 914              	.LFE41:
 915              		.size	getSoilHum, .-getSoilHum
 916              		.text
 917              	.Letext0:
 918              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 919              		.section	.debug_info,"",%progbits
 920              	.Ldebug_info0:
 921 0000 F3030000 		.4byte	0x3f3
 922 0004 0400     		.2byte	0x4
 923 0006 00000000 		.4byte	.Ldebug_abbrev0
 924 000a 04       		.byte	0x4
 925 000b 01       		.uleb128 0x1
 926 000c A3000000 		.4byte	.LASF47
 927 0010 01       		.byte	0x1
 928 0011 76000000 		.4byte	.LASF48
 929 0015 1F000000 		.4byte	.LASF49
 930 0019 00000000 		.4byte	.Ldebug_ranges0+0
 931 001d 00000000 		.4byte	0
 932 0021 00000000 		.4byte	.Ldebug_line0
 933 0025 02       		.uleb128 0x2
 934 0026 01       		.byte	0x1
 935 0027 06       		.byte	0x6
 936 0028 8D010000 		.4byte	.LASF0
 937 002c 02       		.uleb128 0x2
 938 002d 01       		.byte	0x1
 939 002e 08       		.byte	0x8
 940 002f 1F010000 		.4byte	.LASF1
 941 0033 02       		.uleb128 0x2
 942 0034 02       		.byte	0x2
 943 0035 05       		.byte	0x5
 944 0036 72020000 		.4byte	.LASF2
 945 003a 02       		.uleb128 0x2
 946 003b 02       		.byte	0x2
 947 003c 07       		.byte	0x7
 948 003d 84000000 		.4byte	.LASF3
 949 0041 02       		.uleb128 0x2
 950 0042 04       		.byte	0x4
 951 0043 05       		.byte	0x5
 952 0044 8F020000 		.4byte	.LASF4
 953 0048 02       		.uleb128 0x2
 954 0049 04       		.byte	0x4
 955 004a 07       		.byte	0x7
 956 004b 55010000 		.4byte	.LASF5
 957 004f 02       		.uleb128 0x2
 958 0050 08       		.byte	0x8
 959 0051 05       		.byte	0x5
 960 0052 4E020000 		.4byte	.LASF6
 961 0056 02       		.uleb128 0x2
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 22


 962 0057 08       		.byte	0x8
 963 0058 07       		.byte	0x7
 964 0059 F5010000 		.4byte	.LASF7
 965 005d 03       		.uleb128 0x3
 966 005e 04       		.byte	0x4
 967 005f 05       		.byte	0x5
 968 0060 696E7400 		.ascii	"int\000"
 969 0064 02       		.uleb128 0x2
 970 0065 04       		.byte	0x4
 971 0066 07       		.byte	0x7
 972 0067 D1010000 		.4byte	.LASF8
 973 006b 04       		.uleb128 0x4
 974 006c 97000000 		.4byte	.LASF9
 975 0070 02       		.byte	0x2
 976 0071 A1       		.byte	0xa1
 977 0072 2C000000 		.4byte	0x2c
 978 0076 04       		.uleb128 0x4
 979 0077 C5010000 		.4byte	.LASF10
 980 007b 02       		.byte	0x2
 981 007c A2       		.byte	0xa2
 982 007d 3A000000 		.4byte	0x3a
 983 0081 04       		.uleb128 0x4
 984 0082 CC010000 		.4byte	.LASF11
 985 0086 02       		.byte	0x2
 986 0087 A4       		.byte	0xa4
 987 0088 25000000 		.4byte	0x25
 988 008c 04       		.uleb128 0x4
 989 008d 4F010000 		.4byte	.LASF12
 990 0091 02       		.byte	0x2
 991 0092 A5       		.byte	0xa5
 992 0093 33000000 		.4byte	0x33
 993 0097 04       		.uleb128 0x4
 994 0098 79010000 		.4byte	.LASF13
 995 009c 02       		.byte	0x2
 996 009d A6       		.byte	0xa6
 997 009e 41000000 		.4byte	0x41
 998 00a2 02       		.uleb128 0x2
 999 00a3 04       		.byte	0x4
 1000 00a4 04       		.byte	0x4
 1001 00a5 9D000000 		.4byte	.LASF14
 1002 00a9 02       		.uleb128 0x2
 1003 00aa 08       		.byte	0x8
 1004 00ab 04       		.byte	0x4
 1005 00ac A1010000 		.4byte	.LASF15
 1006 00b0 02       		.uleb128 0x2
 1007 00b1 01       		.byte	0x1
 1008 00b2 08       		.byte	0x8
 1009 00b3 5C020000 		.4byte	.LASF16
 1010 00b7 02       		.uleb128 0x2
 1011 00b8 04       		.byte	0x4
 1012 00b9 07       		.byte	0x7
 1013 00ba 3A020000 		.4byte	.LASF17
 1014 00be 05       		.uleb128 0x5
 1015 00bf 04       		.byte	0x4
 1016 00c0 6B000000 		.4byte	0x6b
 1017 00c4 06       		.uleb128 0x6
 1018 00c5 2C020000 		.4byte	.LASF50
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 23


 1019 00c9 01       		.byte	0x1
 1020 00ca 1C       		.byte	0x1c
 1021 00cb 00000000 		.4byte	.LFB33
 1022 00cf 12000000 		.4byte	.LFE33-.LFB33
 1023 00d3 01       		.uleb128 0x1
 1024 00d4 9C       		.byte	0x9c
 1025 00d5 07       		.uleb128 0x7
 1026 00d6 12000000 		.4byte	.LASF22
 1027 00da 01       		.byte	0x1
 1028 00db 22       		.byte	0x22
 1029 00dc 81000000 		.4byte	0x81
 1030 00e0 00000000 		.4byte	.LFB34
 1031 00e4 A2000000 		.4byte	.LFE34-.LFB34
 1032 00e8 01       		.uleb128 0x1
 1033 00e9 9C       		.byte	0x9c
 1034 00ea 35010000 		.4byte	0x135
 1035 00ee 08       		.uleb128 0x8
 1036 00ef 706F7300 		.ascii	"pos\000"
 1037 00f3 01       		.byte	0x1
 1038 00f4 22       		.byte	0x22
 1039 00f5 6B000000 		.4byte	0x6b
 1040 00f9 02       		.uleb128 0x2
 1041 00fa 91       		.byte	0x91
 1042 00fb 67       		.sleb128 -25
 1043 00fc 09       		.uleb128 0x9
 1044 00fd 21020000 		.4byte	.LASF18
 1045 0101 01       		.byte	0x1
 1046 0102 23       		.byte	0x23
 1047 0103 6B000000 		.4byte	0x6b
 1048 0107 02       		.uleb128 0x2
 1049 0108 91       		.byte	0x91
 1050 0109 6F       		.sleb128 -17
 1051 010a 09       		.uleb128 0x9
 1052 010b B9010000 		.4byte	.LASF19
 1053 010f 01       		.byte	0x1
 1054 0110 24       		.byte	0x24
 1055 0111 6B000000 		.4byte	0x6b
 1056 0115 02       		.uleb128 0x2
 1057 0116 91       		.byte	0x91
 1058 0117 6E       		.sleb128 -18
 1059 0118 09       		.uleb128 0x9
 1060 0119 0C020000 		.4byte	.LASF20
 1061 011d 01       		.byte	0x1
 1062 011e 25       		.byte	0x25
 1063 011f 6B000000 		.4byte	0x6b
 1064 0123 02       		.uleb128 0x2
 1065 0124 91       		.byte	0x91
 1066 0125 77       		.sleb128 -9
 1067 0126 09       		.uleb128 0x9
 1068 0127 44010000 		.4byte	.LASF21
 1069 012b 01       		.byte	0x1
 1070 012c 26       		.byte	0x26
 1071 012d BE000000 		.4byte	0xbe
 1072 0131 02       		.uleb128 0x2
 1073 0132 91       		.byte	0x91
 1074 0133 70       		.sleb128 -16
 1075 0134 00       		.byte	0
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 24


 1076 0135 07       		.uleb128 0x7
 1077 0136 43020000 		.4byte	.LASF23
 1078 013a 01       		.byte	0x1
 1079 013b 40       		.byte	0x40
 1080 013c 81000000 		.4byte	0x81
 1081 0140 00000000 		.4byte	.LFB35
 1082 0144 A4000000 		.4byte	.LFE35-.LFB35
 1083 0148 01       		.uleb128 0x1
 1084 0149 9C       		.byte	0x9c
 1085 014a A3010000 		.4byte	0x1a3
 1086 014e 0A       		.uleb128 0xa
 1087 014f 13020000 		.4byte	.LASF24
 1088 0153 01       		.byte	0x1
 1089 0154 40       		.byte	0x40
 1090 0155 6B000000 		.4byte	0x6b
 1091 0159 02       		.uleb128 0x2
 1092 015a 91       		.byte	0x91
 1093 015b 67       		.sleb128 -25
 1094 015c 09       		.uleb128 0x9
 1095 015d 67020000 		.4byte	.LASF25
 1096 0161 01       		.byte	0x1
 1097 0162 41       		.byte	0x41
 1098 0163 6B000000 		.4byte	0x6b
 1099 0167 02       		.uleb128 0x2
 1100 0168 91       		.byte	0x91
 1101 0169 6F       		.sleb128 -17
 1102 016a 09       		.uleb128 0x9
 1103 016b 32010000 		.4byte	.LASF26
 1104 016f 01       		.byte	0x1
 1105 0170 42       		.byte	0x42
 1106 0171 6B000000 		.4byte	0x6b
 1107 0175 02       		.uleb128 0x2
 1108 0176 91       		.byte	0x91
 1109 0177 6E       		.sleb128 -18
 1110 0178 09       		.uleb128 0x9
 1111 0179 0C020000 		.4byte	.LASF20
 1112 017d 01       		.byte	0x1
 1113 017e 43       		.byte	0x43
 1114 017f 6B000000 		.4byte	0x6b
 1115 0183 02       		.uleb128 0x2
 1116 0184 91       		.byte	0x91
 1117 0185 77       		.sleb128 -9
 1118 0186 09       		.uleb128 0x9
 1119 0187 DE010000 		.4byte	.LASF27
 1120 018b 01       		.byte	0x1
 1121 018c 44       		.byte	0x44
 1122 018d 6B000000 		.4byte	0x6b
 1123 0191 02       		.uleb128 0x2
 1124 0192 91       		.byte	0x91
 1125 0193 6D       		.sleb128 -19
 1126 0194 09       		.uleb128 0x9
 1127 0195 18020000 		.4byte	.LASF28
 1128 0199 01       		.byte	0x1
 1129 019a 45       		.byte	0x45
 1130 019b BE000000 		.4byte	0xbe
 1131 019f 02       		.uleb128 0x2
 1132 01a0 91       		.byte	0x91
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 25


 1133 01a1 70       		.sleb128 -16
 1134 01a2 00       		.byte	0
 1135 01a3 07       		.uleb128 0x7
 1136 01a4 E3010000 		.4byte	.LASF29
 1137 01a8 01       		.byte	0x1
 1138 01a9 60       		.byte	0x60
 1139 01aa 81000000 		.4byte	0x81
 1140 01ae 00000000 		.4byte	.LFB36
 1141 01b2 B2000000 		.4byte	.LFE36-.LFB36
 1142 01b6 01       		.uleb128 0x1
 1143 01b7 9C       		.byte	0x9c
 1144 01b8 11020000 		.4byte	0x211
 1145 01bc 0A       		.uleb128 0xa
 1146 01bd 34020000 		.4byte	.LASF30
 1147 01c1 01       		.byte	0x1
 1148 01c2 60       		.byte	0x60
 1149 01c3 6B000000 		.4byte	0x6b
 1150 01c7 02       		.uleb128 0x2
 1151 01c8 91       		.byte	0x91
 1152 01c9 67       		.sleb128 -25
 1153 01ca 09       		.uleb128 0x9
 1154 01cb 98020000 		.4byte	.LASF31
 1155 01cf 01       		.byte	0x1
 1156 01d0 61       		.byte	0x61
 1157 01d1 6B000000 		.4byte	0x6b
 1158 01d5 02       		.uleb128 0x2
 1159 01d6 91       		.byte	0x91
 1160 01d7 6F       		.sleb128 -17
 1161 01d8 09       		.uleb128 0x9
 1162 01d9 00000000 		.4byte	.LASF32
 1163 01dd 01       		.byte	0x1
 1164 01de 62       		.byte	0x62
 1165 01df 6B000000 		.4byte	0x6b
 1166 01e3 02       		.uleb128 0x2
 1167 01e4 91       		.byte	0x91
 1168 01e5 6E       		.sleb128 -18
 1169 01e6 09       		.uleb128 0x9
 1170 01e7 0C020000 		.4byte	.LASF20
 1171 01eb 01       		.byte	0x1
 1172 01ec 63       		.byte	0x63
 1173 01ed 6B000000 		.4byte	0x6b
 1174 01f1 02       		.uleb128 0x2
 1175 01f2 91       		.byte	0x91
 1176 01f3 77       		.sleb128 -9
 1177 01f4 09       		.uleb128 0x9
 1178 01f5 DE010000 		.4byte	.LASF27
 1179 01f9 01       		.byte	0x1
 1180 01fa 64       		.byte	0x64
 1181 01fb 6B000000 		.4byte	0x6b
 1182 01ff 02       		.uleb128 0x2
 1183 0200 91       		.byte	0x91
 1184 0201 6D       		.sleb128 -19
 1185 0202 09       		.uleb128 0x9
 1186 0203 2D010000 		.4byte	.LASF33
 1187 0207 01       		.byte	0x1
 1188 0208 65       		.byte	0x65
 1189 0209 BE000000 		.4byte	0xbe
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 26


 1190 020d 02       		.uleb128 0x2
 1191 020e 91       		.byte	0x91
 1192 020f 70       		.sleb128 -16
 1193 0210 00       		.byte	0
 1194 0211 07       		.uleb128 0x7
 1195 0212 B5020000 		.4byte	.LASF34
 1196 0216 01       		.byte	0x1
 1197 0217 80       		.byte	0x80
 1198 0218 81000000 		.4byte	0x81
 1199 021c 00000000 		.4byte	.LFB37
 1200 0220 F4000000 		.4byte	.LFE37-.LFB37
 1201 0224 01       		.uleb128 0x1
 1202 0225 9C       		.byte	0x9c
 1203 0226 7F020000 		.4byte	0x27f
 1204 022a 0A       		.uleb128 0xa
 1205 022b 61020000 		.4byte	.LASF35
 1206 022f 01       		.byte	0x1
 1207 0230 80       		.byte	0x80
 1208 0231 6B000000 		.4byte	0x6b
 1209 0235 02       		.uleb128 0x2
 1210 0236 91       		.byte	0x91
 1211 0237 6F       		.sleb128 -17
 1212 0238 0A       		.uleb128 0xa
 1213 0239 3E010000 		.4byte	.LASF36
 1214 023d 01       		.byte	0x1
 1215 023e 80       		.byte	0x80
 1216 023f 6B000000 		.4byte	0x6b
 1217 0243 02       		.uleb128 0x2
 1218 0244 91       		.byte	0x91
 1219 0245 6E       		.sleb128 -18
 1220 0246 09       		.uleb128 0x9
 1221 0247 69000000 		.4byte	.LASF37
 1222 024b 01       		.byte	0x1
 1223 024c 81       		.byte	0x81
 1224 024d 6B000000 		.4byte	0x6b
 1225 0251 02       		.uleb128 0x2
 1226 0252 91       		.byte	0x91
 1227 0253 72       		.sleb128 -14
 1228 0254 09       		.uleb128 0x9
 1229 0255 DE010000 		.4byte	.LASF27
 1230 0259 01       		.byte	0x1
 1231 025a 82       		.byte	0x82
 1232 025b 6B000000 		.4byte	0x6b
 1233 025f 02       		.uleb128 0x2
 1234 0260 91       		.byte	0x91
 1235 0261 71       		.sleb128 -15
 1236 0262 09       		.uleb128 0x9
 1237 0263 7C020000 		.4byte	.LASF38
 1238 0267 01       		.byte	0x1
 1239 0268 83       		.byte	0x83
 1240 0269 BE000000 		.4byte	0xbe
 1241 026d 02       		.uleb128 0x2
 1242 026e 91       		.byte	0x91
 1243 026f 74       		.sleb128 -12
 1244 0270 09       		.uleb128 0x9
 1245 0271 0C020000 		.4byte	.LASF20
 1246 0275 01       		.byte	0x1
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 27


 1247 0276 84       		.byte	0x84
 1248 0277 6B000000 		.4byte	0x6b
 1249 027b 02       		.uleb128 0x2
 1250 027c 91       		.byte	0x91
 1251 027d 73       		.sleb128 -13
 1252 027e 00       		.byte	0
 1253 027f 07       		.uleb128 0x7
 1254 0280 67010000 		.4byte	.LASF39
 1255 0284 01       		.byte	0x1
 1256 0285 A6       		.byte	0xa6
 1257 0286 81000000 		.4byte	0x81
 1258 028a 00000000 		.4byte	.LFB38
 1259 028e C4000000 		.4byte	.LFE38-.LFB38
 1260 0292 01       		.uleb128 0x1
 1261 0293 9C       		.byte	0x9c
 1262 0294 ED020000 		.4byte	0x2ed
 1263 0298 0A       		.uleb128 0xa
 1264 0299 A3020000 		.4byte	.LASF40
 1265 029d 01       		.byte	0x1
 1266 029e A6       		.byte	0xa6
 1267 029f BE000000 		.4byte	0xbe
 1268 02a3 02       		.uleb128 0x2
 1269 02a4 91       		.byte	0x91
 1270 02a5 6C       		.sleb128 -20
 1271 02a6 0A       		.uleb128 0xa
 1272 02a7 13020000 		.4byte	.LASF24
 1273 02ab 01       		.byte	0x1
 1274 02ac A6       		.byte	0xa6
 1275 02ad BE000000 		.4byte	0xbe
 1276 02b1 02       		.uleb128 0x2
 1277 02b2 91       		.byte	0x91
 1278 02b3 68       		.sleb128 -24
 1279 02b4 0A       		.uleb128 0xa
 1280 02b5 2D010000 		.4byte	.LASF33
 1281 02b9 01       		.byte	0x1
 1282 02ba A6       		.byte	0xa6
 1283 02bb BE000000 		.4byte	0xbe
 1284 02bf 02       		.uleb128 0x2
 1285 02c0 91       		.byte	0x91
 1286 02c1 64       		.sleb128 -28
 1287 02c2 0A       		.uleb128 0xa
 1288 02c3 7C020000 		.4byte	.LASF38
 1289 02c7 01       		.byte	0x1
 1290 02c8 A6       		.byte	0xa6
 1291 02c9 BE000000 		.4byte	0xbe
 1292 02cd 02       		.uleb128 0x2
 1293 02ce 91       		.byte	0x91
 1294 02cf 60       		.sleb128 -32
 1295 02d0 09       		.uleb128 0x9
 1296 02d1 99010000 		.4byte	.LASF41
 1297 02d5 01       		.byte	0x1
 1298 02d6 A7       		.byte	0xa7
 1299 02d7 ED020000 		.4byte	0x2ed
 1300 02db 02       		.uleb128 0x2
 1301 02dc 91       		.byte	0x91
 1302 02dd 74       		.sleb128 -12
 1303 02de 09       		.uleb128 0x9
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 28


 1304 02df 0C020000 		.4byte	.LASF20
 1305 02e3 01       		.byte	0x1
 1306 02e4 A8       		.byte	0xa8
 1307 02e5 6B000000 		.4byte	0x6b
 1308 02e9 02       		.uleb128 0x2
 1309 02ea 91       		.byte	0x91
 1310 02eb 77       		.sleb128 -9
 1311 02ec 00       		.byte	0
 1312 02ed 0B       		.uleb128 0xb
 1313 02ee 6B000000 		.4byte	0x6b
 1314 02f2 FD020000 		.4byte	0x2fd
 1315 02f6 0C       		.uleb128 0xc
 1316 02f7 B7000000 		.4byte	0xb7
 1317 02fb 01       		.byte	0x1
 1318 02fc 00       		.byte	0
 1319 02fd 07       		.uleb128 0x7
 1320 02fe 7F010000 		.4byte	.LASF42
 1321 0302 01       		.byte	0x1
 1322 0303 C6       		.byte	0xc6
 1323 0304 81000000 		.4byte	0x81
 1324 0308 00000000 		.4byte	.LFB39
 1325 030c 6C000000 		.4byte	.LFE39-.LFB39
 1326 0310 01       		.uleb128 0x1
 1327 0311 9C       		.byte	0x9c
 1328 0312 4F030000 		.4byte	0x34f
 1329 0316 0A       		.uleb128 0xa
 1330 0317 DE010000 		.4byte	.LASF27
 1331 031b 01       		.byte	0x1
 1332 031c C6       		.byte	0xc6
 1333 031d 4F030000 		.4byte	0x34f
 1334 0321 02       		.uleb128 0x2
 1335 0322 91       		.byte	0x91
 1336 0323 6C       		.sleb128 -20
 1337 0324 08       		.uleb128 0x8
 1338 0325 68756D00 		.ascii	"hum\000"
 1339 0329 01       		.byte	0x1
 1340 032a C6       		.byte	0xc6
 1341 032b 4F030000 		.4byte	0x34f
 1342 032f 02       		.uleb128 0x2
 1343 0330 91       		.byte	0x91
 1344 0331 68       		.sleb128 -24
 1345 0332 09       		.uleb128 0x9
 1346 0333 99010000 		.4byte	.LASF41
 1347 0337 01       		.byte	0x1
 1348 0338 C7       		.byte	0xc7
 1349 0339 55030000 		.4byte	0x355
 1350 033d 02       		.uleb128 0x2
 1351 033e 91       		.byte	0x91
 1352 033f 70       		.sleb128 -16
 1353 0340 09       		.uleb128 0x9
 1354 0341 0C020000 		.4byte	.LASF20
 1355 0345 01       		.byte	0x1
 1356 0346 C8       		.byte	0xc8
 1357 0347 6B000000 		.4byte	0x6b
 1358 034b 02       		.uleb128 0x2
 1359 034c 91       		.byte	0x91
 1360 034d 77       		.sleb128 -9
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 29


 1361 034e 00       		.byte	0
 1362 034f 05       		.uleb128 0x5
 1363 0350 04       		.byte	0x4
 1364 0351 97000000 		.4byte	0x97
 1365 0355 0B       		.uleb128 0xb
 1366 0356 6B000000 		.4byte	0x6b
 1367 035a 65030000 		.4byte	0x365
 1368 035e 0C       		.uleb128 0xc
 1369 035f B7000000 		.4byte	0xb7
 1370 0363 03       		.byte	0x3
 1371 0364 00       		.byte	0
 1372 0365 07       		.uleb128 0x7
 1373 0366 C6020000 		.4byte	.LASF43
 1374 036a 01       		.byte	0x1
 1375 036b D7       		.byte	0xd7
 1376 036c 81000000 		.4byte	0x81
 1377 0370 00000000 		.4byte	.LFB40
 1378 0374 5E000000 		.4byte	.LFE40-.LFB40
 1379 0378 01       		.uleb128 0x1
 1380 0379 9C       		.byte	0x9c
 1381 037a A9030000 		.4byte	0x3a9
 1382 037e 0A       		.uleb128 0xa
 1383 037f 0C000000 		.4byte	.LASF44
 1384 0383 01       		.byte	0x1
 1385 0384 D7       		.byte	0xd7
 1386 0385 4F030000 		.4byte	0x34f
 1387 0389 02       		.uleb128 0x2
 1388 038a 91       		.byte	0x91
 1389 038b 6C       		.sleb128 -20
 1390 038c 09       		.uleb128 0x9
 1391 038d 99010000 		.4byte	.LASF41
 1392 0391 01       		.byte	0x1
 1393 0392 D8       		.byte	0xd8
 1394 0393 ED020000 		.4byte	0x2ed
 1395 0397 02       		.uleb128 0x2
 1396 0398 91       		.byte	0x91
 1397 0399 74       		.sleb128 -12
 1398 039a 09       		.uleb128 0x9
 1399 039b 0C020000 		.4byte	.LASF20
 1400 039f 01       		.byte	0x1
 1401 03a0 D9       		.byte	0xd9
 1402 03a1 6B000000 		.4byte	0x6b
 1403 03a5 02       		.uleb128 0x2
 1404 03a6 91       		.byte	0x91
 1405 03a7 77       		.sleb128 -9
 1406 03a8 00       		.byte	0
 1407 03a9 0D       		.uleb128 0xd
 1408 03aa AA020000 		.4byte	.LASF45
 1409 03ae 01       		.byte	0x1
 1410 03af E8       		.byte	0xe8
 1411 03b0 81000000 		.4byte	0x81
 1412 03b4 00000000 		.4byte	.LFB41
 1413 03b8 28000000 		.4byte	.LFE41-.LFB41
 1414 03bc 01       		.uleb128 0x1
 1415 03bd 9C       		.byte	0x9c
 1416 03be DF030000 		.4byte	0x3df
 1417 03c2 0A       		.uleb128 0xa
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 30


 1418 03c3 61020000 		.4byte	.LASF35
 1419 03c7 01       		.byte	0x1
 1420 03c8 E8       		.byte	0xe8
 1421 03c9 6B000000 		.4byte	0x6b
 1422 03cd 02       		.uleb128 0x2
 1423 03ce 91       		.byte	0x91
 1424 03cf 6F       		.sleb128 -17
 1425 03d0 0A       		.uleb128 0xa
 1426 03d1 87020000 		.4byte	.LASF46
 1427 03d5 01       		.byte	0x1
 1428 03d6 E8       		.byte	0xe8
 1429 03d7 DF030000 		.4byte	0x3df
 1430 03db 02       		.uleb128 0x2
 1431 03dc 91       		.byte	0x91
 1432 03dd 68       		.sleb128 -24
 1433 03de 00       		.byte	0
 1434 03df 05       		.uleb128 0x5
 1435 03e0 04       		.byte	0x4
 1436 03e1 8C000000 		.4byte	0x8c
 1437 03e5 0E       		.uleb128 0xe
 1438 03e6 A8010000 		.4byte	.LASF51
 1439 03ea 01       		.byte	0x1
 1440 03eb 18       		.byte	0x18
 1441 03ec 6B000000 		.4byte	0x6b
 1442 03f0 05       		.uleb128 0x5
 1443 03f1 03       		.byte	0x3
 1444 03f2 00000000 		.4byte	irrigationStatus
 1445 03f6 00       		.byte	0
 1446              		.section	.debug_abbrev,"",%progbits
 1447              	.Ldebug_abbrev0:
 1448 0000 01       		.uleb128 0x1
 1449 0001 11       		.uleb128 0x11
 1450 0002 01       		.byte	0x1
 1451 0003 25       		.uleb128 0x25
 1452 0004 0E       		.uleb128 0xe
 1453 0005 13       		.uleb128 0x13
 1454 0006 0B       		.uleb128 0xb
 1455 0007 03       		.uleb128 0x3
 1456 0008 0E       		.uleb128 0xe
 1457 0009 1B       		.uleb128 0x1b
 1458 000a 0E       		.uleb128 0xe
 1459 000b 55       		.uleb128 0x55
 1460 000c 17       		.uleb128 0x17
 1461 000d 11       		.uleb128 0x11
 1462 000e 01       		.uleb128 0x1
 1463 000f 10       		.uleb128 0x10
 1464 0010 17       		.uleb128 0x17
 1465 0011 00       		.byte	0
 1466 0012 00       		.byte	0
 1467 0013 02       		.uleb128 0x2
 1468 0014 24       		.uleb128 0x24
 1469 0015 00       		.byte	0
 1470 0016 0B       		.uleb128 0xb
 1471 0017 0B       		.uleb128 0xb
 1472 0018 3E       		.uleb128 0x3e
 1473 0019 0B       		.uleb128 0xb
 1474 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 31


 1475 001b 0E       		.uleb128 0xe
 1476 001c 00       		.byte	0
 1477 001d 00       		.byte	0
 1478 001e 03       		.uleb128 0x3
 1479 001f 24       		.uleb128 0x24
 1480 0020 00       		.byte	0
 1481 0021 0B       		.uleb128 0xb
 1482 0022 0B       		.uleb128 0xb
 1483 0023 3E       		.uleb128 0x3e
 1484 0024 0B       		.uleb128 0xb
 1485 0025 03       		.uleb128 0x3
 1486 0026 08       		.uleb128 0x8
 1487 0027 00       		.byte	0
 1488 0028 00       		.byte	0
 1489 0029 04       		.uleb128 0x4
 1490 002a 16       		.uleb128 0x16
 1491 002b 00       		.byte	0
 1492 002c 03       		.uleb128 0x3
 1493 002d 0E       		.uleb128 0xe
 1494 002e 3A       		.uleb128 0x3a
 1495 002f 0B       		.uleb128 0xb
 1496 0030 3B       		.uleb128 0x3b
 1497 0031 0B       		.uleb128 0xb
 1498 0032 49       		.uleb128 0x49
 1499 0033 13       		.uleb128 0x13
 1500 0034 00       		.byte	0
 1501 0035 00       		.byte	0
 1502 0036 05       		.uleb128 0x5
 1503 0037 0F       		.uleb128 0xf
 1504 0038 00       		.byte	0
 1505 0039 0B       		.uleb128 0xb
 1506 003a 0B       		.uleb128 0xb
 1507 003b 49       		.uleb128 0x49
 1508 003c 13       		.uleb128 0x13
 1509 003d 00       		.byte	0
 1510 003e 00       		.byte	0
 1511 003f 06       		.uleb128 0x6
 1512 0040 2E       		.uleb128 0x2e
 1513 0041 00       		.byte	0
 1514 0042 3F       		.uleb128 0x3f
 1515 0043 19       		.uleb128 0x19
 1516 0044 03       		.uleb128 0x3
 1517 0045 0E       		.uleb128 0xe
 1518 0046 3A       		.uleb128 0x3a
 1519 0047 0B       		.uleb128 0xb
 1520 0048 3B       		.uleb128 0x3b
 1521 0049 0B       		.uleb128 0xb
 1522 004a 27       		.uleb128 0x27
 1523 004b 19       		.uleb128 0x19
 1524 004c 11       		.uleb128 0x11
 1525 004d 01       		.uleb128 0x1
 1526 004e 12       		.uleb128 0x12
 1527 004f 06       		.uleb128 0x6
 1528 0050 40       		.uleb128 0x40
 1529 0051 18       		.uleb128 0x18
 1530 0052 9642     		.uleb128 0x2116
 1531 0054 19       		.uleb128 0x19
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 32


 1532 0055 00       		.byte	0
 1533 0056 00       		.byte	0
 1534 0057 07       		.uleb128 0x7
 1535 0058 2E       		.uleb128 0x2e
 1536 0059 01       		.byte	0x1
 1537 005a 3F       		.uleb128 0x3f
 1538 005b 19       		.uleb128 0x19
 1539 005c 03       		.uleb128 0x3
 1540 005d 0E       		.uleb128 0xe
 1541 005e 3A       		.uleb128 0x3a
 1542 005f 0B       		.uleb128 0xb
 1543 0060 3B       		.uleb128 0x3b
 1544 0061 0B       		.uleb128 0xb
 1545 0062 27       		.uleb128 0x27
 1546 0063 19       		.uleb128 0x19
 1547 0064 49       		.uleb128 0x49
 1548 0065 13       		.uleb128 0x13
 1549 0066 11       		.uleb128 0x11
 1550 0067 01       		.uleb128 0x1
 1551 0068 12       		.uleb128 0x12
 1552 0069 06       		.uleb128 0x6
 1553 006a 40       		.uleb128 0x40
 1554 006b 18       		.uleb128 0x18
 1555 006c 9642     		.uleb128 0x2116
 1556 006e 19       		.uleb128 0x19
 1557 006f 01       		.uleb128 0x1
 1558 0070 13       		.uleb128 0x13
 1559 0071 00       		.byte	0
 1560 0072 00       		.byte	0
 1561 0073 08       		.uleb128 0x8
 1562 0074 05       		.uleb128 0x5
 1563 0075 00       		.byte	0
 1564 0076 03       		.uleb128 0x3
 1565 0077 08       		.uleb128 0x8
 1566 0078 3A       		.uleb128 0x3a
 1567 0079 0B       		.uleb128 0xb
 1568 007a 3B       		.uleb128 0x3b
 1569 007b 0B       		.uleb128 0xb
 1570 007c 49       		.uleb128 0x49
 1571 007d 13       		.uleb128 0x13
 1572 007e 02       		.uleb128 0x2
 1573 007f 18       		.uleb128 0x18
 1574 0080 00       		.byte	0
 1575 0081 00       		.byte	0
 1576 0082 09       		.uleb128 0x9
 1577 0083 34       		.uleb128 0x34
 1578 0084 00       		.byte	0
 1579 0085 03       		.uleb128 0x3
 1580 0086 0E       		.uleb128 0xe
 1581 0087 3A       		.uleb128 0x3a
 1582 0088 0B       		.uleb128 0xb
 1583 0089 3B       		.uleb128 0x3b
 1584 008a 0B       		.uleb128 0xb
 1585 008b 49       		.uleb128 0x49
 1586 008c 13       		.uleb128 0x13
 1587 008d 02       		.uleb128 0x2
 1588 008e 18       		.uleb128 0x18
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 33


 1589 008f 00       		.byte	0
 1590 0090 00       		.byte	0
 1591 0091 0A       		.uleb128 0xa
 1592 0092 05       		.uleb128 0x5
 1593 0093 00       		.byte	0
 1594 0094 03       		.uleb128 0x3
 1595 0095 0E       		.uleb128 0xe
 1596 0096 3A       		.uleb128 0x3a
 1597 0097 0B       		.uleb128 0xb
 1598 0098 3B       		.uleb128 0x3b
 1599 0099 0B       		.uleb128 0xb
 1600 009a 49       		.uleb128 0x49
 1601 009b 13       		.uleb128 0x13
 1602 009c 02       		.uleb128 0x2
 1603 009d 18       		.uleb128 0x18
 1604 009e 00       		.byte	0
 1605 009f 00       		.byte	0
 1606 00a0 0B       		.uleb128 0xb
 1607 00a1 01       		.uleb128 0x1
 1608 00a2 01       		.byte	0x1
 1609 00a3 49       		.uleb128 0x49
 1610 00a4 13       		.uleb128 0x13
 1611 00a5 01       		.uleb128 0x1
 1612 00a6 13       		.uleb128 0x13
 1613 00a7 00       		.byte	0
 1614 00a8 00       		.byte	0
 1615 00a9 0C       		.uleb128 0xc
 1616 00aa 21       		.uleb128 0x21
 1617 00ab 00       		.byte	0
 1618 00ac 49       		.uleb128 0x49
 1619 00ad 13       		.uleb128 0x13
 1620 00ae 2F       		.uleb128 0x2f
 1621 00af 0B       		.uleb128 0xb
 1622 00b0 00       		.byte	0
 1623 00b1 00       		.byte	0
 1624 00b2 0D       		.uleb128 0xd
 1625 00b3 2E       		.uleb128 0x2e
 1626 00b4 01       		.byte	0x1
 1627 00b5 3F       		.uleb128 0x3f
 1628 00b6 19       		.uleb128 0x19
 1629 00b7 03       		.uleb128 0x3
 1630 00b8 0E       		.uleb128 0xe
 1631 00b9 3A       		.uleb128 0x3a
 1632 00ba 0B       		.uleb128 0xb
 1633 00bb 3B       		.uleb128 0x3b
 1634 00bc 0B       		.uleb128 0xb
 1635 00bd 27       		.uleb128 0x27
 1636 00be 19       		.uleb128 0x19
 1637 00bf 49       		.uleb128 0x49
 1638 00c0 13       		.uleb128 0x13
 1639 00c1 11       		.uleb128 0x11
 1640 00c2 01       		.uleb128 0x1
 1641 00c3 12       		.uleb128 0x12
 1642 00c4 06       		.uleb128 0x6
 1643 00c5 40       		.uleb128 0x40
 1644 00c6 18       		.uleb128 0x18
 1645 00c7 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 34


 1646 00c9 19       		.uleb128 0x19
 1647 00ca 01       		.uleb128 0x1
 1648 00cb 13       		.uleb128 0x13
 1649 00cc 00       		.byte	0
 1650 00cd 00       		.byte	0
 1651 00ce 0E       		.uleb128 0xe
 1652 00cf 34       		.uleb128 0x34
 1653 00d0 00       		.byte	0
 1654 00d1 03       		.uleb128 0x3
 1655 00d2 0E       		.uleb128 0xe
 1656 00d3 3A       		.uleb128 0x3a
 1657 00d4 0B       		.uleb128 0xb
 1658 00d5 3B       		.uleb128 0x3b
 1659 00d6 0B       		.uleb128 0xb
 1660 00d7 49       		.uleb128 0x49
 1661 00d8 13       		.uleb128 0x13
 1662 00d9 3F       		.uleb128 0x3f
 1663 00da 19       		.uleb128 0x19
 1664 00db 02       		.uleb128 0x2
 1665 00dc 18       		.uleb128 0x18
 1666 00dd 00       		.byte	0
 1667 00de 00       		.byte	0
 1668 00df 00       		.byte	0
 1669              		.section	.debug_aranges,"",%progbits
 1670 0000 5C000000 		.4byte	0x5c
 1671 0004 0200     		.2byte	0x2
 1672 0006 00000000 		.4byte	.Ldebug_info0
 1673 000a 04       		.byte	0x4
 1674 000b 00       		.byte	0
 1675 000c 0000     		.2byte	0
 1676 000e 0000     		.2byte	0
 1677 0010 00000000 		.4byte	.LFB33
 1678 0014 12000000 		.4byte	.LFE33-.LFB33
 1679 0018 00000000 		.4byte	.LFB34
 1680 001c A2000000 		.4byte	.LFE34-.LFB34
 1681 0020 00000000 		.4byte	.LFB35
 1682 0024 A4000000 		.4byte	.LFE35-.LFB35
 1683 0028 00000000 		.4byte	.LFB36
 1684 002c B2000000 		.4byte	.LFE36-.LFB36
 1685 0030 00000000 		.4byte	.LFB37
 1686 0034 F4000000 		.4byte	.LFE37-.LFB37
 1687 0038 00000000 		.4byte	.LFB38
 1688 003c C4000000 		.4byte	.LFE38-.LFB38
 1689 0040 00000000 		.4byte	.LFB39
 1690 0044 6C000000 		.4byte	.LFE39-.LFB39
 1691 0048 00000000 		.4byte	.LFB40
 1692 004c 5E000000 		.4byte	.LFE40-.LFB40
 1693 0050 00000000 		.4byte	.LFB41
 1694 0054 28000000 		.4byte	.LFE41-.LFB41
 1695 0058 00000000 		.4byte	0
 1696 005c 00000000 		.4byte	0
 1697              		.section	.debug_ranges,"",%progbits
 1698              	.Ldebug_ranges0:
 1699 0000 00000000 		.4byte	.LFB33
 1700 0004 12000000 		.4byte	.LFE33
 1701 0008 00000000 		.4byte	.LFB34
 1702 000c A2000000 		.4byte	.LFE34
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 35


 1703 0010 00000000 		.4byte	.LFB35
 1704 0014 A4000000 		.4byte	.LFE35
 1705 0018 00000000 		.4byte	.LFB36
 1706 001c B2000000 		.4byte	.LFE36
 1707 0020 00000000 		.4byte	.LFB37
 1708 0024 F4000000 		.4byte	.LFE37
 1709 0028 00000000 		.4byte	.LFB38
 1710 002c C4000000 		.4byte	.LFE38
 1711 0030 00000000 		.4byte	.LFB39
 1712 0034 6C000000 		.4byte	.LFE39
 1713 0038 00000000 		.4byte	.LFB40
 1714 003c 5E000000 		.4byte	.LFE40
 1715 0040 00000000 		.4byte	.LFB41
 1716 0044 28000000 		.4byte	.LFE41
 1717 0048 00000000 		.4byte	0
 1718 004c 00000000 		.4byte	0
 1719              		.section	.debug_line,"",%progbits
 1720              	.Ldebug_line0:
 1721 0000 4D010000 		.section	.debug_str,"MS",%progbits,1
 1721      02004A00 
 1721      00000201 
 1721      FB0E0D00 
 1721      01010101 
 1722              	.LASF32:
 1723 0000 7475726E 		.ascii	"turnOffVent\000"
 1723      4F666656 
 1723      656E7400 
 1724              	.LASF44:
 1725 000c 6C696768 		.ascii	"light\000"
 1725      7400
 1726              	.LASF22:
 1727 0012 61646A75 		.ascii	"adjustWindow\000"
 1727      73745769 
 1727      6E646F77 
 1727      00
 1728              	.LASF49:
 1729 001f 433A5C55 		.ascii	"C:\\Users\\Lasse\\Documents\\GitHub\\PSoC_Master\\P"
 1729      73657273 
 1729      5C4C6173 
 1729      73655C44 
 1729      6F63756D 
 1730 004c 536F435F 		.ascii	"SoC_Master\\PSoC_Master.cydsn\000"
 1730      4D617374 
 1730      65725C50 
 1730      536F435F 
 1730      4D617374 
 1731              	.LASF37:
 1732 0069 69727269 		.ascii	"irriTransfer\000"
 1732      5472616E 
 1732      73666572 
 1732      00
 1733              	.LASF48:
 1734 0076 2E5C4932 		.ascii	".\\I2C_Class.c\000"
 1734      435F436C 
 1734      6173732E 
 1734      6300
 1735              	.LASF3:
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 36


 1736 0084 73686F72 		.ascii	"short unsigned int\000"
 1736      7420756E 
 1736      7369676E 
 1736      65642069 
 1736      6E7400
 1737              	.LASF9:
 1738 0097 75696E74 		.ascii	"uint8\000"
 1738      3800
 1739              	.LASF14:
 1740 009d 666C6F61 		.ascii	"float\000"
 1740      7400
 1741              	.LASF47:
 1742 00a3 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1742      4320342E 
 1742      382E3420 
 1742      32303134 
 1742      30353236 
 1743 00d6 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1743      20726576 
 1743      6973696F 
 1743      6E203231 
 1743      31333538 
 1744 0109 30202D66 		.ascii	"0 -ffunction-sections\000"
 1744      66756E63 
 1744      74696F6E 
 1744      2D736563 
 1744      74696F6E 
 1745              	.LASF1:
 1746 011f 756E7369 		.ascii	"unsigned char\000"
 1746      676E6564 
 1746      20636861 
 1746      7200
 1747              	.LASF33:
 1748 012d 76656E74 		.ascii	"vent\000"
 1748      00
 1749              	.LASF26:
 1750 0132 7475726E 		.ascii	"turnHeatOff\000"
 1750      48656174 
 1750      4F666600 
 1751              	.LASF36:
 1752 013e 6F6E4F66 		.ascii	"onOff\000"
 1752      6600
 1753              	.LASF21:
 1754 0144 74656D70 		.ascii	"tempWindow\000"
 1754      57696E64 
 1754      6F7700
 1755              	.LASF12:
 1756 014f 696E7431 		.ascii	"int16\000"
 1756      3600
 1757              	.LASF5:
 1758 0155 6C6F6E67 		.ascii	"long unsigned int\000"
 1758      20756E73 
 1758      69676E65 
 1758      6420696E 
 1758      7400
 1759              	.LASF39:
 1760 0167 67657441 		.ascii	"getActuatorStatus\000"
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 37


 1760      63747561 
 1760      746F7253 
 1760      74617475 
 1760      7300
 1761              	.LASF13:
 1762 0179 696E7433 		.ascii	"int32\000"
 1762      3200
 1763              	.LASF42:
 1764 017f 67657454 		.ascii	"getTempAndHum\000"
 1764      656D7041 
 1764      6E644875 
 1764      6D00
 1765              	.LASF0:
 1766 018d 7369676E 		.ascii	"signed char\000"
 1766      65642063 
 1766      68617200 
 1767              	.LASF41:
 1768 0199 64617461 		.ascii	"dataget\000"
 1768      67657400 
 1769              	.LASF15:
 1770 01a1 646F7562 		.ascii	"double\000"
 1770      6C6500
 1771              	.LASF51:
 1772 01a8 69727269 		.ascii	"irrigationStatus\000"
 1772      67617469 
 1772      6F6E5374 
 1772      61747573 
 1772      00
 1773              	.LASF19:
 1774 01b9 636C6F73 		.ascii	"closeWindow\000"
 1774      6557696E 
 1774      646F7700 
 1775              	.LASF10:
 1776 01c5 75696E74 		.ascii	"uint16\000"
 1776      313600
 1777              	.LASF11:
 1778 01cc 696E7438 		.ascii	"int8\000"
 1778      00
 1779              	.LASF8:
 1780 01d1 756E7369 		.ascii	"unsigned int\000"
 1780      676E6564 
 1780      20696E74 
 1780      00
 1781              	.LASF27:
 1782 01de 74656D70 		.ascii	"temp\000"
 1782      00
 1783              	.LASF29:
 1784 01e3 61646A75 		.ascii	"adjustVentilation\000"
 1784      73745665 
 1784      6E74696C 
 1784      6174696F 
 1784      6E00
 1785              	.LASF7:
 1786 01f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 1786      206C6F6E 
 1786      6720756E 
 1786      7369676E 
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 38


 1786      65642069 
 1787              	.LASF20:
 1788 020c 72657375 		.ascii	"result\000"
 1788      6C7400
 1789              	.LASF24:
 1790 0213 68656174 		.ascii	"heat\000"
 1790      00
 1791              	.LASF28:
 1792 0218 74656D70 		.ascii	"tempHeat\000"
 1792      48656174 
 1792      00
 1793              	.LASF18:
 1794 0221 6F70656E 		.ascii	"openWindow\000"
 1794      57696E64 
 1794      6F7700
 1795              	.LASF50:
 1796 022c 696E6974 		.ascii	"initI2C\000"
 1796      49324300 
 1797              	.LASF30:
 1798 0234 73706565 		.ascii	"speed\000"
 1798      6400
 1799              	.LASF17:
 1800 023a 73697A65 		.ascii	"sizetype\000"
 1800      74797065 
 1800      00
 1801              	.LASF23:
 1802 0243 61646A75 		.ascii	"adjustHeat\000"
 1802      73744865 
 1802      617400
 1803              	.LASF6:
 1804 024e 6C6F6E67 		.ascii	"long long int\000"
 1804      206C6F6E 
 1804      6720696E 
 1804      7400
 1805              	.LASF16:
 1806 025c 63686172 		.ascii	"char\000"
 1806      00
 1807              	.LASF35:
 1808 0261 696E6465 		.ascii	"index\000"
 1808      7800
 1809              	.LASF25:
 1810 0267 7475726E 		.ascii	"turnHeatOn\000"
 1810      48656174 
 1810      4F6E00
 1811              	.LASF2:
 1812 0272 73686F72 		.ascii	"short int\000"
 1812      7420696E 
 1812      7400
 1813              	.LASF38:
 1814 027c 69727269 		.ascii	"irrigation\000"
 1814      67617469 
 1814      6F6E00
 1815              	.LASF46:
 1816 0287 736F696C 		.ascii	"soilHum\000"
 1816      48756D00 
 1817              	.LASF4:
 1818 028f 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\ccXTfHah.s 			page 39


 1818      20696E74 
 1818      00
 1819              	.LASF31:
 1820 0298 7475726E 		.ascii	"turnOnVent\000"
 1820      4F6E5665 
 1820      6E7400
 1821              	.LASF40:
 1822 02a3 77696E64 		.ascii	"window\000"
 1822      6F7700
 1823              	.LASF45:
 1824 02aa 67657453 		.ascii	"getSoilHum\000"
 1824      6F696C48 
 1824      756D00
 1825              	.LASF34:
 1826 02b5 61646A75 		.ascii	"adjustIrrigation\000"
 1826      73744972 
 1826      72696761 
 1826      74696F6E 
 1826      00
 1827              	.LASF43:
 1828 02c6 6765744C 		.ascii	"getLight\000"
 1828      69676874 
 1828      00
 1829              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
