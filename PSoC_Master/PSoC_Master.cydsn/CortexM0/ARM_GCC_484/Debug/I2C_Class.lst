ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"I2C_Class.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	irrigationStatus,1,1
  18              		.section	.text.initI2C,"ax",%progbits
  19              		.align	2
  20              		.global	initI2C
  21              		.code	16
  22              		.thumb_func
  23              		.type	initI2C, %function
  24              	initI2C:
  25              	.LFB33:
  26              		.file 1 ".\\I2C_Class.c"
   1:.\I2C_Class.c **** /* ========================================
   2:.\I2C_Class.c ****  * 
   3:.\I2C_Class.c ****  * AutoGreen - PSoC_Master
   4:.\I2C_Class.c ****  * I2C_Class.c
   5:.\I2C_Class.c ****  * (Description)
   6:.\I2C_Class.c ****  * PRJ3 - GRP9
   7:.\I2C_Class.c ****  * 2015-04-15
   8:.\I2C_Class.c ****  *
   9:.\I2C_Class.c ****  * ========================================
  10:.\I2C_Class.c **** */
  11:.\I2C_Class.c **** 
  12:.\I2C_Class.c **** // Include files
  13:.\I2C_Class.c **** #include "I2C_Class.h"
  14:.\I2C_Class.c **** 
  15:.\I2C_Class.c **** // Definitions
  16:.\I2C_Class.c **** #define TEMP_AND_HUM_SENSOR_ADDRESS 0x27
  17:.\I2C_Class.c **** #define ACTUATOR_ADRESS 0x42
  18:.\I2C_Class.c **** #define LIGHT_SENSOR_COMMAND_ADDRESS 0x00
  19:.\I2C_Class.c **** #define LIGHT_SENSOR_CONTROL_ADDRESS 0x01
  20:.\I2C_Class.c **** #define LIGHT_SENSOR_ADDRESS_LSB 0x04  
  21:.\I2C_Class.c **** #define LIGHT_SENSOR_ADDRESS_MSB 0x05
  22:.\I2C_Class.c **** 
  23:.\I2C_Class.c **** // Private data members
  24:.\I2C_Class.c **** uint8 irrigationStatus;
  25:.\I2C_Class.c **** 
  26:.\I2C_Class.c **** // Private prototypes
  27:.\I2C_Class.c **** 
  28:.\I2C_Class.c **** void initI2C(void){
  27              		.loc 1 28 0
  28              		.cfi_startproc
  29 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 2


  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 00AF     		add	r7, sp, #0
  34              		.cfi_def_cfa_register 7
  29:.\I2C_Class.c ****     I2C_Start();                    // Starts I2C component
  35              		.loc 1 29 0
  36 0004 FFF7FEFF 		bl	I2C_Start
  30:.\I2C_Class.c ****     I2C_I2CMasterClearStatus();     // Clear status flags
  37              		.loc 1 30 0
  38 0008 FFF7FEFF 		bl	I2C_I2CMasterClearStatus
  31:.\I2C_Class.c ****     CyGlobalIntEnable;
  39              		.loc 1 31 0
  40              	@ 31 ".\I2C_Class.c" 1
  41 000c 62B6     		CPSIE   i
  42              	@ 0 "" 2
  32:.\I2C_Class.c **** }
  43              		.loc 1 32 0
  44              		.code	16
  45 000e BD46     		mov	sp, r7
  46              		@ sp needed
  47 0010 80BD     		pop	{r7, pc}
  48              		.cfi_endproc
  49              	.LFE33:
  50              		.size	initI2C, .-initI2C
  51 0012 C046     		.section	.text.adjustWindow,"ax",%progbits
  52              		.align	2
  53              		.global	adjustWindow
  54              		.code	16
  55              		.thumb_func
  56              		.type	adjustWindow, %function
  57              	adjustWindow:
  58              	.LFB34:
  33:.\I2C_Class.c **** 
  34:.\I2C_Class.c **** int8 adjustWindow(uint8 pos){
  59              		.loc 1 34 0
  60              		.cfi_startproc
  61 0000 80B5     		push	{r7, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 86B0     		sub	sp, sp, #24
  66              		.cfi_def_cfa_offset 32
  67 0004 00AF     		add	r7, sp, #0
  68              		.cfi_def_cfa_register 7
  69 0006 021C     		mov	r2, r0
  70 0008 FB1D     		add	r3, r7, #7
  71 000a 1A70     		strb	r2, [r3]
  35:.\I2C_Class.c ****     uint8 openWindow = 0xF;
  72              		.loc 1 35 0
  73 000c 3B1C     		mov	r3, r7
  74 000e 0F33     		add	r3, r3, #15
  75 0010 0F22     		mov	r2, #15
  76 0012 1A70     		strb	r2, [r3]
  36:.\I2C_Class.c ****     uint8 closeWindow = 0x0;
  77              		.loc 1 36 0
  78 0014 3B1C     		mov	r3, r7
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 3


  79 0016 0E33     		add	r3, r3, #14
  80 0018 0022     		mov	r2, #0
  81 001a 1A70     		strb	r2, [r3]
  37:.\I2C_Class.c ****     uint8 result = 0;
  82              		.loc 1 37 0
  83 001c 3B1C     		mov	r3, r7
  84 001e 1733     		add	r3, r3, #23
  85 0020 0022     		mov	r2, #0
  86 0022 1A70     		strb	r2, [r3]
  38:.\I2C_Class.c ****     uint8 *tempWindow = 0;
  87              		.loc 1 38 0
  88 0024 0023     		mov	r3, #0
  89 0026 3B61     		str	r3, [r7, #16]
  39:.\I2C_Class.c ****         
  40:.\I2C_Class.c ****     if(pos == 0xF){
  90              		.loc 1 40 0
  91 0028 FB1D     		add	r3, r7, #7
  92 002a 1B78     		ldrb	r3, [r3]
  93 002c 0F2B     		cmp	r3, #15
  94 002e 0CD1     		bne	.L3
  41:.\I2C_Class.c ****         // Open window     -                write function  (adress,      dataToSend, NumberOfBytes
  42:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,&openWindow,1,I2C_I2C_MODE_COMPLETE_XFER);
  95              		.loc 1 42 0
  96 0030 3B1C     		mov	r3, r7
  97 0032 0F33     		add	r3, r3, #15
  98 0034 4220     		mov	r0, #66
  99 0036 191C     		mov	r1, r3
 100 0038 0122     		mov	r2, #1
 101 003a 0023     		mov	r3, #0
 102 003c FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 103 0040 021C     		mov	r2, r0
 104 0042 3B1C     		mov	r3, r7
 105 0044 1733     		add	r3, r3, #23
 106 0046 1A70     		strb	r2, [r3]
 107 0048 0FE0     		b	.L4
 108              	.L3:
  43:.\I2C_Class.c ****     }
  44:.\I2C_Class.c ****     else if(pos == 0x0){
 109              		.loc 1 44 0
 110 004a FB1D     		add	r3, r7, #7
 111 004c 1B78     		ldrb	r3, [r3]
 112 004e 002B     		cmp	r3, #0
 113 0050 0BD1     		bne	.L4
  45:.\I2C_Class.c ****         // Close window
  46:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,&closeWindow,1,I2C_I2C_MODE_COMPLETE_XFER); 
 114              		.loc 1 46 0
 115 0052 3B1C     		mov	r3, r7
 116 0054 0E33     		add	r3, r3, #14
 117 0056 4220     		mov	r0, #66
 118 0058 191C     		mov	r1, r3
 119 005a 0122     		mov	r2, #1
 120 005c 0023     		mov	r3, #0
 121 005e FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 122 0062 021C     		mov	r2, r0
 123 0064 3B1C     		mov	r3, r7
 124 0066 1733     		add	r3, r3, #23
 125 0068 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 4


 126              	.L4:
  47:.\I2C_Class.c ****     }
  48:.\I2C_Class.c ****     
  49:.\I2C_Class.c ****     getActuatorStatus(tempWindow, NULL, NULL, NULL);
 127              		.loc 1 49 0
 128 006a 3B69     		ldr	r3, [r7, #16]
 129 006c 181C     		mov	r0, r3
 130 006e 0021     		mov	r1, #0
 131 0070 0022     		mov	r2, #0
 132 0072 0023     		mov	r3, #0
 133 0074 FFF7FEFF 		bl	getActuatorStatus
  50:.\I2C_Class.c ****     
  51:.\I2C_Class.c ****     if (*tempWindow == pos){ 
 134              		.loc 1 51 0
 135 0078 3B69     		ldr	r3, [r7, #16]
 136 007a 1B78     		ldrb	r3, [r3]
 137 007c FA1D     		add	r2, r7, #7
 138 007e 1278     		ldrb	r2, [r2]
 139 0080 9A42     		cmp	r2, r3
 140 0082 01D1     		bne	.L5
  52:.\I2C_Class.c ****         return 0;	
 141              		.loc 1 52 0
 142 0084 0023     		mov	r3, #0
 143 0086 00E0     		b	.L7
 144              	.L5:
  53:.\I2C_Class.c ****     }
  54:.\I2C_Class.c ****     else {
  55:.\I2C_Class.c ****         return -1;
 145              		.loc 1 55 0
 146 0088 FF23     		mov	r3, #255
 147              	.L7:
 148 008a 5BB2     		sxtb	r3, r3
  56:.\I2C_Class.c ****     }
  57:.\I2C_Class.c **** }
 149              		.loc 1 57 0
 150 008c 181C     		mov	r0, r3
 151 008e BD46     		mov	sp, r7
 152 0090 06B0     		add	sp, sp, #24
 153              		@ sp needed
 154 0092 80BD     		pop	{r7, pc}
 155              		.cfi_endproc
 156              	.LFE34:
 157              		.size	adjustWindow, .-adjustWindow
 158              		.section	.text.adjustHeat,"ax",%progbits
 159              		.align	2
 160              		.global	adjustHeat
 161              		.code	16
 162              		.thumb_func
 163              		.type	adjustHeat, %function
 164              	adjustHeat:
 165              	.LFB35:
  58:.\I2C_Class.c **** 
  59:.\I2C_Class.c **** int8 adjustHeat(uint8 heat){
 166              		.loc 1 59 0
 167              		.cfi_startproc
 168 0000 80B5     		push	{r7, lr}
 169              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 5


 170              		.cfi_offset 7, -8
 171              		.cfi_offset 14, -4
 172 0002 86B0     		sub	sp, sp, #24
 173              		.cfi_def_cfa_offset 32
 174 0004 00AF     		add	r7, sp, #0
 175              		.cfi_def_cfa_register 7
 176 0006 021C     		mov	r2, r0
 177 0008 FB1D     		add	r3, r7, #7
 178 000a 1A70     		strb	r2, [r3]
  60:.\I2C_Class.c ****     uint8 turnHeatOn = 0b01000111;
 179              		.loc 1 60 0
 180 000c 3B1C     		mov	r3, r7
 181 000e 0F33     		add	r3, r3, #15
 182 0010 4722     		mov	r2, #71
 183 0012 1A70     		strb	r2, [r3]
  61:.\I2C_Class.c ****     uint8 turnHeatOff = 0b01000000;
 184              		.loc 1 61 0
 185 0014 3B1C     		mov	r3, r7
 186 0016 0E33     		add	r3, r3, #14
 187 0018 4022     		mov	r2, #64
 188 001a 1A70     		strb	r2, [r3]
  62:.\I2C_Class.c ****     uint8 result = 0;
 189              		.loc 1 62 0
 190 001c 3B1C     		mov	r3, r7
 191 001e 1733     		add	r3, r3, #23
 192 0020 0022     		mov	r2, #0
 193 0022 1A70     		strb	r2, [r3]
  63:.\I2C_Class.c ****     uint8 *tempHeat;
  64:.\I2C_Class.c ****     *tempHeat = 0;
 194              		.loc 1 64 0
 195 0024 3B69     		ldr	r3, [r7, #16]
 196 0026 0022     		mov	r2, #0
 197 0028 1A70     		strb	r2, [r3]
  65:.\I2C_Class.c ****     
  66:.\I2C_Class.c ****     if(heat == 0b111){
 198              		.loc 1 66 0
 199 002a FB1D     		add	r3, r7, #7
 200 002c 1B78     		ldrb	r3, [r3]
 201 002e 072B     		cmp	r3, #7
 202 0030 0CD1     		bne	.L9
  67:.\I2C_Class.c ****         // Turn on heat
  68:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,&turnHeatOn,1,I2C_I2C_MODE_COMPLETE_XFER);
 203              		.loc 1 68 0
 204 0032 3B1C     		mov	r3, r7
 205 0034 0F33     		add	r3, r3, #15
 206 0036 4220     		mov	r0, #66
 207 0038 191C     		mov	r1, r3
 208 003a 0122     		mov	r2, #1
 209 003c 0023     		mov	r3, #0
 210 003e FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 211 0042 021C     		mov	r2, r0
 212 0044 3B1C     		mov	r3, r7
 213 0046 1733     		add	r3, r3, #23
 214 0048 1A70     		strb	r2, [r3]
 215 004a 0FE0     		b	.L10
 216              	.L9:
  69:.\I2C_Class.c ****     }
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 6


  70:.\I2C_Class.c ****     else if(heat == 0b0){
 217              		.loc 1 70 0
 218 004c FB1D     		add	r3, r7, #7
 219 004e 1B78     		ldrb	r3, [r3]
 220 0050 002B     		cmp	r3, #0
 221 0052 0BD1     		bne	.L10
  71:.\I2C_Class.c ****         // Turn off heat
  72:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,&turnHeatOff,1,I2C_I2C_MODE_COMPLETE_XFER);
 222              		.loc 1 72 0
 223 0054 3B1C     		mov	r3, r7
 224 0056 0E33     		add	r3, r3, #14
 225 0058 4220     		mov	r0, #66
 226 005a 191C     		mov	r1, r3
 227 005c 0122     		mov	r2, #1
 228 005e 0023     		mov	r3, #0
 229 0060 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 230 0064 021C     		mov	r2, r0
 231 0066 3B1C     		mov	r3, r7
 232 0068 1733     		add	r3, r3, #23
 233 006a 1A70     		strb	r2, [r3]
 234              	.L10:
  73:.\I2C_Class.c ****     }
  74:.\I2C_Class.c ****     
  75:.\I2C_Class.c ****     getActuatorStatus(NULL, tempHeat, NULL, NULL);
 235              		.loc 1 75 0
 236 006c 3B69     		ldr	r3, [r7, #16]
 237 006e 0020     		mov	r0, #0
 238 0070 191C     		mov	r1, r3
 239 0072 0022     		mov	r2, #0
 240 0074 0023     		mov	r3, #0
 241 0076 FFF7FEFF 		bl	getActuatorStatus
  76:.\I2C_Class.c ****     
  77:.\I2C_Class.c ****     if (*tempHeat == heat){
 242              		.loc 1 77 0
 243 007a 3B69     		ldr	r3, [r7, #16]
 244 007c 1B78     		ldrb	r3, [r3]
 245 007e FA1D     		add	r2, r7, #7
 246 0080 1278     		ldrb	r2, [r2]
 247 0082 9A42     		cmp	r2, r3
 248 0084 01D1     		bne	.L11
  78:.\I2C_Class.c ****         return 0;
 249              		.loc 1 78 0
 250 0086 0023     		mov	r3, #0
 251 0088 00E0     		b	.L13
 252              	.L11:
  79:.\I2C_Class.c ****     }
  80:.\I2C_Class.c ****     else {
  81:.\I2C_Class.c ****         return -1;   
 253              		.loc 1 81 0
 254 008a FF23     		mov	r3, #255
 255              	.L13:
 256 008c 5BB2     		sxtb	r3, r3
  82:.\I2C_Class.c ****     }
  83:.\I2C_Class.c **** }
 257              		.loc 1 83 0
 258 008e 181C     		mov	r0, r3
 259 0090 BD46     		mov	sp, r7
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 7


 260 0092 06B0     		add	sp, sp, #24
 261              		@ sp needed
 262 0094 80BD     		pop	{r7, pc}
 263              		.cfi_endproc
 264              	.LFE35:
 265              		.size	adjustHeat, .-adjustHeat
 266 0096 C046     		.section	.text.adjustVentilation,"ax",%progbits
 267              		.align	2
 268              		.global	adjustVentilation
 269              		.code	16
 270              		.thumb_func
 271              		.type	adjustVentilation, %function
 272              	adjustVentilation:
 273              	.LFB36:
  84:.\I2C_Class.c **** 
  85:.\I2C_Class.c **** int8 adjustVentilation(uint8 speed){
 274              		.loc 1 85 0
 275              		.cfi_startproc
 276 0000 80B5     		push	{r7, lr}
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 7, -8
 279              		.cfi_offset 14, -4
 280 0002 86B0     		sub	sp, sp, #24
 281              		.cfi_def_cfa_offset 32
 282 0004 00AF     		add	r7, sp, #0
 283              		.cfi_def_cfa_register 7
 284 0006 021C     		mov	r2, r0
 285 0008 FB1D     		add	r3, r7, #7
 286 000a 1A70     		strb	r2, [r3]
  86:.\I2C_Class.c ****     uint8 turnOnVent = 0b10000111;
 287              		.loc 1 86 0
 288 000c 3B1C     		mov	r3, r7
 289 000e 0F33     		add	r3, r3, #15
 290 0010 8722     		mov	r2, #135
 291 0012 1A70     		strb	r2, [r3]
  87:.\I2C_Class.c ****     uint8 turnOffVent = 0b10000000;
 292              		.loc 1 87 0
 293 0014 3B1C     		mov	r3, r7
 294 0016 0E33     		add	r3, r3, #14
 295 0018 8022     		mov	r2, #128
 296 001a 1A70     		strb	r2, [r3]
  88:.\I2C_Class.c ****     uint8 result = 0;
 297              		.loc 1 88 0
 298 001c 3B1C     		mov	r3, r7
 299 001e 1733     		add	r3, r3, #23
 300 0020 0022     		mov	r2, #0
 301 0022 1A70     		strb	r2, [r3]
  89:.\I2C_Class.c ****     uint8 *vent;
  90:.\I2C_Class.c ****     *vent = 0;
 302              		.loc 1 90 0
 303 0024 3B69     		ldr	r3, [r7, #16]
 304 0026 0022     		mov	r2, #0
 305 0028 1A70     		strb	r2, [r3]
  91:.\I2C_Class.c ****     
  92:.\I2C_Class.c ****     if(speed == 0b111){
 306              		.loc 1 92 0
 307 002a FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 8


 308 002c 1B78     		ldrb	r3, [r3]
 309 002e 072B     		cmp	r3, #7
 310 0030 0CD1     		bne	.L15
  93:.\I2C_Class.c ****         // Turn vent on
  94:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,&turnOnVent,1,I2C_I2C_MODE_COMPLETE_XFER);
 311              		.loc 1 94 0
 312 0032 3B1C     		mov	r3, r7
 313 0034 0F33     		add	r3, r3, #15
 314 0036 4220     		mov	r0, #66
 315 0038 191C     		mov	r1, r3
 316 003a 0122     		mov	r2, #1
 317 003c 0023     		mov	r3, #0
 318 003e FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 319 0042 021C     		mov	r2, r0
 320 0044 3B1C     		mov	r3, r7
 321 0046 1733     		add	r3, r3, #23
 322 0048 1A70     		strb	r2, [r3]
 323 004a 10E0     		b	.L16
 324              	.L15:
  95:.\I2C_Class.c ****     }
  96:.\I2C_Class.c ****     else if(speed == 0b0){
 325              		.loc 1 96 0
 326 004c FB1D     		add	r3, r7, #7
 327 004e 1B78     		ldrb	r3, [r3]
 328 0050 002B     		cmp	r3, #0
 329 0052 0CD1     		bne	.L16
  97:.\I2C_Class.c ****         // Turn vent off
  98:.\I2C_Class.c ****         result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS,&turnOffVent,1,I2C_I2C_MODE_COMPLETE_XFER);
 330              		.loc 1 98 0
 331 0054 3B1C     		mov	r3, r7
 332 0056 0E33     		add	r3, r3, #14
 333 0058 4220     		mov	r0, #66
 334 005a 191C     		mov	r1, r3
 335 005c 0122     		mov	r2, #1
 336 005e 0023     		mov	r3, #0
 337 0060 FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 338 0064 021C     		mov	r2, r0
 339 0066 3B1C     		mov	r3, r7
 340 0068 1733     		add	r3, r3, #23
 341 006a 1A70     		strb	r2, [r3]
  99:.\I2C_Class.c ****     }
 100:.\I2C_Class.c ****     
 101:.\I2C_Class.c ****     while (I2C_I2CMasterStatus() == I2C_I2C_MSTAT_WR_CMPLT);
 342              		.loc 1 101 0
 343 006c FFE7     		b	.L21
 344              	.L16:
 345              	.L21:
 346 006e C046     		mov	r8, r8
 347              	.L17:
 348              		.loc 1 101 0 is_stmt 0 discriminator 1
 349 0070 FFF7FEFF 		bl	I2C_I2CMasterStatus
 350 0074 031C     		mov	r3, r0
 351 0076 022B     		cmp	r3, #2
 352 0078 FAD0     		beq	.L17
 102:.\I2C_Class.c ****     getActuatorStatus(NULL, NULL, vent, NULL);
 353              		.loc 1 102 0 is_stmt 1
 354 007a 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 9


 355 007c 0020     		mov	r0, #0
 356 007e 0021     		mov	r1, #0
 357 0080 1A1C     		mov	r2, r3
 358 0082 0023     		mov	r3, #0
 359 0084 FFF7FEFF 		bl	getActuatorStatus
 103:.\I2C_Class.c ****     
 104:.\I2C_Class.c ****     if (*vent == speed){
 360              		.loc 1 104 0
 361 0088 3B69     		ldr	r3, [r7, #16]
 362 008a 1B78     		ldrb	r3, [r3]
 363 008c FA1D     		add	r2, r7, #7
 364 008e 1278     		ldrb	r2, [r2]
 365 0090 9A42     		cmp	r2, r3
 366 0092 01D1     		bne	.L18
 105:.\I2C_Class.c ****             return 0;
 367              		.loc 1 105 0
 368 0094 0023     		mov	r3, #0
 369 0096 00E0     		b	.L20
 370              	.L18:
 106:.\I2C_Class.c ****         }
 107:.\I2C_Class.c ****     else {
 108:.\I2C_Class.c ****         return -1;       
 371              		.loc 1 108 0
 372 0098 FF23     		mov	r3, #255
 373              	.L20:
 374 009a 5BB2     		sxtb	r3, r3
 109:.\I2C_Class.c ****     }
 110:.\I2C_Class.c **** }
 375              		.loc 1 110 0
 376 009c 181C     		mov	r0, r3
 377 009e BD46     		mov	sp, r7
 378 00a0 06B0     		add	sp, sp, #24
 379              		@ sp needed
 380 00a2 80BD     		pop	{r7, pc}
 381              		.cfi_endproc
 382              	.LFE36:
 383              		.size	adjustVentilation, .-adjustVentilation
 384              		.section	.text.adjustIrrigation,"ax",%progbits
 385              		.align	2
 386              		.global	adjustIrrigation
 387              		.code	16
 388              		.thumb_func
 389              		.type	adjustIrrigation, %function
 390              	adjustIrrigation:
 391              	.LFB37:
 111:.\I2C_Class.c **** 
 112:.\I2C_Class.c **** int8 adjustIrrigation(uint8 index, uint8 onOff){
 392              		.loc 1 112 0
 393              		.cfi_startproc
 394 0000 80B5     		push	{r7, lr}
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 7, -8
 397              		.cfi_offset 14, -4
 398 0002 84B0     		sub	sp, sp, #16
 399              		.cfi_def_cfa_offset 24
 400 0004 00AF     		add	r7, sp, #0
 401              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 10


 402 0006 0A1C     		mov	r2, r1
 403 0008 FB1D     		add	r3, r7, #7
 404 000a 011C     		add	r1, r0, #0
 405 000c 1970     		strb	r1, [r3]
 406 000e BB1D     		add	r3, r7, #6
 407 0010 1A70     		strb	r2, [r3]
 113:.\I2C_Class.c ****     uint8 irriTransfer;
 114:.\I2C_Class.c ****     uint8 *irrigation;
 115:.\I2C_Class.c ****     *irrigation = 0;
 408              		.loc 1 115 0
 409 0012 FB68     		ldr	r3, [r7, #12]
 410 0014 0022     		mov	r2, #0
 411 0016 1A70     		strb	r2, [r3]
 116:.\I2C_Class.c ****     uint8 result = 0;
 412              		.loc 1 116 0
 413 0018 3B1C     		mov	r3, r7
 414 001a 0B33     		add	r3, r3, #11
 415 001c 0022     		mov	r2, #0
 416 001e 1A70     		strb	r2, [r3]
 117:.\I2C_Class.c **** 
 118:.\I2C_Class.c ****         /* In order for this code to function properly, the static int "irrigation" 
 119:.\I2C_Class.c ****         has to get updated each time this function is called. */
 120:.\I2C_Class.c ****     if (onOff == 1){    // Irrigation turn on
 417              		.loc 1 120 0
 418 0020 BB1D     		add	r3, r7, #6
 419 0022 1B78     		ldrb	r3, [r3]
 420 0024 012B     		cmp	r3, #1
 421 0026 19D1     		bne	.L23
 121:.\I2C_Class.c ****         irriTransfer = (irrigationStatus |= (1 << index));
 422              		.loc 1 121 0
 423 0028 FB1D     		add	r3, r7, #7
 424 002a 1B78     		ldrb	r3, [r3]
 425 002c 0122     		mov	r2, #1
 426 002e 111C     		mov	r1, r2
 427 0030 9940     		lsl	r1, r1, r3
 428 0032 0B1C     		mov	r3, r1
 429 0034 DAB2     		uxtb	r2, r3
 430 0036 2A4B     		ldr	r3, .L29
 431 0038 1B78     		ldrb	r3, [r3]
 432 003a DBB2     		uxtb	r3, r3
 433 003c 1343     		orr	r3, r2
 434 003e DBB2     		uxtb	r3, r3
 435 0040 DAB2     		uxtb	r2, r3
 436 0042 274B     		ldr	r3, .L29
 437 0044 1A70     		strb	r2, [r3]
 438 0046 264B     		ldr	r3, .L29
 439 0048 1A78     		ldrb	r2, [r3]
 440 004a 3B1C     		mov	r3, r7
 441 004c 0A33     		add	r3, r3, #10
 442 004e 1A70     		strb	r2, [r3]
 122:.\I2C_Class.c ****         irrigationStatus = irriTransfer;
 443              		.loc 1 122 0
 444 0050 3B1C     		mov	r3, r7
 445 0052 0A33     		add	r3, r3, #10
 446 0054 1A78     		ldrb	r2, [r3]
 447 0056 224B     		ldr	r3, .L29
 448 0058 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 11


 449 005a 21E0     		b	.L24
 450              	.L23:
 123:.\I2C_Class.c ****     }
 124:.\I2C_Class.c ****     else if (onOff == 0){   // Irrigation turn off
 451              		.loc 1 124 0
 452 005c BB1D     		add	r3, r7, #6
 453 005e 1B78     		ldrb	r3, [r3]
 454 0060 002B     		cmp	r3, #0
 455 0062 1BD1     		bne	.L25
 125:.\I2C_Class.c ****         irriTransfer = (irrigationStatus &= ~(1 << index));
 456              		.loc 1 125 0
 457 0064 FB1D     		add	r3, r7, #7
 458 0066 1B78     		ldrb	r3, [r3]
 459 0068 0122     		mov	r2, #1
 460 006a 111C     		mov	r1, r2
 461 006c 9940     		lsl	r1, r1, r3
 462 006e 0B1C     		mov	r3, r1
 463 0070 DBB2     		uxtb	r3, r3
 464 0072 DB43     		mvn	r3, r3
 465 0074 DBB2     		uxtb	r3, r3
 466 0076 1A4A     		ldr	r2, .L29
 467 0078 1278     		ldrb	r2, [r2]
 468 007a D2B2     		uxtb	r2, r2
 469 007c 1340     		and	r3, r2
 470 007e DBB2     		uxtb	r3, r3
 471 0080 DAB2     		uxtb	r2, r3
 472 0082 174B     		ldr	r3, .L29
 473 0084 1A70     		strb	r2, [r3]
 474 0086 164B     		ldr	r3, .L29
 475 0088 1A78     		ldrb	r2, [r3]
 476 008a 3B1C     		mov	r3, r7
 477 008c 0A33     		add	r3, r3, #10
 478 008e 1A70     		strb	r2, [r3]
 126:.\I2C_Class.c ****         irrigationStatus = irriTransfer;
 479              		.loc 1 126 0
 480 0090 3B1C     		mov	r3, r7
 481 0092 0A33     		add	r3, r3, #10
 482 0094 1A78     		ldrb	r2, [r3]
 483 0096 124B     		ldr	r3, .L29
 484 0098 1A70     		strb	r2, [r3]
 485 009a 01E0     		b	.L24
 486              	.L25:
 127:.\I2C_Class.c ****     }
 128:.\I2C_Class.c ****     else{
 129:.\I2C_Class.c ****     // Bad argument.
 130:.\I2C_Class.c ****     return -1;
 487              		.loc 1 130 0
 488 009c FF23     		mov	r3, #255
 489 009e 1AE0     		b	.L28
 490              	.L24:
 131:.\I2C_Class.c ****     }
 132:.\I2C_Class.c ****     
 133:.\I2C_Class.c ****     result = I2C_I2CMasterWriteBuf(ACTUATOR_ADRESS, &irriTransfer ,1,I2C_I2C_MODE_COMPLETE_XFER);
 491              		.loc 1 133 0
 492 00a0 3B1C     		mov	r3, r7
 493 00a2 0A33     		add	r3, r3, #10
 494 00a4 4220     		mov	r0, #66
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 12


 495 00a6 191C     		mov	r1, r3
 496 00a8 0122     		mov	r2, #1
 497 00aa 0023     		mov	r3, #0
 498 00ac FFF7FEFF 		bl	I2C_I2CMasterWriteBuf
 499 00b0 021C     		mov	r2, r0
 500 00b2 3B1C     		mov	r3, r7
 501 00b4 0B33     		add	r3, r3, #11
 502 00b6 1A70     		strb	r2, [r3]
 134:.\I2C_Class.c ****  
 135:.\I2C_Class.c ****     getActuatorStatus(NULL, NULL, NULL, irrigation);
 503              		.loc 1 135 0
 504 00b8 FB68     		ldr	r3, [r7, #12]
 505 00ba 0020     		mov	r0, #0
 506 00bc 0021     		mov	r1, #0
 507 00be 0022     		mov	r2, #0
 508 00c0 FFF7FEFF 		bl	getActuatorStatus
 136:.\I2C_Class.c ****     
 137:.\I2C_Class.c ****     if(*irrigation == irrigationStatus){
 509              		.loc 1 137 0
 510 00c4 FB68     		ldr	r3, [r7, #12]
 511 00c6 1A78     		ldrb	r2, [r3]
 512 00c8 054B     		ldr	r3, .L29
 513 00ca 1B78     		ldrb	r3, [r3]
 514 00cc 9A42     		cmp	r2, r3
 515 00ce 01D1     		bne	.L27
 138:.\I2C_Class.c ****         return 0;
 516              		.loc 1 138 0
 517 00d0 0023     		mov	r3, #0
 518 00d2 00E0     		b	.L28
 519              	.L27:
 139:.\I2C_Class.c ****     }
 140:.\I2C_Class.c ****     else {
 141:.\I2C_Class.c ****         return -1;
 520              		.loc 1 141 0
 521 00d4 FF23     		mov	r3, #255
 522              	.L28:
 523 00d6 5BB2     		sxtb	r3, r3
 142:.\I2C_Class.c ****     }
 143:.\I2C_Class.c **** }
 524              		.loc 1 143 0
 525 00d8 181C     		mov	r0, r3
 526 00da BD46     		mov	sp, r7
 527 00dc 04B0     		add	sp, sp, #16
 528              		@ sp needed
 529 00de 80BD     		pop	{r7, pc}
 530              	.L30:
 531              		.align	2
 532              	.L29:
 533 00e0 00000000 		.word	irrigationStatus
 534              		.cfi_endproc
 535              	.LFE37:
 536              		.size	adjustIrrigation, .-adjustIrrigation
 537              		.section	.text.getActuatorStatus,"ax",%progbits
 538              		.align	2
 539              		.global	getActuatorStatus
 540              		.code	16
 541              		.thumb_func
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 13


 542              		.type	getActuatorStatus, %function
 543              	getActuatorStatus:
 544              	.LFB38:
 144:.\I2C_Class.c **** 
 145:.\I2C_Class.c **** int8 getActuatorStatus(uint8* window, uint8* heat, uint8* vent, uint8* irrigation){
 545              		.loc 1 145 0
 546              		.cfi_startproc
 547 0000 80B5     		push	{r7, lr}
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 7, -8
 550              		.cfi_offset 14, -4
 551 0002 86B0     		sub	sp, sp, #24
 552              		.cfi_def_cfa_offset 32
 553 0004 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 555 0006 F860     		str	r0, [r7, #12]
 556 0008 B960     		str	r1, [r7, #8]
 557 000a 7A60     		str	r2, [r7, #4]
 558 000c 3B60     		str	r3, [r7]
 146:.\I2C_Class.c ****     uint8 dataget[2];
 147:.\I2C_Class.c ****     uint8 result = 0;
 559              		.loc 1 147 0
 560 000e 3B1C     		mov	r3, r7
 561 0010 1733     		add	r3, r3, #23
 562 0012 0022     		mov	r2, #0
 563 0014 1A70     		strb	r2, [r3]
 148:.\I2C_Class.c ****     
 149:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(ACTUATOR_ADRESS, dataget, 2, I2C_I2C_MODE_COMPLETE_XFER);
 564              		.loc 1 149 0
 565 0016 3B1C     		mov	r3, r7
 566 0018 1433     		add	r3, r3, #20
 567 001a 4220     		mov	r0, #66
 568 001c 191C     		mov	r1, r3
 569 001e 0222     		mov	r2, #2
 570 0020 0023     		mov	r3, #0
 571 0022 FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 572 0026 021C     		mov	r2, r0
 573 0028 3B1C     		mov	r3, r7
 574 002a 1733     		add	r3, r3, #23
 575 002c 1A70     		strb	r2, [r3]
 150:.\I2C_Class.c ****     
 151:.\I2C_Class.c ****     if (window)
 576              		.loc 1 151 0
 577 002e FB68     		ldr	r3, [r7, #12]
 578 0030 002B     		cmp	r3, #0
 579 0032 06D0     		beq	.L32
 152:.\I2C_Class.c ****     {                                   // Expecting to receive MSB first 
 153:.\I2C_Class.c ****        *window = (dataget[0] >> 3);      // Shifting out the 3 least significant bits.
 580              		.loc 1 153 0
 581 0034 3B1C     		mov	r3, r7
 582 0036 1433     		add	r3, r3, #20
 583 0038 1B78     		ldrb	r3, [r3]
 584 003a DB08     		lsr	r3, r3, #3
 585 003c DAB2     		uxtb	r2, r3
 586 003e FB68     		ldr	r3, [r7, #12]
 587 0040 1A70     		strb	r2, [r3]
 588              	.L32:
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 14


 154:.\I2C_Class.c ****     }
 155:.\I2C_Class.c ****     if (heat){              
 589              		.loc 1 155 0
 590 0042 BB68     		ldr	r3, [r7, #8]
 591 0044 002B     		cmp	r3, #0
 592 0046 09D0     		beq	.L33
 156:.\I2C_Class.c ****     *heat = ((dataget[0] & 0b00001110) >> 1);       // Ignoring everything but bit 1-3 and shifting
 593              		.loc 1 156 0
 594 0048 3B1C     		mov	r3, r7
 595 004a 1433     		add	r3, r3, #20
 596 004c 1B78     		ldrb	r3, [r3]
 597 004e 1A1C     		mov	r2, r3
 598 0050 0E23     		mov	r3, #14
 599 0052 1340     		and	r3, r2
 600 0054 5B10     		asr	r3, r3, #1
 601 0056 DAB2     		uxtb	r2, r3
 602 0058 BB68     		ldr	r3, [r7, #8]
 603 005a 1A70     		strb	r2, [r3]
 604              	.L33:
 157:.\I2C_Class.c ****     }
 158:.\I2C_Class.c ****     if (vent){
 605              		.loc 1 158 0
 606 005c 7B68     		ldr	r3, [r7, #4]
 607 005e 002B     		cmp	r3, #0
 608 0060 18D0     		beq	.L34
 159:.\I2C_Class.c ****         if ((dataget[0] & 0b00000001) == 0b00000001){   // Maybe we can find a smarter way to do th
 609              		.loc 1 159 0
 610 0062 3B1C     		mov	r3, r7
 611 0064 1433     		add	r3, r3, #20
 612 0066 1B78     		ldrb	r3, [r3]
 613 0068 1A1C     		mov	r2, r3
 614 006a 0123     		mov	r3, #1
 615 006c 1340     		and	r3, r2
 616 006e 0AD0     		beq	.L35
 160:.\I2C_Class.c ****             *vent = (dataget[1] >> 5) | 0b00000100;                                           // Th
 617              		.loc 1 160 0
 618 0070 3B1C     		mov	r3, r7
 619 0072 1433     		add	r3, r3, #20
 620 0074 5B78     		ldrb	r3, [r3, #1]
 621 0076 5B09     		lsr	r3, r3, #5
 622 0078 DBB2     		uxtb	r3, r3
 623 007a 0422     		mov	r2, #4
 624 007c 1343     		orr	r3, r2
 625 007e DAB2     		uxtb	r2, r3
 626 0080 7B68     		ldr	r3, [r7, #4]
 627 0082 1A70     		strb	r2, [r3]
 628 0084 06E0     		b	.L34
 629              	.L35:
 161:.\I2C_Class.c ****         }                                                    // Shifting 5 right so only 2 bits are
 162:.\I2C_Class.c ****         else {
 163:.\I2C_Class.c ****             *vent = (dataget[1] >> 5) | 0b00000000;         // shifting 5 right since only the to m
 630              		.loc 1 163 0
 631 0086 3B1C     		mov	r3, r7
 632 0088 1433     		add	r3, r3, #20
 633 008a 5B78     		ldrb	r3, [r3, #1]
 634 008c 5B09     		lsr	r3, r3, #5
 635 008e DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 15


 636 0090 7B68     		ldr	r3, [r7, #4]
 637 0092 1A70     		strb	r2, [r3]
 638              	.L34:
 164:.\I2C_Class.c ****         }
 165:.\I2C_Class.c ****     }
 166:.\I2C_Class.c ****     if (irrigation){
 639              		.loc 1 166 0
 640 0094 3B68     		ldr	r3, [r7]
 641 0096 002B     		cmp	r3, #0
 642 0098 07D0     		beq	.L36
 167:.\I2C_Class.c ****         *irrigation = (dataget[1] & 0b00111111);        // Ignoring two most significant bits.
 643              		.loc 1 167 0
 644 009a 3B1C     		mov	r3, r7
 645 009c 1433     		add	r3, r3, #20
 646 009e 5A78     		ldrb	r2, [r3, #1]
 647 00a0 3F23     		mov	r3, #63
 648 00a2 1340     		and	r3, r2
 649 00a4 DAB2     		uxtb	r2, r3
 650 00a6 3B68     		ldr	r3, [r7]
 651 00a8 1A70     		strb	r2, [r3]
 652              	.L36:
 168:.\I2C_Class.c ****     }   
 169:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 653              		.loc 1 169 0
 654 00aa 3B1C     		mov	r3, r7
 655 00ac 1733     		add	r3, r3, #23
 656 00ae 1B78     		ldrb	r3, [r3]
 657 00b0 002B     		cmp	r3, #0
 658 00b2 01D1     		bne	.L37
 170:.\I2C_Class.c ****         return 0;
 659              		.loc 1 170 0
 660 00b4 0023     		mov	r3, #0
 661 00b6 00E0     		b	.L39
 662              	.L37:
 171:.\I2C_Class.c ****     }
 172:.\I2C_Class.c ****     else {
 173:.\I2C_Class.c ****         return -1;   
 663              		.loc 1 173 0
 664 00b8 FF23     		mov	r3, #255
 665              	.L39:
 666 00ba 5BB2     		sxtb	r3, r3
 174:.\I2C_Class.c ****     }
 175:.\I2C_Class.c **** }
 667              		.loc 1 175 0
 668 00bc 181C     		mov	r0, r3
 669 00be BD46     		mov	sp, r7
 670 00c0 06B0     		add	sp, sp, #24
 671              		@ sp needed
 672 00c2 80BD     		pop	{r7, pc}
 673              		.cfi_endproc
 674              	.LFE38:
 675              		.size	getActuatorStatus, .-getActuatorStatus
 676              		.section	.text.getTempAndHum,"ax",%progbits
 677              		.align	2
 678              		.global	getTempAndHum
 679              		.code	16
 680              		.thumb_func
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 16


 681              		.type	getTempAndHum, %function
 682              	getTempAndHum:
 683              	.LFB39:
 176:.\I2C_Class.c **** 
 177:.\I2C_Class.c **** int8 getTempAndHum(int32* temp, int32* hum){
 684              		.loc 1 177 0
 685              		.cfi_startproc
 686 0000 80B5     		push	{r7, lr}
 687              		.cfi_def_cfa_offset 8
 688              		.cfi_offset 7, -8
 689              		.cfi_offset 14, -4
 690 0002 84B0     		sub	sp, sp, #16
 691              		.cfi_def_cfa_offset 24
 692 0004 00AF     		add	r7, sp, #0
 693              		.cfi_def_cfa_register 7
 694 0006 7860     		str	r0, [r7, #4]
 695 0008 3960     		str	r1, [r7]
 178:.\I2C_Class.c ****     uint8 dataget[4];
 179:.\I2C_Class.c ****     uint8 result = 0;
 696              		.loc 1 179 0
 697 000a 3B1C     		mov	r3, r7
 698 000c 0F33     		add	r3, r3, #15
 699 000e 0022     		mov	r2, #0
 700 0010 1A70     		strb	r2, [r3]
 180:.\I2C_Class.c ****     
 181:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(TEMP_AND_HUM_SENSOR_ADDRESS, dataget, 4, I2C_I2C_MODE_COMPLETE_XF
 701              		.loc 1 181 0
 702 0012 3B1C     		mov	r3, r7
 703 0014 0833     		add	r3, r3, #8
 704 0016 2720     		mov	r0, #39
 705 0018 191C     		mov	r1, r3
 706 001a 0422     		mov	r2, #4
 707 001c 0023     		mov	r3, #0
 708 001e FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 709 0022 021C     		mov	r2, r0
 710 0024 3B1C     		mov	r3, r7
 711 0026 0F33     		add	r3, r3, #15
 712 0028 1A70     		strb	r2, [r3]
 182:.\I2C_Class.c ****         // Expecting to receive MSB first.
 183:.\I2C_Class.c ****     *temp = ((dataget[0] << 7) | dataget[1]);   
 713              		.loc 1 183 0
 714 002a 3B1C     		mov	r3, r7
 715 002c 0833     		add	r3, r3, #8
 716 002e 1B78     		ldrb	r3, [r3]
 717 0030 DA01     		lsl	r2, r3, #7
 718 0032 3B1C     		mov	r3, r7
 719 0034 0833     		add	r3, r3, #8
 720 0036 5B78     		ldrb	r3, [r3, #1]
 721 0038 1A43     		orr	r2, r3
 722 003a 7B68     		ldr	r3, [r7, #4]
 723 003c 1A60     		str	r2, [r3]
 184:.\I2C_Class.c ****     *hum = ((dataget[2] << 7) | dataget[3]);
 724              		.loc 1 184 0
 725 003e 3B1C     		mov	r3, r7
 726 0040 0833     		add	r3, r3, #8
 727 0042 9B78     		ldrb	r3, [r3, #2]
 728 0044 DA01     		lsl	r2, r3, #7
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 17


 729 0046 3B1C     		mov	r3, r7
 730 0048 0833     		add	r3, r3, #8
 731 004a DB78     		ldrb	r3, [r3, #3]
 732 004c 1A43     		orr	r2, r3
 733 004e 3B68     		ldr	r3, [r7]
 734 0050 1A60     		str	r2, [r3]
 185:.\I2C_Class.c ****     
 186:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 735              		.loc 1 186 0
 736 0052 3B1C     		mov	r3, r7
 737 0054 0F33     		add	r3, r3, #15
 738 0056 1B78     		ldrb	r3, [r3]
 739 0058 002B     		cmp	r3, #0
 740 005a 01D1     		bne	.L41
 187:.\I2C_Class.c ****         return 0;   // No error 
 741              		.loc 1 187 0
 742 005c 0023     		mov	r3, #0
 743 005e 00E0     		b	.L43
 744              	.L41:
 188:.\I2C_Class.c ****     }
 189:.\I2C_Class.c ****     else {
 190:.\I2C_Class.c ****         return -1;
 745              		.loc 1 190 0
 746 0060 FF23     		mov	r3, #255
 747              	.L43:
 748 0062 5BB2     		sxtb	r3, r3
 191:.\I2C_Class.c ****     }
 192:.\I2C_Class.c **** }
 749              		.loc 1 192 0
 750 0064 181C     		mov	r0, r3
 751 0066 BD46     		mov	sp, r7
 752 0068 04B0     		add	sp, sp, #16
 753              		@ sp needed
 754 006a 80BD     		pop	{r7, pc}
 755              		.cfi_endproc
 756              	.LFE39:
 757              		.size	getTempAndHum, .-getTempAndHum
 758              		.section	.text.getLight,"ax",%progbits
 759              		.align	2
 760              		.global	getLight
 761              		.code	16
 762              		.thumb_func
 763              		.type	getLight, %function
 764              	getLight:
 765              	.LFB40:
 193:.\I2C_Class.c **** 
 194:.\I2C_Class.c **** int8 getLight(int32* light){
 766              		.loc 1 194 0
 767              		.cfi_startproc
 768 0000 80B5     		push	{r7, lr}
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 7, -8
 771              		.cfi_offset 14, -4
 772 0002 84B0     		sub	sp, sp, #16
 773              		.cfi_def_cfa_offset 24
 774 0004 00AF     		add	r7, sp, #0
 775              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 18


 776 0006 7860     		str	r0, [r7, #4]
 195:.\I2C_Class.c ****     uint8 dataget[2];
 196:.\I2C_Class.c ****     uint8 result = 0;
 777              		.loc 1 196 0
 778 0008 3B1C     		mov	r3, r7
 779 000a 0F33     		add	r3, r3, #15
 780 000c 0022     		mov	r2, #0
 781 000e 1A70     		strb	r2, [r3]
 197:.\I2C_Class.c ****     
 198:.\I2C_Class.c ****     result = I2C_I2CMasterReadBuf(LIGHT_SENSOR_ADDRESS_MSB, (uint8*) dataget, 2, I2C_I2C_MODE_COMPL
 782              		.loc 1 198 0
 783 0010 3B1C     		mov	r3, r7
 784 0012 0C33     		add	r3, r3, #12
 785 0014 0520     		mov	r0, #5
 786 0016 191C     		mov	r1, r3
 787 0018 0222     		mov	r2, #2
 788 001a 0023     		mov	r3, #0
 789 001c FFF7FEFF 		bl	I2C_I2CMasterReadBuf
 790 0020 021C     		mov	r2, r0
 791 0022 3B1C     		mov	r3, r7
 792 0024 0F33     		add	r3, r3, #15
 793 0026 1A70     		strb	r2, [r3]
 199:.\I2C_Class.c ****         // Expecting to receive MSB first.
 200:.\I2C_Class.c ****         *light = (dataget[0] << 7);     // TODO: TEST THIS WITH THE PROPER SENSOR!!
 794              		.loc 1 200 0
 795 0028 3B1C     		mov	r3, r7
 796 002a 0C33     		add	r3, r3, #12
 797 002c 1B78     		ldrb	r3, [r3]
 798 002e DA01     		lsl	r2, r3, #7
 799 0030 7B68     		ldr	r3, [r7, #4]
 800 0032 1A60     		str	r2, [r3]
 201:.\I2C_Class.c ****         *light = *light | dataget[1];   
 801              		.loc 1 201 0
 802 0034 7B68     		ldr	r3, [r7, #4]
 803 0036 1A68     		ldr	r2, [r3]
 804 0038 3B1C     		mov	r3, r7
 805 003a 0C33     		add	r3, r3, #12
 806 003c 5B78     		ldrb	r3, [r3, #1]
 807 003e 1A43     		orr	r2, r3
 808 0040 7B68     		ldr	r3, [r7, #4]
 809 0042 1A60     		str	r2, [r3]
 202:.\I2C_Class.c ****         
 203:.\I2C_Class.c ****     if (result == I2C_I2C_MSTR_NO_ERROR){
 810              		.loc 1 203 0
 811 0044 3B1C     		mov	r3, r7
 812 0046 0F33     		add	r3, r3, #15
 813 0048 1B78     		ldrb	r3, [r3]
 814 004a 002B     		cmp	r3, #0
 815 004c 01D1     		bne	.L45
 204:.\I2C_Class.c ****         return 0;   // No error 
 816              		.loc 1 204 0
 817 004e 0023     		mov	r3, #0
 818 0050 00E0     		b	.L47
 819              	.L45:
 205:.\I2C_Class.c **** 	}
 206:.\I2C_Class.c ****     else {
 207:.\I2C_Class.c ****         return -1;
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 19


 820              		.loc 1 207 0
 821 0052 FF23     		mov	r3, #255
 822              	.L47:
 823 0054 5BB2     		sxtb	r3, r3
 208:.\I2C_Class.c ****     }
 209:.\I2C_Class.c **** }
 824              		.loc 1 209 0
 825 0056 181C     		mov	r0, r3
 826 0058 BD46     		mov	sp, r7
 827 005a 04B0     		add	sp, sp, #16
 828              		@ sp needed
 829 005c 80BD     		pop	{r7, pc}
 830              		.cfi_endproc
 831              	.LFE40:
 832              		.size	getLight, .-getLight
 833 005e C046     		.section	.text.getSoilHum,"ax",%progbits
 834              		.align	2
 835              		.global	getSoilHum
 836              		.code	16
 837              		.thumb_func
 838              		.type	getSoilHum, %function
 839              	getSoilHum:
 840              	.LFB41:
 210:.\I2C_Class.c **** 
 211:.\I2C_Class.c **** int8 getSoilHum(uint8 index, int16* soilHum){   // TODO: THIS HAS NOT BEEN IMPLEMENTED.
 841              		.loc 1 211 0
 842              		.cfi_startproc
 843 0000 80B5     		push	{r7, lr}
 844              		.cfi_def_cfa_offset 8
 845              		.cfi_offset 7, -8
 846              		.cfi_offset 14, -4
 847 0002 84B0     		sub	sp, sp, #16
 848              		.cfi_def_cfa_offset 24
 849 0004 00AF     		add	r7, sp, #0
 850              		.cfi_def_cfa_register 7
 851 0006 021C     		mov	r2, r0
 852 0008 3960     		str	r1, [r7]
 853 000a FB1D     		add	r3, r7, #7
 854 000c 1A70     		strb	r2, [r3]
 212:.\I2C_Class.c ****     index = 0;
 855              		.loc 1 212 0
 856 000e 3B1C     		mov	r3, r7
 857 0010 0F33     		add	r3, r3, #15
 858 0012 0022     		mov	r2, #0
 859 0014 1A70     		strb	r2, [r3]
 213:.\I2C_Class.c ****     *soilHum = 0;
 860              		.loc 1 213 0
 861 0016 3B68     		ldr	r3, [r7]
 862 0018 0022     		mov	r2, #0
 863 001a 1A80     		strh	r2, [r3]
 214:.\I2C_Class.c ****     return 0;
 864              		.loc 1 214 0
 865 001c 0023     		mov	r3, #0
 866 001e 5BB2     		sxtb	r3, r3
 215:.\I2C_Class.c **** }
 867              		.loc 1 215 0
 868 0020 181C     		mov	r0, r3
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 20


 869 0022 BD46     		mov	sp, r7
 870 0024 04B0     		add	sp, sp, #16
 871              		@ sp needed
 872 0026 80BD     		pop	{r7, pc}
 873              		.cfi_endproc
 874              	.LFE41:
 875              		.size	getSoilHum, .-getSoilHum
 876              		.text
 877              	.Letext0:
 878              		.file 2 ".\\Generated_Source\\PSoC4/cytypes.h"
 879              		.section	.debug_info,"",%progbits
 880              	.Ldebug_info0:
 881 0000 C9030000 		.4byte	0x3c9
 882 0004 0400     		.2byte	0x4
 883 0006 00000000 		.4byte	.Ldebug_abbrev0
 884 000a 04       		.byte	0x4
 885 000b 01       		.uleb128 0x1
 886 000c A3000000 		.4byte	.LASF47
 887 0010 01       		.byte	0x1
 888 0011 76000000 		.4byte	.LASF48
 889 0015 1F000000 		.4byte	.LASF49
 890 0019 00000000 		.4byte	.Ldebug_ranges0+0
 891 001d 00000000 		.4byte	0
 892 0021 00000000 		.4byte	.Ldebug_line0
 893 0025 02       		.uleb128 0x2
 894 0026 01       		.byte	0x1
 895 0027 06       		.byte	0x6
 896 0028 8D010000 		.4byte	.LASF0
 897 002c 02       		.uleb128 0x2
 898 002d 01       		.byte	0x1
 899 002e 08       		.byte	0x8
 900 002f 1F010000 		.4byte	.LASF1
 901 0033 02       		.uleb128 0x2
 902 0034 02       		.byte	0x2
 903 0035 05       		.byte	0x5
 904 0036 72020000 		.4byte	.LASF2
 905 003a 02       		.uleb128 0x2
 906 003b 02       		.byte	0x2
 907 003c 07       		.byte	0x7
 908 003d 84000000 		.4byte	.LASF3
 909 0041 02       		.uleb128 0x2
 910 0042 04       		.byte	0x4
 911 0043 05       		.byte	0x5
 912 0044 8F020000 		.4byte	.LASF4
 913 0048 02       		.uleb128 0x2
 914 0049 04       		.byte	0x4
 915 004a 07       		.byte	0x7
 916 004b 55010000 		.4byte	.LASF5
 917 004f 02       		.uleb128 0x2
 918 0050 08       		.byte	0x8
 919 0051 05       		.byte	0x5
 920 0052 4E020000 		.4byte	.LASF6
 921 0056 02       		.uleb128 0x2
 922 0057 08       		.byte	0x8
 923 0058 07       		.byte	0x7
 924 0059 F5010000 		.4byte	.LASF7
 925 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 21


 926 005e 04       		.byte	0x4
 927 005f 05       		.byte	0x5
 928 0060 696E7400 		.ascii	"int\000"
 929 0064 02       		.uleb128 0x2
 930 0065 04       		.byte	0x4
 931 0066 07       		.byte	0x7
 932 0067 D1010000 		.4byte	.LASF8
 933 006b 04       		.uleb128 0x4
 934 006c 97000000 		.4byte	.LASF9
 935 0070 02       		.byte	0x2
 936 0071 A1       		.byte	0xa1
 937 0072 2C000000 		.4byte	0x2c
 938 0076 04       		.uleb128 0x4
 939 0077 C5010000 		.4byte	.LASF10
 940 007b 02       		.byte	0x2
 941 007c A2       		.byte	0xa2
 942 007d 3A000000 		.4byte	0x3a
 943 0081 04       		.uleb128 0x4
 944 0082 CC010000 		.4byte	.LASF11
 945 0086 02       		.byte	0x2
 946 0087 A4       		.byte	0xa4
 947 0088 25000000 		.4byte	0x25
 948 008c 04       		.uleb128 0x4
 949 008d 4F010000 		.4byte	.LASF12
 950 0091 02       		.byte	0x2
 951 0092 A5       		.byte	0xa5
 952 0093 33000000 		.4byte	0x33
 953 0097 04       		.uleb128 0x4
 954 0098 79010000 		.4byte	.LASF13
 955 009c 02       		.byte	0x2
 956 009d A6       		.byte	0xa6
 957 009e 41000000 		.4byte	0x41
 958 00a2 02       		.uleb128 0x2
 959 00a3 04       		.byte	0x4
 960 00a4 04       		.byte	0x4
 961 00a5 9D000000 		.4byte	.LASF14
 962 00a9 02       		.uleb128 0x2
 963 00aa 08       		.byte	0x8
 964 00ab 04       		.byte	0x4
 965 00ac A1010000 		.4byte	.LASF15
 966 00b0 02       		.uleb128 0x2
 967 00b1 01       		.byte	0x1
 968 00b2 08       		.byte	0x8
 969 00b3 5C020000 		.4byte	.LASF16
 970 00b7 02       		.uleb128 0x2
 971 00b8 04       		.byte	0x4
 972 00b9 07       		.byte	0x7
 973 00ba 3A020000 		.4byte	.LASF17
 974 00be 05       		.uleb128 0x5
 975 00bf 04       		.byte	0x4
 976 00c0 6B000000 		.4byte	0x6b
 977 00c4 06       		.uleb128 0x6
 978 00c5 2C020000 		.4byte	.LASF50
 979 00c9 01       		.byte	0x1
 980 00ca 1C       		.byte	0x1c
 981 00cb 00000000 		.4byte	.LFB33
 982 00cf 12000000 		.4byte	.LFE33-.LFB33
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 22


 983 00d3 01       		.uleb128 0x1
 984 00d4 9C       		.byte	0x9c
 985 00d5 07       		.uleb128 0x7
 986 00d6 12000000 		.4byte	.LASF22
 987 00da 01       		.byte	0x1
 988 00db 22       		.byte	0x22
 989 00dc 81000000 		.4byte	0x81
 990 00e0 00000000 		.4byte	.LFB34
 991 00e4 94000000 		.4byte	.LFE34-.LFB34
 992 00e8 01       		.uleb128 0x1
 993 00e9 9C       		.byte	0x9c
 994 00ea 35010000 		.4byte	0x135
 995 00ee 08       		.uleb128 0x8
 996 00ef 706F7300 		.ascii	"pos\000"
 997 00f3 01       		.byte	0x1
 998 00f4 22       		.byte	0x22
 999 00f5 6B000000 		.4byte	0x6b
 1000 00f9 02       		.uleb128 0x2
 1001 00fa 91       		.byte	0x91
 1002 00fb 67       		.sleb128 -25
 1003 00fc 09       		.uleb128 0x9
 1004 00fd 21020000 		.4byte	.LASF18
 1005 0101 01       		.byte	0x1
 1006 0102 23       		.byte	0x23
 1007 0103 6B000000 		.4byte	0x6b
 1008 0107 02       		.uleb128 0x2
 1009 0108 91       		.byte	0x91
 1010 0109 6F       		.sleb128 -17
 1011 010a 09       		.uleb128 0x9
 1012 010b B9010000 		.4byte	.LASF19
 1013 010f 01       		.byte	0x1
 1014 0110 24       		.byte	0x24
 1015 0111 6B000000 		.4byte	0x6b
 1016 0115 02       		.uleb128 0x2
 1017 0116 91       		.byte	0x91
 1018 0117 6E       		.sleb128 -18
 1019 0118 09       		.uleb128 0x9
 1020 0119 0C020000 		.4byte	.LASF20
 1021 011d 01       		.byte	0x1
 1022 011e 25       		.byte	0x25
 1023 011f 6B000000 		.4byte	0x6b
 1024 0123 02       		.uleb128 0x2
 1025 0124 91       		.byte	0x91
 1026 0125 77       		.sleb128 -9
 1027 0126 09       		.uleb128 0x9
 1028 0127 44010000 		.4byte	.LASF21
 1029 012b 01       		.byte	0x1
 1030 012c 26       		.byte	0x26
 1031 012d BE000000 		.4byte	0xbe
 1032 0131 02       		.uleb128 0x2
 1033 0132 91       		.byte	0x91
 1034 0133 70       		.sleb128 -16
 1035 0134 00       		.byte	0
 1036 0135 07       		.uleb128 0x7
 1037 0136 43020000 		.4byte	.LASF23
 1038 013a 01       		.byte	0x1
 1039 013b 3B       		.byte	0x3b
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 23


 1040 013c 81000000 		.4byte	0x81
 1041 0140 00000000 		.4byte	.LFB35
 1042 0144 96000000 		.4byte	.LFE35-.LFB35
 1043 0148 01       		.uleb128 0x1
 1044 0149 9C       		.byte	0x9c
 1045 014a 95010000 		.4byte	0x195
 1046 014e 0A       		.uleb128 0xa
 1047 014f 13020000 		.4byte	.LASF24
 1048 0153 01       		.byte	0x1
 1049 0154 3B       		.byte	0x3b
 1050 0155 6B000000 		.4byte	0x6b
 1051 0159 02       		.uleb128 0x2
 1052 015a 91       		.byte	0x91
 1053 015b 67       		.sleb128 -25
 1054 015c 09       		.uleb128 0x9
 1055 015d 67020000 		.4byte	.LASF25
 1056 0161 01       		.byte	0x1
 1057 0162 3C       		.byte	0x3c
 1058 0163 6B000000 		.4byte	0x6b
 1059 0167 02       		.uleb128 0x2
 1060 0168 91       		.byte	0x91
 1061 0169 6F       		.sleb128 -17
 1062 016a 09       		.uleb128 0x9
 1063 016b 32010000 		.4byte	.LASF26
 1064 016f 01       		.byte	0x1
 1065 0170 3D       		.byte	0x3d
 1066 0171 6B000000 		.4byte	0x6b
 1067 0175 02       		.uleb128 0x2
 1068 0176 91       		.byte	0x91
 1069 0177 6E       		.sleb128 -18
 1070 0178 09       		.uleb128 0x9
 1071 0179 0C020000 		.4byte	.LASF20
 1072 017d 01       		.byte	0x1
 1073 017e 3E       		.byte	0x3e
 1074 017f 6B000000 		.4byte	0x6b
 1075 0183 02       		.uleb128 0x2
 1076 0184 91       		.byte	0x91
 1077 0185 77       		.sleb128 -9
 1078 0186 09       		.uleb128 0x9
 1079 0187 18020000 		.4byte	.LASF27
 1080 018b 01       		.byte	0x1
 1081 018c 3F       		.byte	0x3f
 1082 018d BE000000 		.4byte	0xbe
 1083 0191 02       		.uleb128 0x2
 1084 0192 91       		.byte	0x91
 1085 0193 70       		.sleb128 -16
 1086 0194 00       		.byte	0
 1087 0195 07       		.uleb128 0x7
 1088 0196 E3010000 		.4byte	.LASF28
 1089 019a 01       		.byte	0x1
 1090 019b 55       		.byte	0x55
 1091 019c 81000000 		.4byte	0x81
 1092 01a0 00000000 		.4byte	.LFB36
 1093 01a4 A4000000 		.4byte	.LFE36-.LFB36
 1094 01a8 01       		.uleb128 0x1
 1095 01a9 9C       		.byte	0x9c
 1096 01aa F5010000 		.4byte	0x1f5
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 24


 1097 01ae 0A       		.uleb128 0xa
 1098 01af 34020000 		.4byte	.LASF29
 1099 01b3 01       		.byte	0x1
 1100 01b4 55       		.byte	0x55
 1101 01b5 6B000000 		.4byte	0x6b
 1102 01b9 02       		.uleb128 0x2
 1103 01ba 91       		.byte	0x91
 1104 01bb 67       		.sleb128 -25
 1105 01bc 09       		.uleb128 0x9
 1106 01bd 98020000 		.4byte	.LASF30
 1107 01c1 01       		.byte	0x1
 1108 01c2 56       		.byte	0x56
 1109 01c3 6B000000 		.4byte	0x6b
 1110 01c7 02       		.uleb128 0x2
 1111 01c8 91       		.byte	0x91
 1112 01c9 6F       		.sleb128 -17
 1113 01ca 09       		.uleb128 0x9
 1114 01cb 00000000 		.4byte	.LASF31
 1115 01cf 01       		.byte	0x1
 1116 01d0 57       		.byte	0x57
 1117 01d1 6B000000 		.4byte	0x6b
 1118 01d5 02       		.uleb128 0x2
 1119 01d6 91       		.byte	0x91
 1120 01d7 6E       		.sleb128 -18
 1121 01d8 09       		.uleb128 0x9
 1122 01d9 0C020000 		.4byte	.LASF20
 1123 01dd 01       		.byte	0x1
 1124 01de 58       		.byte	0x58
 1125 01df 6B000000 		.4byte	0x6b
 1126 01e3 02       		.uleb128 0x2
 1127 01e4 91       		.byte	0x91
 1128 01e5 77       		.sleb128 -9
 1129 01e6 09       		.uleb128 0x9
 1130 01e7 2D010000 		.4byte	.LASF32
 1131 01eb 01       		.byte	0x1
 1132 01ec 59       		.byte	0x59
 1133 01ed BE000000 		.4byte	0xbe
 1134 01f1 02       		.uleb128 0x2
 1135 01f2 91       		.byte	0x91
 1136 01f3 70       		.sleb128 -16
 1137 01f4 00       		.byte	0
 1138 01f5 07       		.uleb128 0x7
 1139 01f6 B5020000 		.4byte	.LASF33
 1140 01fa 01       		.byte	0x1
 1141 01fb 70       		.byte	0x70
 1142 01fc 81000000 		.4byte	0x81
 1143 0200 00000000 		.4byte	.LFB37
 1144 0204 E4000000 		.4byte	.LFE37-.LFB37
 1145 0208 01       		.uleb128 0x1
 1146 0209 9C       		.byte	0x9c
 1147 020a 55020000 		.4byte	0x255
 1148 020e 0A       		.uleb128 0xa
 1149 020f 61020000 		.4byte	.LASF34
 1150 0213 01       		.byte	0x1
 1151 0214 70       		.byte	0x70
 1152 0215 6B000000 		.4byte	0x6b
 1153 0219 02       		.uleb128 0x2
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 25


 1154 021a 91       		.byte	0x91
 1155 021b 6F       		.sleb128 -17
 1156 021c 0A       		.uleb128 0xa
 1157 021d 3E010000 		.4byte	.LASF35
 1158 0221 01       		.byte	0x1
 1159 0222 70       		.byte	0x70
 1160 0223 6B000000 		.4byte	0x6b
 1161 0227 02       		.uleb128 0x2
 1162 0228 91       		.byte	0x91
 1163 0229 6E       		.sleb128 -18
 1164 022a 09       		.uleb128 0x9
 1165 022b 69000000 		.4byte	.LASF36
 1166 022f 01       		.byte	0x1
 1167 0230 71       		.byte	0x71
 1168 0231 6B000000 		.4byte	0x6b
 1169 0235 02       		.uleb128 0x2
 1170 0236 91       		.byte	0x91
 1171 0237 72       		.sleb128 -14
 1172 0238 09       		.uleb128 0x9
 1173 0239 7C020000 		.4byte	.LASF37
 1174 023d 01       		.byte	0x1
 1175 023e 72       		.byte	0x72
 1176 023f BE000000 		.4byte	0xbe
 1177 0243 02       		.uleb128 0x2
 1178 0244 91       		.byte	0x91
 1179 0245 74       		.sleb128 -12
 1180 0246 09       		.uleb128 0x9
 1181 0247 0C020000 		.4byte	.LASF20
 1182 024b 01       		.byte	0x1
 1183 024c 74       		.byte	0x74
 1184 024d 6B000000 		.4byte	0x6b
 1185 0251 02       		.uleb128 0x2
 1186 0252 91       		.byte	0x91
 1187 0253 73       		.sleb128 -13
 1188 0254 00       		.byte	0
 1189 0255 07       		.uleb128 0x7
 1190 0256 67010000 		.4byte	.LASF38
 1191 025a 01       		.byte	0x1
 1192 025b 91       		.byte	0x91
 1193 025c 81000000 		.4byte	0x81
 1194 0260 00000000 		.4byte	.LFB38
 1195 0264 C4000000 		.4byte	.LFE38-.LFB38
 1196 0268 01       		.uleb128 0x1
 1197 0269 9C       		.byte	0x9c
 1198 026a C3020000 		.4byte	0x2c3
 1199 026e 0A       		.uleb128 0xa
 1200 026f A3020000 		.4byte	.LASF39
 1201 0273 01       		.byte	0x1
 1202 0274 91       		.byte	0x91
 1203 0275 BE000000 		.4byte	0xbe
 1204 0279 02       		.uleb128 0x2
 1205 027a 91       		.byte	0x91
 1206 027b 6C       		.sleb128 -20
 1207 027c 0A       		.uleb128 0xa
 1208 027d 13020000 		.4byte	.LASF24
 1209 0281 01       		.byte	0x1
 1210 0282 91       		.byte	0x91
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 26


 1211 0283 BE000000 		.4byte	0xbe
 1212 0287 02       		.uleb128 0x2
 1213 0288 91       		.byte	0x91
 1214 0289 68       		.sleb128 -24
 1215 028a 0A       		.uleb128 0xa
 1216 028b 2D010000 		.4byte	.LASF32
 1217 028f 01       		.byte	0x1
 1218 0290 91       		.byte	0x91
 1219 0291 BE000000 		.4byte	0xbe
 1220 0295 02       		.uleb128 0x2
 1221 0296 91       		.byte	0x91
 1222 0297 64       		.sleb128 -28
 1223 0298 0A       		.uleb128 0xa
 1224 0299 7C020000 		.4byte	.LASF37
 1225 029d 01       		.byte	0x1
 1226 029e 91       		.byte	0x91
 1227 029f BE000000 		.4byte	0xbe
 1228 02a3 02       		.uleb128 0x2
 1229 02a4 91       		.byte	0x91
 1230 02a5 60       		.sleb128 -32
 1231 02a6 09       		.uleb128 0x9
 1232 02a7 99010000 		.4byte	.LASF40
 1233 02ab 01       		.byte	0x1
 1234 02ac 92       		.byte	0x92
 1235 02ad C3020000 		.4byte	0x2c3
 1236 02b1 02       		.uleb128 0x2
 1237 02b2 91       		.byte	0x91
 1238 02b3 74       		.sleb128 -12
 1239 02b4 09       		.uleb128 0x9
 1240 02b5 0C020000 		.4byte	.LASF20
 1241 02b9 01       		.byte	0x1
 1242 02ba 93       		.byte	0x93
 1243 02bb 6B000000 		.4byte	0x6b
 1244 02bf 02       		.uleb128 0x2
 1245 02c0 91       		.byte	0x91
 1246 02c1 77       		.sleb128 -9
 1247 02c2 00       		.byte	0
 1248 02c3 0B       		.uleb128 0xb
 1249 02c4 6B000000 		.4byte	0x6b
 1250 02c8 D3020000 		.4byte	0x2d3
 1251 02cc 0C       		.uleb128 0xc
 1252 02cd B7000000 		.4byte	0xb7
 1253 02d1 01       		.byte	0x1
 1254 02d2 00       		.byte	0
 1255 02d3 07       		.uleb128 0x7
 1256 02d4 7F010000 		.4byte	.LASF41
 1257 02d8 01       		.byte	0x1
 1258 02d9 B1       		.byte	0xb1
 1259 02da 81000000 		.4byte	0x81
 1260 02de 00000000 		.4byte	.LFB39
 1261 02e2 6C000000 		.4byte	.LFE39-.LFB39
 1262 02e6 01       		.uleb128 0x1
 1263 02e7 9C       		.byte	0x9c
 1264 02e8 25030000 		.4byte	0x325
 1265 02ec 0A       		.uleb128 0xa
 1266 02ed DE010000 		.4byte	.LASF42
 1267 02f1 01       		.byte	0x1
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 27


 1268 02f2 B1       		.byte	0xb1
 1269 02f3 25030000 		.4byte	0x325
 1270 02f7 02       		.uleb128 0x2
 1271 02f8 91       		.byte	0x91
 1272 02f9 6C       		.sleb128 -20
 1273 02fa 08       		.uleb128 0x8
 1274 02fb 68756D00 		.ascii	"hum\000"
 1275 02ff 01       		.byte	0x1
 1276 0300 B1       		.byte	0xb1
 1277 0301 25030000 		.4byte	0x325
 1278 0305 02       		.uleb128 0x2
 1279 0306 91       		.byte	0x91
 1280 0307 68       		.sleb128 -24
 1281 0308 09       		.uleb128 0x9
 1282 0309 99010000 		.4byte	.LASF40
 1283 030d 01       		.byte	0x1
 1284 030e B2       		.byte	0xb2
 1285 030f 2B030000 		.4byte	0x32b
 1286 0313 02       		.uleb128 0x2
 1287 0314 91       		.byte	0x91
 1288 0315 70       		.sleb128 -16
 1289 0316 09       		.uleb128 0x9
 1290 0317 0C020000 		.4byte	.LASF20
 1291 031b 01       		.byte	0x1
 1292 031c B3       		.byte	0xb3
 1293 031d 6B000000 		.4byte	0x6b
 1294 0321 02       		.uleb128 0x2
 1295 0322 91       		.byte	0x91
 1296 0323 77       		.sleb128 -9
 1297 0324 00       		.byte	0
 1298 0325 05       		.uleb128 0x5
 1299 0326 04       		.byte	0x4
 1300 0327 97000000 		.4byte	0x97
 1301 032b 0B       		.uleb128 0xb
 1302 032c 6B000000 		.4byte	0x6b
 1303 0330 3B030000 		.4byte	0x33b
 1304 0334 0C       		.uleb128 0xc
 1305 0335 B7000000 		.4byte	0xb7
 1306 0339 03       		.byte	0x3
 1307 033a 00       		.byte	0
 1308 033b 07       		.uleb128 0x7
 1309 033c C6020000 		.4byte	.LASF43
 1310 0340 01       		.byte	0x1
 1311 0341 C2       		.byte	0xc2
 1312 0342 81000000 		.4byte	0x81
 1313 0346 00000000 		.4byte	.LFB40
 1314 034a 5E000000 		.4byte	.LFE40-.LFB40
 1315 034e 01       		.uleb128 0x1
 1316 034f 9C       		.byte	0x9c
 1317 0350 7F030000 		.4byte	0x37f
 1318 0354 0A       		.uleb128 0xa
 1319 0355 0C000000 		.4byte	.LASF44
 1320 0359 01       		.byte	0x1
 1321 035a C2       		.byte	0xc2
 1322 035b 25030000 		.4byte	0x325
 1323 035f 02       		.uleb128 0x2
 1324 0360 91       		.byte	0x91
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 28


 1325 0361 6C       		.sleb128 -20
 1326 0362 09       		.uleb128 0x9
 1327 0363 99010000 		.4byte	.LASF40
 1328 0367 01       		.byte	0x1
 1329 0368 C3       		.byte	0xc3
 1330 0369 C3020000 		.4byte	0x2c3
 1331 036d 02       		.uleb128 0x2
 1332 036e 91       		.byte	0x91
 1333 036f 74       		.sleb128 -12
 1334 0370 09       		.uleb128 0x9
 1335 0371 0C020000 		.4byte	.LASF20
 1336 0375 01       		.byte	0x1
 1337 0376 C4       		.byte	0xc4
 1338 0377 6B000000 		.4byte	0x6b
 1339 037b 02       		.uleb128 0x2
 1340 037c 91       		.byte	0x91
 1341 037d 77       		.sleb128 -9
 1342 037e 00       		.byte	0
 1343 037f 0D       		.uleb128 0xd
 1344 0380 AA020000 		.4byte	.LASF45
 1345 0384 01       		.byte	0x1
 1346 0385 D3       		.byte	0xd3
 1347 0386 81000000 		.4byte	0x81
 1348 038a 00000000 		.4byte	.LFB41
 1349 038e 28000000 		.4byte	.LFE41-.LFB41
 1350 0392 01       		.uleb128 0x1
 1351 0393 9C       		.byte	0x9c
 1352 0394 B5030000 		.4byte	0x3b5
 1353 0398 0A       		.uleb128 0xa
 1354 0399 61020000 		.4byte	.LASF34
 1355 039d 01       		.byte	0x1
 1356 039e D3       		.byte	0xd3
 1357 039f 6B000000 		.4byte	0x6b
 1358 03a3 02       		.uleb128 0x2
 1359 03a4 91       		.byte	0x91
 1360 03a5 6F       		.sleb128 -17
 1361 03a6 0A       		.uleb128 0xa
 1362 03a7 87020000 		.4byte	.LASF46
 1363 03ab 01       		.byte	0x1
 1364 03ac D3       		.byte	0xd3
 1365 03ad B5030000 		.4byte	0x3b5
 1366 03b1 02       		.uleb128 0x2
 1367 03b2 91       		.byte	0x91
 1368 03b3 68       		.sleb128 -24
 1369 03b4 00       		.byte	0
 1370 03b5 05       		.uleb128 0x5
 1371 03b6 04       		.byte	0x4
 1372 03b7 8C000000 		.4byte	0x8c
 1373 03bb 0E       		.uleb128 0xe
 1374 03bc A8010000 		.4byte	.LASF51
 1375 03c0 01       		.byte	0x1
 1376 03c1 18       		.byte	0x18
 1377 03c2 6B000000 		.4byte	0x6b
 1378 03c6 05       		.uleb128 0x5
 1379 03c7 03       		.byte	0x3
 1380 03c8 00000000 		.4byte	irrigationStatus
 1381 03cc 00       		.byte	0
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 29


 1382              		.section	.debug_abbrev,"",%progbits
 1383              	.Ldebug_abbrev0:
 1384 0000 01       		.uleb128 0x1
 1385 0001 11       		.uleb128 0x11
 1386 0002 01       		.byte	0x1
 1387 0003 25       		.uleb128 0x25
 1388 0004 0E       		.uleb128 0xe
 1389 0005 13       		.uleb128 0x13
 1390 0006 0B       		.uleb128 0xb
 1391 0007 03       		.uleb128 0x3
 1392 0008 0E       		.uleb128 0xe
 1393 0009 1B       		.uleb128 0x1b
 1394 000a 0E       		.uleb128 0xe
 1395 000b 55       		.uleb128 0x55
 1396 000c 17       		.uleb128 0x17
 1397 000d 11       		.uleb128 0x11
 1398 000e 01       		.uleb128 0x1
 1399 000f 10       		.uleb128 0x10
 1400 0010 17       		.uleb128 0x17
 1401 0011 00       		.byte	0
 1402 0012 00       		.byte	0
 1403 0013 02       		.uleb128 0x2
 1404 0014 24       		.uleb128 0x24
 1405 0015 00       		.byte	0
 1406 0016 0B       		.uleb128 0xb
 1407 0017 0B       		.uleb128 0xb
 1408 0018 3E       		.uleb128 0x3e
 1409 0019 0B       		.uleb128 0xb
 1410 001a 03       		.uleb128 0x3
 1411 001b 0E       		.uleb128 0xe
 1412 001c 00       		.byte	0
 1413 001d 00       		.byte	0
 1414 001e 03       		.uleb128 0x3
 1415 001f 24       		.uleb128 0x24
 1416 0020 00       		.byte	0
 1417 0021 0B       		.uleb128 0xb
 1418 0022 0B       		.uleb128 0xb
 1419 0023 3E       		.uleb128 0x3e
 1420 0024 0B       		.uleb128 0xb
 1421 0025 03       		.uleb128 0x3
 1422 0026 08       		.uleb128 0x8
 1423 0027 00       		.byte	0
 1424 0028 00       		.byte	0
 1425 0029 04       		.uleb128 0x4
 1426 002a 16       		.uleb128 0x16
 1427 002b 00       		.byte	0
 1428 002c 03       		.uleb128 0x3
 1429 002d 0E       		.uleb128 0xe
 1430 002e 3A       		.uleb128 0x3a
 1431 002f 0B       		.uleb128 0xb
 1432 0030 3B       		.uleb128 0x3b
 1433 0031 0B       		.uleb128 0xb
 1434 0032 49       		.uleb128 0x49
 1435 0033 13       		.uleb128 0x13
 1436 0034 00       		.byte	0
 1437 0035 00       		.byte	0
 1438 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 30


 1439 0037 0F       		.uleb128 0xf
 1440 0038 00       		.byte	0
 1441 0039 0B       		.uleb128 0xb
 1442 003a 0B       		.uleb128 0xb
 1443 003b 49       		.uleb128 0x49
 1444 003c 13       		.uleb128 0x13
 1445 003d 00       		.byte	0
 1446 003e 00       		.byte	0
 1447 003f 06       		.uleb128 0x6
 1448 0040 2E       		.uleb128 0x2e
 1449 0041 00       		.byte	0
 1450 0042 3F       		.uleb128 0x3f
 1451 0043 19       		.uleb128 0x19
 1452 0044 03       		.uleb128 0x3
 1453 0045 0E       		.uleb128 0xe
 1454 0046 3A       		.uleb128 0x3a
 1455 0047 0B       		.uleb128 0xb
 1456 0048 3B       		.uleb128 0x3b
 1457 0049 0B       		.uleb128 0xb
 1458 004a 27       		.uleb128 0x27
 1459 004b 19       		.uleb128 0x19
 1460 004c 11       		.uleb128 0x11
 1461 004d 01       		.uleb128 0x1
 1462 004e 12       		.uleb128 0x12
 1463 004f 06       		.uleb128 0x6
 1464 0050 40       		.uleb128 0x40
 1465 0051 18       		.uleb128 0x18
 1466 0052 9642     		.uleb128 0x2116
 1467 0054 19       		.uleb128 0x19
 1468 0055 00       		.byte	0
 1469 0056 00       		.byte	0
 1470 0057 07       		.uleb128 0x7
 1471 0058 2E       		.uleb128 0x2e
 1472 0059 01       		.byte	0x1
 1473 005a 3F       		.uleb128 0x3f
 1474 005b 19       		.uleb128 0x19
 1475 005c 03       		.uleb128 0x3
 1476 005d 0E       		.uleb128 0xe
 1477 005e 3A       		.uleb128 0x3a
 1478 005f 0B       		.uleb128 0xb
 1479 0060 3B       		.uleb128 0x3b
 1480 0061 0B       		.uleb128 0xb
 1481 0062 27       		.uleb128 0x27
 1482 0063 19       		.uleb128 0x19
 1483 0064 49       		.uleb128 0x49
 1484 0065 13       		.uleb128 0x13
 1485 0066 11       		.uleb128 0x11
 1486 0067 01       		.uleb128 0x1
 1487 0068 12       		.uleb128 0x12
 1488 0069 06       		.uleb128 0x6
 1489 006a 40       		.uleb128 0x40
 1490 006b 18       		.uleb128 0x18
 1491 006c 9642     		.uleb128 0x2116
 1492 006e 19       		.uleb128 0x19
 1493 006f 01       		.uleb128 0x1
 1494 0070 13       		.uleb128 0x13
 1495 0071 00       		.byte	0
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 31


 1496 0072 00       		.byte	0
 1497 0073 08       		.uleb128 0x8
 1498 0074 05       		.uleb128 0x5
 1499 0075 00       		.byte	0
 1500 0076 03       		.uleb128 0x3
 1501 0077 08       		.uleb128 0x8
 1502 0078 3A       		.uleb128 0x3a
 1503 0079 0B       		.uleb128 0xb
 1504 007a 3B       		.uleb128 0x3b
 1505 007b 0B       		.uleb128 0xb
 1506 007c 49       		.uleb128 0x49
 1507 007d 13       		.uleb128 0x13
 1508 007e 02       		.uleb128 0x2
 1509 007f 18       		.uleb128 0x18
 1510 0080 00       		.byte	0
 1511 0081 00       		.byte	0
 1512 0082 09       		.uleb128 0x9
 1513 0083 34       		.uleb128 0x34
 1514 0084 00       		.byte	0
 1515 0085 03       		.uleb128 0x3
 1516 0086 0E       		.uleb128 0xe
 1517 0087 3A       		.uleb128 0x3a
 1518 0088 0B       		.uleb128 0xb
 1519 0089 3B       		.uleb128 0x3b
 1520 008a 0B       		.uleb128 0xb
 1521 008b 49       		.uleb128 0x49
 1522 008c 13       		.uleb128 0x13
 1523 008d 02       		.uleb128 0x2
 1524 008e 18       		.uleb128 0x18
 1525 008f 00       		.byte	0
 1526 0090 00       		.byte	0
 1527 0091 0A       		.uleb128 0xa
 1528 0092 05       		.uleb128 0x5
 1529 0093 00       		.byte	0
 1530 0094 03       		.uleb128 0x3
 1531 0095 0E       		.uleb128 0xe
 1532 0096 3A       		.uleb128 0x3a
 1533 0097 0B       		.uleb128 0xb
 1534 0098 3B       		.uleb128 0x3b
 1535 0099 0B       		.uleb128 0xb
 1536 009a 49       		.uleb128 0x49
 1537 009b 13       		.uleb128 0x13
 1538 009c 02       		.uleb128 0x2
 1539 009d 18       		.uleb128 0x18
 1540 009e 00       		.byte	0
 1541 009f 00       		.byte	0
 1542 00a0 0B       		.uleb128 0xb
 1543 00a1 01       		.uleb128 0x1
 1544 00a2 01       		.byte	0x1
 1545 00a3 49       		.uleb128 0x49
 1546 00a4 13       		.uleb128 0x13
 1547 00a5 01       		.uleb128 0x1
 1548 00a6 13       		.uleb128 0x13
 1549 00a7 00       		.byte	0
 1550 00a8 00       		.byte	0
 1551 00a9 0C       		.uleb128 0xc
 1552 00aa 21       		.uleb128 0x21
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 32


 1553 00ab 00       		.byte	0
 1554 00ac 49       		.uleb128 0x49
 1555 00ad 13       		.uleb128 0x13
 1556 00ae 2F       		.uleb128 0x2f
 1557 00af 0B       		.uleb128 0xb
 1558 00b0 00       		.byte	0
 1559 00b1 00       		.byte	0
 1560 00b2 0D       		.uleb128 0xd
 1561 00b3 2E       		.uleb128 0x2e
 1562 00b4 01       		.byte	0x1
 1563 00b5 3F       		.uleb128 0x3f
 1564 00b6 19       		.uleb128 0x19
 1565 00b7 03       		.uleb128 0x3
 1566 00b8 0E       		.uleb128 0xe
 1567 00b9 3A       		.uleb128 0x3a
 1568 00ba 0B       		.uleb128 0xb
 1569 00bb 3B       		.uleb128 0x3b
 1570 00bc 0B       		.uleb128 0xb
 1571 00bd 27       		.uleb128 0x27
 1572 00be 19       		.uleb128 0x19
 1573 00bf 49       		.uleb128 0x49
 1574 00c0 13       		.uleb128 0x13
 1575 00c1 11       		.uleb128 0x11
 1576 00c2 01       		.uleb128 0x1
 1577 00c3 12       		.uleb128 0x12
 1578 00c4 06       		.uleb128 0x6
 1579 00c5 40       		.uleb128 0x40
 1580 00c6 18       		.uleb128 0x18
 1581 00c7 9742     		.uleb128 0x2117
 1582 00c9 19       		.uleb128 0x19
 1583 00ca 01       		.uleb128 0x1
 1584 00cb 13       		.uleb128 0x13
 1585 00cc 00       		.byte	0
 1586 00cd 00       		.byte	0
 1587 00ce 0E       		.uleb128 0xe
 1588 00cf 34       		.uleb128 0x34
 1589 00d0 00       		.byte	0
 1590 00d1 03       		.uleb128 0x3
 1591 00d2 0E       		.uleb128 0xe
 1592 00d3 3A       		.uleb128 0x3a
 1593 00d4 0B       		.uleb128 0xb
 1594 00d5 3B       		.uleb128 0x3b
 1595 00d6 0B       		.uleb128 0xb
 1596 00d7 49       		.uleb128 0x49
 1597 00d8 13       		.uleb128 0x13
 1598 00d9 3F       		.uleb128 0x3f
 1599 00da 19       		.uleb128 0x19
 1600 00db 02       		.uleb128 0x2
 1601 00dc 18       		.uleb128 0x18
 1602 00dd 00       		.byte	0
 1603 00de 00       		.byte	0
 1604 00df 00       		.byte	0
 1605              		.section	.debug_aranges,"",%progbits
 1606 0000 5C000000 		.4byte	0x5c
 1607 0004 0200     		.2byte	0x2
 1608 0006 00000000 		.4byte	.Ldebug_info0
 1609 000a 04       		.byte	0x4
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 33


 1610 000b 00       		.byte	0
 1611 000c 0000     		.2byte	0
 1612 000e 0000     		.2byte	0
 1613 0010 00000000 		.4byte	.LFB33
 1614 0014 12000000 		.4byte	.LFE33-.LFB33
 1615 0018 00000000 		.4byte	.LFB34
 1616 001c 94000000 		.4byte	.LFE34-.LFB34
 1617 0020 00000000 		.4byte	.LFB35
 1618 0024 96000000 		.4byte	.LFE35-.LFB35
 1619 0028 00000000 		.4byte	.LFB36
 1620 002c A4000000 		.4byte	.LFE36-.LFB36
 1621 0030 00000000 		.4byte	.LFB37
 1622 0034 E4000000 		.4byte	.LFE37-.LFB37
 1623 0038 00000000 		.4byte	.LFB38
 1624 003c C4000000 		.4byte	.LFE38-.LFB38
 1625 0040 00000000 		.4byte	.LFB39
 1626 0044 6C000000 		.4byte	.LFE39-.LFB39
 1627 0048 00000000 		.4byte	.LFB40
 1628 004c 5E000000 		.4byte	.LFE40-.LFB40
 1629 0050 00000000 		.4byte	.LFB41
 1630 0054 28000000 		.4byte	.LFE41-.LFB41
 1631 0058 00000000 		.4byte	0
 1632 005c 00000000 		.4byte	0
 1633              		.section	.debug_ranges,"",%progbits
 1634              	.Ldebug_ranges0:
 1635 0000 00000000 		.4byte	.LFB33
 1636 0004 12000000 		.4byte	.LFE33
 1637 0008 00000000 		.4byte	.LFB34
 1638 000c 94000000 		.4byte	.LFE34
 1639 0010 00000000 		.4byte	.LFB35
 1640 0014 96000000 		.4byte	.LFE35
 1641 0018 00000000 		.4byte	.LFB36
 1642 001c A4000000 		.4byte	.LFE36
 1643 0020 00000000 		.4byte	.LFB37
 1644 0024 E4000000 		.4byte	.LFE37
 1645 0028 00000000 		.4byte	.LFB38
 1646 002c C4000000 		.4byte	.LFE38
 1647 0030 00000000 		.4byte	.LFB39
 1648 0034 6C000000 		.4byte	.LFE39
 1649 0038 00000000 		.4byte	.LFB40
 1650 003c 5E000000 		.4byte	.LFE40
 1651 0040 00000000 		.4byte	.LFB41
 1652 0044 28000000 		.4byte	.LFE41
 1653 0048 00000000 		.4byte	0
 1654 004c 00000000 		.4byte	0
 1655              		.section	.debug_line,"",%progbits
 1656              	.Ldebug_line0:
 1657 0000 45010000 		.section	.debug_str,"MS",%progbits,1
 1657      02004A00 
 1657      00000201 
 1657      FB0E0D00 
 1657      01010101 
 1658              	.LASF31:
 1659 0000 7475726E 		.ascii	"turnOffVent\000"
 1659      4F666656 
 1659      656E7400 
 1660              	.LASF44:
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 34


 1661 000c 6C696768 		.ascii	"light\000"
 1661      7400
 1662              	.LASF22:
 1663 0012 61646A75 		.ascii	"adjustWindow\000"
 1663      73745769 
 1663      6E646F77 
 1663      00
 1664              	.LASF49:
 1665 001f 433A5C55 		.ascii	"C:\\Users\\Lasse\\Documents\\GitHub\\PSoC_Master\\P"
 1665      73657273 
 1665      5C4C6173 
 1665      73655C44 
 1665      6F63756D 
 1666 004c 536F435F 		.ascii	"SoC_Master\\PSoC_Master.cydsn\000"
 1666      4D617374 
 1666      65725C50 
 1666      536F435F 
 1666      4D617374 
 1667              	.LASF36:
 1668 0069 69727269 		.ascii	"irriTransfer\000"
 1668      5472616E 
 1668      73666572 
 1668      00
 1669              	.LASF48:
 1670 0076 2E5C4932 		.ascii	".\\I2C_Class.c\000"
 1670      435F436C 
 1670      6173732E 
 1670      6300
 1671              	.LASF3:
 1672 0084 73686F72 		.ascii	"short unsigned int\000"
 1672      7420756E 
 1672      7369676E 
 1672      65642069 
 1672      6E7400
 1673              	.LASF9:
 1674 0097 75696E74 		.ascii	"uint8\000"
 1674      3800
 1675              	.LASF14:
 1676 009d 666C6F61 		.ascii	"float\000"
 1676      7400
 1677              	.LASF47:
 1678 00a3 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1678      4320342E 
 1678      382E3420 
 1678      32303134 
 1678      30353236 
 1679 00d6 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1679      20726576 
 1679      6973696F 
 1679      6E203231 
 1679      31333538 
 1680 0109 30202D66 		.ascii	"0 -ffunction-sections\000"
 1680      66756E63 
 1680      74696F6E 
 1680      2D736563 
 1680      74696F6E 
 1681              	.LASF1:
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 35


 1682 011f 756E7369 		.ascii	"unsigned char\000"
 1682      676E6564 
 1682      20636861 
 1682      7200
 1683              	.LASF32:
 1684 012d 76656E74 		.ascii	"vent\000"
 1684      00
 1685              	.LASF26:
 1686 0132 7475726E 		.ascii	"turnHeatOff\000"
 1686      48656174 
 1686      4F666600 
 1687              	.LASF35:
 1688 013e 6F6E4F66 		.ascii	"onOff\000"
 1688      6600
 1689              	.LASF21:
 1690 0144 74656D70 		.ascii	"tempWindow\000"
 1690      57696E64 
 1690      6F7700
 1691              	.LASF12:
 1692 014f 696E7431 		.ascii	"int16\000"
 1692      3600
 1693              	.LASF5:
 1694 0155 6C6F6E67 		.ascii	"long unsigned int\000"
 1694      20756E73 
 1694      69676E65 
 1694      6420696E 
 1694      7400
 1695              	.LASF38:
 1696 0167 67657441 		.ascii	"getActuatorStatus\000"
 1696      63747561 
 1696      746F7253 
 1696      74617475 
 1696      7300
 1697              	.LASF13:
 1698 0179 696E7433 		.ascii	"int32\000"
 1698      3200
 1699              	.LASF41:
 1700 017f 67657454 		.ascii	"getTempAndHum\000"
 1700      656D7041 
 1700      6E644875 
 1700      6D00
 1701              	.LASF0:
 1702 018d 7369676E 		.ascii	"signed char\000"
 1702      65642063 
 1702      68617200 
 1703              	.LASF40:
 1704 0199 64617461 		.ascii	"dataget\000"
 1704      67657400 
 1705              	.LASF15:
 1706 01a1 646F7562 		.ascii	"double\000"
 1706      6C6500
 1707              	.LASF51:
 1708 01a8 69727269 		.ascii	"irrigationStatus\000"
 1708      67617469 
 1708      6F6E5374 
 1708      61747573 
 1708      00
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 36


 1709              	.LASF19:
 1710 01b9 636C6F73 		.ascii	"closeWindow\000"
 1710      6557696E 
 1710      646F7700 
 1711              	.LASF10:
 1712 01c5 75696E74 		.ascii	"uint16\000"
 1712      313600
 1713              	.LASF11:
 1714 01cc 696E7438 		.ascii	"int8\000"
 1714      00
 1715              	.LASF8:
 1716 01d1 756E7369 		.ascii	"unsigned int\000"
 1716      676E6564 
 1716      20696E74 
 1716      00
 1717              	.LASF42:
 1718 01de 74656D70 		.ascii	"temp\000"
 1718      00
 1719              	.LASF28:
 1720 01e3 61646A75 		.ascii	"adjustVentilation\000"
 1720      73745665 
 1720      6E74696C 
 1720      6174696F 
 1720      6E00
 1721              	.LASF7:
 1722 01f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 1722      206C6F6E 
 1722      6720756E 
 1722      7369676E 
 1722      65642069 
 1723              	.LASF20:
 1724 020c 72657375 		.ascii	"result\000"
 1724      6C7400
 1725              	.LASF24:
 1726 0213 68656174 		.ascii	"heat\000"
 1726      00
 1727              	.LASF27:
 1728 0218 74656D70 		.ascii	"tempHeat\000"
 1728      48656174 
 1728      00
 1729              	.LASF18:
 1730 0221 6F70656E 		.ascii	"openWindow\000"
 1730      57696E64 
 1730      6F7700
 1731              	.LASF50:
 1732 022c 696E6974 		.ascii	"initI2C\000"
 1732      49324300 
 1733              	.LASF29:
 1734 0234 73706565 		.ascii	"speed\000"
 1734      6400
 1735              	.LASF17:
 1736 023a 73697A65 		.ascii	"sizetype\000"
 1736      74797065 
 1736      00
 1737              	.LASF23:
 1738 0243 61646A75 		.ascii	"adjustHeat\000"
 1738      73744865 
ARM GAS  C:\Users\Lasse\AppData\Local\Temp\cchN6Y3n.s 			page 37


 1738      617400
 1739              	.LASF6:
 1740 024e 6C6F6E67 		.ascii	"long long int\000"
 1740      206C6F6E 
 1740      6720696E 
 1740      7400
 1741              	.LASF16:
 1742 025c 63686172 		.ascii	"char\000"
 1742      00
 1743              	.LASF34:
 1744 0261 696E6465 		.ascii	"index\000"
 1744      7800
 1745              	.LASF25:
 1746 0267 7475726E 		.ascii	"turnHeatOn\000"
 1746      48656174 
 1746      4F6E00
 1747              	.LASF2:
 1748 0272 73686F72 		.ascii	"short int\000"
 1748      7420696E 
 1748      7400
 1749              	.LASF37:
 1750 027c 69727269 		.ascii	"irrigation\000"
 1750      67617469 
 1750      6F6E00
 1751              	.LASF46:
 1752 0287 736F696C 		.ascii	"soilHum\000"
 1752      48756D00 
 1753              	.LASF4:
 1754 028f 6C6F6E67 		.ascii	"long int\000"
 1754      20696E74 
 1754      00
 1755              	.LASF30:
 1756 0298 7475726E 		.ascii	"turnOnVent\000"
 1756      4F6E5665 
 1756      6E7400
 1757              	.LASF39:
 1758 02a3 77696E64 		.ascii	"window\000"
 1758      6F7700
 1759              	.LASF45:
 1760 02aa 67657453 		.ascii	"getSoilHum\000"
 1760      6F696C48 
 1760      756D00
 1761              	.LASF33:
 1762 02b5 61646A75 		.ascii	"adjustIrrigation\000"
 1762      73744972 
 1762      72696761 
 1762      74696F6E 
 1762      00
 1763              	.LASF43:
 1764 02c6 6765744C 		.ascii	"getLight\000"
 1764      69676874 
 1764      00
 1765              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
